tiny	2	0	official	namedOfficial
c	a	com/mojang/math/Constants
	f	F	a	PI
	f	F	b	RAD_TO_DEG
	f	F	c	DEG_TO_RAD
	f	F	d	EPSILON
c	b	com/mojang/math/FieldsAreNonnullByDefault
c	c	com/mojang/math/Matrix3f
	m	()V	a	transpose
	m	(F)V	a	mul
	m	(FF)Lcom/mojang/datafixers/util/Pair;	a	qrGivensQuat
	m	(FFF)Lc;	a	createScaleMatrix
	m	(II)I	a	bufferIndex
	m	(IIF)V	a	set
	m	(Lc;)V	a	load
	m	(Lc;Lg;)V	a	sortSingularValues
	m	(Lg;)V	a	mul
	m	(Ljava/nio/FloatBuffer;)V	a	load
	m	(Ljava/nio/FloatBuffer;Z)V	a	load
	m	()Lorg/apache/commons/lang3/tuple/Triple;	b	svdDecompose
	m	(FFF)Lcom/mojang/datafixers/util/Pair;	b	approxGivensQuat
	m	(Lc;)V	b	mul
	m	(Ljava/nio/FloatBuffer;)V	b	loadTransposed
	m	(Ljava/nio/FloatBuffer;Z)V	b	store
	m	()V	c	setIdentity
	m	(Lc;)V	c	add
	m	(Ljava/nio/FloatBuffer;)V	c	store
	m	()F	d	adjugateAndDet
	m	(Lc;)V	d	sub
	m	(Ljava/nio/FloatBuffer;)V	d	storeTransposed
	m	()F	e	determinant
	m	(Lc;)Lg;	e	stepJacobi
	m	()Z	f	invert
	m	()F	g	trace
	m	()Lc;	h	copy
	f	F	a	m00
	f	F	b	m01
	f	F	c	m02
	f	F	d	m10
	f	F	e	m11
	f	F	f	m12
	f	F	g	m20
	f	F	h	m21
	f	F	i	m22
	f	I	j	ORDER
	f	F	k	G
	f	F	l	CS
	f	F	m	SS
	f	F	n	SQ2
c	d	com/mojang/math/Matrix4f
	m	()Z	a	isInteger
	m	(DFFF)Ld;	a	perspective
	m	(F)V	a	multiply
	m	(FFF)V	a	multiplyWithTranslation
	m	(FFFF)Ld;	a	orthographic
	m	(FFFFFF)Ld;	a	orthographic
	m	(II)I	a	bufferIndex
	m	(Ld;)V	a	load
	m	(Lg;)V	a	multiply
	m	(Ljava/nio/FloatBuffer;)V	a	load
	m	(Ljava/nio/FloatBuffer;Z)V	a	load
	m	(Lk;)V	a	translate
	m	()V	b	setIdentity
	m	(F)Z	b	isInteger
	m	(FFF)Ld;	b	createScaleMatrix
	m	(Ld;)V	b	multiply
	m	(Ljava/nio/FloatBuffer;)V	b	loadTransposed
	m	(Ljava/nio/FloatBuffer;Z)V	b	store
	m	()F	c	adjugateAndDet
	m	(FFF)Ld;	c	createTranslateMatrix
	m	(Ld;)V	c	add
	m	(Ljava/nio/FloatBuffer;)V	c	store
	m	()F	d	determinant
	m	(Ld;)V	d	subtract
	m	(Ljava/nio/FloatBuffer;)V	d	storeTransposed
	m	()V	e	transpose
	m	()Z	f	invert
	m	()F	g	trace
	m	()Ld;	h	copy
	f	F	a	m00
	f	F	b	m01
	f	F	c	m02
	f	F	d	m03
	f	F	e	m10
	f	F	f	m11
	f	F	g	m12
	f	F	h	m13
	f	F	i	m20
	f	F	j	m21
	f	F	k	m22
	f	F	l	m23
	f	F	m	m30
	f	F	n	m31
	f	F	o	m32
	f	F	p	m33
	f	I	q	ORDER
c	e	com/mojang/math/MethodsReturnNonnullByDefault
c	f	com/mojang/math/OctahedralGroup
	m	()Lf;	a	inverse
	m	(I)[Lf;	a	lambda$static$5
	m	(Lf;)Lf;	a	compose
	m	(Lf;Lf;)Z	a	lambda$static$3
	m	(Lgo$a;)Z	a	inverts
	m	(Lgo;)Lgo;	a	rotate
	m	(Lgq;)Lgq;	a	rotate
	m	([[Lf;)V	a	lambda$static$2
	m	()Lc;	b	transformation
	m	(Lf;)Lf;	b	lambda$static$4
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lf;)Lf;	c	lambda$static$1
	m	()Lit/unimi/dsi/fastutil/booleans/BooleanList;	d	packInversions
	m	(Lf;)Lcom/mojang/datafixers/util/Pair;	d	lambda$static$0
	m	()[Lf;	e	$values
	f	Lf;	A	INVERT_Y
	f	Lf;	B	INVERT_Z
	f	Lf;	C	ROT_60_REF_NNN
	f	Lf;	D	ROT_60_REF_NNP
	f	Lf;	E	ROT_60_REF_NPN
	f	Lf;	F	ROT_60_REF_NPP
	f	Lf;	G	ROT_60_REF_PNN
	f	Lf;	H	ROT_60_REF_PNP
	f	Lf;	I	ROT_60_REF_PPN
	f	Lf;	J	ROT_60_REF_PPP
	f	Lf;	K	SWAP_XY
	f	Lf;	L	SWAP_YZ
	f	Lf;	M	SWAP_XZ
	f	Lf;	N	SWAP_NEG_XY
	f	Lf;	O	SWAP_NEG_YZ
	f	Lf;	P	SWAP_NEG_XZ
	f	Lf;	Q	ROT_90_REF_X_NEG
	f	Lf;	R	ROT_90_REF_X_POS
	f	Lf;	S	ROT_90_REF_Y_NEG
	f	Lf;	T	ROT_90_REF_Y_POS
	f	Lf;	U	ROT_90_REF_Z_NEG
	f	Lf;	V	ROT_90_REF_Z_POS
	f	Lc;	W	transformation
	f	Ljava/lang/String;	X	name
	f	Ljava/util/Map;	Y	rotatedDirections
	f	Z	Z	invertX
	f	Lf;	a	IDENTITY
	f	Z	aa	invertY
	f	Z	ab	invertZ
	f	Lh;	ac	permutation
	f	[[Lf;	ad	cayleyTable
	f	[Lf;	ae	inverseTable
	f	[Lf;	af	$VALUES
	f	Lf;	b	ROT_180_FACE_XY
	f	Lf;	c	ROT_180_FACE_XZ
	f	Lf;	d	ROT_180_FACE_YZ
	f	Lf;	e	ROT_120_NNN
	f	Lf;	f	ROT_120_NNP
	f	Lf;	g	ROT_120_NPN
	f	Lf;	h	ROT_120_NPP
	f	Lf;	i	ROT_120_PNN
	f	Lf;	j	ROT_120_PNP
	f	Lf;	k	ROT_120_PPN
	f	Lf;	l	ROT_120_PPP
	f	Lf;	m	ROT_180_EDGE_XY_NEG
	f	Lf;	n	ROT_180_EDGE_XY_POS
	f	Lf;	o	ROT_180_EDGE_XZ_NEG
	f	Lf;	p	ROT_180_EDGE_XZ_POS
	f	Lf;	q	ROT_180_EDGE_YZ_NEG
	f	Lf;	r	ROT_180_EDGE_YZ_POS
	f	Lf;	s	ROT_90_X_NEG
	f	Lf;	t	ROT_90_X_POS
	f	Lf;	u	ROT_90_Y_NEG
	f	Lf;	v	ROT_90_Y_POS
	f	Lf;	w	ROT_90_Z_NEG
	f	Lf;	x	ROT_90_Z_POS
	f	Lf;	y	INVERSION
	f	Lf;	z	INVERT_X
c	f$1	com/mojang/math/OctahedralGroup$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	g	com/mojang/math/Quaternion
	m	()Lk;	a	toXYZ
	m	(F)V	a	mul
	m	(FFF)Lg;	a	fromYXZ
	m	(FFFF)V	a	set
	m	(Lg;)V	a	mul
	m	(Lg;F)V	a	slerp
	m	(Lk;)Lg;	a	fromXYZDegrees
	m	()Lk;	b	toXYZDegrees
	m	(F)F	b	cos
	m	(FFF)Lg;	b	fromXYZ
	m	(Lk;)Lg;	b	fromXYZ
	m	()Lk;	c	toYXZ
	m	(F)F	c	sin
	m	()Lk;	d	toYXZDegrees
	m	()F	e	i
	m	()F	f	j
	m	()F	g	k
	m	()F	h	r
	m	()V	i	conj
	m	()V	j	normalize
	m	()Lg;	k	copy
	f	Lg;	a	ONE
	f	F	b	i
	f	F	c	j
	f	F	d	k
	f	F	e	r
c	h	com/mojang/math/SymmetricGroup3
	m	()Lc;	a	transformation
	m	(I)I	a	permutation
	m	(Lh;)Lh;	a	compose
	m	([ILh;)Z	a	lambda$static$0
	m	([[Lh;)V	a	lambda$static$1
	m	()[Lh;	b	$values
	f	Lh;	a	P123
	f	Lh;	b	P213
	f	Lh;	c	P132
	f	Lh;	d	P231
	f	Lh;	e	P312
	f	Lh;	f	P321
	f	[I	g	permutation
	f	Lc;	h	transformation
	f	I	i	ORDER
	f	[[Lh;	j	cayleyTable
	f	[Lh;	k	$VALUES
c	i	com/mojang/math/Transformation
	m	()Li;	a	identity
	m	(Ld;)Lcom/mojang/datafixers/util/Pair;	a	toAffine
	m	(Li;)Li;	a	compose
	m	(Li;F)Li;	a	slerp
	m	(Lk;Lg;Lk;Lg;)Ld;	a	compose
	m	()Li;	b	inverse
	m	()Ld;	c	getMatrix
	m	()Lk;	d	getTranslation
	m	()Lg;	e	getLeftRotation
	m	()Lk;	f	getScale
	m	()Lg;	g	getRightRotation
	m	()V	h	ensureDecomposed
	m	()Li;	i	lambda$static$0
	f	Ld;	a	matrix
	f	Z	b	decomposed
	f	Lk;	c	translation
	f	Lg;	d	leftRotation
	f	Lk;	e	scale
	f	Lg;	f	rightRotation
	f	Li;	g	IDENTITY
c	j	com/mojang/math/Vector3d
	m	(D)V	a	scale
	m	(DDD)V	a	set
	m	(Lj;)V	a	set
	m	(Lj;)V	b	add
	f	D	a	x
	f	D	b	y
	f	D	c	z
c	k	com/mojang/math/Vector3f
	m	()F	a	x
	m	(F)V	a	mul
	m	(FF)V	a	clamp
	m	(FFF)V	a	mul
	m	(Lc;)V	a	transform
	m	(Lg;)V	a	transform
	m	(Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)V	a	map
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	(Lk;)V	a	load
	m	(Lk;F)V	a	lerp
	m	(Lk;Lk;)V	a	clamp
	m	()F	b	y
	m	(F)Lg;	b	rotation
	m	(FFF)V	b	set
	m	(Ljava/util/List;)Lk;	b	lambda$static$0
	m	(Lk;)V	b	add
	m	()F	c	z
	m	(F)Lg;	c	rotationDegrees
	m	(FFF)V	c	add
	m	(Lk;)V	c	sub
	m	()Z	d	normalize
	m	(Lk;)F	d	dot
	m	()Lk;	e	copy
	m	(Lk;)V	e	cross
	m	(Lk;)Ljava/util/List;	f	lambda$static$2
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lk;	b	XN
	f	Lk;	c	XP
	f	Lk;	d	YN
	f	Lk;	e	YP
	f	Lk;	f	ZN
	f	Lk;	g	ZP
	f	Lk;	h	ZERO
	f	F	i	x
	f	F	j	y
	f	F	k	z
c	l	com/mojang/math/Vector4f
	m	()F	a	x
	m	(F)V	a	mul
	m	(FFFF)V	a	set
	m	(Ld;)V	a	transform
	m	(Lg;)V	a	transform
	m	(Lk;)V	a	mul
	m	(Ll;)F	a	dot
	m	(Ll;F)V	a	lerp
	m	()F	b	y
	m	(FFFF)V	b	add
	m	()F	c	z
	m	()F	d	w
	m	()Z	e	normalize
	m	()V	f	perspectiveDivide
	f	F	a	x
	f	F	b	y
	f	F	c	z
	f	F	d	w
c	m	com/mojang/math/package-info
c	n	net/minecraft/BlockUtil
	m	(Lcab;Lgj;Lcdq;Lgo;Lcdq;)Ljava/util/Optional;	a	getTopConnectedBlock
	m	(Lgj;Lgo$a;ILgo$a;ILjava/util/function/Predicate;)Ln$a;	a	getLargestRectangleAround
	m	(Ljava/util/function/Predicate;Lgj$a;Lgo;I)I	a	getLimit
	m	([I)Lcom/mojang/datafixers/util/Pair;	a	getMaxRectangleLocation
c	n$a	net/minecraft/BlockUtil$FoundRectangle
	f	Lgj;	a	minCorner
	f	I	b	axis1Size
	f	I	c	axis2Size
c	n$b	net/minecraft/BlockUtil$IntBounds
	f	I	a	min
	f	I	b	max
c	o	net/minecraft/CharPredicate
	m	(C)Z	a	lambda$negate$1
	m	(Lo;C)Z	a	lambda$or$2
	m	(Lo;C)Z	b	lambda$and$0
c	p	net/minecraft/ChatFormatting
	m	()C	a	getChar
	m	(C)Lp;	a	getByCode
	m	(I)Lp;	a	getById
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripFormatting
	m	(Lp;)Lp;	a	lambda$static$1
	m	(ZZ)Ljava/util/Collection;	a	getNames
	m	()I	b	getId
	m	(Ljava/lang/String;)Lp;	b	getByName
	m	(Lp;)Ljava/lang/String;	b	lambda$static$0
	m	()Z	c	isFormat
	m	(Ljava/lang/String;)Ljava/lang/String;	c	cleanName
	m	()Z	d	isColor
	m	()Ljava/lang/Integer;	e	getColor
	m	()Ljava/lang/String;	f	getName
	m	()[Lp;	g	$values
	f	C	A	code
	f	Z	B	isFormat
	f	Ljava/lang/String;	C	toString
	f	I	D	id
	f	Ljava/lang/Integer;	E	color
	f	[Lp;	F	$VALUES
	f	Lp;	a	BLACK
	f	Lp;	b	DARK_BLUE
	f	Lp;	c	DARK_GREEN
	f	Lp;	d	DARK_AQUA
	f	Lp;	e	DARK_RED
	f	Lp;	f	DARK_PURPLE
	f	Lp;	g	GOLD
	f	Lp;	h	GRAY
	f	Lp;	i	DARK_GRAY
	f	Lp;	j	BLUE
	f	Lp;	k	GREEN
	f	Lp;	l	AQUA
	f	Lp;	m	RED
	f	Lp;	n	LIGHT_PURPLE
	f	Lp;	o	YELLOW
	f	Lp;	p	WHITE
	f	Lp;	q	OBFUSCATED
	f	Lp;	r	BOLD
	f	Lp;	s	STRIKETHROUGH
	f	Lp;	t	UNDERLINE
	f	Lp;	u	ITALIC
	f	Lp;	v	RESET
	f	C	w	PREFIX_CODE
	f	Ljava/util/Map;	x	FORMATTING_BY_NAME
	f	Ljava/util/regex/Pattern;	y	STRIP_FORMATTING_PATTERN
	f	Ljava/lang/String;	z	name
c	q	net/minecraft/CrashReport
	m	()Ljava/lang/String;	a	getTitle
	m	(Ljava/io/File;)Z	a	saveToFile
	m	(Ljava/lang/String;)Lr;	a	addCategory
	m	(Ljava/lang/String;I)Lr;	a	addCategory
	m	(Ljava/lang/StringBuilder;)V	a	getDetails
	m	(Ljava/lang/Throwable;Ljava/lang/String;)Lq;	a	forThrowable
	m	()Ljava/lang/Throwable;	b	getException
	m	()Ljava/lang/String;	c	getDetails
	m	()Ljava/lang/String;	d	getExceptionMessage
	m	()Ljava/lang/String;	e	getFriendlyReport
	m	()Ljava/io/File;	f	getSaveFile
	m	()Lac;	g	getSystemReport
	m	()V	h	preload
	m	()Ljava/lang/String;	i	getErrorComment
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	title
	f	Ljava/lang/Throwable;	c	exception
	f	Ljava/util/List;	d	details
	f	Ljava/io/File;	e	saveFile
	f	Z	f	trackingStackTrace
	f	[Ljava/lang/StackTraceElement;	g	uncategorizedStackTrace
	f	Lac;	h	systemReport
c	r	net/minecraft/CrashReportCategory
	m	()[Ljava/lang/StackTraceElement;	a	getStacktrace
	m	(I)I	a	fillInStackTrace
	m	(Lcax;DDD)Ljava/lang/String;	a	formatLocation
	m	(Lcax;III)Ljava/lang/String;	a	formatLocation
	m	(Lcax;Lgj;)Ljava/lang/String;	a	formatLocation
	m	(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z	a	validateStackTrace
	m	(Ljava/lang/String;Ljava/lang/Object;)Lr;	a	setDetail
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	a	setDetailError
	m	(Ljava/lang/String;Ls;)Lr;	a	setDetail
	m	(Ljava/lang/StringBuilder;)V	a	getDetails
	m	(Lr;Lcax;Lgj;Lcov;)V	a	populateBlockDetails
	m	(I)V	b	trimStacktrace
	m	(Lcax;Lgj;)Ljava/lang/String;	b	lambda$populateBlockDetails$0
	f	Ljava/lang/String;	a	title
	f	Ljava/util/List;	b	entries
	f	[Ljava/lang/StackTraceElement;	c	stackTrace
c	r$a	net/minecraft/CrashReportCategory$Entry
	m	()Ljava/lang/String;	a	getKey
	m	()Ljava/lang/String;	b	getValue
	f	Ljava/lang/String;	a	key
	f	Ljava/lang/String;	b	value
c	s	net/minecraft/CrashReportDetail
c	t	net/minecraft/DefaultUncaughtExceptionHandler
	f	Lorg/slf4j/Logger;	a	logger
c	u	net/minecraft/DefaultUncaughtExceptionHandlerWithName
	f	Lorg/slf4j/Logger;	a	logger
c	v	net/minecraft/DetectedVersion
	m	()Lae;	a	tryDetectVersion
	m	()Ldkj;	b	getDataVersion
	f	Lae;	a	BUILT_IN
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	id
	f	Ljava/lang/String;	d	name
	f	Z	e	stable
	f	Ldkj;	f	worldVersion
	f	I	g	protocolVersion
	f	I	h	resourcePackVersion
	f	I	i	dataPackVersion
	f	Ljava/util/Date;	j	buildTime
	f	Ljava/lang/String;	k	releaseTarget
c	w	net/minecraft/FieldsAreNonnullByDefault
c	x	net/minecraft/FileUtil
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getFullResourcePath
	m	(Ljava/nio/file/Path;)Z	a	isPathNormalized
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	findAvailableName
	m	(Ljava/lang/String;)Ljava/lang/String;	b	normalizeResourcePath
	m	(Ljava/nio/file/Path;)Z	b	isPathPortable
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path;	b	createPathToResource
	f	Ljava/util/regex/Pattern;	a	COPY_COUNTER_PATTERN
	f	I	b	MAX_FILE_NAME
	f	Ljava/util/regex/Pattern;	c	RESERVED_WINDOWS_FILENAMES
c	y	net/minecraft/MethodsReturnNonnullByDefault
c	z	net/minecraft/ReportedException
	m	()Lq;	a	getReport
	f	Lq;	a	report
c	aa	net/minecraft/ResourceLocationException
c	ab	net/minecraft/SharedConstants
	m	()V	a	tryDetectVersion
	m	(C)Z	a	isAllowedChatCharacter
	m	(Lae;)V	a	setVersion
	m	(Lcac;)Z	a	debugVoidTerrain
	m	(Ljava/lang/String;)Ljava/lang/String;	a	filterText
	m	()Lae;	b	getCurrentVersion
	m	()I	c	getProtocolVersion
	f	Z	A	DEBUG_COLLISION
	f	Z	B	DEBUG_SHAPES
	f	Z	C	DEBUG_NEIGHBORSUPDATE
	f	Z	D	DEBUG_STRUCTURES
	f	Z	E	DEBUG_LIGHT
	f	Z	F	DEBUG_WORLDGENATTEMPT
	f	Z	G	DEBUG_SOLID_FACE
	f	Z	H	DEBUG_CHUNKS
	f	Z	I	DEBUG_GAME_EVENT_LISTENERS
	f	Z	J	DEBUG_DUMP_TEXTURE_ATLAS
	f	Z	K	DEBUG_DUMP_INTERPOLATED_TEXTURE_FRAMES
	f	Z	L	DEBUG_STRUCTURE_EDIT_MODE
	f	Z	M	DEBUG_SAVE_STRUCTURES_AS_SNBT
	f	Z	N	DEBUG_SYNCHRONOUS_GL_LOGS
	f	Z	O	DEBUG_VERBOSE_SERVER_EVENTS
	f	Z	P	DEBUG_NAMED_RUNNABLES
	f	Z	Q	DEBUG_GOAL_SELECTOR
	f	Z	R	DEBUG_VILLAGE_SECTIONS
	f	Z	S	DEBUG_BRAIN
	f	Z	T	DEBUG_BEES
	f	Z	U	DEBUG_RAIDS
	f	Z	V	DEBUG_BLOCK_BREAK
	f	Z	W	DEBUG_RESOURCE_LOAD_TIMES
	f	Z	X	DEBUG_MONITOR_TICK_TIMES
	f	Z	Y	DEBUG_KEEP_JIGSAW_BLOCKS_DURING_STRUCTURE_GEN
	f	Z	Z	DEBUG_DONT_SAVE_WORLD
	f	Lio/netty/util/ResourceLeakDetector$Level;	aA	NETTY_LEAK_DETECTION
	f	Z	aB	COMMAND_STACK_TRACES
	f	Z	aC	DEBUG_WORLD_RECREATE
	f	Z	aD	DEBUG_SHOW_SERVER_DEBUG_VALUES
	f	Z	aE	DEBUG_STORE_CHUNK_STACKTRACES
	f	Z	aF	DEBUG_FEATURE_COUNT
	f	J	aG	MAXIMUM_TICK_TIME_NANOS
	f	Z	aH	CHECK_DATA_FIXER_SCHEMA
	f	Z	aI	IS_RUNNING_IN_IDE
	f	I	aJ	WORLD_RESOLUTION
	f	I	aK	MAX_CHAT_LENGTH
	f	I	aL	MAX_COMMAND_LENGTH
	f	[C	aM	ILLEGAL_FILE_CHARACTERS
	f	I	aN	TICKS_PER_SECOND
	f	I	aO	TICKS_PER_MINUTE
	f	I	aP	TICKS_PER_GAME_DAY
	f	F	aQ	AVERAGE_GAME_TICKS_PER_RANDOM_TICK_PER_BLOCK
	f	F	aR	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_MINUTE
	f	F	aS	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_GAME_DAY
	f	I	aT	SNAPSHOT_PROTOCOL_BIT
	f	Lae;	aU	CURRENT_VERSION
	f	Z	a	SNAPSHOT
	f	Z	aa	DEBUG_LARGE_DRIPSTONE
	f	Z	ab	DEBUG_PACKET_SERIALIZATION
	f	Z	ac	DEBUG_CARVERS
	f	Z	ad	DEBUG_ORE_VEINS
	f	Z	ae	DEBUG_IGNORE_LOCAL_MOB_CAP
	f	Z	af	DEBUG_SMALL_SPAWN
	f	Z	ag	DEBUG_DISABLE_LIQUID_SPREADING
	f	Z	ah	DEBUG_AQUIFERS
	f	Z	ai	DEBUG_JFR_PROFILING_ENABLE_LEVEL_LOADING
	f	Z	aj	debugGenerateSquareTerrainWithoutNoise
	f	Z	ak	debugGenerateStripedTerrainWithoutNoise
	f	Z	al	DEBUG_ONLY_GENERATE_HALF_THE_WORLD
	f	Z	am	DEBUG_DISABLE_FLUID_GENERATION
	f	Z	an	DEBUG_DISABLE_AQUIFERS
	f	Z	ao	DEBUG_DISABLE_SURFACE
	f	Z	ap	DEBUG_DISABLE_CARVERS
	f	Z	aq	DEBUG_DISABLE_STRUCTURES
	f	Z	ar	DEBUG_DISABLE_FEATURES
	f	Z	as	DEBUG_DISABLE_ORE_VEINS
	f	Z	at	DEBUG_DISABLE_BLENDING
	f	Z	au	DEBUG_DISABLE_BELOW_ZERO_RETROGENERATION
	f	I	av	DEFAULT_MINECRAFT_PORT
	f	Z	aw	INGAME_DEBUG_OUTPUT
	f	Z	ax	DEBUG_SUBTITLES
	f	I	ay	FAKE_MS_LATENCY
	f	I	az	FAKE_MS_JITTER
	f	I	b	WORLD_VERSION
	f	Ljava/lang/String;	c	SERIES
	f	Ljava/lang/String;	d	VERSION_STRING
	f	Ljava/lang/String;	e	RELEASE_TARGET
	f	I	f	RELEASE_NETWORK_PROTOCOL_VERSION
	f	I	g	SNAPSHOT_NETWORK_PROTOCOL_VERSION
	f	I	h	SNBT_NAG_VERSION
	f	Z	i	THROW_ON_TASK_FAILURE
	f	I	j	RESOURCE_PACK_FORMAT
	f	I	k	DATA_PACK_FORMAT
	f	Ljava/lang/String;	l	DATA_VERSION_TAG
	f	Z	m	CNC_PART_2_ITEMS_AND_BLOCKS
	f	Z	n	USE_NEW_RENDERSYSTEM
	f	Z	o	MULTITHREADED_RENDERING
	f	Z	p	FIX_TNT_DUPE
	f	Z	q	FIX_SAND_DUPE
	f	Z	r	USE_DEBUG_FEATURES
	f	Z	s	DEBUG_OPEN_INCOMPATIBLE_WORLDS
	f	Z	t	DEBUG_ALLOW_LOW_SIM_DISTANCE
	f	Z	u	DEBUG_HOTKEYS
	f	Z	v	DEBUG_UI_NARRATION
	f	Z	w	DEBUG_RENDER
	f	Z	x	DEBUG_PATHFINDING
	f	Z	y	DEBUG_WATER
	f	Z	z	DEBUG_HEIGHTMAP
c	ac	net/minecraft/SystemReport
	m	()Ljava/lang/String;	a	toLineSeparatedString
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	a	ignoreErrors
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	setDetail
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)V	a	setDetail
	m	(Ljava/lang/StringBuilder;)V	a	appendToCrashReportString
	m	(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$appendToCrashReportString$20
	m	(Ljava/util/List;)V	a	putPhysicalMemory
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	lambda$toLineSeparatedString$21
	m	(Loshi/SystemInfo;)V	a	putHardware
	m	(Loshi/hardware/CentralProcessor$ProcessorIdentifier;)Ljava/lang/String;	a	lambda$putProcessor$16
	m	(Loshi/hardware/CentralProcessor;)V	a	putProcessor
	m	(Loshi/hardware/GlobalMemory;)V	a	putMemory
	m	(Loshi/hardware/GraphicsCard;)Ljava/lang/String;	a	lambda$putGraphics$15
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	a	lambda$putHardware$6
	m	(Loshi/hardware/PhysicalMemory;)Ljava/lang/String;	a	lambda$putPhysicalMemory$8
	m	(Loshi/hardware/VirtualMemory;)V	a	putVirtualMemory
	m	()Ljava/lang/String;	b	lambda$new$3
	m	(Ljava/util/List;)V	b	putGraphics
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	b	lambda$putProcessor$19
	m	(Loshi/hardware/GlobalMemory;)V	b	lambda$putMemory$14
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	b	lambda$putHardware$5
	m	(Loshi/hardware/PhysicalMemory;)Ljava/lang/String;	b	lambda$putPhysicalMemory$7
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	b	lambda$putVirtualMemory$12
	m	()V	c	lambda$new$2
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	c	lambda$putProcessor$18
	m	(Loshi/hardware/GlobalMemory;)V	c	lambda$putMemory$13
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	c	lambda$putHardware$4
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	c	lambda$putVirtualMemory$11
	m	()Ljava/lang/String;	d	lambda$new$1
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	d	lambda$putProcessor$17
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	d	lambda$putVirtualMemory$10
	m	()Ljava/lang/String;	e	lambda$new$0
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	e	lambda$putVirtualMemory$9
	f	J	a	BYTES_PER_MEBIBYTE
	f	J	b	ONE_GIGA
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/lang/String;	d	OPERATING_SYSTEM
	f	Ljava/lang/String;	e	JAVA_VERSION
	f	Ljava/lang/String;	f	JAVA_VM_VERSION
	f	Ljava/util/Map;	g	entries
c	ad	net/minecraft/Util
	m	()Ljava/util/stream/Collector;	a	toMap
	m	(ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z	a	runWithRetries
	m	(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;	a	fetchChoiceType
	m	(Lcpy;Ljava/lang/Object;)Ljava/lang/String;	a	getPropertyName
	m	(Ljava/io/File;Ljava/io/File;Ljava/io/File;)V	a	safeReplaceFile
	m	(Ljava/io/File;Ljava/io/File;Ljava/io/File;Z)V	a	safeReplaceOrMoveFile
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;	a	findNextInIterable
	m	(Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object;	a	make
	m	(Ljava/lang/Runnable;)Ljava/lang/Thread;	a	lambda$makeIoExecutor$4
	m	(Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable;	a	name
	m	(Ljava/lang/String;)V	a	logAndPauseIfInIde
	m	(Ljava/lang/String;II)I	a	offsetByCodepoints
	m	(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Runnable;	a	wrapThreadWithTaskName
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	a	logAndPauseIfInIde
	m	(Ljava/lang/String;Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread;	a	lambda$makeExecutor$3
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;	a	prefix
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	a	wrapThreadWithTaskName
	m	(Ljava/lang/String;Lo;)Ljava/lang/String;	a	sanitizeName
	m	(Ljava/lang/String;Lyt;)Ljava/lang/String;	a	makeDescriptionId
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	onThreadException
	m	(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;	a	failedFuture
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	a	createDeleter
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	a	createRenamer
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	safeReplaceFile
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V	a	safeReplaceOrMoveFile
	m	(Ljava/nio/file/spi/FileSystemProvider;)Z	a	lambda$static$0
	m	(Ljava/util/List;)Ljava/lang/Object;	a	lastOf
	m	(Ljava/util/List;I)Lcom/mojang/serialization/DataResult;	a	fixedSize
	m	(Ljava/util/List;Ljava/lang/Void;)Ljava/util/List;	a	lambda$sequenceFailFast$11
	m	(Ljava/util/List;Ljava/util/Random;)Ljava/lang/Object;	a	getRandom
	m	(Ljava/util/List;[Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$sequenceFailFast$10
	m	(Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional;	a	ifElse
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/util/List;ILjava/lang/Object;Ljava/lang/Throwable;)V	a	lambda$sequenceFailFast$9
	m	(Ljava/util/concurrent/ExecutorService;)V	a	shutdownExecutor
	m	(Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;	a	memoize
	m	(Ljava/util/function/Consumer;)V	a	setPause
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$prefix$12
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	a	memoize
	m	(Ljava/util/function/Supplier;)Ljava/lang/Object;	a	make
	m	(Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult;	a	fixedSize
	m	(Lo;I)Ljava/lang/String;	a	lambda$sanitizeName$13
	m	([ILjava/util/Random;)I	a	getRandom
	m	([Ljava/lang/Object;Ljava/util/Random;)Ljava/lang/Object;	a	getRandom
	m	([Ljava/util/function/BooleanSupplier;)Z	a	executeInSequence
	m	()J	b	getMillis
	m	(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;	b	doFetchChoiceType
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;	b	findPreviousInIterable
	m	(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService;	b	makeExecutor
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	b	lambda$wrapThreadWithTaskName$5
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/lang/Object;	b	lambda$wrapThreadWithTaskName$6
	m	(Ljava/lang/Throwable;)V	b	throwAsRuntime
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	b	createFileDeletedCheck
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	b	copyBetweenDirs
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	b	sequence
	m	(Ljava/util/List;Ljava/lang/Void;)Ljava/util/List;	b	lambda$sequence$8
	m	(Ljava/util/List;Ljava/util/Random;)Ljava/util/Optional;	b	getRandomSafe
	m	()J	c	getNanos
	m	(Ljava/lang/String;)V	c	doPause
	m	(Ljava/lang/Throwable;)Ljava/lang/Throwable;	c	pauseInIde
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	c	createFileCreatedCheck
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	c	sequenceFailFast
	m	()J	d	getEpochMillis
	m	(Ljava/lang/String;)Z	d	lambda$getVmArguments$7
	m	(Ljava/lang/Throwable;)Ljava/lang/String;	d	describeError
	m	()Ljava/util/concurrent/ExecutorService;	e	bootstrapExecutor
	m	(Ljava/lang/String;)V	e	lambda$static$2
	m	()Ljava/util/concurrent/ExecutorService;	f	backgroundExecutor
	m	()Ljava/util/concurrent/ExecutorService;	g	ioPool
	m	()V	h	shutdownExecutors
	m	()Lad$b;	i	getPlatform
	m	()Ljava/util/stream/Stream;	j	getVmArguments
	m	()Lit/unimi/dsi/fastutil/Hash$Strategy;	k	identityStrategy
	m	()V	l	startTimerHackThread
	m	()I	m	getMaxThreads
	m	()Ljava/util/concurrent/ExecutorService;	n	makeIoExecutor
	m	()Ljava/lang/IllegalStateException;	o	lambda$static$1
	f	Ljava/util/function/LongSupplier;	a	timeSource
	f	Lcom/google/common/base/Ticker;	b	TICKER
	f	Ljava/util/UUID;	c	NIL_UUID
	f	Ljava/nio/file/spi/FileSystemProvider;	d	ZIP_FILE_SYSTEM_PROVIDER
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	I	f	DEFAULT_MAX_THREADS
	f	Ljava/lang/String;	g	MAX_THREADS_SYSTEM_PROPERTY
	f	Ljava/util/concurrent/atomic/AtomicInteger;	h	WORKER_COUNT
	f	Ljava/util/concurrent/ExecutorService;	i	BOOTSTRAP_EXECUTOR
	f	Ljava/util/concurrent/ExecutorService;	j	BACKGROUND_EXECUTOR
	f	Ljava/util/concurrent/ExecutorService;	k	IO_POOL
	f	Ljava/util/function/Consumer;	l	thePauser
c	ad$1	net/minecraft/Util$1
c	ad$2	net/minecraft/Util$10
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object;	a	lambda$apply$0
	f	Ljava/util/function/BiFunction;	a	val$function
	f	Ljava/util/Map;	b	cache
c	ad$3	net/minecraft/Util$2
c	ad$4	net/minecraft/Util$4
	f	Ljava/nio/file/Path;	a	val$from
	f	Ljava/nio/file/Path;	b	val$to
c	ad$5	net/minecraft/Util$5
	f	Ljava/nio/file/Path;	a	val$target
c	ad$6	net/minecraft/Util$6
	f	Ljava/nio/file/Path;	a	val$target
c	ad$7	net/minecraft/Util$7
	f	Ljava/nio/file/Path;	a	val$target
c	ad$8	net/minecraft/Util$8
c	ad$9	net/minecraft/Util$9
	f	Ljava/util/function/Function;	a	val$function
	f	Ljava/util/Map;	b	cache
c	ad$a	net/minecraft/Util$IdentityStrategy
	m	()[Lad$a;	a	$values
	f	Lad$a;	a	INSTANCE
	f	[Lad$a;	b	$VALUES
c	ad$b	net/minecraft/Util$OS
	m	()Ljava/lang/String;	a	telemetryName
	m	(Ljava/io/File;)V	a	openFile
	m	(Ljava/lang/String;)V	a	openUri
	m	(Ljava/net/URI;)V	a	openUri
	m	(Ljava/net/URL;)V	a	openUrl
	m	()[Lad$b;	b	$values
	m	(Ljava/net/URL;)[Ljava/lang/String;	b	getOpenUrlArguments
	m	(Ljava/net/URL;)Ljava/lang/Process;	c	lambda$openUrl$0
	f	Lad$b;	a	LINUX
	f	Lad$b;	b	SOLARIS
	f	Lad$b;	c	WINDOWS
	f	Lad$b;	d	OSX
	f	Lad$b;	e	UNKNOWN
	f	Ljava/lang/String;	f	telemetryName
	f	[Lad$b;	g	$VALUES
c	ad$b$1	net/minecraft/Util$OS$1
	m	(Ljava/net/URL;)[Ljava/lang/String;	b	getOpenUrlArguments
c	ad$b$2	net/minecraft/Util$OS$2
	m	(Ljava/net/URL;)[Ljava/lang/String;	b	getOpenUrlArguments
c	ae	net/minecraft/WorldVersion
	m	()Ldkj;	b	getDataVersion
c	af	net/minecraft/advancements/Advancement
	m	()Laf$a;	a	deconstruct
	m	(Laf;)V	a	addChild
	m	(Lqk;Lqu;)Lqu;	a	lambda$new$0
	m	()Laf;	b	getParent
	m	()Lao;	c	getDisplay
	m	()Lai;	d	getRewards
	m	()Ljava/lang/Iterable;	e	getChildren
	m	()Ljava/util/Map;	f	getCriteria
	m	()I	g	getMaxCriteraRequired
	m	()Lyt;	h	getId
	m	()[[Ljava/lang/String;	i	getRequirements
	m	()Lqk;	j	getChatComponent
	f	Laf;	a	parent
	f	Lao;	b	display
	f	Lai;	c	rewards
	f	Lyt;	d	id
	f	Ljava/util/Map;	e	criteria
	f	[[Ljava/lang/String;	f	requirements
	f	Ljava/util/Set;	g	children
	f	Lqk;	h	chatComponent
c	af$a	net/minecraft/advancements/Advancement$Builder
	m	()Laf$a;	a	advancement
	m	(Laf;)Laf$a;	a	parent
	m	(Lai$a;)Laf$a;	a	rewards
	m	(Lai;)Laf$a;	a	rewards
	m	(Lao;)Laf$a;	a	display
	m	(Laq;)Laf$a;	a	requirements
	m	(Lbuw;Lqk;Lqk;Lyt;Lap;ZZZ)Laf$a;	a	display
	m	(Lcau;Lqk;Lqk;Lyt;Lap;ZZZ)Laf$a;	a	display
	m	(Lcom/google/gson/JsonObject;Lbe;)Laf$a;	a	fromJson
	m	(Ljava/lang/String;Lak;)Laf$a;	a	addCriterion
	m	(Ljava/lang/String;Lan;)Laf$a;	a	addCriterion
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)Laf;	a	save
	m	(Ljava/util/function/Function;)Z	a	canBuild
	m	(Lpy;)V	a	serializeToNetwork
	m	(Lyt;)Laf$a;	a	parent
	m	([[Ljava/lang/String;)Laf$a;	a	requirements
	m	()Lcom/google/gson/JsonObject;	b	serializeToJson
	m	(Lpy;)Laf$a;	b	fromNetwork
	m	(Lyt;)Laf;	b	build
	m	()Ljava/util/Map;	c	getCriteria
	m	(Lyt;)Laf;	c	lambda$build$0
	f	Lyt;	a	parentId
	f	Laf;	b	parent
	f	Lao;	c	display
	f	Lai;	d	rewards
	f	Ljava/util/Map;	e	criteria
	f	[[Ljava/lang/String;	f	requirements
	f	Laq;	g	requirementsStrategy
c	ag	net/minecraft/advancements/AdvancementList
	m	()V	a	clear
	m	(Laf;)V	a	remove
	m	(Lag$a;)V	a	setListener
	m	(Ljava/util/Map;)V	a	add
	m	(Ljava/util/Set;)V	a	remove
	m	(Lyt;)Laf;	a	get
	m	()Ljava/lang/Iterable;	b	getRoots
	m	()Ljava/util/Collection;	c	getAllAdvancements
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	advancements
	f	Ljava/util/Set;	c	roots
	f	Ljava/util/Set;	d	tasks
	f	Lag$a;	e	listener
c	ag$a	net/minecraft/advancements/AdvancementList$Listener
	m	()V	a	onAdvancementsCleared
	m	(Laf;)V	a	onAddAdvancementRoot
	m	(Laf;)V	b	onRemoveAdvancementRoot
	m	(Laf;)V	c	onAddAdvancementTask
	m	(Laf;)V	d	onRemoveAdvancementTask
c	ah	net/minecraft/advancements/AdvancementProgress
	m	()Z	a	isDone
	m	(Lah;)I	a	compareTo
	m	(Ljava/lang/String;)Z	a	grantProgress
	m	(Ljava/util/Map;[[Ljava/lang/String;)V	a	update
	m	(Ljava/util/Set;Ljava/util/Map$Entry;)Z	a	lambda$update$0
	m	(Lpy;)V	a	serializeToNetwork
	m	(Lpy;Lal;)V	a	lambda$serializeToNetwork$1
	m	()Z	b	hasProgress
	m	(Ljava/lang/String;)Z	b	revokeProgress
	m	(Lpy;)Lah;	b	fromNetwork
	m	()F	c	getPercent
	m	(Ljava/lang/String;)Lal;	c	getCriterion
	m	()Ljava/lang/String;	d	getProgressText
	m	()Ljava/lang/Iterable;	e	getRemainingCriteria
	m	()Ljava/lang/Iterable;	f	getCompletedCriteria
	m	()Ljava/util/Date;	g	getFirstProgressDate
	m	()I	h	countCompletedRequirements
	f	Ljava/util/Map;	a	criteria
	f	[[Ljava/lang/String;	b	requirements
c	ah$a	net/minecraft/advancements/AdvancementProgress$Serializer
	m	(Lah;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lah;	a	deserialize
c	ai	net/minecraft/advancements/AdvancementRewards
	m	()[Lyt;	a	getRecipes
	m	(Ladx;)V	a	grant
	m	(Lcom/google/gson/JsonObject;)Lai;	a	deserialize
	m	(Lnet/minecraft/server/MinecraftServer;Ladx;Ldj;)V	a	lambda$grant$0
	m	()Lcom/google/gson/JsonElement;	b	serializeToJson
	f	Lai;	a	EMPTY
	f	I	b	experience
	f	[Lyt;	c	loot
	f	[Lyt;	d	recipes
	f	Ldj$a;	e	function
c	ai$a	net/minecraft/advancements/AdvancementRewards$Builder
	m	()Lai;	a	build
	m	(I)Lai$a;	a	experience
	m	(Lyt;)Lai$a;	a	loot
	m	(I)Lai$a;	b	addExperience
	m	(Lyt;)Lai$a;	b	addLootTable
	m	(Lyt;)Lai$a;	c	recipe
	m	(Lyt;)Lai$a;	d	addRecipe
	m	(Lyt;)Lai$a;	e	function
	m	(Lyt;)Lai$a;	f	runs
	f	I	a	experience
	f	Ljava/util/List;	b	loot
	f	Ljava/util/List;	c	recipes
	f	Lyt;	d	function
c	aj	net/minecraft/advancements/CriteriaTriggers
	m	()Ljava/lang/Iterable;	a	all
	m	(Lam;)Lam;	a	register
	m	(Lyt;)Lam;	a	getCriterion
	f	Lbh;	A	EFFECTS_CHANGED
	f	Ldd;	B	USED_TOTEM
	f	Lbg;	C	NETHER_TRAVEL
	f	Lbs;	D	FISHING_ROD_HOOKED
	f	Lay;	E	CHANNELED_LIGHTNING
	f	Lcs;	F	SHOT_CROSSBOW
	f	Lca;	G	KILLED_BY_CROSSBOW
	f	Lch;	H	RAID_WIN
	f	Lch;	I	BAD_OMEN
	f	Lcu;	J	HONEY_BLOCK_SLIDE
	f	Lat;	K	BEE_NEST_DESTROYED
	f	Lcz;	L	TARGET_BLOCK_HIT
	f	Lbz;	M	ITEM_USED_ON_BLOCK
	f	Lci;	N	GENERATE_LOOT
	f	Lbx;	O	ITEM_PICKED_UP_BY_ENTITY
	f	Lco;	P	PLAYER_INTERACTED_WITH_ENTITY
	f	Lcv;	Q	START_RIDING_TRIGGER
	f	Lcf;	R	LIGHTNING_STRIKE
	f	Lde;	S	USING_ITEM
	f	Lbg;	T	FALL_FROM_HEIGHT
	f	Lbg;	U	RIDE_ENTITY_IN_LAVA_TRIGGER
	f	Ljava/util/Map;	V	CRITERIA
	f	Lbu;	a	IMPOSSIBLE
	f	Lcb;	b	PLAYER_KILLED_ENTITY
	f	Lcb;	c	ENTITY_KILLED_PLAYER
	f	Lbk;	d	ENTER_BLOCK
	f	Lbv;	e	INVENTORY_CHANGED
	f	Lcq;	f	RECIPE_UNLOCKED
	f	Lcn;	g	PLAYER_HURT_ENTITY
	f	Lbn;	h	ENTITY_HURT_PLAYER
	f	Lbi;	i	ENCHANTED_ITEM
	f	Lbq;	j	FILLED_BUCKET
	f	Law;	k	BREWED_POTION
	f	Laz;	l	CONSTRUCT_BEACON
	f	Ldc;	m	USED_ENDER_EYE
	f	Lcx;	n	SUMMONED_ENTITY
	f	Lav;	o	BRED_ANIMALS
	f	Lch;	p	LOCATION
	f	Lch;	q	SLEPT_IN_BED
	f	Lbb;	r	CURED_ZOMBIE_VILLAGER
	f	Ldb;	s	TRADE
	f	Lbw;	t	ITEM_DURABILITY_CHANGED
	f	Lcc;	u	LEVITATION
	f	Lax;	v	CHANGED_DIMENSION
	f	Lda;	w	TICK
	f	Lcy;	x	TAME_ANIMAL
	f	Lcm;	y	PLACED_BLOCK
	f	Lba;	z	CONSUME_ITEM
c	ak	net/minecraft/advancements/Criterion
	m	()Lan;	a	getTrigger
	m	(Lcom/google/gson/JsonObject;Lbe;)Lak;	a	criterionFromJson
	m	(Ljava/util/Map;Lpy;)V	a	serializeToNetwork
	m	(Lpy;)V	a	serializeToNetwork
	m	(Lpy;Lak;)V	a	lambda$serializeToNetwork$0
	m	()Lcom/google/gson/JsonElement;	b	serializeToJson
	m	(Lcom/google/gson/JsonObject;Lbe;)Ljava/util/Map;	b	criteriaFromJson
	m	(Lpy;)Lak;	b	criterionFromNetwork
	m	(Lpy;)Ljava/util/Map;	c	criteriaFromNetwork
	f	Lan;	a	trigger
c	al	net/minecraft/advancements/CriterionProgress
	m	()Z	a	isDone
	m	(Ljava/lang/String;)Lal;	a	fromJson
	m	(Lpy;)V	a	serializeToNetwork
	m	()V	b	grant
	m	(Lpy;)Lal;	b	fromNetwork
	m	()V	c	revoke
	m	()Ljava/util/Date;	d	getObtained
	m	()Lcom/google/gson/JsonElement;	e	serializeToJson
	f	Ljava/text/SimpleDateFormat;	a	DATE_FORMAT
	f	Ljava/util/Date;	b	obtained
c	am	net/minecraft/advancements/CriterionTrigger
	m	()Lyt;	a	getId
	m	(Lcom/google/gson/JsonObject;Lbe;)Lan;	a	createInstance
	m	(Lzb;)V	a	removePlayerListeners
	m	(Lzb;Lam$a;)V	a	addPlayerListener
	m	(Lzb;Lam$a;)V	b	removePlayerListener
c	am$a	net/minecraft/advancements/CriterionTrigger$Listener
	m	()Lan;	a	getTriggerInstance
	m	(Lzb;)V	a	run
	f	Lan;	a	trigger
	f	Laf;	b	advancement
	f	Ljava/lang/String;	c	criterion
c	an	net/minecraft/advancements/CriterionTriggerInstance
	m	()Lyt;	a	getCriterion
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
c	ao	net/minecraft/advancements/DisplayInfo
	m	()Lqk;	a	getTitle
	m	(FF)V	a	setLocation
	m	(Lcom/google/gson/JsonObject;)Lao;	a	fromJson
	m	(Lpy;)V	a	serializeToNetwork
	m	()Lqk;	b	getDescription
	m	(Lcom/google/gson/JsonObject;)Lbuw;	b	getIcon
	m	(Lpy;)Lao;	b	fromNetwork
	m	()Lbuw;	c	getIcon
	m	()Lyt;	d	getBackground
	m	()Lap;	e	getFrame
	m	()F	f	getX
	m	()F	g	getY
	m	()Z	h	shouldShowToast
	m	()Z	i	shouldAnnounceChat
	m	()Z	j	isHidden
	m	()Lcom/google/gson/JsonElement;	k	serializeToJson
	m	()Lcom/google/gson/JsonObject;	l	serializeIcon
	f	Lqk;	a	title
	f	Lqk;	b	description
	f	Lbuw;	c	icon
	f	Lyt;	d	background
	f	Lap;	e	frame
	f	Z	f	showToast
	f	Z	g	announceChat
	f	Z	h	hidden
	f	F	i	x
	f	F	j	y
c	ap	net/minecraft/advancements/FrameType
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lap;	a	byName
	m	()I	b	getTexture
	m	()Lp;	c	getChatColor
	m	()Lqk;	d	getDisplayName
	m	()[Lap;	e	$values
	f	Lap;	a	TASK
	f	Lap;	b	CHALLENGE
	f	Lap;	c	GOAL
	f	Ljava/lang/String;	d	name
	f	I	e	texture
	f	Lp;	f	chatColor
	f	Lqk;	g	displayName
	f	[Lap;	h	$VALUES
c	aq	net/minecraft/advancements/RequirementsStrategy
	m	(Ljava/util/Collection;)[[Ljava/lang/String;	a	lambda$static$1
	m	(Ljava/util/Collection;)[[Ljava/lang/String;	b	lambda$static$0
	f	Laq;	a	AND
	f	Laq;	b	OR
c	ar	net/minecraft/advancements/TreeNodePosition
	m	()V	a	firstWalk
	m	(F)V	a	thirdWalk
	m	(FIF)F	a	secondWalk
	m	(Laf;)V	a	run
	m	(Laf;Lar;)Lar;	a	addChild
	m	(Lar;)Lar;	a	apportion
	m	(Lar;F)V	a	moveSubtree
	m	(Lar;Lar;)Lar;	a	getAncestor
	m	()V	b	executeShifts
	m	()Lar;	c	previousOrThread
	m	()Lar;	d	nextOrThread
	m	()V	e	finalizePosition
	f	Laf;	a	advancement
	f	Lar;	b	parent
	f	Lar;	c	previousSibling
	f	I	d	childIndex
	f	Ljava/util/List;	e	children
	f	Lar;	f	ancestor
	f	Lar;	g	thread
	f	I	h	x
	f	F	i	y
	f	F	j	mod
	f	F	k	change
	f	F	l	shift
c	as	net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance
	m	()Lyt;	a	getCriterion
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	()Lbo$b;	b	getPlayerPredicate
	f	Lyt;	a	criterion
	f	Lbo$b;	b	player
c	at	net/minecraft/advancements/critereon/BeeNestDestroyedTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lcov;Lbuw;I)V	a	trigger
	m	(Lcom/google/gson/JsonObject;)Lcdq;	a	deserializeBlock
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lat$a;	a	createInstance
	m	(Lcov;Lbuw;ILat$a;)Z	a	lambda$trigger$1
	m	(Lyt;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserializeBlock$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	at$a	net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance
	m	(Lcdq;Lby$a;Lcj$d;)Lat$a;	a	destroyedBeeNest
	m	(Lcov;Lbuw;I)Z	a	matches
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lcdq;	a	block
	f	Lby;	b	item
	f	Lcj$d;	c	numBees
c	au	net/minecraft/advancements/critereon/BlockPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Ladw;Lgj;)Z	a	matches
	m	(Lcom/google/gson/JsonElement;)Lau;	a	fromJson
	m	(Lyt;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$0
	f	Lau;	a	ANY
	f	Laif;	b	tag
	f	Ljava/util/Set;	c	blocks
	f	Lcw;	d	properties
	f	Lcl;	e	nbt
c	au$a	net/minecraft/advancements/critereon/BlockPredicate$Builder
	m	()Lau$a;	a	block
	m	(Laif;)Lau$a;	a	of
	m	(Lcw;)Lau$a;	a	setProperties
	m	(Ljava/lang/Iterable;)Lau$a;	a	of
	m	(Lok;)Lau$a;	a	hasNbt
	m	([Lcdq;)Lau$a;	a	of
	m	()Lau;	b	build
	f	Ljava/util/Set;	a	blocks
	f	Laif;	b	tag
	f	Lcw;	c	properties
	f	Lcl;	d	nbt
c	av	net/minecraft/advancements/critereon/BredAnimalsTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lbid;Lbid;Laxi;)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lav$a;	a	createInstance
	m	(Ldlc;Ldlc;Ldlc;Lav$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	av$a	net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance
	m	(Lbo$a;)Lav$a;	a	bredAnimals
	m	(Lbo;Lbo;Lbo;)Lav$a;	a	bredAnimals
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Ldlc;Ldlc;Ldlc;)Z	a	matches
	m	()Lav$a;	c	bredAnimals
	f	Lbo$b;	a	parent
	f	Lbo$b;	b	partner
	f	Lbo$b;	c	child
c	aw	net/minecraft/advancements/critereon/BrewedPotionTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lbwr;)V	a	trigger
	m	(Lbwr;Law$a;)Z	a	lambda$trigger$1
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Law$a;	a	createInstance
	m	(Lyt;)Lcom/google/gson/JsonSyntaxException;	a	lambda$createInstance$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	aw$a	net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance
	m	(Lbwr;)Z	a	matches
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	()Law$a;	c	brewedPotion
	f	Lbwr;	a	potion
c	ax	net/minecraft/advancements/critereon/ChangeDimensionTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lys;Lys;)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lax$a;	a	createInstance
	m	(Lys;Lys;Lax$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	ax$a	net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lys;)Lax$a;	a	changedDimensionTo
	m	(Lys;Lys;)Lax$a;	a	changedDimension
	m	(Lys;)Lax$a;	b	changedDimensionFrom
	m	(Lys;Lys;)Z	b	matches
	m	()Lax$a;	c	changedDimension
	f	Lys;	a	from
	f	Lys;	b	to
c	ay	net/minecraft/advancements/critereon/ChanneledLightningTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Laxk;)Ldlc;	a	lambda$trigger$0
	m	(Ladx;Ljava/util/Collection;)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lay$a;	a	createInstance
	m	(Ljava/util/List;Lay$a;)Z	a	lambda$trigger$1
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	ay$a	net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance
	m	(I)[Lbo$b;	a	lambda$channeledLightning$0
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Ljava/util/Collection;)Z	a	matches
	m	([Lbo;)Lay$a;	a	channeledLightning
	f	[Lbo$b;	a	victims
c	az	net/minecraft/advancements/critereon/ConstructBeaconTrigger
	m	()Lyt;	a	getId
	m	(ILaz$a;)Z	a	lambda$trigger$0
	m	(Ladx;I)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Laz$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	az$a	net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance
	m	(I)Z	a	matches
	m	(Lcj$d;)Laz$a;	a	constructedBeacon
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	()Laz$a;	c	constructedBeacon
	f	Lcj$d;	a	level
c	ba	net/minecraft/advancements/critereon/ConsumeItemTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lbuw;)V	a	trigger
	m	(Lbuw;Lba$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lba$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	ba$a	net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance
	m	(Lbuw;)Z	a	matches
	m	(Lby;)Lba$a;	a	usedItem
	m	(Lcau;)Lba$a;	a	usedItem
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	()Lba$a;	c	usedItem
	f	Lby;	a	item
c	bb	net/minecraft/advancements/critereon/CuredZombieVillagerTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lbmw;Lbnw;)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbb$a;	a	createInstance
	m	(Ldlc;Ldlc;Lbb$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	bb$a	net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Ldlc;Ldlc;)Z	a	matches
	m	()Lbb$a;	c	curedZombieVillager
	f	Lbo$b;	a	zombie
	f	Lbo$b;	b	villager
c	bc	net/minecraft/advancements/critereon/DamagePredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Ladx;Lawu;FFZ)Z	a	matches
	m	(Lcom/google/gson/JsonElement;)Lbc;	a	fromJson
	f	Lbc;	a	ANY
	f	Lcj$c;	b	dealtDamage
	f	Lcj$c;	c	takenDamage
	f	Lbo;	d	sourceEntity
	f	Ljava/lang/Boolean;	e	blocked
	f	Lbd;	f	type
c	bc$a	net/minecraft/advancements/critereon/DamagePredicate$Builder
	m	()Lbc$a;	a	damageInstance
	m	(Lbd$a;)Lbc$a;	a	type
	m	(Lbd;)Lbc$a;	a	type
	m	(Lbo;)Lbc$a;	a	sourceEntity
	m	(Lcj$c;)Lbc$a;	a	dealtDamage
	m	(Ljava/lang/Boolean;)Lbc$a;	a	blocked
	m	()Lbc;	b	build
	m	(Lcj$c;)Lbc$a;	b	takenDamage
	f	Lcj$c;	a	dealtDamage
	f	Lcj$c;	b	takenDamage
	f	Lbo;	c	sourceEntity
	f	Ljava/lang/Boolean;	d	blocked
	f	Lbd;	e	type
c	bd	net/minecraft/advancements/critereon/DamageSourcePredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Ladw;Ldpo;Lawu;)Z	a	matches
	m	(Ladx;Lawu;)Z	a	matches
	m	(Lcom/google/gson/JsonElement;)Lbd;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean;	a	getOptionalBoolean
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V	a	addOptionally
	f	Lbd;	a	ANY
	f	Ljava/lang/Boolean;	b	isProjectile
	f	Ljava/lang/Boolean;	c	isExplosion
	f	Ljava/lang/Boolean;	d	bypassesArmor
	f	Ljava/lang/Boolean;	e	bypassesInvulnerability
	f	Ljava/lang/Boolean;	f	bypassesMagic
	f	Ljava/lang/Boolean;	g	isFire
	f	Ljava/lang/Boolean;	h	isMagic
	f	Ljava/lang/Boolean;	i	isLightning
	f	Lbo;	j	directEntity
	f	Lbo;	k	sourceEntity
c	bd$a	net/minecraft/advancements/critereon/DamageSourcePredicate$Builder
	m	()Lbd$a;	a	damageType
	m	(Lbo$a;)Lbd$a;	a	direct
	m	(Lbo;)Lbd$a;	a	direct
	m	(Ljava/lang/Boolean;)Lbd$a;	a	isProjectile
	m	()Lbd;	b	build
	m	(Lbo$a;)Lbd$a;	b	source
	m	(Lbo;)Lbd$a;	b	source
	m	(Ljava/lang/Boolean;)Lbd$a;	b	isExplosion
	m	(Ljava/lang/Boolean;)Lbd$a;	c	bypassesArmor
	m	(Ljava/lang/Boolean;)Lbd$a;	d	bypassesInvulnerability
	m	(Ljava/lang/Boolean;)Lbd$a;	e	bypassesMagic
	m	(Ljava/lang/Boolean;)Lbd$a;	f	isFire
	m	(Ljava/lang/Boolean;)Lbd$a;	g	isMagic
	m	(Ljava/lang/Boolean;)Lbd$a;	h	isLightning
	f	Ljava/lang/Boolean;	a	isProjectile
	f	Ljava/lang/Boolean;	b	isExplosion
	f	Ljava/lang/Boolean;	c	bypassesArmor
	f	Ljava/lang/Boolean;	d	bypassesInvulnerability
	f	Ljava/lang/Boolean;	e	bypassesMagic
	f	Ljava/lang/Boolean;	f	isFire
	f	Ljava/lang/Boolean;	g	isMagic
	f	Ljava/lang/Boolean;	h	isLightning
	f	Lbo;	i	directEntity
	f	Lbo;	j	sourceEntity
c	be	net/minecraft/advancements/critereon/DeserializationContext
	m	()Lyt;	a	getAdvancementId
	m	(Lcom/google/gson/JsonArray;Ljava/lang/String;Ldnh;)[Ldnv;	a	deserializeConditions
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$deserializeConditions$1
	m	(Lyt;)Ldlf;	a	lambda$deserializeConditions$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lyt;	b	id
	f	Ldlh;	c	predicateManager
	f	Lcom/google/gson/Gson;	d	predicateGson
c	bf	net/minecraft/advancements/critereon/DistancePredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(DDDDDD)Z	a	matches
	m	(Lcj$c;)Lbf;	a	horizontal
	m	(Lcom/google/gson/JsonElement;)Lbf;	a	fromJson
	m	(Lcj$c;)Lbf;	b	vertical
	m	(Lcj$c;)Lbf;	c	absolute
	f	Lbf;	a	ANY
	f	Lcj$c;	b	x
	f	Lcj$c;	c	y
	f	Lcj$c;	d	z
	f	Lcj$c;	e	horizontal
	f	Lcj$c;	f	absolute
c	bg	net/minecraft/advancements/critereon/DistanceTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Ldpo;)V	a	trigger
	m	(Ladx;Ldpo;Ldpo;Lbg$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbg$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	id
c	bg$a	net/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance
	m	(Ladw;Ldpo;Ldpo;)Z	a	matches
	m	(Lbf;)Lbg$a;	a	travelledThroughNether
	m	(Lbo$a;Lbf;)Lbg$a;	a	rideEntityInLava
	m	(Lbo$a;Lbf;Lcg;)Lbg$a;	a	fallFromHeight
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lcg;	a	startPosition
	f	Lbf;	b	distance
c	bh	net/minecraft/advancements/critereon/EffectsChangedTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Laxk;)V	a	trigger
	m	(Ladx;Ldlc;Lbh$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbh$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	bh$a	net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance
	m	(Ladx;Ldlc;)Z	a	matches
	m	(Lbo;)Lbh$a;	a	gotEffectsFrom
	m	(Lck;)Lbh$a;	a	hasEffects
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lck;	a	effects
	f	Lbo$b;	b	source
c	bi	net/minecraft/advancements/critereon/EnchantedItemTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lbuw;I)V	a	trigger
	m	(Lbuw;ILbi$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbi$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	bi$a	net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance
	m	(Lbuw;I)Z	a	matches
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	()Lbi$a;	c	enchantedItem
	f	Lby;	a	item
	f	Lcj$d;	b	levels
c	bj	net/minecraft/advancements/critereon/EnchantmentPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lcom/google/gson/JsonElement;)Lbj;	a	fromJson
	m	(Ljava/util/Map;)Z	a	containedIn
	m	(Lyt;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$0
	m	(Lcom/google/gson/JsonElement;)[Lbj;	b	fromJsonArray
	f	Lbj;	a	ANY
	f	[Lbj;	b	NONE
	f	Lbyq;	c	enchantment
	f	Lcj$d;	d	level
c	bk	net/minecraft/advancements/critereon/EnterBlockTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lcov;)V	a	trigger
	m	(Lcdq;Ljava/lang/String;)V	a	lambda$createInstance$0
	m	(Lcom/google/gson/JsonObject;)Lcdq;	a	deserializeBlock
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbk$a;	a	createInstance
	m	(Lcov;Lbk$a;)Z	a	lambda$trigger$2
	m	(Lyt;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserializeBlock$1
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	bk$a	net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance
	m	(Lcdq;)Lbk$a;	a	entersBlock
	m	(Lcov;)Z	a	matches
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lcdq;	a	block
	f	Lcw;	b	state
c	bl	net/minecraft/advancements/critereon/EntityEquipmentPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laxk;)Z	a	matches
	m	(Lcom/google/gson/JsonElement;)Lbl;	a	fromJson
	f	Lbl;	a	ANY
	f	Lbl;	b	CAPTAIN
	f	Lby;	c	head
	f	Lby;	d	chest
	f	Lby;	e	legs
	f	Lby;	f	feet
	f	Lby;	g	mainhand
	f	Lby;	h	offhand
c	bl$a	net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder
	m	()Lbl$a;	a	equipment
	m	(Lby;)Lbl$a;	a	head
	m	()Lbl;	b	build
	m	(Lby;)Lbl$a;	b	chest
	m	(Lby;)Lbl$a;	c	legs
	m	(Lby;)Lbl$a;	d	feet
	m	(Lby;)Lbl$a;	e	mainhand
	m	(Lby;)Lbl$a;	f	offhand
	f	Lby;	a	head
	f	Lby;	b	chest
	f	Lby;	c	legs
	f	Lby;	d	feet
	f	Lby;	e	mainhand
	f	Lby;	f	offhand
c	bm	net/minecraft/advancements/critereon/EntityFlagsPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laxk;)Z	a	matches
	m	(Lcom/google/gson/JsonElement;)Lbm;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean;	a	getOptionalBoolean
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V	a	addOptionalBoolean
	f	Lbm;	a	ANY
	f	Ljava/lang/Boolean;	b	isOnFire
	f	Ljava/lang/Boolean;	c	isCrouching
	f	Ljava/lang/Boolean;	d	isSprinting
	f	Ljava/lang/Boolean;	e	isSwimming
	f	Ljava/lang/Boolean;	f	isBaby
c	bm$a	net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder
	m	()Lbm$a;	a	flags
	m	(Ljava/lang/Boolean;)Lbm$a;	a	setOnFire
	m	()Lbm;	b	build
	m	(Ljava/lang/Boolean;)Lbm$a;	b	setCrouching
	m	(Ljava/lang/Boolean;)Lbm$a;	c	setSprinting
	m	(Ljava/lang/Boolean;)Lbm$a;	d	setSwimming
	m	(Ljava/lang/Boolean;)Lbm$a;	e	setIsBaby
	f	Ljava/lang/Boolean;	a	isOnFire
	f	Ljava/lang/Boolean;	b	isCrouching
	f	Ljava/lang/Boolean;	c	isSprinting
	f	Ljava/lang/Boolean;	d	isSwimming
	f	Ljava/lang/Boolean;	e	isBaby
c	bn	net/minecraft/advancements/critereon/EntityHurtPlayerTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lawu;FFZ)V	a	trigger
	m	(Ladx;Lawu;FFZLbn$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbn$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	bn$a	net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance
	m	(Ladx;Lawu;FFZ)Z	a	matches
	m	(Lbc$a;)Lbn$a;	a	entityHurtPlayer
	m	(Lbc;)Lbn$a;	a	entityHurtPlayer
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	()Lbn$a;	c	entityHurtPlayer
	f	Lbc;	a	damage
c	bo	net/minecraft/advancements/critereon/EntityPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Ladw;Ldpo;Laxk;)Z	a	matches
	m	(Ladx;Laxk;)Z	a	matches
	m	(Lcom/google/gson/JsonElement;)Lbo;	a	fromJson
	m	(Ladw;Ldpo;Laxk;)Z	b	lambda$matches$0
	m	(Ladx;Laxk;)Ldlc;	b	createContext
	f	Lbo;	a	ANY
	f	Lbp;	b	entityType
	f	Lbf;	c	distanceToPlayer
	f	Lcg;	d	location
	f	Lcg;	e	steppingOnLocation
	f	Lck;	f	effects
	f	Lcl;	g	nbt
	f	Lbm;	h	flags
	f	Lbl;	i	equipment
	f	Lcp;	j	player
	f	Lbr;	k	fishingHook
	f	Lce;	l	lighthingBolt
	f	Lbo;	m	vehicle
	f	Lbo;	n	passenger
	f	Lbo;	o	targetedEntity
	f	Ljava/lang/String;	p	team
	f	Lyt;	q	catType
c	bo$a	net/minecraft/advancements/critereon/EntityPredicate$Builder
	m	()Lbo$a;	a	entity
	m	(Laif;)Lbo$a;	a	of
	m	(Laxo;)Lbo$a;	a	of
	m	(Lbf;)Lbo$a;	a	distance
	m	(Lbl;)Lbo$a;	a	equipment
	m	(Lbm;)Lbo$a;	a	flags
	m	(Lbo;)Lbo$a;	a	vehicle
	m	(Lbp;)Lbo$a;	a	entityType
	m	(Lbr;)Lbo$a;	a	fishingHook
	m	(Lce;)Lbo$a;	a	lighthingBolt
	m	(Lcg;)Lbo$a;	a	located
	m	(Lck;)Lbo$a;	a	effects
	m	(Lcl;)Lbo$a;	a	nbt
	m	(Lcp;)Lbo$a;	a	player
	m	(Ljava/lang/String;)Lbo$a;	a	team
	m	(Lyt;)Lbo$a;	a	of
	m	()Lbo;	b	build
	m	(Lbo;)Lbo$a;	b	passenger
	m	(Lcg;)Lbo$a;	b	steppingOn
	m	(Lyt;)Lbo$a;	b	catType
	m	(Lbo;)Lbo$a;	c	targetedEntity
	f	Lbp;	a	entityType
	f	Lbf;	b	distanceToPlayer
	f	Lcg;	c	location
	f	Lcg;	d	steppingOnLocation
	f	Lck;	e	effects
	f	Lcl;	f	nbt
	f	Lbm;	g	flags
	f	Lbl;	h	equipment
	f	Lcp;	i	player
	f	Lbr;	j	fishingHook
	f	Lce;	k	lighthingBolt
	f	Lbo;	l	vehicle
	f	Lbo;	m	passenger
	f	Lbo;	n	targetedEntity
	f	Ljava/lang/String;	o	team
	f	Lyt;	p	catType
c	bo$b	net/minecraft/advancements/critereon/EntityPredicate$Composite
	m	(Lbo;)Lbo$b;	a	wrap
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lbe;)Lbo$b;	a	fromJson
	m	(Lcr;)Lcom/google/gson/JsonElement;	a	toJson
	m	(Ldlc;)Z	a	matches
	m	(Ljava/lang/String;Lbe;Lcom/google/gson/JsonElement;)Lbo$b;	a	fromElement
	m	([Lbo$b;Lcr;)Lcom/google/gson/JsonElement;	a	toJson
	m	([Ldnv;)Lbo$b;	a	create
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lbe;)[Lbo$b;	b	fromJsonArray
	f	Lbo$b;	a	ANY
	f	[Ldnv;	b	conditions
	f	Ljava/util/function/Predicate;	c	compositePredicates
c	bp	net/minecraft/advancements/critereon/EntityTypePredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laif;)Lbp;	a	of
	m	(Laxo;)Z	a	matches
	m	(Lcom/google/gson/JsonElement;)Lbp;	a	fromJson
	m	(Lyt;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$0
	m	(Laxo;)Lbp;	b	of
	f	Lbp;	a	ANY
	f	Lcom/google/common/base/Joiner;	b	COMMA_JOINER
c	bp$1	net/minecraft/advancements/critereon/EntityTypePredicate$1
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laxo;)Z	a	matches
c	bp$a	net/minecraft/advancements/critereon/EntityTypePredicate$TagPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laxo;)Z	a	matches
	f	Laif;	b	tag
c	bp$b	net/minecraft/advancements/critereon/EntityTypePredicate$TypePredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laxo;)Z	a	matches
	f	Laxo;	b	type
c	bq	net/minecraft/advancements/critereon/FilledBucketTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lbuw;)V	a	trigger
	m	(Lbuw;Lbq$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbq$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	bq$a	net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance
	m	(Lbuw;)Z	a	matches
	m	(Lby;)Lbq$a;	a	filledBucket
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lby;	a	item
c	br	net/minecraft/advancements/critereon/FishingHookPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laxk;)Z	a	matches
	m	(Lcom/google/gson/JsonElement;)Lbr;	a	fromJson
	m	(Z)Lbr;	a	inOpenWater
	f	Lbr;	a	ANY
	f	Ljava/lang/String;	b	IN_OPEN_WATER_KEY
	f	Z	c	inOpenWater
c	bs	net/minecraft/advancements/critereon/FishingRodHookedTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lbuw;Lbov;Ljava/util/Collection;)V	a	trigger
	m	(Lbuw;Ldlc;Ljava/util/Collection;Lbs$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbs$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	bs$a	net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance
	m	(Lbuw;Ldlc;Ljava/util/Collection;)Z	a	matches
	m	(Lby;Lbo;Lby;)Lbs$a;	a	fishedItem
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lby;	a	rod
	f	Lbo$b;	b	entity
	f	Lby;	c	item
c	bt	net/minecraft/advancements/critereon/FluidPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Ladw;Lgj;)Z	a	matches
	m	(Lcom/google/gson/JsonElement;)Lbt;	a	fromJson
	f	Lbt;	a	ANY
	f	Laif;	b	tag
	f	Ldiw;	c	fluid
	f	Lcw;	d	properties
c	bt$a	net/minecraft/advancements/critereon/FluidPredicate$Builder
	m	()Lbt$a;	a	fluid
	m	(Laif;)Lbt$a;	a	of
	m	(Lcw;)Lbt$a;	a	setProperties
	m	(Ldiw;)Lbt$a;	a	of
	m	()Lbt;	b	build
	f	Ldiw;	a	fluid
	f	Laif;	b	fluids
	f	Lcw;	c	properties
c	bu	net/minecraft/advancements/critereon/ImpossibleTrigger
	m	()Lyt;	a	getId
	m	(Lcom/google/gson/JsonObject;Lbe;)Lan;	a	createInstance
	m	(Lzb;)V	a	removePlayerListeners
	m	(Lzb;Lam$a;)V	a	addPlayerListener
	m	(Lcom/google/gson/JsonObject;Lbe;)Lbu$a;	b	createInstance
	m	(Lzb;Lam$a;)V	b	removePlayerListener
	f	Lyt;	a	ID
c	bu$a	net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance
	m	()Lyt;	a	getCriterion
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
c	bv	net/minecraft/advancements/critereon/InventoryChangeTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lboi;Lbuw;)V	a	trigger
	m	(Ladx;Lboi;Lbuw;III)V	a	trigger
	m	(Lboi;Lbuw;IIILbv$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbv$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	bv$a	net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance
	m	(Lboi;Lbuw;III)Z	a	matches
	m	(Lbuw;Lby;)Z	a	lambda$matches$0
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	([Lby;)Lbv$a;	a	hasItems
	m	([Lcau;)Lbv$a;	a	hasItems
	f	Lcj$d;	a	slotsOccupied
	f	Lcj$d;	b	slotsFull
	f	Lcj$d;	c	slotsEmpty
	f	[Lby;	d	predicates
c	bw	net/minecraft/advancements/critereon/ItemDurabilityTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lbuw;I)V	a	trigger
	m	(Lbuw;ILbw$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbw$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	bw$a	net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance
	m	(Lbo$b;Lby;Lcj$d;)Lbw$a;	a	changedDurability
	m	(Lbuw;I)Z	a	matches
	m	(Lby;Lcj$d;)Lbw$a;	a	changedDurability
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lby;	a	item
	f	Lcj$d;	b	durability
	f	Lcj$d;	c	delta
c	bx	net/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lbuw;Laxk;)V	a	trigger
	m	(Ladx;Lbuw;Ldlc;Lbx$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbx$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	bx$a	net/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger$TriggerInstance
	m	(Ladx;Lbuw;Ldlc;)Z	a	matches
	m	(Lbo$b;Lby$a;Lbo$b;)Lbx$a;	a	itemPickedUpByEntity
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lby;	a	item
	f	Lbo$b;	b	entity
c	by	net/minecraft/advancements/critereon/ItemPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lbuw;)Z	a	matches
	m	(Lcom/google/gson/JsonElement;)Lby;	a	fromJson
	m	(Lyt;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$1
	m	(Lcom/google/gson/JsonElement;)[Lby;	b	fromJsonArray
	m	(Lyt;)Lcom/google/gson/JsonSyntaxException;	b	lambda$fromJson$0
	f	Lby;	a	ANY
	f	Laif;	b	tag
	f	Ljava/util/Set;	c	items
	f	Lcj$d;	d	count
	f	Lcj$d;	e	durability
	f	[Lbj;	f	enchantments
	f	[Lbj;	g	storedEnchantments
	f	Lbwr;	h	potion
	f	Lcl;	i	nbt
c	by$a	net/minecraft/advancements/critereon/ItemPredicate$Builder
	m	()Lby$a;	a	item
	m	(Laif;)Lby$a;	a	of
	m	(Lbj;)Lby$a;	a	hasEnchantment
	m	(Lbwr;)Lby$a;	a	isPotion
	m	(Lcj$d;)Lby$a;	a	withCount
	m	(Lok;)Lby$a;	a	hasNbt
	m	([Lcau;)Lby$a;	a	of
	m	()Lby;	b	build
	m	(Lbj;)Lby$a;	b	hasStoredEnchantment
	m	(Lcj$d;)Lby$a;	b	hasDurability
	f	Ljava/util/List;	a	enchantments
	f	Ljava/util/List;	b	storedEnchantments
	f	Ljava/util/Set;	c	items
	f	Laif;	d	tag
	f	Lcj$d;	e	count
	f	Lcj$d;	f	durability
	f	Lbwr;	g	potion
	f	Lcl;	h	nbt
c	bz	net/minecraft/advancements/critereon/ItemUsedOnBlockTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lgj;Lbuw;)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbz$a;	a	createInstance
	m	(Lcov;Ladx;Lgj;Lbuw;Lbz$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	bz$a	net/minecraft/advancements/critereon/ItemUsedOnBlockTrigger$TriggerInstance
	m	(Lcg$a;Lby$a;)Lbz$a;	a	itemUsedOnBlock
	m	(Lcov;Ladw;Lgj;Lbuw;)Z	a	matches
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lcg;	a	location
	f	Lby;	b	item
c	ca	net/minecraft/advancements/critereon/KilledByCrossbowTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Ljava/util/Collection;)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lca$a;	a	createInstance
	m	(Ljava/util/List;Ljava/util/Set;Lca$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	ca$a	net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance
	m	(Lcj$d;)Lca$a;	a	crossbowKilled
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Ljava/util/Collection;I)Z	a	matches
	m	([Lbo$a;)Lca$a;	a	crossbowKilled
	f	[Lbo$b;	a	victims
	f	Lcj$d;	b	uniqueEntityTypes
c	cb	net/minecraft/advancements/critereon/KilledTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Laxk;Lawu;)V	a	trigger
	m	(Ladx;Ldlc;Lawu;Lcb$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcb$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	id
c	cb$a	net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance
	m	(Ladx;Ldlc;Lawu;)Z	a	matches
	m	(Lbo$a;)Lcb$a;	a	playerKilledEntity
	m	(Lbo$a;Lbd$a;)Lcb$a;	a	playerKilledEntity
	m	(Lbo$a;Lbd;)Lcb$a;	a	playerKilledEntity
	m	(Lbo;)Lcb$a;	a	playerKilledEntity
	m	(Lbo;Lbd$a;)Lcb$a;	a	playerKilledEntity
	m	(Lbo;Lbd;)Lcb$a;	a	playerKilledEntity
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lbo$a;)Lcb$a;	b	entityKilledPlayer
	m	(Lbo$a;Lbd$a;)Lcb$a;	b	entityKilledPlayer
	m	(Lbo$a;Lbd;)Lcb$a;	b	entityKilledPlayer
	m	(Lbo;)Lcb$a;	b	entityKilledPlayer
	m	(Lbo;Lbd$a;)Lcb$a;	b	entityKilledPlayer
	m	(Lbo;Lbd;)Lcb$a;	b	entityKilledPlayer
	m	()Lcb$a;	c	playerKilledEntity
	m	()Lcb$a;	d	entityKilledPlayer
	f	Lbo$b;	a	entityPredicate
	f	Lbd;	b	killingBlow
c	cc	net/minecraft/advancements/critereon/LevitationTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Ldpo;I)V	a	trigger
	m	(Ladx;Ldpo;ILcc$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcc$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	cc$a	net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance
	m	(Ladx;Ldpo;I)Z	a	matches
	m	(Lbf;)Lcc$a;	a	levitated
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lbf;	a	distance
	f	Lcj$d;	b	duration
c	cd	net/minecraft/advancements/critereon/LightPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Ladw;Lgj;)Z	a	matches
	m	(Lcom/google/gson/JsonElement;)Lcd;	a	fromJson
	f	Lcd;	a	ANY
	f	Lcj$d;	b	composite
c	cd$a	net/minecraft/advancements/critereon/LightPredicate$Builder
	m	()Lcd$a;	a	light
	m	(Lcj$d;)Lcd$a;	a	setComposite
	m	()Lcd;	b	build
	f	Lcj$d;	a	composite
c	ce	net/minecraft/advancements/critereon/LighthingBoltPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Ladw;Ldpo;Laxk;)Z	a	lambda$matches$0
	m	(Laxk;Ladw;Ldpo;)Z	a	matches
	m	(Lcj$d;)Lce;	a	blockSetOnFire
	m	(Lcom/google/gson/JsonElement;)Lce;	a	fromJson
	f	Lce;	a	ANY
	f	Ljava/lang/String;	b	BLOCKS_SET_ON_FIRE_KEY
	f	Ljava/lang/String;	c	ENTITY_STRUCK_KEY
	f	Lcj$d;	d	blocksSetOnFire
	f	Lbo;	e	entityStruck
c	cf	net/minecraft/advancements/critereon/LightningStrikeTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Laxk;)Ldlc;	a	lambda$trigger$0
	m	(Ladx;Laxx;Ljava/util/List;)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcf$a;	a	createInstance
	m	(Ldlc;Ljava/util/List;Lcf$a;)Z	a	lambda$trigger$1
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	cf$a	net/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance
	m	(Lbo;Lbo;)Lcf$a;	a	lighthingStrike
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Ldlc;Ljava/util/List;)Z	a	matches
	f	Lbo$b;	a	lightning
	f	Lbo$b;	b	bystander
c	cg	net/minecraft/advancements/critereon/LocationPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Ladw;DDD)Z	a	matches
	m	(Lcj$c;)Lcg;	a	atYLocation
	m	(Lcom/google/gson/JsonElement;)Lcg;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonElement;)V	a	lambda$serializeToJson$0
	m	(Lys;)Lcg;	a	inBiome
	m	(Lyt;)Lys;	a	lambda$fromJson$2
	m	(Lys;)Lcg;	b	inDimension
	m	(Lyt;)Lys;	b	lambda$fromJson$1
	m	(Lys;)Lcg;	c	inFeature
	f	Lcg;	a	ANY
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcj$c;	c	x
	f	Lcj$c;	d	y
	f	Lcj$c;	e	z
	f	Lys;	f	biome
	f	Lys;	g	feature
	f	Lys;	h	dimension
	f	Ljava/lang/Boolean;	i	smokey
	f	Lcd;	j	light
	f	Lau;	k	block
	f	Lbt;	l	fluid
c	cg$a	net/minecraft/advancements/critereon/LocationPredicate$Builder
	m	()Lcg$a;	a	location
	m	(Lau;)Lcg$a;	a	setBlock
	m	(Lbt;)Lcg$a;	a	setFluid
	m	(Lcd;)Lcg$a;	a	setLight
	m	(Lcj$c;)Lcg$a;	a	setX
	m	(Ljava/lang/Boolean;)Lcg$a;	a	setSmokey
	m	(Lys;)Lcg$a;	a	setBiome
	m	()Lcg;	b	build
	m	(Lcj$c;)Lcg$a;	b	setY
	m	(Lys;)Lcg$a;	b	setFeature
	m	(Lcj$c;)Lcg$a;	c	setZ
	m	(Lys;)Lcg$a;	c	setDimension
	f	Lcj$c;	a	x
	f	Lcj$c;	b	y
	f	Lcj$c;	c	z
	f	Lys;	d	biome
	f	Lys;	e	feature
	f	Lys;	f	dimension
	f	Ljava/lang/Boolean;	g	smokey
	f	Lcd;	h	light
	f	Lau;	i	block
	f	Lbt;	j	fluid
c	ch	net/minecraft/advancements/critereon/LocationTrigger
	m	()Lyt;	a	getId
	m	(Ladx;)V	a	trigger
	m	(Ladx;Lch$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lch$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	id
c	ch$a	net/minecraft/advancements/critereon/LocationTrigger$TriggerInstance
	m	(Ladw;DDD)Z	a	matches
	m	(Lbo;)Lch$a;	a	located
	m	(Lcdq;Lbus;)Lch$a;	a	walkOnBlockWithEquipment
	m	(Lcg;)Lch$a;	a	located
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	()Lch$a;	c	sleptInBed
	m	()Lch$a;	d	raidWon
	f	Lcg;	a	location
c	ci	net/minecraft/advancements/critereon/LootTableTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lyt;)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lci$a;	a	createInstance
	m	(Lyt;Lci$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	ci$a	net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lyt;)Lci$a;	a	lootTableUsed
	m	(Lyt;)Z	b	matches
	f	Lyt;	a	lootTable
c	cj	net/minecraft/advancements/critereon/MinMaxBounds
	m	()Ljava/lang/Number;	a	getMin
	m	(Lcom/google/gson/JsonElement;Lcj;Ljava/util/function/BiFunction;Lcj$a;)Lcj;	a	fromJson
	m	(Lcom/mojang/brigadier/StringReader;)Z	a	isAllowedInputChat
	m	(Lcom/mojang/brigadier/StringReader;Lcj$b;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lcj;	a	fromReader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number;	a	readNumber
	m	(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;	a	optionallyFormat
	m	()Ljava/lang/Number;	b	getMax
	m	()Z	c	isAny
	m	()Lcom/google/gson/JsonElement;	d	serializeToJson
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_SWAPPED
	f	Ljava/lang/Number;	c	min
	f	Ljava/lang/Number;	d	max
c	cj$a	net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory
c	cj$b	net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory
c	cj$c	net/minecraft/advancements/critereon/MinMaxBounds$Doubles
	m	(D)Lcj$c;	a	exactly
	m	(DD)Lcj$c;	a	between
	m	(Lcom/google/gson/JsonElement;)Lcj$c;	a	fromJson
	m	(Lcom/mojang/brigadier/StringReader;)Lcj$c;	a	fromReader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Double;Ljava/lang/Double;)Lcj$c;	a	create
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lcj$c;	a	fromReader
	m	(Ljava/lang/Double;)Ljava/lang/Double;	a	squareOpt
	m	(D)Lcj$c;	b	atLeast
	m	(Ljava/lang/Double;)Ljava/lang/Double;	b	lambda$fromReader$0
	m	(D)Lcj$c;	c	atMost
	m	(D)Z	d	matches
	m	(D)Z	e	matchesSqr
	f	Lcj$c;	e	ANY
	f	Ljava/lang/Double;	f	minSq
	f	Ljava/lang/Double;	g	maxSq
c	cj$d	net/minecraft/advancements/critereon/MinMaxBounds$Ints
	m	(I)Lcj$d;	a	exactly
	m	(II)Lcj$d;	a	between
	m	(J)Z	a	matchesSqr
	m	(Lcom/google/gson/JsonElement;)Lcj$d;	a	fromJson
	m	(Lcom/mojang/brigadier/StringReader;)Lcj$d;	a	fromReader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lcj$d;	a	create
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lcj$d;	a	fromReader
	m	(Ljava/lang/Integer;)Ljava/lang/Long;	a	squareOpt
	m	(I)Lcj$d;	b	atLeast
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	b	lambda$fromReader$0
	m	(I)Lcj$d;	c	atMost
	m	(I)Z	d	matches
	f	Lcj$d;	e	ANY
	f	Ljava/lang/Long;	f	minSq
	f	Ljava/lang/Long;	g	maxSq
c	ck	net/minecraft/advancements/critereon/MobEffectsPredicate
	m	()Lck;	a	effects
	m	(Laxc;)Lck;	a	and
	m	(Laxc;Lck$a;)Lck;	a	and
	m	(Laxk;)Z	a	matches
	m	(Laxy;)Z	a	matches
	m	(Lcom/google/gson/JsonElement;)Lck;	a	fromJson
	m	(Ljava/util/Map;)Z	a	matches
	m	(Lyt;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$0
	m	()Lcom/google/gson/JsonElement;	b	serializeToJson
	f	Lck;	a	ANY
	f	Ljava/util/Map;	b	effects
c	ck$a	net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laxe;)Z	a	matches
	m	(Lcom/google/gson/JsonObject;)Lck$a;	a	fromJson
	f	Lcj$d;	a	amplifier
	f	Lcj$d;	b	duration
	f	Ljava/lang/Boolean;	c	ambient
	f	Ljava/lang/Boolean;	d	visible
c	cl	net/minecraft/advancements/critereon/NbtPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laxk;)Z	a	matches
	m	(Lbuw;)Z	a	matches
	m	(Lcom/google/gson/JsonElement;)Lcl;	a	fromJson
	m	(Lpd;)Z	a	matches
	m	(Laxk;)Lok;	b	getEntityTagToCompare
	f	Lcl;	a	ANY
	f	Lok;	b	tag
c	cm	net/minecraft/advancements/critereon/PlacedBlockTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lgj;Lbuw;)V	a	trigger
	m	(Lcdq;Ljava/lang/String;)V	a	lambda$createInstance$0
	m	(Lcom/google/gson/JsonObject;)Lcdq;	a	deserializeBlock
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcm$a;	a	createInstance
	m	(Lcov;Lgj;Ladx;Lbuw;Lcm$a;)Z	a	lambda$trigger$2
	m	(Lyt;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserializeBlock$1
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	cm$a	net/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance
	m	(Lcdq;)Lcm$a;	a	placedBlock
	m	(Lcov;Lgj;Ladw;Lbuw;)Z	a	matches
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lcdq;	a	block
	f	Lcw;	b	state
	f	Lcg;	c	location
	f	Lby;	d	item
c	cn	net/minecraft/advancements/critereon/PlayerHurtEntityTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Laxk;Lawu;FFZ)V	a	trigger
	m	(Ladx;Ldlc;Lawu;FFZLcn$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcn$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	cn$a	net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance
	m	(Ladx;Ldlc;Lawu;FFZ)Z	a	matches
	m	(Lbc$a;)Lcn$a;	a	playerHurtEntity
	m	(Lbc$a;Lbo;)Lcn$a;	a	playerHurtEntity
	m	(Lbc;)Lcn$a;	a	playerHurtEntity
	m	(Lbc;Lbo;)Lcn$a;	a	playerHurtEntity
	m	(Lbo;)Lcn$a;	a	playerHurtEntity
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	()Lcn$a;	c	playerHurtEntity
	f	Lbc;	a	damage
	f	Lbo$b;	b	entity
c	co	net/minecraft/advancements/critereon/PlayerInteractTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lbuw;Laxk;)V	a	trigger
	m	(Lbuw;Ldlc;Lco$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lco$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	co$a	net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance
	m	(Lbo$b;Lby$a;Lbo$b;)Lco$a;	a	itemUsedOnEntity
	m	(Lbuw;Ldlc;)Z	a	matches
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lby;	a	item
	f	Lbo$b;	b	entity
c	cp	net/minecraft/advancements/critereon/PlayerPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lahr;)Lyt;	a	getStatValueId
	m	(Laht;Lyt;)Lahr;	a	getStat
	m	(Laxk;)Z	a	matches
	m	(Lcom/google/gson/JsonArray;Lahr;Lcj$d;)V	a	lambda$serializeToJson$2
	m	(Lcom/google/gson/JsonElement;)Lcp;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lyt;Lcp$c;)V	a	lambda$serializeToJson$4
	m	(Lcom/google/gson/JsonObject;Lyt;Ljava/lang/Boolean;)V	a	lambda$serializeToJson$3
	m	(Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map$Entry;)V	a	lambda$advancementPredicateFromJson$0
	m	(Laxk;)Z	b	lambda$matches$1
	m	(Lcom/google/gson/JsonElement;)Lcp$c;	b	advancementPredicateFromJson
	f	Lcp;	a	ANY
	f	I	b	LOOKING_AT_RANGE
	f	Lcj$d;	c	level
	f	Lcas;	d	gameType
	f	Ljava/util/Map;	e	stats
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	f	recipes
	f	Ljava/util/Map;	g	advancements
	f	Lbo;	h	lookingAt
c	cp$a	net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lah;)Z	a	test
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	a	criterions
c	cp$b	net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lah;)Z	a	test
	f	Z	a	state
c	cp$c	net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate
	m	()Lcom/google/gson/JsonElement;	a	toJson
c	cp$d	net/minecraft/advancements/critereon/PlayerPredicate$Builder
	m	()Lcp$d;	a	player
	m	(Lahr;Lcj$d;)Lcp$d;	a	addStat
	m	(Lbo;)Lcp$d;	a	setLookingAt
	m	(Lcas;)Lcp$d;	a	setGameType
	m	(Lcj$d;)Lcp$d;	a	setLevel
	m	(Lyt;Ljava/util/Map;)Lcp$d;	a	checkAdvancementCriterions
	m	(Lyt;Z)Lcp$d;	a	addRecipe
	m	()Lcp;	b	build
	m	(Lyt;Z)Lcp$d;	b	checkAdvancementDone
	f	Lcj$d;	a	level
	f	Lcas;	b	gameType
	f	Ljava/util/Map;	c	stats
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	d	recipes
	f	Ljava/util/Map;	e	advancements
	f	Lbo;	f	lookingAt
c	cq	net/minecraft/advancements/critereon/RecipeUnlockedTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lbxo;)V	a	trigger
	m	(Lbxo;Lcq$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcq$a;	a	createInstance
	m	(Lyt;)Lcq$a;	a	unlocked
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	cq$a	net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance
	m	(Lbxo;)Z	a	matches
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lyt;	a	recipe
c	cr	net/minecraft/advancements/critereon/SerializationContext
	m	([Ldnv;)Lcom/google/gson/JsonElement;	a	serializeConditions
	f	Lcr;	a	INSTANCE
	f	Lcom/google/gson/Gson;	b	predicateGson
c	cs	net/minecraft/advancements/critereon/ShotCrossbowTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lbuw;)V	a	trigger
	m	(Lbuw;Lcs$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcs$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	cs$a	net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance
	m	(Lbuw;)Z	a	matches
	m	(Lby;)Lcs$a;	a	shotCrossbow
	m	(Lcau;)Lcs$a;	a	shotCrossbow
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lby;	a	item
c	ct	net/minecraft/advancements/critereon/SimpleCriterionTrigger
	m	(Ladx;Ljava/util/function/Predicate;)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbe;)Lan;	a	createInstance
	m	(Lzb;)V	a	removePlayerListeners
	m	(Lzb;Lam$a;)V	a	addPlayerListener
	m	(Lcom/google/gson/JsonObject;Lbe;)Las;	b	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	m	(Lzb;)Ljava/util/Set;	b	lambda$addPlayerListener$0
	m	(Lzb;Lam$a;)V	b	removePlayerListener
	f	Ljava/util/Map;	a	players
c	cu	net/minecraft/advancements/critereon/SlideDownBlockTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lcov;)V	a	trigger
	m	(Lcdq;Ljava/lang/String;)V	a	lambda$createInstance$0
	m	(Lcom/google/gson/JsonObject;)Lcdq;	a	deserializeBlock
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcu$a;	a	createInstance
	m	(Lcov;Lcu$a;)Z	a	lambda$trigger$2
	m	(Lyt;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserializeBlock$1
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	cu$a	net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance
	m	(Lcdq;)Lcu$a;	a	slidesDownBlock
	m	(Lcov;)Z	a	matches
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lcdq;	a	block
	f	Lcw;	b	state
c	cv	net/minecraft/advancements/critereon/StartRidingTrigger
	m	()Lyt;	a	getId
	m	(Ladx;)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcv$a;	a	createInstance
	m	(Lcv$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	cv$a	net/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance
	m	(Lbo$a;)Lcv$a;	a	playerStartsRiding
c	cw	net/minecraft/advancements/critereon/StatePropertiesPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lcom/google/gson/JsonElement;)Lcw;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcw$c;)V	a	lambda$serializeToJson$1
	m	(Lcov;)Z	a	matches
	m	(Lcow;Lcox;)Z	a	matches
	m	(Lcow;Ljava/util/function/Consumer;)V	a	checkState
	m	(Lcow;Ljava/util/function/Consumer;Lcw$c;)V	a	lambda$checkState$0
	m	(Ldix;)Z	a	matches
	m	(Ljava/lang/String;Lcom/google/gson/JsonElement;)Lcw$c;	a	fromJson
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	b	getStringOrNull
	f	Lcw;	a	ANY
	f	Ljava/util/List;	b	properties
c	cw$a	net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder
	m	()Lcw$a;	a	properties
	m	(Lcpy;I)Lcw$a;	a	hasProperty
	m	(Lcpy;Ljava/lang/Comparable;)Lcw$a;	a	hasProperty
	m	(Lcpy;Ljava/lang/String;)Lcw$a;	a	hasProperty
	m	(Lcpy;Z)Lcw$a;	a	hasProperty
	m	()Lcw;	b	build
	f	Ljava/util/List;	a	matchers
c	cw$b	net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactPropertyMatcher
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lcox;Lcpy;)Z	a	match
	f	Ljava/lang/String;	a	value
c	cw$c	net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lcow;Lcox;)Z	a	match
	m	(Lcow;Ljava/util/function/Consumer;)V	a	checkState
	m	(Lcox;Lcpy;)Z	a	match
	m	()Ljava/lang/String;	b	getName
	f	Ljava/lang/String;	a	name
c	cw$d	net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedPropertyMatcher
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lcox;Lcpy;)Z	a	match
	f	Ljava/lang/String;	a	minValue
	f	Ljava/lang/String;	b	maxValue
c	cx	net/minecraft/advancements/critereon/SummonedEntityTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Laxk;)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcx$a;	a	createInstance
	m	(Ldlc;Lcx$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	cx$a	net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance
	m	(Lbo$a;)Lcx$a;	a	summonedEntity
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Ldlc;)Z	a	matches
	f	Lbo$b;	a	entity
c	cy	net/minecraft/advancements/critereon/TameAnimalTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lbid;)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcy$a;	a	createInstance
	m	(Ldlc;Lcy$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	cy$a	net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance
	m	(Lbo;)Lcy$a;	a	tamedAnimal
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Ldlc;)Z	a	matches
	m	()Lcy$a;	c	tamedAnimal
	f	Lbo$b;	a	entity
c	cz	net/minecraft/advancements/critereon/TargetBlockTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Laxk;Ldpo;I)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcz$a;	a	createInstance
	m	(Ldlc;Ldpo;ILcz$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	cz$a	net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance
	m	(Lcj$d;Lbo$b;)Lcz$a;	a	targetHit
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Ldlc;Ldpo;I)Z	a	matches
	f	Lcj$d;	a	signalStrength
	f	Lbo$b;	b	projectile
c	da	net/minecraft/advancements/critereon/TickTrigger
	m	()Lyt;	a	getId
	m	(Ladx;)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lda$a;	a	createInstance
	m	(Lda$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	da$a	net/minecraft/advancements/critereon/TickTrigger$TriggerInstance
c	db	net/minecraft/advancements/critereon/TradeTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lbnr;Lbuw;)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Ldb$a;	a	createInstance
	m	(Ldlc;Lbuw;Ldb$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	db$a	net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance
	m	(Lbo$a;)Ldb$a;	a	tradedWithVillager
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Ldlc;Lbuw;)Z	a	matches
	m	()Ldb$a;	c	tradedWithVillager
	f	Lbo$b;	a	villager
	f	Lby;	b	item
c	dc	net/minecraft/advancements/critereon/UsedEnderEyeTrigger
	m	()Lyt;	a	getId
	m	(DLdc$a;)Z	a	lambda$trigger$0
	m	(Ladx;Lgj;)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Ldc$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	dc$a	net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance
	m	(D)Z	a	matches
	f	Lcj$c;	a	level
c	dd	net/minecraft/advancements/critereon/UsedTotemTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lbuw;)V	a	trigger
	m	(Lbuw;Ldd$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Ldd$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	dd$a	net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance
	m	(Lbuw;)Z	a	matches
	m	(Lby;)Ldd$a;	a	usedTotem
	m	(Lcau;)Ldd$a;	a	usedTotem
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lby;	a	item
c	de	net/minecraft/advancements/critereon/UsingItemTrigger
	m	()Lyt;	a	getId
	m	(Ladx;Lbuw;)V	a	trigger
	m	(Lbuw;Lde$a;)Z	a	lambda$trigger$0
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lde$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
	f	Lyt;	a	ID
c	de$a	net/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance
	m	(Lbo$a;Lby$a;)Lde$a;	a	lookingAt
	m	(Lbuw;)Z	a	matches
	m	(Lcr;)Lcom/google/gson/JsonObject;	a	serializeToJson
	f	Lby;	a	item
c	df	net/minecraft/advancements/critereon/WrappedMinMaxBounds
	m	()Ljava/lang/Float;	a	getMin
	m	(D)Z	a	matchesSqr
	m	(F)Ldf;	a	exactly
	m	(FF)Ldf;	a	between
	m	(Lcom/google/gson/JsonElement;)Ldf;	a	fromJson
	m	(Lcom/mojang/brigadier/StringReader;Z)Ldf;	a	fromReader
	m	(Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Ldf;	a	fromReader
	m	(Ljava/lang/Float;)Ljava/lang/Float;	a	lambda$fromReader$0
	m	(Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float;	a	optionallyFormat
	m	()Ljava/lang/Float;	b	getMax
	m	(F)Ldf;	b	atLeast
	m	(Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float;	b	readNumber
	m	()Lcom/google/gson/JsonElement;	c	serializeToJson
	m	(F)Ldf;	c	atMost
	m	(Lcom/mojang/brigadier/StringReader;Z)Z	c	isAllowedNumber
	m	(F)Z	d	matches
	f	Ldf;	a	ANY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INTS_ONLY
	f	Ljava/lang/Float;	c	min
	f	Ljava/lang/Float;	d	max
c	dg	net/minecraft/advancements/critereon/package-info
c	dh	net/minecraft/advancements/package-info
c	di	net/minecraft/commands/BrigadierExceptions
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$16
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$7
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$15
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$6
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$14
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$5
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$13
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$4
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$12
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$3
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	lambda$static$11
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	lambda$static$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	lambda$static$10
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	lambda$static$9
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	lambda$static$0
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	i	lambda$static$8
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	A	DISPATCHER_PARSE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	DOUBLE_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	DOUBLE_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	FLOAT_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	FLOAT_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	INTEGER_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	INTEGER_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	g	LONG_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	h	LONG_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	LITERAL_INCORRECT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	READER_EXPECTED_START_OF_QUOTE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	READER_EXPECTED_END_OF_QUOTE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	l	READER_INVALID_ESCAPE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	m	READER_INVALID_BOOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	n	READER_INVALID_INT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	o	READER_EXPECTED_INT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	p	READER_INVALID_LONG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	q	READER_EXPECTED_LONG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	r	READER_INVALID_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	s	READER_EXPECTED_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	t	READER_INVALID_FLOAT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	u	READER_EXPECTED_FLOAT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	v	READER_EXPECTED_BOOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	w	READER_EXPECTED_SYMBOL
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	x	DISPATCHER_UNKNOWN_COMMAND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	y	DISPATCHER_UNKNOWN_ARGUMENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	z	DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR
c	dj	net/minecraft/commands/CommandFunction
	m	()Lyt;	a	getId
	m	(Lyt;Lcom/mojang/brigadier/CommandDispatcher;Ldm;Ljava/util/List;)Ldj;	a	fromLines
	m	()[Ldj$c;	b	getEntries
	f	[Ldj$c;	a	entries
	f	Lyt;	b	id
c	dj$a	net/minecraft/commands/CommandFunction$CacheableFunction
	m	()Lyt;	a	getId
	m	(Ldj;)Lyt;	a	lambda$getId$0
	m	(Lzg;)Ljava/util/Optional;	a	get
	f	Ldj$a;	a	NONE
	f	Lyt;	b	id
	f	Z	c	resolved
	f	Ljava/util/Optional;	d	function
c	dj$b	net/minecraft/commands/CommandFunction$CommandEntry
	m	(Lzg;Ldm;)I	a	execute
	f	Lcom/mojang/brigadier/ParseResults;	a	parse
c	dj$c	net/minecraft/commands/CommandFunction$Entry
c	dj$d	net/minecraft/commands/CommandFunction$FunctionEntry
	m	(Lzg$c;I)V	a	lambda$execute$1
	m	(Lzg$c;IILjava/util/Deque;Ldm;Ldj;)V	a	lambda$execute$0
	f	Ldj$a;	a	function
c	dk	net/minecraft/commands/CommandRuntimeException
	m	()Lqk;	a	getComponent
	f	Lqk;	a	message
c	dl	net/minecraft/commands/CommandSource
	m	()Z	G_	shouldInformAdmins
	m	(Lqk;Ljava/util/UUID;)V	a	sendMessage
	m	()Z	d_	alwaysAccepts
	m	()Z	i_	acceptsSuccess
	m	()Z	j_	acceptsFailure
	f	Ldl;	a	NULL
c	dl$1	net/minecraft/commands/CommandSource$1
	m	()Z	G_	shouldInformAdmins
	m	(Lqk;Ljava/util/UUID;)V	a	sendMessage
	m	()Z	i_	acceptsSuccess
	m	()Z	j_	acceptsFailure
c	dm	net/minecraft/commands/CommandSourceStack
	m	()Ldm;	a	withSuppressedOutput
	m	(I)Ldm;	a	withPermission
	m	(Ladw;)Ldm;	a	withLevel
	m	(Laxk;)Ldm;	a	withEntity
	m	(Laxk;Ldv$a;)Ldm;	a	facing
	m	(Lcom/mojang/brigadier/ResultConsumer;)Ldm;	a	withCallback
	m	(Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Ldm;	a	withCallback
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	customSuggestion
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	onCommandComplete
	m	(Ldl;)Ldm;	a	withSource
	m	(Ldp$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	a	lambda$suggestRegistryElements$1
	m	(Ldpn;)Ldm;	a	withRotation
	m	(Ldpo;)Ldm;	a	withPosition
	m	(Ldv$a;)Ldm;	a	withAnchor
	m	(Lqk;)V	a	sendFailure
	m	(Lqk;Z)V	a	sendSuccess
	m	(Lys;Ldp$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	suggestRegistryElements
	m	()Lqk;	b	getDisplayName
	m	(I)Ldm;	b	withMaximumPermission
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	b	lambda$new$0
	m	(Ldpo;)Ldm;	b	facing
	m	(Lqk;)V	b	broadcastToAdmins
	m	()Ljava/lang/String;	c	getTextName
	m	(I)Z	c	hasPermission
	m	()Ldpo;	d	getPosition
	m	()Ladw;	e	getLevel
	m	()Laxk;	f	getEntity
	m	()Laxk;	g	getEntityOrException
	m	()Ladx;	h	getPlayerOrException
	m	()Ldpn;	i	getRotation
	m	()Lnet/minecraft/server/MinecraftServer;	j	getServer
	m	()Ldv$a;	k	getAnchor
	m	()Ljava/util/Collection;	l	getOnlinePlayerNames
	m	()Ljava/util/Collection;	m	getAllTeams
	m	()Ljava/util/Collection;	n	getAvailableSoundEvents
	m	()Ljava/util/stream/Stream;	o	getRecipeNames
	m	()Ljava/util/Set;	p	levels
	m	()Lhc;	q	registryAccess
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_PLAYER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_ENTITY
	f	Ldl;	c	source
	f	Ldpo;	d	worldPosition
	f	Ladw;	e	level
	f	I	f	permissionLevel
	f	Ljava/lang/String;	g	textName
	f	Lqk;	h	displayName
	f	Lnet/minecraft/server/MinecraftServer;	i	server
	f	Z	j	silent
	f	Laxk;	k	entity
	f	Lcom/mojang/brigadier/ResultConsumer;	l	consumer
	f	Ldv$a;	m	anchor
	f	Ldpn;	n	rotation
c	dn	net/minecraft/commands/Commands
	m	()Lcom/mojang/brigadier/CommandDispatcher;	a	getDispatcher
	m	(Ladx;)V	a	sendCommands
	m	(Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	getParseException
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Ljava/lang/String;	a	lambda$validate$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$fillUsableCommands$5
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$new$1
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Collection;)V	a	lambda$new$0
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Ldm;Ljava/util/Map;)V	a	fillUsableCommands
	m	(Ldm;Ljava/lang/String;)I	a	performCommand
	m	(Ldn$b;)Ljava/util/function/Predicate;	a	createValidator
	m	(Ldn$b;Ljava/lang/String;)Z	a	lambda$createValidator$6
	m	(Ldp;)Z	a	lambda$fillUsableCommands$4
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	literal
	m	(Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;	a	argument
	m	(Ljava/lang/String;Lqu;)Lqu;	a	lambda$performCommand$2
	m	(Lqq;Lqu;)Lqu;	a	lambda$performCommand$3
	m	()V	b	validate
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Z	b	lambda$validate$7
	f	I	a	LEVEL_ALL
	f	I	b	LEVEL_MODERATORS
	f	I	c	LEVEL_GAMEMASTERS
	f	I	d	LEVEL_ADMINS
	f	I	e	LEVEL_OWNERS
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Lcom/mojang/brigadier/CommandDispatcher;	g	dispatcher
c	dn$a	net/minecraft/commands/Commands$CommandSelection
	m	()[Ldn$a;	a	$values
	f	Ldn$a;	a	ALL
	f	Ldn$a;	b	DEDICATED
	f	Ldn$a;	c	INTEGRATED
	f	Z	d	includeIntegrated
	f	Z	e	includeDedicated
	f	[Ldn$a;	f	$VALUES
c	dn$b	net/minecraft/commands/Commands$ParseFunction
c	dp	net/minecraft/commands/SharedSuggestionProvider
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	customSuggestion
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;Lyt;)V	a	lambda$suggestResource$1
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)V	a	lambda$suggestResource$4
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lyt;)V	a	lambda$suggestResource$3
	m	(Lhb;Ldp$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	suggestRegistryElements
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
	m	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	a	filterResources
	m	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	a	filterResources
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	matchesSubStr
	m	(Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;	a	suggestCoordinates
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
	m	(Lys;Ldp$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	suggestRegistryElements
	m	(Lyt;)Lyt;	a	lambda$suggestResource$2
	m	([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggest
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggest
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	b	suggest
	m	(Ljava/lang/String;Ljava/lang/String;)Z	b	lambda$suggest$5
	m	(Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;	b	suggest2DCoordinates
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggest
	m	(Lyt;)Lyt;	b	lambda$suggestResource$0
	m	(I)Z	c	hasPermission
	m	()Ljava/util/Collection;	l	getOnlinePlayerNames
	m	()Ljava/util/Collection;	m	getAllTeams
	m	()Ljava/util/Collection;	n	getAvailableSoundEvents
	m	()Ljava/util/stream/Stream;	o	getRecipeNames
	m	()Ljava/util/Set;	p	levels
	m	()Lhc;	q	registryAccess
	m	()Ljava/util/Collection;	r	getSelectedEntities
	m	()Ljava/util/Collection;	s	getRelevantCoordinates
	m	()Ljava/util/Collection;	t	getAbsoluteCoordinates
c	dp$a	net/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType
	m	()Z	a	shouldSuggestTags
	m	()Z	b	shouldSuggestElements
	m	()[Ldp$a;	c	$values
	f	Ldp$a;	a	TAGS
	f	Ldp$a;	b	ELEMENTS
	f	Ldp$a;	c	ALL
	f	[Ldp$a;	d	$VALUES
c	dp$b	net/minecraft/commands/SharedSuggestionProvider$TextCoordinates
	f	Ldp$b;	a	DEFAULT_LOCAL
	f	Ldp$b;	b	DEFAULT_GLOBAL
	f	Ljava/lang/String;	c	x
	f	Ljava/lang/String;	d	y
	f	Ljava/lang/String;	e	z
c	dq	net/minecraft/commands/arguments/AngleArgument
	m	()Ldq;	a	angle
	m	(Lcom/mojang/brigadier/StringReader;)Ldq$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F	a	getAngle
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_ANGLE
	f	Ljava/util/Collection;	c	EXAMPLES
c	dq$a	net/minecraft/commands/arguments/AngleArgument$SingleAngle
	m	(Ldm;)F	a	getAngle
	f	F	a	angle
	f	Z	b	isRelative
c	dr	net/minecraft/commands/arguments/ColorArgument
	m	()Ldr;	a	color
	m	(Lcom/mojang/brigadier/StringReader;)Lp;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lp;	a	getColor
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Ljava/util/Collection;	b	EXAMPLES
c	ds	net/minecraft/commands/arguments/ComponentArgument
	m	()Lds;	a	textComponent
	m	(Lcom/mojang/brigadier/StringReader;)Lqk;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lqk;	a	getComponent
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_JSON
	f	Ljava/util/Collection;	b	EXAMPLES
c	dt	net/minecraft/commands/arguments/CompoundTagArgument
	m	()Ldt;	a	compoundTag
	m	(Lcom/mojang/brigadier/StringReader;)Lok;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lok;	a	getCompoundTag
	f	Ljava/util/Collection;	a	EXAMPLES
c	du	net/minecraft/commands/arguments/DimensionArgument
	m	()Ldu;	a	dimension
	m	(Lcom/mojang/brigadier/StringReader;)Lyt;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ladw;	a	getDimension
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Lys;)Ljava/lang/String;	a	lambda$static$0
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID_VALUE
c	dv	net/minecraft/commands/arguments/EntityAnchorArgument
	m	()Ldv;	a	anchor
	m	(Lcom/mojang/brigadier/StringReader;)Ldv$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldv$a;	a	getAnchor
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID
c	dv$a	net/minecraft/commands/arguments/EntityAnchorArgument$Anchor
	m	()[Ldv$a;	a	$values
	m	(Laxk;)Ldpo;	a	apply
	m	(Ldm;)Ldpo;	a	apply
	m	(Ldpo;Laxk;)Ldpo;	a	lambda$static$1
	m	(Ljava/lang/String;)Ldv$a;	a	getByName
	m	(Ljava/util/HashMap;)V	a	lambda$static$2
	m	(Ldpo;Laxk;)Ldpo;	b	lambda$static$0
	f	Ldv$a;	a	FEET
	f	Ldv$a;	b	EYES
	f	Ljava/util/Map;	c	BY_NAME
	f	Ljava/lang/String;	d	name
	f	Ljava/util/function/BiFunction;	e	transform
	f	[Ldv$a;	f	$VALUES
c	dw	net/minecraft/commands/arguments/EntityArgument
	m	()Ldw;	a	entity
	m	(Lcom/mojang/brigadier/StringReader;)Lfp;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laxk;	a	getEntity
	m	(Ldp;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	lambda$listSuggestions$0
	m	()Ldw;	b	entities
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	b	getEntities
	m	()Ldw;	c	player
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	c	getOptionalEntities
	m	()Ldw;	d	players
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	d	getOptionalPlayers
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ladx;	e	getPlayer
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	f	getPlayers
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_SINGLE_ENTITY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_SINGLE_PLAYER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ONLY_PLAYERS_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	NO_ENTITIES_FOUND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	NO_PLAYERS_FOUND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_SELECTORS_NOT_ALLOWED
	f	Ljava/util/Collection;	g	EXAMPLES
	f	B	h	FLAG_SINGLE
	f	B	i	FLAG_PLAYERS_ONLY
	f	Z	j	single
	f	Z	k	playersOnly
c	dw$a	net/minecraft/commands/arguments/EntityArgument$Serializer
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lpy;)V	a	serializeToNetwork
	m	(Ldw;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Ldw;Lpy;)V	a	serializeToNetwork
	m	(Lpy;)Ldw;	a	deserializeFromNetwork
	m	(Lpy;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	deserializeFromNetwork
c	dx	net/minecraft/commands/arguments/EntitySummonArgument
	m	()Ldx;	a	id
	m	(Lcom/mojang/brigadier/StringReader;)Lyt;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lyt;	a	getSummonableEntity
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	(Lyt;)Lyt;	a	verifyCanSummon
	m	(Lyt;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$verifyCanSummon$1
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_ENTITY
	f	Ljava/util/Collection;	b	EXAMPLES
c	dy	net/minecraft/commands/arguments/GameProfileArgument
	m	()Ldy;	a	gameProfile
	m	(Lcom/mojang/brigadier/StringReader;)Ldy$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	lambda$listSuggestions$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getGameProfiles
	m	(Ljava/lang/String;Ldm;)Ljava/util/Collection;	a	lambda$parse$0
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_UNKNOWN_PLAYER
	f	Ljava/util/Collection;	b	EXAMPLES
c	dy$a	net/minecraft/commands/arguments/GameProfileArgument$Result
c	dy$b	net/minecraft/commands/arguments/GameProfileArgument$SelectorResult
	f	Lfp;	a	selector
c	dz	net/minecraft/commands/arguments/ItemEnchantmentArgument
	m	()Ldz;	a	enchantment
	m	(Lcom/mojang/brigadier/StringReader;)Lbyq;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbyq;	a	getEnchantment
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	(Lyt;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$1
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_ENCHANTMENT
	f	Ljava/util/Collection;	b	EXAMPLES
c	ea	net/minecraft/commands/arguments/MessageArgument
	m	()Lea;	a	message
	m	(Lcom/mojang/brigadier/StringReader;)Lea$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lqk;	a	getMessage
	f	Ljava/util/Collection;	a	EXAMPLES
c	ea$a	net/minecraft/commands/arguments/MessageArgument$Message
	m	()Ljava/lang/String;	a	getText
	m	(Lcom/mojang/brigadier/StringReader;Z)Lea$a;	a	parseText
	m	(Ldm;Z)Lqk;	a	toComponent
	m	()[Lea$b;	b	getParts
	f	Ljava/lang/String;	a	text
	f	[Lea$b;	b	parts
c	ea$b	net/minecraft/commands/arguments/MessageArgument$Part
	m	()I	a	getStart
	m	(Ldm;)Lqk;	a	toComponent
	m	()I	b	getEnd
	m	()Lfp;	c	getSelector
	f	I	a	start
	f	I	b	end
	f	Lfp;	c	selector
c	eb	net/minecraft/commands/arguments/MobEffectArgument
	m	()Leb;	a	effect
	m	(Lcom/mojang/brigadier/StringReader;)Laxc;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laxc;	a	getEffect
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	(Lyt;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$1
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_EFFECT
	f	Ljava/util/Collection;	b	EXAMPLES
c	ec	net/minecraft/commands/arguments/NbtPathArgument
	m	()Lec;	a	nbtPath
	m	(C)Z	a	isAllowedInUnquotedName
	m	(Lcom/mojang/brigadier/StringReader;)Lec$g;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lec$h;	a	readObjectNode
	m	(Lcom/mojang/brigadier/StringReader;Z)Lec$h;	a	parseNode
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lec$g;	a	getPath
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	(Lok;)Ljava/util/function/Predicate;	a	createTagPredicate
	m	(Lok;Lpd;)Z	a	lambda$createTagPredicate$1
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	b	readUnquotedName
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID_NODE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NOTHING_FOUND
	f	Ljava/util/Collection;	c	EXAMPLES
	f	C	d	INDEX_MATCH_START
	f	C	e	INDEX_MATCH_END
	f	C	f	KEY_MATCH_START
	f	C	g	KEY_MATCH_END
	f	C	h	QUOTED_KEY_START
c	ec$a	net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode
	m	()Lpd;	a	createPreferredParentTag
	m	(Lpd;)I	a	removeTag
	m	(Lpd;Ljava/util/List;)V	a	getTag
	m	(Lpd;Ljava/util/function/Supplier;)I	a	setTag
	m	(Lpd;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
	f	Lec$a;	a	INSTANCE
c	ec$b	net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode
	m	()Lpd;	a	createPreferredParentTag
	m	(Lpd;)I	a	removeTag
	m	(Lpd;Ljava/util/List;)V	a	getTag
	m	(Lpd;Ljava/util/function/Supplier;)I	a	setTag
	m	(Lpd;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
	f	Ljava/lang/String;	a	name
c	ec$c	net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode
	m	()Lpd;	a	createPreferredParentTag
	m	(Lpd;)I	a	removeTag
	m	(Lpd;Ljava/util/List;)V	a	getTag
	m	(Lpd;Ljava/util/function/Supplier;)I	a	setTag
	m	(Lpd;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
	f	I	a	index
c	ec$d	net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode
	m	()Lpd;	a	createPreferredParentTag
	m	(Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lpd;)V	a	lambda$getOrCreateTag$0
	m	(Lpd;)I	a	removeTag
	m	(Lpd;Ljava/util/List;)V	a	getTag
	m	(Lpd;Ljava/util/function/Supplier;)I	a	setTag
	m	(Lpd;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
	f	Lok;	a	pattern
	f	Ljava/util/function/Predicate;	b	predicate
c	ec$e	net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode
	m	()Lpd;	a	createPreferredParentTag
	m	(Lpd;)I	a	removeTag
	m	(Lpd;Ljava/util/List;)V	a	getTag
	m	(Lpd;Ljava/util/function/Supplier;)I	a	setTag
	m	(Lpd;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
	f	Ljava/lang/String;	a	name
	f	Lok;	b	pattern
	f	Ljava/util/function/Predicate;	c	predicate
c	ec$f	net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode
	m	()Lpd;	a	createPreferredParentTag
	m	(Lpd;)I	a	removeTag
	m	(Lpd;Ljava/util/List;)V	a	getTag
	m	(Lpd;Ljava/util/function/Supplier;)I	a	setTag
	m	(Lpd;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
	f	Ljava/util/function/Predicate;	a	predicate
c	ec$g	net/minecraft/commands/arguments/NbtPathArgument$NbtPath
	m	(Lec$h;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	createNotFoundException
	m	(Lec$h;Ljava/util/function/Supplier;Lpd;)Ljava/lang/Integer;	a	lambda$set$1
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$apply$0
	m	(Ljava/util/List;Ljava/util/function/Function;)I	a	apply
	m	(Lpd;)Ljava/util/List;	a	get
	m	(Lpd;Ljava/util/function/Supplier;)Ljava/util/List;	a	getOrCreate
	m	(Lpd;Lpd;)I	a	set
	m	(Lpd;)I	b	countMatching
	m	(Lpd;Ljava/util/function/Supplier;)I	b	set
	m	(Lpd;)I	c	remove
	m	(Lpd;)Ljava/util/List;	d	getOrCreateParents
	f	Ljava/lang/String;	a	original
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	nodeToOriginalPosition
	f	[Lec$h;	c	nodes
c	ec$h	net/minecraft/commands/arguments/NbtPathArgument$Node
	m	()Lpd;	a	createPreferredParentTag
	m	(Ljava/util/List;)Ljava/util/List;	a	get
	m	(Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List;	a	collect
	m	(Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List;	a	getOrCreate
	m	(Ljava/util/function/Supplier;Lpd;Ljava/util/List;)V	a	lambda$getOrCreate$0
	m	(Lpd;)I	a	removeTag
	m	(Lpd;Ljava/util/List;)V	a	getTag
	m	(Lpd;Ljava/util/function/Supplier;)I	a	setTag
	m	(Lpd;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
c	ed	net/minecraft/commands/arguments/NbtTagArgument
	m	()Led;	a	nbtTag
	m	(Lcom/mojang/brigadier/StringReader;)Lpd;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lpd;	a	getNbtTag
	f	Ljava/util/Collection;	a	EXAMPLES
c	ee	net/minecraft/commands/arguments/ObjectiveArgument
	m	()Lee;	a	objective
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldqj;	a	getObjective
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldqj;	b	getWritableObjective
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_OBJECTIVE_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_OBJECTIVE_READ_ONLY
c	ef	net/minecraft/commands/arguments/ObjectiveCriteriaArgument
	m	()Lef;	a	criteria
	m	(Laht;Ljava/lang/Object;)Ljava/lang/String;	a	getName
	m	(Lcom/mojang/brigadier/StringReader;)Ldqp;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;ILjava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldqp;	a	getCriteria
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Ljava/util/Collection;	b	EXAMPLES
c	eg	net/minecraft/commands/arguments/OperationArgument
	m	()Leg;	a	operation
	m	(II)I	a	lambda$getSimpleOperation$6
	m	(Lcom/mojang/brigadier/StringReader;)Leg$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leg$a;	a	getOperation
	m	(Ldql;Ldql;)V	a	lambda$getOperation$0
	m	(Ljava/lang/String;)Leg$a;	a	getOperation
	m	(II)I	b	lambda$getSimpleOperation$5
	m	(Ljava/lang/String;)Leg$b;	b	getSimpleOperation
	m	(II)I	c	lambda$getSimpleOperation$4
	m	(II)I	d	lambda$getSimpleOperation$3
	m	(II)I	e	lambda$getSimpleOperation$2
	m	(II)I	f	lambda$getSimpleOperation$1
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_OPERATION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_DIVIDE_BY_ZERO
c	eg$a	net/minecraft/commands/arguments/OperationArgument$Operation
c	eg$b	net/minecraft/commands/arguments/OperationArgument$SimpleOperation
c	eh	net/minecraft/commands/arguments/ParticleArgument
	m	()Leh;	a	particle
	m	(Lcom/mojang/brigadier/StringReader;)Lia;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Lib;)Lia;	a	readParticle
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lia;	a	getParticle
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	(Lyt;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readParticle$1
	m	(Lcom/mojang/brigadier/StringReader;)Lia;	b	readParticle
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_PARTICLE
	f	Ljava/util/Collection;	b	EXAMPLES
c	ei	net/minecraft/commands/arguments/RangeArgument
	m	()Lei$b;	a	intRange
	m	()Lei$a;	b	floatRange
c	ei$a	net/minecraft/commands/arguments/RangeArgument$Floats
	m	(Lcom/mojang/brigadier/StringReader;)Lcj$c;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcj$c;	a	getRange
	f	Ljava/util/Collection;	a	EXAMPLES
c	ei$b	net/minecraft/commands/arguments/RangeArgument$Ints
	m	(Lcom/mojang/brigadier/StringReader;)Lcj$d;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcj$d;	a	getRange
	f	Ljava/util/Collection;	a	EXAMPLES
c	ej	net/minecraft/commands/arguments/ResourceKeyArgument
	m	(Lcom/mojang/brigadier/StringReader;)Lys;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Layu;	a	getAttribute
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lys;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lys;	a	getRegistryType
	m	(Lcom/mojang/brigadier/context/CommandContext;Lys;)Lhb;	a	getRegistry
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Lys;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getRegistryType$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Lys;)Lej;	a	key
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgs;	b	getConfiguredFeature
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	(Lys;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$getConfiguredFeature$4
	m	(Lys;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	c	lambda$getAttribute$3
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_ATTRIBUTE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INVALID_FEATURE
	f	Lys;	d	registryKey
c	ej$a	net/minecraft/commands/arguments/ResourceKeyArgument$Serializer
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lpy;)V	a	serializeToNetwork
	m	(Lej;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lej;Lpy;)V	a	serializeToNetwork
	m	(Lpy;)Lej;	a	deserializeFromNetwork
	m	(Lpy;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	deserializeFromNetwork
c	ek	net/minecraft/commands/arguments/ResourceLocationArgument
	m	()Lek;	a	id
	m	(Lcom/mojang/brigadier/StringReader;)Lyt;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laf;	a	getAdvancement
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
	m	(Lyt;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getRecipe$4
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbxo;	b	getRecipe
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldnv;	c	getPredicate
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldmn;	d	getItemModifier
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lyt;	e	getId
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_ADVANCEMENT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_UNKNOWN_RECIPE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_UNKNOWN_PREDICATE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_UNKNOWN_ITEM_MODIFIER
c	el	net/minecraft/commands/arguments/ResourceOrTagLocationArgument
	m	(Lcom/mojang/brigadier/StringReader;)Lel$b;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lel$b;	a	getBiome
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lys;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lel$b;	a	getRegistryType
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Lel$b;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getRegistryType$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Lys;)Lel;	a	resourceOrTag
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lel$b;	b	getStructureFeature
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID_BIOME
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INVALID_STRUCTURE
	f	Lys;	d	registryKey
c	el$a	net/minecraft/commands/arguments/ResourceOrTagLocationArgument$ResourceResult
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Lgs;)Z	a	test
	m	(Lys;)Ljava/util/Optional;	a	cast
	m	()Ljava/lang/String;	b	asPrintable
	m	()Lys;	c	key
	f	Lys;	a	key
c	el$b	net/minecraft/commands/arguments/ResourceOrTagLocationArgument$Result
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Lys;)Ljava/util/Optional;	a	cast
	m	()Ljava/lang/String;	b	asPrintable
c	el$c	net/minecraft/commands/arguments/ResourceOrTagLocationArgument$Serializer
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lpy;)V	a	serializeToNetwork
	m	(Lel;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lel;Lpy;)V	a	serializeToNetwork
	m	(Lpy;)Lel;	a	deserializeFromNetwork
	m	(Lpy;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	deserializeFromNetwork
c	el$d	net/minecraft/commands/arguments/ResourceOrTagLocationArgument$TagResult
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Lgs;)Z	a	test
	m	(Lys;)Ljava/util/Optional;	a	cast
	m	()Ljava/lang/String;	b	asPrintable
	m	()Laif;	c	key
	f	Laif;	a	key
c	em	net/minecraft/commands/arguments/ScoreHolderArgument
	m	()Lem;	a	scoreHolder
	m	(Lcom/mojang/brigadier/StringReader;)Lem$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	getName
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	getNames
	m	(Ldm;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	lambda$parse$2
	m	(Ljava/util/Collection;Ldm;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	lambda$parse$3
	m	()Lem;	b	scoreHolders
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	b	lambda$static$0
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	b	getNames
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	c	getNamesWithDefaultWildcard
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_SCORE_HOLDERS
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_NO_RESULTS
	f	B	d	FLAG_MULTIPLE
	f	Z	e	multiple
c	em$a	net/minecraft/commands/arguments/ScoreHolderArgument$Result
c	em$b	net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult
	f	Lfp;	a	selector
c	em$c	net/minecraft/commands/arguments/ScoreHolderArgument$Serializer
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lpy;)V	a	serializeToNetwork
	m	(Lem;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lem;Lpy;)V	a	serializeToNetwork
	m	(Lpy;)Lem;	a	deserializeFromNetwork
	m	(Lpy;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	deserializeFromNetwork
c	en	net/minecraft/commands/arguments/ScoreboardSlotArgument
	m	()Len;	a	displaySlot
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I	a	getDisplaySlot
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Ljava/util/Collection;	b	EXAMPLES
c	eo	net/minecraft/commands/arguments/SlotArgument
	m	()Leo;	a	slot
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I	a	getSlot
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	(Ljava/util/HashMap;)V	a	lambda$static$1
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_SLOT
	f	Ljava/util/Map;	c	SLOTS
c	ep	net/minecraft/commands/arguments/TeamArgument
	m	()Lep;	a	team
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldqk;	a	getTeam
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_TEAM_NOT_FOUND
c	eq	net/minecraft/commands/arguments/TimeArgument
	m	()Leq;	a	time
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_UNIT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INVALID_TICK_COUNT
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	UNITS
c	er	net/minecraft/commands/arguments/UuidArgument
	m	()Ler;	a	uuid
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID;	a	getUuid
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID_UUID
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Ljava/util/regex/Pattern;	c	ALLOWED_CHARACTERS
c	es	net/minecraft/commands/arguments/blocks/BlockInput
	m	()Lcov;	a	getState
	m	(Ladw;Lgj;)Z	a	test
	m	(Ladw;Lgj;I)Z	a	place
	m	(Lcoz;)Z	a	test
	m	()Ljava/util/Set;	b	getDefinedProperties
	f	Lcov;	a	state
	f	Ljava/util/Set;	b	properties
	f	Lok;	c	tag
c	et	net/minecraft/commands/arguments/blocks/BlockPredicateArgument
	m	()Let;	a	blockPredicate
	m	(Lcom/mojang/brigadier/StringReader;)Let$b;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate;	a	getBlockPredicate
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_TAG
c	et$1	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$1
	m	()Z	a	requiresNbt
	m	(Lhb;)Ljava/util/function/Predicate;	a	create
	f	Let$a;	a	val$result
	f	Let;	b	this$0
c	et$2	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$2
	m	()Z	a	requiresNbt
	m	(Lhb;)Ljava/util/function/Predicate;	a	create
	f	Laif;	a	val$tag
	f	Lev;	b	val$parser
	f	Let;	c	this$0
c	et$a	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate
	m	()Z	a	requiresNbt
	m	(Lcoz;)Z	a	test
	f	Lcov;	a	state
	f	Ljava/util/Set;	b	properties
	f	Lok;	c	nbt
c	et$b	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result
	m	()Z	a	requiresNbt
	m	(Lhb;)Ljava/util/function/Predicate;	a	create
c	et$c	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate
	m	(Lcoz;)Z	a	test
	f	Laif;	a	tag
	f	Lok;	b	nbt
	f	Ljava/util/Map;	c	vagueProperties
c	eu	net/minecraft/commands/arguments/blocks/BlockStateArgument
	m	()Leu;	a	block
	m	(Lcom/mojang/brigadier/StringReader;)Les;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Les;	a	getBlock
	f	Ljava/util/Collection;	a	EXAMPLES
c	ev	net/minecraft/commands/arguments/blocks/BlockStateParser
	m	()Ljava/util/Map;	a	getProperties
	m	(I)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readBlock$6
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcpy;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;	a	addSuggestions
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestVaguePropertyValue
	m	(Lcov;)Ljava/lang/String;	a	serialize
	m	(Lcpy;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	a	lambda$readProperties$7
	m	(Lcpy;Ljava/lang/String;I)V	a	setValue
	m	(Lhb;)Z	a	hasBlockEntity
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
	m	(Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	a	lambda$readVagueProperties$8
	m	(Ljava/lang/StringBuilder;Lcpy;Ljava/lang/Comparable;)V	a	appendProperty
	m	(Z)Lev;	a	parse
	m	()Lcov;	b	getState
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	b	suggestPropertyNameOrEnd
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
	m	()Lok;	c	getNbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	c	suggestVaguePropertyNameOrEnd
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
	m	()Laif;	d	getTag
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	d	suggestPropertyName
	m	()V	e	readBlock
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	e	suggestVaguePropertyName
	m	()V	f	readTag
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	f	suggestOpenNbt
	m	()V	g	readProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	g	suggestEquals
	m	()V	h	readVagueProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	h	suggestNextPropertyOrEnd
	m	()V	i	readNbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	i	suggestOpenVaguePropertiesOrNbt
	m	()Ljava/util/Map;	j	getVagueProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	j	suggestOpenPropertiesOrNbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	k	suggestTag
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	l	suggestBlockIdOrTag
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	m	lambda$static$5
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NO_TAGS_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_BLOCK
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_UNKNOWN_PROPERTY
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_DUPLICATE_PROPERTY
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	e	ERROR_INVALID_VALUE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_EXPECTED_VALUE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_EXPECTED_END_OF_PROPERTIES
	f	C	h	SYNTAX_START_PROPERTIES
	f	C	i	SYNTAX_START_NBT
	f	C	j	SYNTAX_END_PROPERTIES
	f	C	k	SYNTAX_EQUALS
	f	C	l	SYNTAX_PROPERTY_SEPARATOR
	f	C	m	SYNTAX_TAG
	f	Ljava/util/function/BiFunction;	n	SUGGEST_NOTHING
	f	Lcom/mojang/brigadier/StringReader;	o	reader
	f	Z	p	forTesting
	f	Ljava/util/Map;	q	properties
	f	Ljava/util/Map;	r	vagueProperties
	f	Lyt;	s	id
	f	Lcow;	t	definition
	f	Lcov;	u	state
	f	Lok;	v	nbt
	f	Laif;	w	tag
	f	I	x	tagCursor
	f	Ljava/util/function/BiFunction;	y	suggestions
c	ew	net/minecraft/commands/arguments/blocks/package-info
c	ex	net/minecraft/commands/arguments/coordinates/BlockPosArgument
	m	()Lex;	a	blockPos
	m	(Lcom/mojang/brigadier/StringReader;)Lez;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgj;	a	getLoadedBlockPos
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgj;	b	getSpawnablePos
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_LOADED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_OUT_OF_WORLD
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_OUT_OF_BOUNDS
	f	Ljava/util/Collection;	d	EXAMPLES
c	ey	net/minecraft/commands/arguments/coordinates/ColumnPosArgument
	m	()Ley;	a	columnPos
	m	(Lcom/mojang/brigadier/StringReader;)Lez;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ladn;	a	getColumnPos
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Ljava/util/Collection;	b	EXAMPLES
c	ez	net/minecraft/commands/arguments/coordinates/Coordinates
	m	()Z	a	isXRelative
	m	(Ldm;)Ldpo;	a	getPosition
	m	()Z	b	isYRelative
	m	(Ldm;)Ldpn;	b	getRotation
	m	()Z	c	isZRelative
	m	(Ldm;)Lgj;	c	getBlockPos
c	fa	net/minecraft/commands/arguments/coordinates/LocalCoordinates
	m	()Z	a	isXRelative
	m	(Lcom/mojang/brigadier/StringReader;)Lfa;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;I)D	a	readDouble
	m	(Ldm;)Ldpo;	a	getPosition
	m	()Z	b	isYRelative
	m	(Ldm;)Ldpn;	b	getRotation
	m	()Z	c	isZRelative
	f	C	a	PREFIX_LOCAL_COORDINATE
	f	D	b	left
	f	D	c	up
	f	D	d	forwards
c	fb	net/minecraft/commands/arguments/coordinates/RotationArgument
	m	()Lfb;	a	rotation
	m	(Lcom/mojang/brigadier/StringReader;)Lez;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lez;	a	getRotation
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Ljava/util/Collection;	b	EXAMPLES
c	fc	net/minecraft/commands/arguments/coordinates/SwizzleArgument
	m	()Lfc;	a	swizzle
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet;	a	getSwizzle
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID
c	fd	net/minecraft/commands/arguments/coordinates/Vec2Argument
	m	()Lfd;	a	vec2
	m	(Lcom/mojang/brigadier/StringReader;)Lez;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldpn;	a	getVec2
	m	(Z)Lfd;	a	vec2
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Z	c	centerCorrect
c	fe	net/minecraft/commands/arguments/coordinates/Vec3Argument
	m	()Lfe;	a	vec3
	m	(Lcom/mojang/brigadier/StringReader;)Lez;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldpo;	a	getVec3
	m	(Z)Lfe;	a	vec3
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lez;	b	getCoordinates
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_MIXED_TYPE
	f	Ljava/util/Collection;	c	EXAMPLES
	f	Z	d	centerCorrect
c	ff	net/minecraft/commands/arguments/coordinates/WorldCoordinate
	m	()Z	a	isRelative
	m	(D)D	a	get
	m	(Lcom/mojang/brigadier/StringReader;)Lff;	a	parseInt
	m	(Lcom/mojang/brigadier/StringReader;Z)Lff;	a	parseDouble
	m	(Lcom/mojang/brigadier/StringReader;)Z	b	isRelative
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_EXPECTED_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_EXPECTED_INT
	f	C	c	PREFIX_RELATIVE
	f	Z	d	relative
	f	D	e	value
c	fg	net/minecraft/commands/arguments/coordinates/WorldCoordinates
	m	()Z	a	isXRelative
	m	(DDD)Lfg;	a	absolute
	m	(Lcom/mojang/brigadier/StringReader;)Lfg;	a	parseInt
	m	(Lcom/mojang/brigadier/StringReader;Z)Lfg;	a	parseDouble
	m	(Ldm;)Ldpo;	a	getPosition
	m	(Ldpn;)Lfg;	a	absolute
	m	()Z	b	isYRelative
	m	(Ldm;)Ldpn;	b	getRotation
	m	()Z	c	isZRelative
	m	()Lfg;	d	current
	f	Lff;	a	x
	f	Lff;	b	y
	f	Lff;	c	z
c	fh	net/minecraft/commands/arguments/coordinates/package-info
c	fi	net/minecraft/commands/arguments/item/FunctionArgument
	m	()Lfi;	a	functions
	m	(Lcom/mojang/brigadier/StringReader;)Lfi$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getFunctions
	m	(Lcom/mojang/brigadier/context/CommandContext;Lyt;)Ldj;	a	getFunction
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Lyt;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getFunction$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	b	getFunctionOrTag
	m	(Lcom/mojang/brigadier/context/CommandContext;Lyt;)Laie;	b	getFunctionTag
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_TAG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_UNKNOWN_FUNCTION
c	fi$1	net/minecraft/commands/arguments/item/FunctionArgument$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
	f	Lyt;	a	val$id
	f	Lfi;	b	this$0
c	fi$2	net/minecraft/commands/arguments/item/FunctionArgument$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
	f	Lyt;	a	val$id
	f	Lfi;	b	this$0
c	fi$a	net/minecraft/commands/arguments/item/FunctionArgument$Result
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
c	fj	net/minecraft/commands/arguments/item/ItemArgument
	m	()Lfj;	a	item
	m	(Lcom/mojang/brigadier/StringReader;)Lfk;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfk;	a	getItem
	f	Ljava/util/Collection;	a	EXAMPLES
c	fk	net/minecraft/commands/arguments/item/ItemInput
	m	()Lbus;	a	getItem
	m	(IZ)Lbuw;	a	createItemStack
	m	(Lbuw;)Z	a	test
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()Ljava/lang/String;	b	serialize
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_STACK_TOO_BIG
	f	Lbus;	b	item
	f	Lok;	c	tag
c	fl	net/minecraft/commands/arguments/item/ItemParser
	m	()Lbus;	a	getItem
	m	(ILyt;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readItem$2
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()Lok;	b	getNbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	b	suggestOpenNbt
	m	()Laif;	c	getTag
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	c	suggestTag
	m	()V	d	readItem
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	d	suggestItemIdOrTag
	m	()V	e	readTag
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhb;)Ljava/util/concurrent/CompletableFuture;	e	lambda$static$1
	m	()V	f	readNbt
	m	()Lfl;	g	parse
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NO_TAGS_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_ITEM
	f	C	c	SYNTAX_START_NBT
	f	C	d	SYNTAX_TAG
	f	Ljava/util/function/BiFunction;	e	SUGGEST_NOTHING
	f	Lcom/mojang/brigadier/StringReader;	f	reader
	f	Z	g	forTesting
	f	Lbus;	h	item
	f	Lok;	i	nbt
	f	Laif;	j	tag
	f	I	k	tagCursor
	f	Ljava/util/function/BiFunction;	l	suggestions
c	fm	net/minecraft/commands/arguments/item/ItemPredicateArgument
	m	()Lfm;	a	itemPredicate
	m	(Laif;Lfl;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate;	a	lambda$parse$2
	m	(Lcom/mojang/brigadier/StringReader;)Lfm$b;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate;	a	getItemPredicate
	m	(Lfm$a;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate;	a	lambda$parse$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_TAG
c	fm$a	net/minecraft/commands/arguments/item/ItemPredicateArgument$ItemPredicate
	m	(Lbuw;)Z	a	test
	f	Lbus;	a	item
	f	Lok;	b	nbt
c	fm$b	net/minecraft/commands/arguments/item/ItemPredicateArgument$Result
c	fm$c	net/minecraft/commands/arguments/item/ItemPredicateArgument$TagPredicate
	m	(Lbuw;)Z	a	test
	f	Laif;	a	tag
	f	Lok;	b	nbt
c	fn	net/minecraft/commands/arguments/item/package-info
c	fo	net/minecraft/commands/arguments/package-info
c	fp	net/minecraft/commands/arguments/selector/EntitySelector
	m	()I	a	getMaxResults
	m	(Ldm;)Laxk;	a	findSingleEntity
	m	(Ldpj;Laxk;)Z	a	lambda$getPredicate$0
	m	(Ldpo;)Ljava/util/function/Predicate;	a	getPredicate
	m	(Ldpo;Laxk;)Z	a	lambda$getPredicate$1
	m	(Ldpo;Ljava/util/List;)Ljava/util/List;	a	sortAndLimit
	m	(Ljava/util/List;)Lqk;	a	joinNames
	m	(Ljava/util/List;Ladw;Ldpo;Ljava/util/function/Predicate;)V	a	addEntities
	m	()Z	b	includesEntities
	m	(Ldm;)Ljava/util/List;	b	findEntities
	m	()Z	c	isSelfSelector
	m	(Ldm;)Ladx;	c	findSinglePlayer
	m	()Z	d	isWorldLimited
	m	(Ldm;)Ljava/util/List;	d	findPlayers
	m	()Z	e	usesSelector
	m	(Ldm;)V	e	checkPermissions
	f	I	a	INFINITE
	f	Lcsn;	b	ANY_TYPE
	f	I	c	maxResults
	f	Z	d	includesEntities
	f	Z	e	worldLimited
	f	Ljava/util/function/Predicate;	f	predicate
	f	Lcj$c;	g	range
	f	Ljava/util/function/Function;	h	position
	f	Ldpj;	i	aabb
	f	Ljava/util/function/BiConsumer;	j	order
	f	Z	k	currentEntity
	f	Ljava/lang/String;	l	playerName
	f	Ljava/util/UUID;	m	entityUUID
	f	Lcsn;	n	type
	f	Z	o	usesSelector
c	fp$1	net/minecraft/commands/arguments/selector/EntitySelector$1
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Laxk;)Laxk;	a	tryCast
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
c	fq	net/minecraft/commands/arguments/selector/EntitySelectorParser
	m	()Z	A	hasGamemodeNotEquals
	m	()Z	B	hasTeamEquals
	m	()Z	C	hasTeamNotEquals
	m	()V	D	setTypeLimitedInversely
	m	()Z	E	isTypeLimited
	m	()Z	F	isTypeLimitedInversely
	m	()Z	G	hasScores
	m	()Z	H	hasAdvancements
	m	()V	I	finalizePredicates
	m	()Lfp;	a	getSelector
	m	(D)V	a	setX
	m	(DDD)Ldpj;	a	createAabb
	m	(I)V	a	setMaxResults
	m	(Laxk;)Z	a	lambda$finalizePredicates$12
	m	(Laxo;)V	a	limitToType
	m	(Lcj$c;)V	a	setDistance
	m	(Lcj$d;)V	a	setLevel
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	fillSelectorSuggestions
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
	m	(Ldf;)V	a	setRotX
	m	(Ldf;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate;	a	createRotationPredicate
	m	(Ldpo;)Ldpo;	a	lambda$getSelector$11
	m	(Ldpo;Laxk;Laxk;)I	a	lambda$static$5
	m	(Ldpo;Ljava/util/List;)V	a	lambda$static$7
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/util/function/BiConsumer;)V	a	setOrder
	m	(Ljava/util/function/BiFunction;)V	a	setSuggestions
	m	(Ljava/util/function/Predicate;)V	a	addPredicate
	m	(Ljava/util/function/ToDoubleFunction;DDLaxk;)Z	a	lambda$createRotationPredicate$13
	m	(Z)V	a	setIncludesEntities
	m	()V	b	parseSelector
	m	(D)V	b	setY
	m	(Laxk;)Z	b	lambda$new$9
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	b	suggestNameOrSelector
	m	(Ldf;)V	b	setRotY
	m	(Ldpo;)Ldpo;	b	lambda$getSelector$10
	m	(Ldpo;Laxk;Laxk;)I	b	lambda$static$3
	m	(Ldpo;Ljava/util/List;)V	b	lambda$static$6
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	(Z)V	b	setHasNameEquals
	m	()V	c	parseNameOrUUID
	m	(D)V	c	setZ
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	c	suggestName
	m	(Ldpo;Ljava/util/List;)V	c	lambda$static$4
	m	(Z)V	c	setHasNameNotEquals
	m	()V	d	parseOptions
	m	(D)V	d	setDeltaX
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	d	suggestSelector
	m	(Ldpo;Ljava/util/List;)V	d	lambda$static$2
	m	(Z)V	d	setLimited
	m	()Z	e	shouldInvertValue
	m	(D)V	e	setDeltaY
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	e	suggestOpenOptions
	m	(Z)V	e	setSorted
	m	()Z	f	isTag
	m	(D)V	f	setDeltaZ
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	f	suggestOptionsKeyOrClose
	m	(Z)V	f	setHasGamemodeEquals
	m	()Lcom/mojang/brigadier/StringReader;	g	getReader
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	g	suggestOptionsKey
	m	(Z)V	g	setHasGamemodeNotEquals
	m	()V	h	setWorldLimited
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	h	suggestOptionsNextOrClose
	m	(Z)V	h	setHasTeamEquals
	m	()Lcj$c;	i	getDistance
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	i	suggestEquals
	m	(Z)V	i	setHasTeamNotEquals
	m	()Lcj$d;	j	getLevel
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	j	lambda$static$8
	m	(Z)V	j	setHasScores
	m	()Ldf;	k	getRotX
	m	(Z)V	k	setHasAdvancements
	m	()Ldf;	l	getRotY
	m	()Ljava/lang/Double;	m	getX
	m	()Ljava/lang/Double;	n	getY
	m	()Ljava/lang/Double;	o	getZ
	m	()Ljava/lang/Double;	p	getDeltaX
	m	()Ljava/lang/Double;	q	getDeltaY
	m	()Ljava/lang/Double;	r	getDeltaZ
	m	()Ljava/util/function/BiConsumer;	s	getOrder
	m	()Lfp;	t	parse
	m	()Z	u	isCurrentEntity
	m	()Z	v	hasNameEquals
	m	()Z	w	hasNameNotEquals
	m	()Z	x	isLimited
	m	()Z	y	isSorted
	m	()Z	z	hasGamemodeEquals
	f	Z	A	includesEntities
	f	Z	B	worldLimited
	f	Lcj$c;	C	distance
	f	Lcj$d;	D	level
	f	Ljava/lang/Double;	E	x
	f	Ljava/lang/Double;	F	y
	f	Ljava/lang/Double;	G	z
	f	Ljava/lang/Double;	H	deltaX
	f	Ljava/lang/Double;	I	deltaY
	f	Ljava/lang/Double;	J	deltaZ
	f	Ldf;	K	rotX
	f	Ldf;	L	rotY
	f	Ljava/util/function/Predicate;	M	predicate
	f	Ljava/util/function/BiConsumer;	N	order
	f	Z	O	currentEntity
	f	Ljava/lang/String;	P	playerName
	f	I	Q	startPosition
	f	Ljava/util/UUID;	R	entityUUID
	f	Ljava/util/function/BiFunction;	S	suggestions
	f	Z	T	hasNameEquals
	f	Z	U	hasNameNotEquals
	f	Z	V	isLimited
	f	Z	W	isSorted
	f	Z	X	hasGamemodeEquals
	f	Z	Y	hasGamemodeNotEquals
	f	Z	Z	hasTeamEquals
	f	C	a	SYNTAX_SELECTOR_START
	f	Z	aa	hasTeamNotEquals
	f	Laxo;	ab	type
	f	Z	ac	typeInverse
	f	Z	ad	hasScores
	f	Z	ae	hasAdvancements
	f	Z	af	usesSelectors
	f	C	b	SYNTAX_OPTIONS_KEY_VALUE_SEPARATOR
	f	C	c	SYNTAX_NOT
	f	C	d	SYNTAX_TAG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_INVALID_NAME_OR_UUID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_UNKNOWN_SELECTOR_TYPE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_SELECTORS_NOT_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_MISSING_SELECTOR_TYPE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_EXPECTED_END_OF_OPTIONS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	j	ERROR_EXPECTED_OPTION_VALUE
	f	Ljava/util/function/BiConsumer;	k	ORDER_ARBITRARY
	f	Ljava/util/function/BiConsumer;	l	ORDER_NEAREST
	f	Ljava/util/function/BiConsumer;	m	ORDER_FURTHEST
	f	Ljava/util/function/BiConsumer;	n	ORDER_RANDOM
	f	Ljava/util/function/BiFunction;	o	SUGGEST_NOTHING
	f	C	p	SYNTAX_OPTIONS_START
	f	C	q	SYNTAX_OPTIONS_END
	f	C	r	SYNTAX_OPTIONS_SEPARATOR
	f	C	s	SELECTOR_NEAREST_PLAYER
	f	C	t	SELECTOR_ALL_PLAYERS
	f	C	u	SELECTOR_RANDOM_PLAYERS
	f	C	v	SELECTOR_CURRENT_ENTITY
	f	C	w	SELECTOR_ALL_ENTITIES
	f	Lcom/mojang/brigadier/StringReader;	x	reader
	f	Z	y	allowSelectors
	f	I	z	maxResults
c	fr	net/minecraft/commands/arguments/selector/options/EntitySelectorOptions
	m	(Lfq;)Z	A	lambda$bootStrap$21
	m	(Lfq;)V	B	lambda$bootStrap$20
	m	(Lfq;)Z	C	lambda$bootStrap$19
	m	(Lfq;)V	D	lambda$bootStrap$18
	m	(Lfq;)Z	E	lambda$bootStrap$17
	m	(Lfq;)V	F	lambda$bootStrap$16
	m	(Lfq;)Z	G	lambda$bootStrap$15
	m	(Lfq;)V	H	lambda$bootStrap$14
	m	(Lfq;)Z	I	lambda$bootStrap$13
	m	(Lfq;)V	J	lambda$bootStrap$12
	m	(Lfq;)Z	K	lambda$bootStrap$11
	m	(Lfq;)V	L	lambda$bootStrap$10
	m	(Lfq;)Z	M	lambda$bootStrap$9
	m	(Lfq;)V	N	lambda$bootStrap$8
	m	(Lfq;)Z	O	lambda$bootStrap$7
	m	(Lfq;)V	P	lambda$bootStrap$6
	m	()V	a	bootStrap
	m	(Laif;ZLaxk;)Z	a	lambda$bootStrap$41
	m	(Laxo;ZLaxk;)Z	a	lambda$bootStrap$43
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	lambda$bootStrap$30
	m	(Lfq;)Z	a	lambda$bootStrap$63
	m	(Lfq;ILyt;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$bootStrap$42
	m	(Lfq;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	suggestNames
	m	(Lfq;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	lambda$bootStrap$40
	m	(Lfq;Ljava/lang/String;I)Lfr$a;	a	get
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
	m	(Ljava/lang/String;Lfr$a;Ljava/util/function/Predicate;Lqk;)V	a	register
	m	(Ljava/lang/String;ZLaxk;)Z	a	lambda$bootStrap$46
	m	(Ljava/util/Map;Lah;)Z	a	lambda$bootStrap$56
	m	(Ljava/util/Map;Laxk;)Z	a	lambda$bootStrap$58
	m	(Lok;ZLaxk;)Z	a	lambda$bootStrap$49
	m	(Lyt;ZLaxk;)Z	a	lambda$bootStrap$61
	m	(ZLah;)Z	a	lambda$bootStrap$57
	m	(ZLal;)Z	a	lambda$bootStrap$55
	m	(ZLcas;Laxk;)Z	a	lambda$bootStrap$34
	m	(Lfq;)V	b	lambda$bootStrap$62
	m	(Lfq;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	b	lambda$bootStrap$33
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
	m	(Ljava/lang/String;ZLaxk;)Z	b	lambda$bootStrap$37
	m	(Ljava/util/Map;Laxk;)Z	b	lambda$bootStrap$52
	m	(Lfq;)Z	c	lambda$bootStrap$60
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$2
	m	(Ljava/lang/String;ZLaxk;)Z	c	lambda$bootStrap$5
	m	(Lfq;)V	d	lambda$bootStrap$59
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$1
	m	(Lfq;)Z	e	lambda$bootStrap$54
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$0
	m	(Lfq;)V	f	lambda$bootStrap$53
	m	(Lfq;)Z	g	lambda$bootStrap$51
	m	(Lfq;)V	h	lambda$bootStrap$50
	m	(Lfq;)Z	i	lambda$bootStrap$48
	m	(Lfq;)V	j	lambda$bootStrap$47
	m	(Lfq;)Z	k	lambda$bootStrap$45
	m	(Lfq;)V	l	lambda$bootStrap$44
	m	(Lfq;)Z	m	lambda$bootStrap$39
	m	(Lfq;)V	n	lambda$bootStrap$38
	m	(Lfq;)Z	o	lambda$bootStrap$36
	m	(Lfq;)V	p	lambda$bootStrap$35
	m	(Lfq;)Z	q	lambda$bootStrap$32
	m	(Lfq;)V	r	lambda$bootStrap$31
	m	(Lfq;)Z	s	lambda$bootStrap$29
	m	(Lfq;)V	t	lambda$bootStrap$28
	m	(Lfq;)Z	u	lambda$bootStrap$27
	m	(Lfq;)V	v	lambda$bootStrap$26
	m	(Lfq;)Z	w	lambda$bootStrap$25
	m	(Lfq;)V	x	lambda$bootStrap$24
	m	(Lfq;)Z	y	lambda$bootStrap$23
	m	(Lfq;)V	z	lambda$bootStrap$22
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_OPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INAPPLICABLE_OPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_RANGE_NEGATIVE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_LEVEL_NEGATIVE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_LIMIT_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_SORT_UNKNOWN
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	g	ERROR_GAME_MODE_INVALID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_ENTITY_TYPE_INVALID
	f	Ljava/util/Map;	i	OPTIONS
c	fr$a	net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier
c	fr$b	net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option
	f	Lfr$a;	a	modifier
	f	Ljava/util/function/Predicate;	b	predicate
	f	Lqk;	c	description
c	fs	net/minecraft/commands/arguments/selector/options/package-info
c	ft	net/minecraft/commands/arguments/selector/package-info
c	fu	net/minecraft/commands/package-info
c	fv	net/minecraft/commands/synchronization/ArgumentSerializer
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lpy;)V	a	serializeToNetwork
	m	(Lpy;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	deserializeFromNetwork
c	fw	net/minecraft/commands/synchronization/ArgumentTypes
	m	()V	a	bootStrap
	m	(Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject;	a	serializeNodeToJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Z	a	isTypeRegistered
	m	(Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set;	a	findUsedArgumentTypes
	m	(Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V	a	findUsedArgumentTypes
	m	(Ljava/lang/Class;)Ljava/lang/Class;	a	fixClassType
	m	(Ljava/lang/String;Ljava/lang/Class;Lfv;)V	a	register
	m	(Ljava/util/Set;Ljava/util/Set;Lcom/mojang/brigadier/tree/CommandNode;)V	a	lambda$findUsedArgumentTypes$0
	m	(Lpy;)Lcom/mojang/brigadier/arguments/ArgumentType;	a	deserialize
	m	(Lpy;Lcom/mojang/brigadier/arguments/ArgumentType;)V	a	serialize
	m	(Lyt;)Lfw$a;	a	get
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lfw$a;	b	get
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	BY_CLASS
	f	Ljava/util/Map;	c	BY_NAME
c	fw$a	net/minecraft/commands/synchronization/ArgumentTypes$Entry
	f	Lfv;	a	serializer
	f	Lyt;	b	name
c	fx	net/minecraft/commands/synchronization/EmptyArgumentSerializer
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lpy;)V	a	serializeToNetwork
	m	(Lpy;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	deserializeFromNetwork
	f	Ljava/util/function/Supplier;	a	constructor
c	fy	net/minecraft/commands/synchronization/SuggestionProviders
	m	(Laxo;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$4
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lyt;	a	getName
	m	(Lyt;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	getProvider
	m	(Lyt;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$2
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	safelySwap
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	lambda$static$0
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	ASK_SERVER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	ALL_RECIPES
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	c	AVAILABLE_SOUNDS
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	d	SUMMONABLE_ENTITIES
	f	Ljava/util/Map;	e	PROVIDERS_BY_NAME
	f	Lyt;	f	DEFAULT_NAME
c	fy$a	net/minecraft/commands/synchronization/SuggestionProviders$Wrapper
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	delegate
	f	Lyt;	b	name
c	fz	net/minecraft/commands/synchronization/brigadier/BrigadierArgumentSerializers
	m	()V	a	bootstrap
	m	(B)Z	a	numberHasMin
	m	(ZZ)B	a	createNumberFlags
	m	(B)Z	b	numberHasMax
	f	B	a	NUMBER_FLAG_MIN
	f	B	b	NUMBER_FLAG_MAX
c	ga	net/minecraft/commands/synchronization/brigadier/DoubleArgumentSerializer
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lpy;)V	a	serializeToNetwork
	m	(Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lpy;)V	a	serializeToNetwork
	m	(Lpy;)Lcom/mojang/brigadier/arguments/DoubleArgumentType;	a	deserializeFromNetwork
	m	(Lpy;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	deserializeFromNetwork
c	gb	net/minecraft/commands/synchronization/brigadier/FloatArgumentSerializer
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lpy;)V	a	serializeToNetwork
	m	(Lcom/mojang/brigadier/arguments/FloatArgumentType;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/FloatArgumentType;Lpy;)V	a	serializeToNetwork
	m	(Lpy;)Lcom/mojang/brigadier/arguments/FloatArgumentType;	a	deserializeFromNetwork
	m	(Lpy;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	deserializeFromNetwork
c	gc	net/minecraft/commands/synchronization/brigadier/IntegerArgumentSerializer
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lpy;)V	a	serializeToNetwork
	m	(Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lpy;)V	a	serializeToNetwork
	m	(Lpy;)Lcom/mojang/brigadier/arguments/IntegerArgumentType;	a	deserializeFromNetwork
	m	(Lpy;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	deserializeFromNetwork
c	gd	net/minecraft/commands/synchronization/brigadier/LongArgumentSerializer
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lpy;)V	a	serializeToNetwork
	m	(Lcom/mojang/brigadier/arguments/LongArgumentType;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/LongArgumentType;Lpy;)V	a	serializeToNetwork
	m	(Lpy;)Lcom/mojang/brigadier/arguments/LongArgumentType;	a	deserializeFromNetwork
	m	(Lpy;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	deserializeFromNetwork
c	ge	net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lpy;)V	a	serializeToNetwork
	m	(Lcom/mojang/brigadier/arguments/StringArgumentType;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/StringArgumentType;Lpy;)V	a	serializeToNetwork
	m	(Lpy;)Lcom/mojang/brigadier/arguments/StringArgumentType;	a	deserializeFromNetwork
	m	(Lpy;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	deserializeFromNetwork
c	ge$1	net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$1
	f	[I	a	$SwitchMap$com$mojang$brigadier$arguments$StringArgumentType$StringType
c	gf	net/minecraft/commands/synchronization/brigadier/package-info
c	gg	net/minecraft/commands/synchronization/package-info
c	gh	net/minecraft/core/AxisCycle
	m	()Lgh;	a	inverse
	m	(DDDLgo$a;)D	a	cycle
	m	(IIILgo$a;)I	a	cycle
	m	(Lgo$a;)Lgo$a;	a	cycle
	m	(Lgo$a;Lgo$a;)Lgh;	a	between
	m	()[Lgh;	b	$values
	f	Lgh;	a	NONE
	f	Lgh;	b	FORWARD
	f	Lgh;	c	BACKWARD
	f	[Lgo$a;	d	AXIS_VALUES
	f	[Lgh;	e	VALUES
	f	[Lgh;	f	$VALUES
c	gh$1	net/minecraft/core/AxisCycle$1
	m	()Lgh;	a	inverse
	m	(DDDLgo$a;)D	a	cycle
	m	(IIILgo$a;)I	a	cycle
	m	(Lgo$a;)Lgo$a;	a	cycle
c	gh$2	net/minecraft/core/AxisCycle$2
	m	()Lgh;	a	inverse
	m	(DDDLgo$a;)D	a	cycle
	m	(IIILgo$a;)I	a	cycle
	m	(Lgo$a;)Lgo$a;	a	cycle
c	gh$3	net/minecraft/core/AxisCycle$3
	m	()Lgh;	a	inverse
	m	(DDDLgo$a;)D	a	cycle
	m	(IIILgo$a;)I	a	cycle
	m	(Lgo$a;)Lgo$a;	a	cycle
c	gi	net/minecraft/core/BlockMath
	m	(Li;)Li;	a	blockCenterToCorner
	m	(Li;Lgo;Ljava/util/function/Supplier;)Li;	a	getUVLockTransform
	m	(Ljava/util/EnumMap;)V	a	lambda$static$1
	m	(Li;)Li;	b	blockCornerToCenter
	m	(Ljava/util/EnumMap;)V	b	lambda$static$0
	f	Ljava/util/Map;	a	VANILLA_UV_TRANSFORM_LOCAL_TO_GLOBAL
	f	Ljava/util/Map;	b	VANILLA_UV_TRANSFORM_GLOBAL_TO_LOCAL
	f	Lorg/slf4j/Logger;	c	LOGGER
c	gj	net/minecraft/core/BlockPos
	m	()J	a	asLong
	m	(DDD)Lgj;	a	offset
	m	(I)Lgj;	a	multiply
	m	(III)J	a	asLong
	m	(IIIIII)Ljava/util/stream/Stream;	a	betweenClosedStream
	m	(IIIIIII)Ljava/util/Iterator;	a	lambda$withinManhattan$4
	m	(IILjava/util/Random;IIIII)Ljava/util/Iterator;	a	lambda$randomBetweenClosed$3
	m	(J)I	a	getX
	m	(JIII)J	a	offset
	m	(JLgo;)J	a	offset
	m	(Lcjm;)Lgj;	a	rotate
	m	(Ldeo;)Ljava/util/stream/Stream;	a	betweenClosedStream
	m	(Ldpj;)Ljava/util/stream/Stream;	a	betweenClosedStream
	m	(Lgj;)Ljava/util/stream/IntStream;	a	lambda$static$2
	m	(Lgj;III)Ljava/lang/Iterable;	a	withinManhattan
	m	(Lgj;IILjava/util/function/Predicate;)Ljava/util/Optional;	a	findClosestMatch
	m	(Lgj;ILgo;Lgo;)Ljava/lang/Iterable;	a	spiralAround
	m	(Lgj;Lgj;)Ljava/lang/Iterable;	a	betweenClosed
	m	(Lgo$a;I)Lgj;	a	relative
	m	(Lgo;)Lgj;	a	relative
	m	(Lgo;I)Lgj;	a	relative
	m	(Lgo;Lgo;Lgj;I)Ljava/util/Iterator;	a	lambda$spiralAround$6
	m	(Lhh;)Lgj;	a	offset
	m	(Ljava/util/Random;IIIIIII)Ljava/lang/Iterable;	a	randomBetweenClosed
	m	(Ljava/util/Random;ILgj;I)Ljava/lang/Iterable;	a	randomInCube
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	([I)Lgj;	a	lambda$static$0
	m	()Lgj;	b	above
	m	(DDD)Lhh;	b	offset
	m	(I)Lgj;	b	above
	m	(III)Lgj;	b	offset
	m	(IIIIII)Ljava/lang/Iterable;	b	betweenClosed
	m	(J)I	b	getY
	m	(Lgj;III)Ljava/util/stream/Stream;	b	withinManhattanStream
	m	(Lgj;Lgj;)Ljava/util/stream/Stream;	b	betweenClosedStream
	m	(Lgo$a;I)Lhh;	b	relative
	m	(Lgo;)Lhh;	b	relative
	m	(Lgo;I)Lhh;	b	relative
	m	(Lhh;)Lgj;	b	subtract
	m	()Lgj;	c	below
	m	(I)Lgj;	c	below
	m	(III)Lhh;	c	offset
	m	(IIIIII)Ljava/util/Iterator;	c	lambda$betweenClosed$5
	m	(J)I	c	getZ
	m	(Lhh;)Lgj;	c	cross
	m	()Lgj;	d	north
	m	(I)Lgj;	d	north
	m	(J)Lgj;	d	of
	m	(Lhh;)Lhh;	d	cross
	m	()Lgj;	e	south
	m	(I)Lgj;	e	south
	m	(J)J	e	getFlatIndex
	m	(Lhh;)Lhh;	e	subtract
	m	()Lgj;	f	west
	m	(I)Lgj;	f	west
	m	(Lhh;)Lhh;	f	offset
	m	()Lgj;	g	east
	m	(I)Lgj;	g	east
	m	()Lgj;	h	immutable
	m	(I)Lgj;	h	atY
	m	()Lgj$a;	i	mutable
	m	(I)Lhh;	i	east
	m	()Lhh;	j	east
	m	(I)Lhh;	j	west
	m	()Lhh;	k	west
	m	(I)Lhh;	k	south
	m	()Lhh;	l	south
	m	(I)Lhh;	l	north
	m	()Lhh;	m	north
	m	(I)Lhh;	m	below
	m	()Lhh;	n	below
	m	(I)Lhh;	n	above
	m	()Lhh;	o	above
	m	(I)Lhh;	o	multiply
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgj;	b	ZERO
	f	I	c	PACKED_Y_LENGTH
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	PACKED_X_LENGTH
	f	I	h	PACKED_Z_LENGTH
	f	J	i	PACKED_X_MASK
	f	J	j	PACKED_Y_MASK
	f	J	k	PACKED_Z_MASK
	f	I	l	Y_OFFSET
	f	I	m	Z_OFFSET
	f	I	n	X_OFFSET
c	gj$1	net/minecraft/core/BlockPos$1
	m	()Lgj;	a	computeNext
	f	Lgj$a;	a	nextPos
	f	I	b	counter
	f	I	c	val$limit
	f	I	d	val$minX
	f	Ljava/util/Random;	e	val$random
	f	I	f	val$width
	f	I	g	val$minY
	f	I	h	val$height
	f	I	i	val$minZ
	f	I	j	val$depth
c	gj$2	net/minecraft/core/BlockPos$2
	m	()Lgj;	a	computeNext
	f	I	a	val$originZ
	f	I	b	val$maxDepth
	f	I	c	val$reachX
	f	I	d	val$reachY
	f	I	e	val$reachZ
	f	I	f	val$originX
	f	I	g	val$originY
	f	Lgj$a;	h	cursor
	f	I	i	currentDepth
	f	I	j	maxX
	f	I	k	maxY
	f	I	l	x
	f	I	m	y
	f	Z	n	zMirror
c	gj$3	net/minecraft/core/BlockPos$3
	m	()Lgj;	a	computeNext
	f	I	a	val$end
	f	I	b	val$width
	f	I	c	val$height
	f	I	d	val$minX
	f	I	e	val$minY
	f	I	f	val$minZ
	f	Lgj$a;	g	cursor
	f	I	h	index
c	gj$4	net/minecraft/core/BlockPos$4
	m	()Lgj$a;	a	computeNext
	f	Lgo;	a	val$firstDirection
	f	Lgo;	b	val$secondDirection
	f	Lgj;	c	val$center
	f	I	d	val$radius
	f	[Lgo;	e	directions
	f	Lgj$a;	f	cursor
	f	I	g	legs
	f	I	h	leg
	f	I	i	legSize
	f	I	j	legIndex
	f	I	k	lastX
	f	I	l	lastY
	f	I	m	lastZ
c	gj$5	net/minecraft/core/BlockPos$5
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$core$Direction$Axis
c	gj$a	net/minecraft/core/BlockPos$MutableBlockPos
	m	(DDD)Lgj;	a	offset
	m	(I)Lgj;	a	multiply
	m	(Lcjm;)Lgj;	a	rotate
	m	(Lgh;III)Lgj$a;	a	set
	m	(Lgo$a;I)Lgj;	a	relative
	m	(Lgo$a;II)Lgj$a;	a	clamp
	m	(Lgo;I)Lgj;	a	relative
	m	(Lhh;III)Lgj$a;	a	setWithOffset
	m	(Lhh;Lgo;)Lgj$a;	a	setWithOffset
	m	(Lhh;Lhh;)Lgj$a;	a	setWithOffset
	m	(DDD)Lhh;	b	offset
	m	(III)Lgj;	b	offset
	m	(Lgo$a;I)Lhh;	b	relative
	m	(Lgo;)Lhh;	b	relative
	m	(Lgo;I)Lhh;	b	relative
	m	(DDD)Lgj$a;	c	set
	m	(III)Lhh;	c	offset
	m	(Lgo;)Lgj$a;	c	move
	m	(Lgo;I)Lgj$a;	c	move
	m	(III)Lgj$a;	d	set
	m	(Lhh;)Lhh;	d	cross
	m	(III)Lgj$a;	e	move
	m	(Lhh;)Lhh;	e	subtract
	m	(J)Lgj$a;	f	set
	m	(Lhh;)Lhh;	f	offset
	m	(Lhh;)Lgj$a;	g	set
	m	()Lgj;	h	immutable
	m	(Lhh;)Lgj$a;	h	move
	m	(I)Lhh;	i	east
	m	()Lhh;	j	east
	m	(I)Lhh;	j	west
	m	()Lhh;	k	west
	m	(I)Lhh;	k	south
	m	()Lhh;	l	south
	m	(I)Lhh;	l	north
	m	()Lhh;	m	north
	m	(I)Lhh;	m	below
	m	()Lhh;	n	below
	m	(I)Lhh;	n	above
	m	()Lhh;	o	above
	m	(I)Lhh;	o	multiply
	m	(I)Lgj$a;	p	setX
	m	(I)Lgj$a;	q	setY
	m	(I)Lgj$a;	r	setZ
	m	(I)Lhh;	s	setZ
	m	(I)Lhh;	t	setY
	m	(I)Lhh;	u	setX
c	gk	net/minecraft/core/BlockSource
	m	()D	a	x
	m	()D	b	y
	m	()D	c	z
	m	()Lgj;	d	getPos
	m	()Lcov;	e	getBlockState
	m	()Lcmr;	f	getEntity
	m	()Ladw;	g	getLevel
c	gl	net/minecraft/core/BlockSourceImpl
	m	()D	a	x
	m	()D	b	y
	m	()D	c	z
	m	()Lgj;	d	getPos
	m	()Lcov;	e	getBlockState
	m	()Lcmr;	f	getEntity
	m	()Ladw;	g	getLevel
	f	Ladw;	a	level
	f	Lgj;	b	pos
c	gm	net/minecraft/core/Cursor3D
	m	()Z	a	advance
	m	()I	b	nextX
	m	()I	c	nextY
	m	()I	d	nextZ
	m	()I	e	getNextType
	f	I	a	TYPE_INSIDE
	f	I	b	TYPE_FACE
	f	I	c	TYPE_EDGE
	f	I	d	TYPE_CORNER
	f	I	e	originX
	f	I	f	originY
	f	I	g	originZ
	f	I	h	width
	f	I	i	height
	f	I	j	depth
	f	I	k	end
	f	I	l	index
	f	I	m	x
	f	I	n	y
	f	I	o	z
c	gn	net/minecraft/core/DefaultedRegistry
	m	()Lyt;	a	getDefaultKey
	m	(I)Ljava/lang/Object;	a	byId
	m	(ILys;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lgs;	a	registerMapping
	m	(Ljava/lang/Object;)I	a	getId
	m	(Ljava/util/Random;)Ljava/util/Optional;	a	getRandom
	m	(Lyt;)Ljava/lang/Object;	a	get
	m	(Ljava/lang/Object;)Lyt;	b	getKey
	m	(Lyt;)Ljava/util/Optional;	b	getOptional
	m	()Ljava/util/Optional;	s	lambda$getRandom$0
	f	Lyt;	bC	defaultKey
	f	Lgs;	bD	defaultValue
c	go	net/minecraft/core/Direction
	m	()Lg;	a	getRotation
	m	(D)Lgo;	a	fromYRot
	m	(DDD)Lgo;	a	getNearest
	m	(F)Z	a	isFacingAngle
	m	(FFF)Lgo;	a	getNearest
	m	(I)Lgo;	a	from3DDataValue
	m	(III)Lgo;	a	fromNormal
	m	(Laxk;)[Lgo;	a	orderedByNearest
	m	(Laxk;Lgo$a;)Lgo;	a	getFacingAxis
	m	(Ld;Lgo;)Lgo;	a	rotate
	m	(Lgj;)Lgo;	a	fromNormal
	m	(Lgo$a;)Lgo;	a	getClockWise
	m	(Lgo$a;Lgo$b;)Lgo;	a	fromAxisAndDirection
	m	(Lgo$b;Lgo$a;)Lgo;	a	get
	m	(Lgo;)Lcom/mojang/serialization/DataResult;	a	verifyVertical
	m	(Lgo;Lgo;)Lgo;	a	lambda$static$8
	m	(Lgo;Lgo;Lgo;)[Lgo;	a	makeDirectionArray
	m	(Ljava/lang/String;)Lgo;	a	byName
	m	(Ljava/util/Random;)Lgo;	a	getRandom
	m	()I	b	get3DDataValue
	m	(I)Lgo;	b	from2DDataValue
	m	(Lgo$a;)Lgo;	b	getCounterClockWise
	m	(Lgo;)Lgo;	b	lambda$static$7
	m	()Ljava/lang/String;	c	getSerializedName
	m	(I)[Lgo;	c	lambda$static$5
	m	(Lgo;)Ljava/lang/Long;	c	lambda$static$6
	m	()I	d	get2DDataValue
	m	(I)[Lgo;	d	lambda$static$2
	m	(Lgo;)I	d	lambda$static$4
	m	()Lgo$b;	e	getAxisDirection
	m	(Lgo;)Z	e	lambda$static$3
	m	()Lgo;	f	getOpposite
	m	(Lgo;)I	f	lambda$static$1
	m	()Lgo;	g	getClockWise
	m	(Lgo;)Lgo;	g	lambda$static$0
	m	()Lgo;	h	getCounterClockWise
	m	()I	i	getStepX
	m	()I	j	getStepY
	m	()I	k	getStepZ
	m	()Lk;	l	step
	m	()Ljava/lang/String;	m	getName
	m	()Lgo$a;	n	getAxis
	m	()F	o	toYRot
	m	()Lhh;	p	getNormal
	m	()Lgo;	q	getClockWiseX
	m	()Lgo;	r	getCounterClockWiseX
	m	()Lgo;	s	getClockWiseZ
	m	()Lgo;	t	getCounterClockWiseZ
	m	()[Lgo;	u	$values
	f	Lgo;	a	DOWN
	f	Lgo;	b	UP
	f	Lgo;	c	NORTH
	f	Lgo;	d	SOUTH
	f	Lgo;	e	WEST
	f	Lgo;	f	EAST
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Lcom/mojang/serialization/Codec;	h	VERTICAL_CODEC
	f	I	i	data3d
	f	I	j	oppositeIndex
	f	I	k	data2d
	f	Ljava/lang/String;	l	name
	f	Lgo$a;	m	axis
	f	Lgo$b;	n	axisDirection
	f	Lhh;	o	normal
	f	[Lgo;	p	VALUES
	f	Ljava/util/Map;	q	BY_NAME
	f	[Lgo;	r	BY_3D_DATA
	f	[Lgo;	s	BY_2D_DATA
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	t	BY_NORMAL
	f	[Lgo;	u	$VALUES
c	go$1	net/minecraft/core/Direction$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$core$Direction$Axis
c	go$a	net/minecraft/core/Direction$Axis
	m	()Ljava/lang/String;	a	getName
	m	(DDD)D	a	choose
	m	(III)I	a	choose
	m	(Lgo$a;)Lgo$a;	a	lambda$static$0
	m	(Lgo;)Z	a	test
	m	(Ljava/lang/String;)Lgo$a;	a	byName
	m	(Ljava/util/Random;)Lgo$a;	a	getRandom
	m	()Z	b	isVertical
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	isHorizontal
	m	()Lgo$c;	e	getPlane
	m	()[Lgo$a;	f	$values
	f	Lgo$a;	a	X
	f	Lgo$a;	b	Y
	f	Lgo$a;	c	Z
	f	[Lgo$a;	d	VALUES
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/util/Map;	f	BY_NAME
	f	Ljava/lang/String;	g	name
	f	[Lgo$a;	h	$VALUES
c	go$a$1	net/minecraft/core/Direction$Axis$1
	m	(DDD)D	a	choose
	m	(III)I	a	choose
c	go$a$2	net/minecraft/core/Direction$Axis$2
	m	(DDD)D	a	choose
	m	(III)I	a	choose
c	go$a$3	net/minecraft/core/Direction$Axis$3
	m	(DDD)D	a	choose
	m	(III)I	a	choose
c	go$b	net/minecraft/core/Direction$AxisDirection
	m	()I	a	getStep
	m	()Ljava/lang/String;	b	getName
	m	()Lgo$b;	c	opposite
	m	()[Lgo$b;	d	$values
	f	Lgo$b;	a	POSITIVE
	f	Lgo$b;	b	NEGATIVE
	f	I	c	step
	f	Ljava/lang/String;	d	name
	f	[Lgo$b;	e	$VALUES
c	go$c	net/minecraft/core/Direction$Plane
	m	()Ljava/util/stream/Stream;	a	stream
	m	(Lgo;)Z	a	test
	m	(Ljava/util/Random;)Lgo;	a	getRandomDirection
	m	()[Lgo$c;	b	$values
	m	(Ljava/util/Random;)Lgo$a;	b	getRandomAxis
	f	Lgo$c;	a	HORIZONTAL
	f	Lgo$c;	b	VERTICAL
	f	[Lgo;	c	faces
	f	[Lgo$a;	d	axis
	f	[Lgo$c;	e	$VALUES
c	gp	net/minecraft/core/Direction8
	m	()Ljava/util/Set;	a	getDirections
	m	()[Lgp;	b	$values
	f	Lgp;	a	NORTH
	f	Lgp;	b	NORTH_EAST
	f	Lgp;	c	EAST
	f	Lgp;	d	SOUTH_EAST
	f	Lgp;	e	SOUTH
	f	Lgp;	f	SOUTH_WEST
	f	Lgp;	g	WEST
	f	Lgp;	h	NORTH_WEST
	f	Ljava/util/Set;	i	directions
	f	[Lgp;	j	$VALUES
c	gq	net/minecraft/core/FrontAndTop
	m	()Lgo;	a	front
	m	(Lgo;Lgo;)Lgq;	a	fromFrontAndTop
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
	m	()Lgo;	b	top
	m	(Lgo;Lgo;)I	b	lookupKey
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lgq;	d	$values
	f	Lgq;	a	DOWN_EAST
	f	Lgq;	b	DOWN_NORTH
	f	Lgq;	c	DOWN_SOUTH
	f	Lgq;	d	DOWN_WEST
	f	Lgq;	e	UP_EAST
	f	Lgq;	f	UP_NORTH
	f	Lgq;	g	UP_SOUTH
	f	Lgq;	h	UP_WEST
	f	Lgq;	i	WEST_UP
	f	Lgq;	j	EAST_UP
	f	Lgq;	k	NORTH_UP
	f	Lgq;	l	SOUTH_UP
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	m	LOOKUP_TOP_FRONT
	f	Ljava/lang/String;	n	name
	f	Lgo;	o	top
	f	Lgo;	p	front
	f	[Lgq;	q	$VALUES
c	gr	net/minecraft/core/GlobalPos
	m	()Lys;	a	dimension
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lys;Lgj;)Lgr;	a	of
	m	()Lgj;	b	pos
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lys;	b	dimension
	f	Lgj;	c	pos
c	gs	net/minecraft/core/Holder
	m	()Ljava/lang/Object;	a	value
	m	(Laif;)Z	a	is
	m	(Lgs;)Lgs;	a	hackyErase
	m	(Lhb;)Z	a	isValidInRegistry
	m	(Ljava/lang/Object;)Lgs;	a	direct
	m	(Ljava/util/function/Predicate;)Z	a	is
	m	(Lys;)Z	a	is
	m	(Lyt;)Z	a	is
	m	()Z	b	isBound
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Lgs$b;	f	kind
c	gs$a	net/minecraft/core/Holder$Direct
	m	()Ljava/lang/Object;	a	value
	m	(Laif;)Z	a	is
	m	(Lhb;)Z	a	isValidInRegistry
	m	(Ljava/util/function/Predicate;)Z	a	is
	m	(Lys;)Z	a	is
	m	(Lyt;)Z	a	is
	m	()Z	b	isBound
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Lgs$b;	f	kind
	f	Ljava/lang/Object;	a	value
c	gs$b	net/minecraft/core/Holder$Kind
	m	()[Lgs$b;	a	$values
	f	Lgs$b;	a	REFERENCE
	f	Lgs$b;	b	DIRECT
	f	[Lgs$b;	c	$VALUES
c	gs$c	net/minecraft/core/Holder$Reference
	m	()Ljava/lang/Object;	a	value
	m	(Laif;)Z	a	is
	m	(Lhb;)Z	a	isValidInRegistry
	m	(Lhb;Ljava/lang/Object;)Lgs$c;	a	createIntrusive
	m	(Lhb;Lys;)Lgs$c;	a	createStandAlone
	m	(Ljava/util/Collection;)V	a	bindTags
	m	(Ljava/util/function/Predicate;)Z	a	is
	m	(Lys;)Z	a	is
	m	(Lys;Ljava/lang/Object;)V	a	bind
	m	(Lyt;)Z	a	is
	m	()Z	b	isBound
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Lgs$b;	f	kind
	m	()Lys;	g	key
	f	Lhb;	a	registry
	f	Ljava/util/Set;	b	tags
	f	Lgs$c$a;	c	type
	f	Lys;	d	key
	f	Ljava/lang/Object;	e	value
c	gs$c$a	net/minecraft/core/Holder$Reference$Type
	m	()[Lgs$c$a;	a	$values
	f	Lgs$c$a;	a	STAND_ALONE
	f	Lgs$c$a;	b	INTRUSIVE
	f	[Lgs$c$a;	c	$VALUES
c	gt	net/minecraft/core/HolderSet
	m	()Ljava/util/stream/Stream;	a	stream
	m	(I)Lgs;	a	get
	m	(Lgs;)Z	a	contains
	m	(Lhb;)Z	a	isValidInRegistry
	m	(Ljava/util/List;)Lgt$a;	a	direct
	m	(Ljava/util/Random;)Ljava/util/Optional;	a	getRandomElement
	m	(Ljava/util/function/Function;Ljava/util/List;)Lgt$a;	a	direct
	m	(Ljava/util/function/Function;[Ljava/lang/Object;)Lgt$a;	a	direct
	m	([Lgs;)Lgt$a;	a	direct
	m	()I	b	size
	m	()Lcom/mojang/datafixers/util/Either;	c	unwrap
c	gt$a	net/minecraft/core/HolderSet$Direct
	m	(Lgs;)Z	a	contains
	m	()Lcom/mojang/datafixers/util/Either;	c	unwrap
	m	()Ljava/util/List;	d	contents
	f	Ljava/util/List;	a	contents
	f	Ljava/util/Set;	b	contentsSet
c	gt$b	net/minecraft/core/HolderSet$ListBacked
	m	()Ljava/util/stream/Stream;	a	stream
	m	(I)Lgs;	a	get
	m	(Lhb;)Z	a	isValidInRegistry
	m	(Ljava/util/Random;)Ljava/util/Optional;	a	getRandomElement
	m	()I	b	size
	m	()Ljava/util/List;	d	contents
c	gt$c	net/minecraft/core/HolderSet$Named
	m	(Lgs;)Z	a	contains
	m	(Lhb;)Z	a	isValidInRegistry
	m	(Ljava/util/List;)V	b	bind
	m	()Lcom/mojang/datafixers/util/Either;	c	unwrap
	m	()Ljava/util/List;	d	contents
	m	()Laif;	e	key
	f	Lhb;	a	registry
	f	Laif;	b	key
	f	Ljava/util/List;	c	contents
c	gu	net/minecraft/core/IdMap
	m	(I)Ljava/lang/Object;	a	byId
	m	(Ljava/lang/Object;)I	a	getId
	m	()I	b	size
	m	(I)Ljava/lang/Object;	b	byIdOrThrow
	f	I	a	DEFAULT
c	gv	net/minecraft/core/IdMapper
	m	(I)Ljava/lang/Object;	a	byId
	m	(Ljava/lang/Object;)I	a	getId
	m	(Ljava/lang/Object;I)V	a	addMapping
	m	()I	b	size
	m	(Ljava/lang/Object;)V	b	add
	m	(I)Z	c	contains
	f	I	b	nextId
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	c	tToId
	f	Ljava/util/List;	d	idToT
c	gw	net/minecraft/core/MappedRegistry
	m	()Ljava/util/List;	a	holdersInOrder
	m	(I)Ljava/lang/Object;	a	byId
	m	(ILys;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lgs;	a	registerMapping
	m	(ILys;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;Z)Lgs;	a	registerMapping
	m	(Laif;)Z	a	isKnownTagName
	m	(Lgs$c;)Ljava/lang/Object;	a	getValueFromNullable
	m	(Lgt$c;)V	a	lambda$resetTags$12
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenCustomHashMap;)V	a	lambda$new$0
	m	(Ljava/lang/Object;)I	a	getId
	m	(Ljava/util/Map$Entry;)Lyt;	a	lambda$freeze$5
	m	(Ljava/util/Map;)V	a	bindTags
	m	(Ljava/util/Map;Laif;Ljava/util/List;)V	a	lambda$bindTags$11
	m	(Ljava/util/Map;Lgs$c;)V	a	lambda$bindTags$8
	m	(Ljava/util/OptionalInt;Lys;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lgs;	a	registerOrOverride
	m	(Ljava/util/Random;)Ljava/util/Optional;	a	getRandom
	m	(Lys;)Ljava/lang/Object;	a	get
	m	(Lys;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lgs;	a	register
	m	(Lyt;)Ljava/lang/Object;	a	get
	m	()I	b	size
	m	(Laif;)Lgt$c;	b	getOrCreateTag
	m	(Lgs$c;)V	b	lambda$resetTags$13
	m	(Ljava/lang/Object;)Lyt;	b	getKey
	m	(Ljava/util/Map$Entry;)Z	b	lambda$freeze$4
	m	(Ljava/util/Map;Laif;Ljava/util/List;)V	b	lambda$bindTags$9
	m	(Lys;)Ljava/util/Optional;	b	getHolder
	m	()Lcom/mojang/serialization/Lifecycle;	c	elementsLifecycle
	m	(I)Ljava/util/Optional;	c	getHolder
	m	(Laif;)Ljava/util/Optional;	c	getTag
	m	(Lgs$c;)Z	c	lambda$freeze$6
	m	(Ljava/lang/Object;)Ljava/util/Optional;	c	getResourceKey
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	c	lambda$getTags$3
	m	(Lys;)Lgs;	c	getOrCreateHolder
	m	(Lyt;)Z	c	containsKey
	m	()Ljava/util/Set;	d	keySet
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle;	d	lifecycle
	m	(Lys;)Z	d	containsKey
	m	()Ljava/util/Set;	e	entrySet
	m	(Laif;)Lgt$c;	e	createTag
	m	(Ljava/lang/Object;)Lgs$c;	e	createIntrusiveHolder
	m	()Ljava/util/stream/Stream;	f	holders
	m	(Laif;)Ljava/lang/String;	f	lambda$bindTags$10
	m	(Ljava/lang/Object;)Lgs$c;	f	lambda$createIntrusiveHolder$7
	m	()Ljava/util/stream/Stream;	g	getTags
	m	()Ljava/util/stream/Stream;	h	getTagNames
	m	(Lys;)V	h	validateWrite
	m	()Z	i	isEmpty
	m	(Lys;)Lgs$c;	i	lambda$getOrCreateHolder$2
	m	()Lhb;	j	freeze
	m	(Lys;)Lgs$c;	j	lambda$registerMapping$1
	m	()V	k	resetTags
	f	Lorg/slf4j/Logger;	bC	LOGGER
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	bD	byId
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	bE	toId
	f	Ljava/util/Map;	bF	byLocation
	f	Ljava/util/Map;	bG	byKey
	f	Ljava/util/Map;	bH	byValue
	f	Ljava/util/Map;	bI	lifecycles
	f	Lcom/mojang/serialization/Lifecycle;	bJ	elementsLifecycle
	f	Ljava/util/Map;	bK	tags
	f	Z	bL	frozen
	f	Ljava/util/function/Function;	bM	customHolderProvider
	f	Ljava/util/Map;	bN	intrusiveHolderCache
	f	Ljava/util/List;	bO	holdersInOrder
	f	I	bP	nextId
c	gx	net/minecraft/core/NonNullList
	m	()Lgx;	a	create
	m	(I)Lgx;	a	createWithCapacity
	m	(ILjava/lang/Object;)Lgx;	a	withSize
	m	(Ljava/lang/Object;[Ljava/lang/Object;)Lgx;	a	of
	f	Ljava/util/List;	a	list
	f	Ljava/lang/Object;	b	defaultValue
c	gy	net/minecraft/core/Position
	m	()D	a	x
	m	()D	b	y
	m	()D	c	z
c	gz	net/minecraft/core/PositionImpl
	m	()D	a	x
	m	()D	b	y
	m	()D	c	z
	f	D	a	x
	f	D	b	y
	f	D	c	z
c	ha	net/minecraft/core/QuartPos
	m	(I)I	a	fromBlock
	m	(I)I	b	quartLocal
	m	(I)I	c	toBlock
	m	(I)I	d	fromSection
	m	(I)I	e	toSection
	f	I	a	BITS
	f	I	b	SIZE
	f	I	c	MASK
	f	I	d	SECTION_TO_QUARTS_BITS
c	hb	net/minecraft/core/Registry
	m	(Lhb;)Lbps;	A	lambda$static$28
	m	(Lhb;)Lbpu;	B	lambda$static$27
	m	(Lhb;)Lbha;	C	lambda$static$26
	m	(Lhb;)Lbfy;	D	lambda$static$25
	m	(Lhb;)Lbhv;	E	lambda$static$24
	m	(Lhb;)Lbnz;	F	lambda$static$23
	m	(Lhb;)Lbob;	G	lambda$static$22
	m	(Lhb;)Laht;	H	lambda$static$21
	m	(Lhb;)Lctd;	I	lambda$static$20
	m	(Lhb;)Layu;	J	lambda$static$19
	m	(Lhb;)Lbxq;	K	lambda$static$18
	m	(Lhb;)Lbxr;	L	lambda$static$17
	m	(Lhb;)Lbrt;	M	lambda$static$16
	m	(Lhb;)Ldhj;	N	lambda$static$15
	m	(Lhb;)Ldhq;	O	lambda$static$14
	m	(Lhb;)Lcqt;	P	lambda$static$13
	m	(Lhb;)Lyt;	Q	lambda$static$12
	m	(Lhb;)Lble;	R	lambda$static$11
	m	(Lhb;)Lcmt;	S	lambda$static$10
	m	(Lhb;)Lib;	T	lambda$static$9
	m	(Lhb;)Lbwr;	U	lambda$static$8
	m	(Lhb;)Lbus;	V	lambda$static$7
	m	(Lhb;)Laxo;	W	lambda$static$6
	m	(Lhb;)Lbyq;	X	lambda$static$5
	m	(Lhb;)Lcdq;	Y	lambda$static$4
	m	(Lhb;)Laxc;	Z	lambda$static$3
	m	(Laif;)Z	a	isKnownTagName
	m	(Lcom/mojang/serialization/DynamicOps;Lyt;)Ljava/lang/Object;	a	lambda$keys$70
	m	(Lgs;)Lcom/mojang/serialization/Lifecycle;	a	lambda$holderByNameCodec$69
	m	(Lhb$a;Lhi;)Ljava/lang/Object;	a	lambda$internalRegister$56
	m	(Lhb;)V	a	checkRegistry
	m	(Lhb;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	registerMapping
	m	(Lhb;Lhb;)V	a	lambda$checkRegistry$55
	m	(Lhb;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	register
	m	(Lhb;Lys;Ljava/lang/Object;)Ljava/lang/Object;	a	register
	m	(Lhb;Lyt;Ljava/lang/Object;)Ljava/lang/Object;	a	register
	m	(Ljava/lang/Object;)I	a	getId
	m	(Ljava/lang/String;)Lys;	a	createRegistryKey
	m	(Ljava/util/Map;)V	a	bindTags
	m	(Ljava/util/Random;)Ljava/util/Optional;	a	getRandom
	m	(Lys;)Ljava/lang/Object;	a	get
	m	(Lys;Lcom/mojang/serialization/Lifecycle;Lhb$a;)Lhb;	a	registerSimple
	m	(Lys;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Function;Lhb$a;)Lhb;	a	registerSimple
	m	(Lys;Lhb$a;)Lhb;	a	registerSimple
	m	(Lys;Lhi;Lhb$a;Lcom/mojang/serialization/Lifecycle;)Lhi;	a	internalRegister
	m	(Lys;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Lhb$a;)Lgn;	a	registerDefaulted
	m	(Lys;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Function;Lhb$a;)Lgn;	a	registerDefaulted
	m	(Lys;Ljava/lang/String;Lhb$a;)Lgn;	a	registerDefaulted
	m	(Lys;Ljava/lang/String;Ljava/util/function/Function;Lhb$a;)Lgn;	a	registerDefaulted
	m	(Lyt;)Ljava/lang/Object;	a	get
	m	(Lyt;Ljava/util/function/Supplier;)V	a	lambda$static$54
	m	(Lhb;)Ldiw;	aa	lambda$static$2
	m	(Lhb;)Lahj;	ab	lambda$static$1
	m	(Lhb;)Lcsy;	ac	lambda$static$0
	m	(Laif;)Lgt$c;	b	getOrCreateTag
	m	(Lgs;)Lcom/mojang/serialization/Lifecycle;	b	lambda$holderByNameCodec$68
	m	(Lhb;)Ldgr;	b	lambda$static$53
	m	(Ljava/lang/Object;)Lyt;	b	getKey
	m	(Lys;)Ljava/util/Optional;	b	getHolder
	m	(Lyt;)Ljava/util/Optional;	b	getOptional
	m	()Lcom/mojang/serialization/Lifecycle;	c	elementsLifecycle
	m	(I)Ljava/util/Optional;	c	getHolder
	m	(Laif;)Ljava/util/Optional;	c	getTag
	m	(Lgs;)Lcom/mojang/serialization/DataResult;	c	lambda$holderByNameCodec$67
	m	(Lhb;)Ldhv;	c	lambda$static$52
	m	(Ljava/lang/Object;)Ljava/util/Optional;	c	getResourceKey
	m	(Lys;)Lgs;	c	getOrCreateHolder
	m	(Lyt;)Z	c	containsKey
	m	()Ljava/util/Set;	d	keySet
	m	(Laif;)Ljava/lang/Iterable;	d	getTagOrEmpty
	m	(Lgs;)Lcom/mojang/serialization/DataResult;	d	lambda$holderByNameCodec$66
	m	(Lhb;)Lcom/mojang/serialization/Codec;	d	lambda$static$51
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle;	d	lifecycle
	m	(Lys;)Z	d	containsKey
	m	(Lyt;)Lcom/mojang/serialization/DataResult;	d	lambda$holderByNameCodec$65
	m	()Ljava/util/Set;	e	entrySet
	m	(Lhb;)Lcom/mojang/serialization/Codec;	e	lambda$static$50
	m	(Ljava/lang/Object;)Lgs$c;	e	createIntrusiveHolder
	m	(Lys;)Ljava/util/Optional;	e	getOptional
	m	(Lyt;)Lcom/mojang/serialization/DataResult;	e	lambda$holderByNameCodec$64
	m	()Ljava/util/stream/Stream;	f	holders
	m	(Lhb;)Ldbg;	f	lambda$static$49
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle;	f	lambda$byNameCodec$63
	m	(Lys;)Ljava/lang/Object;	f	getOrThrow
	m	(Lyt;)Lcom/mojang/serialization/DataResult;	f	lambda$byNameCodec$59
	m	()Ljava/util/stream/Stream;	g	getTags
	m	(Lhb;)Ldco;	g	lambda$static$48
	m	(Ljava/lang/Object;)I	g	lambda$byNameCodec$62
	m	(Lys;)Lgs;	g	getHolderOrThrow
	m	(Lyt;)Lcom/mojang/serialization/DataResult;	g	lambda$byNameCodec$58
	m	()Ljava/util/stream/Stream;	h	getTagNames
	m	(Lhb;)Ldcz;	h	lambda$static$47
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	h	lambda$byNameCodec$61
	m	(Lys;)Ljava/lang/IllegalStateException;	h	lambda$getHolderOrThrow$71
	m	(Lhb;)Ldbq;	i	lambda$static$46
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	i	lambda$byNameCodec$60
	m	(Lys;)Ljava/lang/String;	i	lambda$new$57
	m	()Lhb;	j	freeze
	m	(Lhb;)Ldbz;	j	lambda$static$45
	m	()V	k	resetTags
	m	(Lhb;)Ldeh;	k	lambda$static$44
	m	()V	l	freezeBuiltins
	m	(Lhb;)Ldga;	l	lambda$static$43
	m	()Lys;	m	key
	m	(Lhb;)Ldgh;	m	lambda$static$42
	m	()Lcom/mojang/serialization/Lifecycle;	n	lifecycle
	m	(Lhb;)Lczd;	n	lambda$static$41
	m	()Lcom/mojang/serialization/Codec;	o	byNameCodec
	m	(Lhb;)Lcxg;	o	lambda$static$40
	m	()Lcom/mojang/serialization/Codec;	p	holderByNameCodec
	m	(Lhb;)Lcwb;	p	lambda$static$39
	m	()Ljava/util/stream/Stream;	q	stream
	m	(Lhb;)Lcve;	q	lambda$static$38
	m	()Lgu;	r	asHolderIdMap
	m	(Lhb;)Lddh;	r	lambda$static$37
	m	(Lhb;)Lavp;	s	lambda$static$36
	m	(Lhb;)Lavn;	t	lambda$static$35
	m	(Lhb;)Ldox;	u	lambda$static$34
	m	(Lhb;)Ldoi;	v	lambda$static$33
	m	(Lhb;)Ldop;	w	lambda$static$32
	m	(Lhb;)Ldnw;	x	lambda$static$31
	m	(Lhb;)Ldmo;	y	lambda$static$30
	m	(Lhb;)Ldlv;	z	lambda$static$29
	f	Lys;	A	VILLAGER_TYPE_REGISTRY
	f	Lys;	B	VILLAGER_PROFESSION_REGISTRY
	f	Lys;	C	POINT_OF_INTEREST_TYPE_REGISTRY
	f	Lys;	D	MEMORY_MODULE_TYPE_REGISTRY
	f	Lys;	E	SENSOR_TYPE_REGISTRY
	f	Lys;	F	SCHEDULE_REGISTRY
	f	Lys;	G	ACTIVITY_REGISTRY
	f	Lys;	H	LOOT_ENTRY_REGISTRY
	f	Lys;	I	LOOT_FUNCTION_REGISTRY
	f	Lys;	J	LOOT_ITEM_REGISTRY
	f	Lys;	K	LOOT_NUMBER_PROVIDER_REGISTRY
	f	Lys;	L	LOOT_NBT_PROVIDER_REGISTRY
	f	Lys;	M	LOOT_SCORE_PROVIDER_REGISTRY
	f	Lys;	N	DIMENSION_TYPE_REGISTRY
	f	Lys;	O	DIMENSION_REGISTRY
	f	Lys;	P	LEVEL_STEM_REGISTRY
	f	Lgn;	Q	GAME_EVENT
	f	Lhb;	R	SOUND_EVENT
	f	Lgn;	S	FLUID
	f	Lhb;	T	MOB_EFFECT
	f	Lgn;	U	BLOCK
	f	Lhb;	V	ENCHANTMENT
	f	Lgn;	W	ENTITY_TYPE
	f	Lgn;	X	ITEM
	f	Lgn;	Y	POTION
	f	Lhb;	Z	PARTICLE_TYPE
	f	Lhb;	aA	FLOAT_PROVIDER_TYPES
	f	Lys;	aB	INT_PROVIDER_TYPE_REGISTRY
	f	Lhb;	aC	INT_PROVIDER_TYPES
	f	Lys;	aD	HEIGHT_PROVIDER_TYPE_REGISTRY
	f	Lhb;	aE	HEIGHT_PROVIDER_TYPES
	f	Lys;	aF	BLOCK_PREDICATE_TYPE_REGISTRY
	f	Lhb;	aG	BLOCK_PREDICATE_TYPES
	f	Lys;	aH	NOISE_GENERATOR_SETTINGS_REGISTRY
	f	Lys;	aI	CONFIGURED_CARVER_REGISTRY
	f	Lys;	aJ	CONFIGURED_FEATURE_REGISTRY
	f	Lys;	aK	PLACED_FEATURE_REGISTRY
	f	Lys;	aL	CONFIGURED_STRUCTURE_FEATURE_REGISTRY
	f	Lys;	aM	STRUCTURE_SET_REGISTRY
	f	Lys;	aN	PROCESSOR_LIST_REGISTRY
	f	Lys;	aO	TEMPLATE_POOL_REGISTRY
	f	Lys;	aP	BIOME_REGISTRY
	f	Lys;	aQ	NOISE_REGISTRY
	f	Lys;	aR	DENSITY_FUNCTION_REGISTRY
	f	Lys;	aS	CARVER_REGISTRY
	f	Lhb;	aT	CARVER
	f	Lys;	aU	FEATURE_REGISTRY
	f	Lhb;	aV	FEATURE
	f	Lys;	aW	STRUCTURE_FEATURE_REGISTRY
	f	Lhb;	aX	STRUCTURE_FEATURE
	f	Lys;	aY	STRUCTURE_PLACEMENT_TYPE_REGISTRY
	f	Lhb;	aZ	STRUCTURE_PLACEMENT_TYPE
	f	Lhb;	aa	BLOCK_ENTITY_TYPE
	f	Lgn;	ab	MOTIVE
	f	Lhb;	ac	CUSTOM_STAT
	f	Lgn;	ad	CHUNK_STATUS
	f	Lhb;	ae	RULE_TEST
	f	Lhb;	af	POS_RULE_TEST
	f	Lhb;	ag	MENU
	f	Lhb;	ah	RECIPE_TYPE
	f	Lhb;	ai	RECIPE_SERIALIZER
	f	Lhb;	aj	ATTRIBUTE
	f	Lhb;	ak	POSITION_SOURCE_TYPE
	f	Lhb;	al	STAT_TYPE
	f	Lgn;	am	VILLAGER_TYPE
	f	Lgn;	an	VILLAGER_PROFESSION
	f	Lgn;	ao	POINT_OF_INTEREST_TYPE
	f	Lgn;	ap	MEMORY_MODULE_TYPE
	f	Lgn;	aq	SENSOR_TYPE
	f	Lhb;	ar	SCHEDULE
	f	Lhb;	as	ACTIVITY
	f	Lhb;	at	LOOT_POOL_ENTRY_TYPE
	f	Lhb;	au	LOOT_FUNCTION_TYPE
	f	Lhb;	av	LOOT_CONDITION_TYPE
	f	Lhb;	aw	LOOT_NUMBER_PROVIDER_TYPE
	f	Lhb;	ax	LOOT_NBT_PROVIDER_TYPE
	f	Lhb;	ay	LOOT_SCORE_PROVIDER_TYPE
	f	Lys;	az	FLOAT_PROVIDER_TYPE_REGISTRY
	f	Lhb;	bA	STRUCTURE_PROCESSOR
	f	Lhb;	bB	STRUCTURE_POOL_ELEMENT
	f	Lorg/slf4j/Logger;	bC	LOGGER
	f	Ljava/util/Map;	bD	LOADERS
	f	Lys;	bE	key
	f	Lcom/mojang/serialization/Lifecycle;	bF	lifecycle
	f	Lyt;	b	ROOT_REGISTRY_NAME
	f	Lys;	ba	STRUCTURE_PIECE_REGISTRY
	f	Lhb;	bb	STRUCTURE_PIECE
	f	Lys;	bc	PLACEMENT_MODIFIER_REGISTRY
	f	Lhb;	bd	PLACEMENT_MODIFIERS
	f	Lys;	be	BLOCK_STATE_PROVIDER_TYPE_REGISTRY
	f	Lys;	bf	FOLIAGE_PLACER_TYPE_REGISTRY
	f	Lys;	bg	TRUNK_PLACER_TYPE_REGISTRY
	f	Lys;	bh	TREE_DECORATOR_TYPE_REGISTRY
	f	Lys;	bi	FEATURE_SIZE_TYPE_REGISTRY
	f	Lys;	bj	BIOME_SOURCE_REGISTRY
	f	Lys;	bk	CHUNK_GENERATOR_REGISTRY
	f	Lys;	bl	CONDITION_REGISTRY
	f	Lys;	bm	RULE_REGISTRY
	f	Lys;	bn	DENSITY_FUNCTION_TYPE_REGISTRY
	f	Lys;	bo	STRUCTURE_PROCESSOR_REGISTRY
	f	Lys;	bp	STRUCTURE_POOL_ELEMENT_REGISTRY
	f	Lhb;	bq	BLOCKSTATE_PROVIDER_TYPES
	f	Lhb;	br	FOLIAGE_PLACER_TYPES
	f	Lhb;	bs	TRUNK_PLACER_TYPES
	f	Lhb;	bt	TREE_DECORATOR_TYPES
	f	Lhb;	bu	FEATURE_SIZE_TYPES
	f	Lhb;	bv	BIOME_SOURCE
	f	Lhb;	bw	CHUNK_GENERATOR
	f	Lhb;	bx	CONDITION
	f	Lhb;	by	RULE
	f	Lhb;	bz	DENSITY_FUNCTION_TYPES
	f	Lhi;	c	WRITABLE_REGISTRY
	f	Lhb;	d	REGISTRY
	f	Lys;	e	SOUND_EVENT_REGISTRY
	f	Lys;	f	FLUID_REGISTRY
	f	Lys;	g	MOB_EFFECT_REGISTRY
	f	Lys;	h	BLOCK_REGISTRY
	f	Lys;	i	ENCHANTMENT_REGISTRY
	f	Lys;	j	ENTITY_TYPE_REGISTRY
	f	Lys;	k	ITEM_REGISTRY
	f	Lys;	l	POTION_REGISTRY
	f	Lys;	m	PARTICLE_TYPE_REGISTRY
	f	Lys;	n	BLOCK_ENTITY_TYPE_REGISTRY
	f	Lys;	o	MOTIVE_REGISTRY
	f	Lys;	p	CUSTOM_STAT_REGISTRY
	f	Lys;	q	CHUNK_STATUS_REGISTRY
	f	Lys;	r	RULE_TEST_REGISTRY
	f	Lys;	s	POS_RULE_TEST_REGISTRY
	f	Lys;	t	MENU_REGISTRY
	f	Lys;	u	RECIPE_TYPE_REGISTRY
	f	Lys;	v	RECIPE_SERIALIZER_REGISTRY
	f	Lys;	w	ATTRIBUTE_REGISTRY
	f	Lys;	x	GAME_EVENT_REGISTRY
	f	Lys;	y	POSITION_SOURCE_TYPE_REGISTRY
	f	Lys;	z	STAT_TYPE_REGISTRY
c	hb$1	net/minecraft/core/Registry$1
	m	(I)Ljava/lang/Object;	a	byId
	m	(Lgs$c;)Lgs;	a	lambda$iterator$0
	m	(Lgs;)I	a	getId
	m	(Ljava/lang/Object;)I	a	getId
	m	()I	b	size
	m	(I)Lgs;	c	byId
	f	Lhb;	b	this$0
c	hb$a	net/minecraft/core/Registry$RegistryBootstrap
c	hc	net/minecraft/core/RegistryAccess
	m	()Ljava/lang/Iterable;	a	knownRegistries
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lys;Lcom/mojang/serialization/Codec;)V	a	put
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lys;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V	a	put
	m	(Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$readRegistry$13
	m	(Lcom/mojang/serialization/Dynamic;)Lhc;	a	readFromDisk
	m	(Lcom/mojang/serialization/Dynamic;Lys;)Lhb;	a	lambda$readFromDisk$14
	m	(Lcom/mojang/serialization/DynamicOps;Lyp$a;Lhc$c;)V	a	readRegistry
	m	(Lcom/mojang/serialization/codecs/UnboundedMapCodec;)Lcom/mojang/serialization/Codec;	a	captureMap
	m	(Lhb;)Lhc$a;	a	fromRegistryOfRegistries
	m	(Lhc$c;)Lcom/mojang/serialization/Codec;	a	lambda$getNetworkCodec$10
	m	(Lhc$d;)Lcom/mojang/serialization/Lifecycle;	a	lambda$allElementsLifecycle$16
	m	(Lhc$e;Lcom/mojang/serialization/DynamicOps;Lyp;)V	a	load
	m	(Lhc;)Ljava/util/Map;	a	lambda$captureMap$8
	m	(Lyr$a;Lhc$c;)V	a	addBuiltinElements
	m	(Lys;)Ljava/util/Optional;	a	ownedRegistry
	m	(Lys;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$makeNetworkCodec$4
	m	(Lys;Lcom/mojang/serialization/Dynamic;)Lhb;	a	retrieveRegistry
	m	()Ljava/util/stream/Stream;	b	ownedRegistries
	m	(Lhb;)Lcom/mojang/serialization/DataResult;	b	lambda$makeNetworkCodec$3
	m	(Lhc$d;)Z	b	lambda$ownedNetworkableRegistries$9
	m	(Lys;)Lhb;	b	ownedRegistryOrThrow
	m	()Ljava/util/stream/Stream;	c	registries
	m	(Lhc$d;)Lhb;	c	lambda$captureMap$7
	m	(Lys;)Ljava/util/Optional;	c	registry
	m	()Ljava/util/stream/Stream;	d	networkSafeRegistries
	m	(Lhc$d;)Lys;	d	lambda$captureMap$6
	m	(Lys;)Lhb;	d	registryOrThrow
	m	()Lhc$e;	e	builtinCopy
	m	(Lys;)Lhi;	e	createRegistry
	m	()Lhc$a;	f	freeze
	m	(Lys;)Lcom/mojang/serialization/DataResult;	f	getNetworkCodec
	m	()Lcom/mojang/serialization/Lifecycle;	g	allElementsLifecycle
	m	()Ljava/util/stream/Stream;	h	globalRegistries
	m	(Lys;)Ljava/lang/IllegalStateException;	h	lambda$retrieveRegistry$15
	m	()Lcom/mojang/serialization/Codec;	i	makeNetworkCodec
	m	(Lys;)Lcom/mojang/serialization/DataResult;	i	lambda$getNetworkCodec$11
	m	()Ljava/util/stream/Stream;	j	ownedNetworkableRegistries
	m	(Lys;)Lcom/mojang/serialization/DataResult;	j	lambda$makeNetworkCodec$5
	m	()Ljava/util/Map;	k	createFreshRegistries
	m	(Lys;)Ljava/lang/IllegalStateException;	k	lambda$registryOrThrow$1
	m	()Lhc$e;	l	blankWriteable
	m	(Lys;)Ljava/lang/IllegalStateException;	l	lambda$ownedRegistryOrThrow$0
	m	()Lhc$a;	m	lambda$static$12
	m	()Lcom/google/common/collect/ImmutableMap;	n	lambda$static$2
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	REGISTRIES
	f	Lcom/mojang/serialization/Codec;	c	NETWORK_CODEC
	f	Ljava/util/function/Supplier;	d	BUILTIN
c	hc$1	net/minecraft/core/RegistryAccess$1
	m	(Lys;)Ljava/util/Optional;	a	ownedRegistry
	m	()Ljava/util/stream/Stream;	b	ownedRegistries
	f	Lhb;	e	val$registries
c	hc$a	net/minecraft/core/RegistryAccess$Frozen
	m	()Lhc$a;	f	freeze
c	hc$b	net/minecraft/core/RegistryAccess$ImmutableRegistryAccess
	m	(Lys;)Ljava/util/Optional;	a	ownedRegistry
	m	()Ljava/util/stream/Stream;	b	ownedRegistries
	m	(Lhb;)Lhb;	b	lambda$ownedRegistry$0
	f	Ljava/util/Map;	e	registries
c	hc$c	net/minecraft/core/RegistryAccess$RegistryData
	m	()Z	a	sendToClient
	m	()Lys;	b	key
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lcom/mojang/serialization/Codec;	d	networkCodec
	f	Lys;	a	key
	f	Lcom/mojang/serialization/Codec;	b	codec
	f	Lcom/mojang/serialization/Codec;	c	networkCodec
c	hc$d	net/minecraft/core/RegistryAccess$RegistryEntry
	m	()Lys;	a	key
	m	(Lgs$c;)Lhc$d;	a	fromHolder
	m	(Ljava/util/Map$Entry;)Lhc$d;	a	fromMapEntry
	m	(Lys;Lhb;)Lhc$d;	a	fromUntyped
	m	()Lhb;	b	value
	m	()Lhc$d;	c	freeze
	f	Lys;	a	key
	f	Lhb;	b	value
c	hc$e	net/minecraft/core/RegistryAccess$Writable
	m	(Lys;)Ljava/util/Optional;	f	ownedWritableRegistry
	m	(Lys;)Lhi;	g	ownedWritableRegistryOrThrow
	m	(Lys;)Ljava/lang/IllegalStateException;	h	lambda$ownedWritableRegistryOrThrow$0
c	hc$f	net/minecraft/core/RegistryAccess$WritableRegistryAccess
	m	(Lhi;)Lhi;	a	lambda$ownedWritableRegistry$1
	m	(Lys;)Ljava/util/Optional;	a	ownedRegistry
	m	()Ljava/util/stream/Stream;	b	ownedRegistries
	m	(Lhi;)Lhb;	b	lambda$ownedRegistry$0
	m	(Lys;)Ljava/util/Optional;	f	ownedWritableRegistry
	f	Ljava/util/Map;	e	registries
c	hd	net/minecraft/core/RegistryCodecs
	m	(Lhb;)Ljava/util/Map;	a	lambda$dataPackAwareCodec$3
	m	(Lhi;Lcom/mojang/serialization/Lifecycle;Lys;Ljava/lang/Object;)V	a	lambda$dataPackAwareDecoder$4
	m	(Lys;)Lcom/mojang/serialization/Codec;	a	homogeneousList
	m	(Lys;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	homogeneousList
	m	(Lys;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Decoder;Lcom/mojang/serialization/Lifecycle;)Lcom/mojang/serialization/Decoder;	a	dataPackAwareDecoder
	m	(Lys;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	homogeneousList
	m	(Lys;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	networkCodec
	m	(Lys;Lcom/mojang/serialization/Lifecycle;Ljava/util/List;)Lhb;	a	lambda$networkCodec$1
	m	(Lys;Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lhi;	a	lambda$dataPackAwareDecoder$5
	m	(Lys;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	withNameAndId
	m	(Lys;Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$withNameAndId$0
	m	(Lys;Z)Lcom/mojang/serialization/Codec;	a	homogeneousList
	m	(Lhb;)Ljava/util/List;	b	lambda$networkCodec$2
	m	(Lys;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	directCodec
	m	(Lys;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	dataPackAwareCodec
c	hd$1	net/minecraft/core/RegistryCodecs$1
	m	()Lcom/mojang/serialization/DataResult;	a	lambda$decode$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$3
	m	(Lcom/mojang/datafixers/util/Pair;Lhb;)Lcom/mojang/datafixers/util/Pair;	a	lambda$overrideFromResources$4
	m	(Lcom/mojang/serialization/DataResult;Lyq;Lyp$a;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$0
	m	(Lcom/mojang/serialization/DataResult;Lyq;Lyp;)Lcom/mojang/serialization/DataResult;	a	overrideFromResources
	m	(Lhi;)Lhb;	a	lambda$decode$2
	m	(Lyp;Lys;Lcom/mojang/serialization/Codec;Lyq;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$overrideFromResources$5
	f	Lcom/mojang/serialization/Decoder;	a	val$registryDirectCodec
	f	Lys;	b	val$registryKey
	f	Lcom/mojang/serialization/Codec;	c	val$elementCodec
c	hd$a	net/minecraft/core/RegistryCodecs$RegistryEntry
	m	()Lys;	a	key
	m	()I	b	id
	m	()Ljava/lang/Object;	c	value
	f	Lys;	a	key
	f	I	b	id
	f	Ljava/lang/Object;	c	value
c	he	net/minecraft/core/Rotations
	m	()Loq;	a	save
	m	()F	b	getX
	m	()F	c	getY
	m	()F	d	getZ
	m	()F	e	getWrappedX
	m	()F	f	getWrappedY
	m	()F	g	getWrappedZ
	f	F	a	x
	f	F	b	y
	f	F	c	z
c	hf	net/minecraft/core/SectionPos
	m	()I	a	x
	m	(D)I	a	posToSectionCoord
	m	(I)I	a	blockToSectionCoord
	m	(II)I	a	sectionToBlockCoord
	m	(III)Lhf;	a	of
	m	(IIIIII)Ljava/util/stream/Stream;	a	betweenClosedStream
	m	(IIILit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
	m	(J)Lhf;	a	of
	m	(JIII)J	a	offset
	m	(JLgo;)J	a	offset
	m	(JLit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
	m	(Laxk;)Lhf;	a	of
	m	(Lcac;I)Lhf;	a	of
	m	(Lcac;III)Ljava/util/stream/Stream;	a	aroundChunk
	m	(Lcqq;)Lhf;	a	bottomOf
	m	(Lgj;)Lhf;	a	of
	m	(Lgj;Lit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
	m	(Lhf;I)Ljava/util/stream/Stream;	a	cube
	m	(S)I	a	sectionRelativeX
	m	()I	b	y
	m	(I)I	b	sectionRelative
	m	(III)J	b	asLong
	m	(J)I	b	x
	m	(Lgj;)S	b	sectionRelativePos
	m	(S)I	b	sectionRelativeY
	m	()I	c	z
	m	(I)I	c	sectionToBlockCoord
	m	(III)Lhh;	c	offset
	m	(J)I	c	y
	m	(Lgj;)J	c	asLong
	m	(S)I	c	sectionRelativeZ
	m	()I	d	minBlockX
	m	(III)Lhf;	d	offset
	m	(J)I	d	z
	m	(S)I	d	relativeToBlockX
	m	()I	e	minBlockY
	m	(J)J	e	blockToSection
	m	(S)I	e	relativeToBlockY
	m	()I	f	minBlockZ
	m	(J)J	f	getZeroNode
	m	(S)I	f	relativeToBlockZ
	m	()I	g	maxBlockX
	m	(S)Lgj;	g	relativeToBlockPos
	m	()I	h	maxBlockY
	m	()I	i	maxBlockZ
	m	()Lgj;	p	origin
	m	()Lgj;	q	center
	m	()Lcac;	r	chunk
	m	()J	s	asLong
	m	()Ljava/util/stream/Stream;	t	blocksInside
	f	I	a	SECTION_BITS
	f	I	b	SECTION_SIZE
	f	I	c	SECTION_MASK
	f	I	d	SECTION_HALF_SIZE
	f	I	e	SECTION_MAX_INDEX
	f	I	h	PACKED_X_LENGTH
	f	I	i	PACKED_Y_LENGTH
	f	I	j	PACKED_Z_LENGTH
	f	J	k	PACKED_X_MASK
	f	J	l	PACKED_Y_MASK
	f	J	m	PACKED_Z_MASK
	f	I	n	Y_OFFSET
	f	I	o	Z_OFFSET
	f	I	p	X_OFFSET
	f	I	q	RELATIVE_X_SHIFT
	f	I	r	RELATIVE_Y_SHIFT
	f	I	s	RELATIVE_Z_SHIFT
c	hf$1	net/minecraft/core/SectionPos$1
	f	Lgm;	a	cursor
	f	I	b	val$minX
	f	I	c	val$minY
	f	I	d	val$minZ
	f	I	e	val$maxX
	f	I	f	val$maxY
	f	I	g	val$maxZ
c	hg	net/minecraft/core/SerializableUUID
	m	(JJ)[I	a	leastMostToIntArray
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID;	a	readUUID
	m	(Ljava/util/UUID;)[I	a	uuidToIntArray
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$0
	m	([I)Ljava/util/UUID;	a	uuidFromIntArray
	m	(Ljava/util/UUID;)Ljava/util/stream/IntStream;	b	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	hh	net/minecraft/core/Vec3i
	m	(I)Ljava/util/function/Function;	a	checkOffsetAxes
	m	(ILhh;)Lcom/mojang/serialization/DataResult;	a	lambda$checkOffsetAxes$3
	m	(Lgo$a;)I	a	get
	m	(Lgy;)D	a	distToCenterSqr
	m	(Lgy;D)Z	a	closerToCenterThan
	m	(Lhh;)Ljava/util/stream/IntStream;	a	lambda$static$2
	m	(Lhh;D)Z	a	closerThan
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	([I)Lhh;	a	lambda$static$0
	m	(DDD)Lhh;	b	offset
	m	(Lgo$a;I)Lhh;	b	relative
	m	(Lgo;)Lhh;	b	relative
	m	(Lgo;I)Lhh;	b	relative
	m	(III)Lhh;	c	offset
	m	(DDD)D	d	distToCenterSqr
	m	(Lhh;)Lhh;	d	cross
	m	(DDD)D	e	distToLowCornerSqr
	m	(Lhh;)Lhh;	e	subtract
	m	(Lhh;)Lhh;	f	offset
	m	(I)Lhh;	i	east
	m	(Lhh;)I	i	compareTo
	m	()Lhh;	j	east
	m	(I)Lhh;	j	west
	m	(Lhh;)D	j	distSqr
	m	()Lhh;	k	west
	m	(I)Lhh;	k	south
	m	(Lhh;)I	k	distManhattan
	m	()Lhh;	l	south
	m	(I)Lhh;	l	north
	m	()Lhh;	m	north
	m	(I)Lhh;	m	below
	m	()Lhh;	n	below
	m	(I)Lhh;	n	above
	m	()Lhh;	o	above
	m	(I)Lhh;	o	multiply
	m	(I)Lhh;	s	setZ
	m	(I)Lhh;	t	setY
	m	()I	u	getX
	m	(I)Lhh;	u	setX
	m	()I	v	getY
	m	(I)Lcom/mojang/serialization/Codec;	v	offsetCodec
	m	()I	w	getZ
	m	()Ljava/lang/String;	x	toShortString
	f	I	a	x
	f	I	b	y
	f	I	c	z
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Lhh;	g	ZERO
c	hi	net/minecraft/core/WritableRegistry
	m	(ILys;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lgs;	a	registerMapping
	m	(Ljava/util/OptionalInt;Lys;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lgs;	a	registerOrOverride
	m	(Lys;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lgs;	a	register
	m	()Z	i	isEmpty
c	hj	net/minecraft/core/cauldron/CauldronInteraction
	m	()Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;	a	newInteractionMap
	m	(Lcav;Lgj;Lboj;Lawg;Lbuw;Lcov;Lahj;)Lawh;	a	emptyBucket
	m	(Lcov;)Z	a	lambda$bootStrap$9
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Lbuw;)Lawh;	a	lambda$static$16
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Lbuw;Lbuw;Ljava/util/function/Predicate;Lahj;)Lawh;	a	fillBucket
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;)V	a	lambda$newInteractionMap$1
	m	(Ljava/util/Map;)V	a	addDefaultInteractions
	m	()V	b	bootStrap
	m	(Lcov;)Z	b	lambda$bootStrap$7
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Lbuw;)Lawh;	b	lambda$static$15
	m	(Lcov;)Z	c	lambda$bootStrap$3
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Lbuw;)Lawh;	c	lambda$static$14
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Lbuw;)Lawh;	d	lambda$static$13
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Lbuw;)Lawh;	e	lambda$static$12
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Lbuw;)Lawh;	f	lambda$static$11
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Lbuw;)Lawh;	g	lambda$bootStrap$10
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Lbuw;)Lawh;	h	lambda$bootStrap$8
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Lbuw;)Lawh;	i	lambda$bootStrap$6
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Lbuw;)Lawh;	j	lambda$bootStrap$5
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Lbuw;)Lawh;	k	lambda$bootStrap$4
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Lbuw;)Lawh;	l	lambda$bootStrap$2
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Lbuw;)Lawh;	m	lambda$newInteractionMap$0
	f	Ljava/util/Map;	a	EMPTY
	f	Ljava/util/Map;	b	WATER
	f	Ljava/util/Map;	c	LAVA
	f	Ljava/util/Map;	d	POWDER_SNOW
	f	Lhj;	e	FILL_WATER
	f	Lhj;	f	FILL_LAVA
	f	Lhj;	g	FILL_POWDER_SNOW
	f	Lhj;	h	SHULKER_BOX
	f	Lhj;	i	BANNER
	f	Lhj;	j	DYED_ITEM
c	hk	net/minecraft/core/cauldron/package-info
c	hl	net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior
	m	()F	a	getUncertainty
	m	(Lcav;Lgy;Lbuw;)Lboz;	a	getProjectile
	m	(Lgk;)V	a	playSound
	m	(Lgk;Lbuw;)Lbuw;	a	execute
	m	()F	b	getPower
c	hm	net/minecraft/core/dispenser/BoatDispenseItemBehavior
	m	(Lgk;)V	a	playSound
	m	(Lgk;Lbuw;)Lbuw;	a	execute
	f	Lhn;	c	defaultDispenseItemBehavior
	f	Lbqa$b;	d	type
c	hn	net/minecraft/core/dispenser/DefaultDispenseItemBehavior
	m	(Lcav;Lbuw;ILgo;Lgy;)V	a	spawnItem
	m	(Lgk;)V	a	playSound
	m	(Lgk;Lbuw;)Lbuw;	a	execute
	m	(Lgk;Lgo;)V	a	playAnimation
c	ho	net/minecraft/core/dispenser/DispenseItemBehavior
	m	(Lgk;Laxk;Lgo;)V	a	setEntityPokingOutOfBlock
	m	(Lgk;Lbuw;)Lbuw;	a	lambda$static$0
	m	()V	c	bootStrap
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lho;	b	NOOP
c	ho$1	net/minecraft/core/dispenser/DispenseItemBehavior$1
	m	(Lcav;Lgy;Lbuw;)Lboz;	a	getProjectile
c	ho$2	net/minecraft/core/dispenser/DispenseItemBehavior$10
	m	(Lgk;Lbuw;)Lbuw;	a	execute
c	ho$3	net/minecraft/core/dispenser/DispenseItemBehavior$11
	m	(Laxy;)Z	a	lambda$execute$0
	m	(Lgk;Lbuw;)Lbuw;	a	execute
c	ho$4	net/minecraft/core/dispenser/DispenseItemBehavior$12
	m	(Lbjo;)Z	a	lambda$execute$0
	m	(Lgk;Lbuw;)Lbuw;	a	execute
c	ho$5	net/minecraft/core/dispenser/DispenseItemBehavior$13
	m	(Lbjn;)Z	a	lambda$execute$0
	m	(Lgk;Lbuw;)Lbuw;	a	execute
c	ho$6	net/minecraft/core/dispenser/DispenseItemBehavior$14
	m	(Lgk;)V	a	playSound
	m	(Lgk;Lbuw;)Lbuw;	a	execute
c	ho$7	net/minecraft/core/dispenser/DispenseItemBehavior$15
	m	(Lbuw;Lbpc;)V	a	lambda$execute$0
	m	(Lgk;)V	a	playSound
	m	(Lgk;Lbuw;)Lbuw;	a	execute
c	ho$8	net/minecraft/core/dispenser/DispenseItemBehavior$16
	m	(Lgk;Lbuw;)Lbuw;	a	execute
	f	Lhn;	c	defaultDispenseItemBehavior
c	ho$9	net/minecraft/core/dispenser/DispenseItemBehavior$17
	m	(Lgk;Lbuw;)Lbuw;	a	execute
	f	Lhn;	c	defaultDispenseItemBehavior
c	ho$10	net/minecraft/core/dispenser/DispenseItemBehavior$18
	m	(Lgk;Lbuw;)Lbuw;	a	execute
c	ho$11	net/minecraft/core/dispenser/DispenseItemBehavior$19
	m	(Lgk;Lbuw;)Lbuw;	a	execute
c	ho$12	net/minecraft/core/dispenser/DispenseItemBehavior$2
	m	(Lcav;Lgy;Lbuw;)Lboz;	a	getProjectile
c	ho$13	net/minecraft/core/dispenser/DispenseItemBehavior$20
	m	(Lgk;Lbuw;)Lbuw;	a	execute
c	ho$14	net/minecraft/core/dispenser/DispenseItemBehavior$21
	m	(Lgk;Lbuw;)Lbuw;	a	execute
c	ho$15	net/minecraft/core/dispenser/DispenseItemBehavior$22
	m	(Lgk;Lbuw;)Lbuw;	a	execute
c	ho$16	net/minecraft/core/dispenser/DispenseItemBehavior$23
	m	(Lgk;Lbuw;)Lbuw;	a	execute
c	ho$17	net/minecraft/core/dispenser/DispenseItemBehavior$24
	m	(Lcou$a;)Z	a	lambda$execute$0
	m	(Lgk;Lbuw;)Lbuw;	a	execute
	m	(Lgk;Lbuw;Lbuw;)Lbuw;	a	takeLiquid
	f	Lhn;	c	defaultDispenseItemBehavior
c	ho$18	net/minecraft/core/dispenser/DispenseItemBehavior$25
	m	(Lgk;Lbuw;)Lbuw;	a	execute
c	ho$19	net/minecraft/core/dispenser/DispenseItemBehavior$26
	m	(Lgk;Lbuw;)Lbuw;	a	execute
c	ho$20	net/minecraft/core/dispenser/DispenseItemBehavior$3
	m	(Lcav;Lgy;Lbuw;)Lboz;	a	getProjectile
c	ho$21	net/minecraft/core/dispenser/DispenseItemBehavior$4
	m	(Lbuw;Lbph;)V	a	lambda$getProjectile$0
	m	(Lcav;Lgy;Lbuw;)Lboz;	a	getProjectile
c	ho$22	net/minecraft/core/dispenser/DispenseItemBehavior$5
	m	(Lbuw;Lbpd;)V	a	lambda$getProjectile$0
	m	(Lcav;Lgy;Lbuw;)Lboz;	a	getProjectile
c	ho$23	net/minecraft/core/dispenser/DispenseItemBehavior$6
	m	()F	a	getUncertainty
	m	(Lbuw;Lbpj;)V	a	lambda$getProjectile$0
	m	(Lcav;Lgy;Lbuw;)Lboz;	a	getProjectile
	m	()F	b	getPower
c	ho$24	net/minecraft/core/dispenser/DispenseItemBehavior$7
c	ho$24$1	net/minecraft/core/dispenser/DispenseItemBehavior$7$1
	m	()F	a	getUncertainty
	m	(Lbuw;Lbpk;)V	a	lambda$getProjectile$0
	m	(Lcav;Lgy;Lbuw;)Lboz;	a	getProjectile
	m	()F	b	getPower
	f	Lho$24;	c	this$0
c	ho$25	net/minecraft/core/dispenser/DispenseItemBehavior$8
c	ho$25$1	net/minecraft/core/dispenser/DispenseItemBehavior$8$1
	m	()F	a	getUncertainty
	m	(Lbuw;Lbpk;)V	a	lambda$getProjectile$0
	m	(Lcav;Lgy;Lbuw;)Lboz;	a	getProjectile
	m	()F	b	getPower
	f	Lho$25;	c	this$0
c	ho$26	net/minecraft/core/dispenser/DispenseItemBehavior$9
	m	(Lgk;Lbuw;)Lbuw;	a	execute
c	hp	net/minecraft/core/dispenser/OptionalDispenseItemBehavior
	m	()Z	a	isSuccess
	m	(Lgk;)V	a	playSound
	m	(Z)V	a	setSuccess
	f	Z	c	success
c	hq	net/minecraft/core/dispenser/ShearsDispenseItemBehavior
	m	(Ladw;Lgj;)Z	a	tryShearBeehive
	m	(Lcou$a;)Z	a	lambda$tryShearBeehive$0
	m	(Lgk;Lbuw;)Lbuw;	a	execute
	m	(Ladw;Lgj;)Z	b	tryShearLivingEntity
c	hr	net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior
	m	(Lgk;Lbuw;)Lbuw;	a	execute
	f	Lorg/slf4j/Logger;	c	LOGGER
c	hs	net/minecraft/core/dispenser/package-info
c	ht	net/minecraft/core/package-info
c	hu	net/minecraft/core/particles/BlockParticleOption
	m	()Ljava/lang/String;	a	writeToString
	m	(Lhu;)Lcov;	a	lambda$codec$1
	m	(Lib;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lib;Lcov;)Lhu;	a	lambda$codec$0
	m	(Lpy;)V	a	writeToNetwork
	m	()Lib;	b	getType
	m	()Lcov;	c	getState
	f	Lia$a;	a	DESERIALIZER
	f	Lib;	b	type
	f	Lcov;	c	state
c	hu$1	net/minecraft/core/particles/BlockParticleOption$1
	m	(Lib;Lcom/mojang/brigadier/StringReader;)Lhu;	a	fromCommand
	m	(Lib;Lpy;)Lhu;	a	fromNetwork
	m	(Lib;Lcom/mojang/brigadier/StringReader;)Lia;	b	fromCommand
	m	(Lib;Lpy;)Lia;	b	fromNetwork
c	hv	net/minecraft/core/particles/DustColorTransitionOptions
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lhv;)Ljava/lang/Float;	a	lambda$static$2
	m	(Lpy;)V	a	writeToNetwork
	m	()Lib;	b	getType
	m	(Lhv;)Lk;	b	lambda$static$1
	m	()Lk;	c	getFromColor
	m	(Lhv;)Lk;	c	lambda$static$0
	m	()Lk;	d	getToColor
	f	Lk;	a	SCULK_PARTICLE_COLOR
	f	Lhv;	b	SCULK_TO_REDSTONE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lia$a;	d	DESERIALIZER
	f	Lk;	i	toColor
c	hv$1	net/minecraft/core/particles/DustColorTransitionOptions$1
	m	(Lib;Lcom/mojang/brigadier/StringReader;)Lhv;	a	fromCommand
	m	(Lib;Lpy;)Lhv;	a	fromNetwork
	m	(Lib;Lcom/mojang/brigadier/StringReader;)Lia;	b	fromCommand
	m	(Lib;Lpy;)Lia;	b	fromNetwork
c	hw	net/minecraft/core/particles/DustParticleOptions
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lhw;)Ljava/lang/Float;	a	lambda$static$1
	m	()Lib;	b	getType
	m	(Lhw;)Lk;	b	lambda$static$0
	f	Lk;	a	REDSTONE_PARTICLE_COLOR
	f	Lhw;	b	REDSTONE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lia$a;	d	DESERIALIZER
c	hw$1	net/minecraft/core/particles/DustParticleOptions$1
	m	(Lib;Lcom/mojang/brigadier/StringReader;)Lhw;	a	fromCommand
	m	(Lib;Lpy;)Lhw;	a	fromNetwork
	m	(Lib;Lcom/mojang/brigadier/StringReader;)Lia;	b	fromCommand
	m	(Lib;Lpy;)Lia;	b	fromNetwork
c	hx	net/minecraft/core/particles/DustParticleOptionsBase
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/brigadier/StringReader;)Lk;	a	readVector3f
	m	(Lpy;)V	a	writeToNetwork
	m	(Lpy;)Lk;	b	readVector3f
	m	()Lk;	e	getColor
	m	()F	f	getScale
	f	F	e	MIN_SCALE
	f	F	f	MAX_SCALE
	f	Lk;	g	color
	f	F	h	scale
c	hy	net/minecraft/core/particles/ItemParticleOption
	m	()Ljava/lang/String;	a	writeToString
	m	(Lhy;)Lbuw;	a	lambda$codec$1
	m	(Lib;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lib;Lbuw;)Lhy;	a	lambda$codec$0
	m	(Lpy;)V	a	writeToNetwork
	m	()Lib;	b	getType
	m	()Lbuw;	c	getItem
	f	Lia$a;	a	DESERIALIZER
	f	Lib;	b	type
	f	Lbuw;	c	itemStack
c	hy$1	net/minecraft/core/particles/ItemParticleOption$1
	m	(Lib;Lcom/mojang/brigadier/StringReader;)Lhy;	a	fromCommand
	m	(Lib;Lpy;)Lhy;	a	fromNetwork
	m	(Lib;Lcom/mojang/brigadier/StringReader;)Lia;	b	fromCommand
	m	(Lib;Lpy;)Lia;	b	fromNetwork
c	hz	net/minecraft/core/particles/ParticleGroup
	m	()I	a	getLimit
	f	Lhz;	a	SPORE_BLOSSOM
	f	I	b	limit
c	ia	net/minecraft/core/particles/ParticleOptions
	m	()Ljava/lang/String;	a	writeToString
	m	(Lpy;)V	a	writeToNetwork
	m	()Lib;	b	getType
c	ia$a	net/minecraft/core/particles/ParticleOptions$Deserializer
	m	(Lib;Lcom/mojang/brigadier/StringReader;)Lia;	b	fromCommand
	m	(Lib;Lpy;)Lia;	b	fromNetwork
c	ib	net/minecraft/core/particles/ParticleType
	m	()Z	c	getOverrideLimiter
	m	()Lia$a;	d	getDeserializer
	m	()Lcom/mojang/serialization/Codec;	e	codec
	f	Z	a	overrideLimiter
	f	Lia$a;	b	deserializer
c	ic	net/minecraft/core/particles/ParticleTypes
	m	(Lib;)Lcom/mojang/serialization/Codec;	a	lambda$static$2
	m	(Ljava/lang/String;Lia$a;Ljava/util/function/Function;)Lib;	a	register
	m	(Ljava/lang/String;Z)Lid;	a	register
	m	(Lib;)Lcom/mojang/serialization/Codec;	b	lambda$static$1
	m	(Lib;)Lcom/mojang/serialization/Codec;	c	lambda$static$0
	f	Lid;	A	FISHING
	f	Lid;	B	FLAME
	f	Lid;	C	SOUL_FIRE_FLAME
	f	Lid;	D	SOUL
	f	Lid;	E	FLASH
	f	Lid;	F	HAPPY_VILLAGER
	f	Lid;	G	COMPOSTER
	f	Lid;	H	HEART
	f	Lid;	I	INSTANT_EFFECT
	f	Lib;	J	ITEM
	f	Lib;	K	VIBRATION
	f	Lid;	L	ITEM_SLIME
	f	Lid;	M	ITEM_SNOWBALL
	f	Lid;	N	LARGE_SMOKE
	f	Lid;	O	LAVA
	f	Lid;	P	MYCELIUM
	f	Lid;	Q	NOTE
	f	Lid;	R	POOF
	f	Lid;	S	PORTAL
	f	Lid;	T	RAIN
	f	Lid;	U	SMOKE
	f	Lid;	V	SNEEZE
	f	Lid;	W	SPIT
	f	Lid;	X	SQUID_INK
	f	Lid;	Y	SWEEP_ATTACK
	f	Lid;	Z	TOTEM_OF_UNDYING
	f	Lid;	aA	DRIPPING_DRIPSTONE_LAVA
	f	Lid;	aB	FALLING_DRIPSTONE_LAVA
	f	Lid;	aC	DRIPPING_DRIPSTONE_WATER
	f	Lid;	aD	FALLING_DRIPSTONE_WATER
	f	Lid;	aE	GLOW_SQUID_INK
	f	Lid;	aF	GLOW
	f	Lid;	aG	WAX_ON
	f	Lid;	aH	WAX_OFF
	f	Lid;	aI	ELECTRIC_SPARK
	f	Lid;	aJ	SCRAPE
	f	Lcom/mojang/serialization/Codec;	aK	CODEC
	f	Lid;	a	AMBIENT_ENTITY_EFFECT
	f	Lid;	aa	UNDERWATER
	f	Lid;	ab	SPLASH
	f	Lid;	ac	WITCH
	f	Lid;	ad	BUBBLE_POP
	f	Lid;	ae	CURRENT_DOWN
	f	Lid;	af	BUBBLE_COLUMN_UP
	f	Lid;	ag	NAUTILUS
	f	Lid;	ah	DOLPHIN
	f	Lid;	ai	CAMPFIRE_COSY_SMOKE
	f	Lid;	aj	CAMPFIRE_SIGNAL_SMOKE
	f	Lid;	ak	DRIPPING_HONEY
	f	Lid;	al	FALLING_HONEY
	f	Lid;	am	LANDING_HONEY
	f	Lid;	an	FALLING_NECTAR
	f	Lid;	ao	FALLING_SPORE_BLOSSOM
	f	Lid;	ap	ASH
	f	Lid;	aq	CRIMSON_SPORE
	f	Lid;	ar	WARPED_SPORE
	f	Lid;	as	SPORE_BLOSSOM_AIR
	f	Lid;	at	DRIPPING_OBSIDIAN_TEAR
	f	Lid;	au	FALLING_OBSIDIAN_TEAR
	f	Lid;	av	LANDING_OBSIDIAN_TEAR
	f	Lid;	aw	REVERSE_PORTAL
	f	Lid;	ax	WHITE_ASH
	f	Lid;	ay	SMALL_FLAME
	f	Lid;	az	SNOWFLAKE
	f	Lid;	b	ANGRY_VILLAGER
	f	Lib;	c	BLOCK
	f	Lib;	d	BLOCK_MARKER
	f	Lid;	e	BUBBLE
	f	Lid;	f	CLOUD
	f	Lid;	g	CRIT
	f	Lid;	h	DAMAGE_INDICATOR
	f	Lid;	i	DRAGON_BREATH
	f	Lid;	j	DRIPPING_LAVA
	f	Lid;	k	FALLING_LAVA
	f	Lid;	l	LANDING_LAVA
	f	Lid;	m	DRIPPING_WATER
	f	Lid;	n	FALLING_WATER
	f	Lib;	o	DUST
	f	Lib;	p	DUST_COLOR_TRANSITION
	f	Lid;	q	EFFECT
	f	Lid;	r	ELDER_GUARDIAN
	f	Lid;	s	ENCHANTED_HIT
	f	Lid;	t	ENCHANT
	f	Lid;	u	END_ROD
	f	Lid;	v	ENTITY_EFFECT
	f	Lid;	w	EXPLOSION_EMITTER
	f	Lid;	x	EXPLOSION
	f	Lib;	y	FALLING_DUST
	f	Lid;	z	FIREWORK
c	ic$1	net/minecraft/core/particles/ParticleTypes$1
	m	()Lcom/mojang/serialization/Codec;	e	codec
	f	Ljava/util/function/Function;	a	val$codec
c	id	net/minecraft/core/particles/SimpleParticleType
	m	()Ljava/lang/String;	a	writeToString
	m	(Lpy;)V	a	writeToNetwork
	m	()Lib;	b	getType
	m	()Lcom/mojang/serialization/Codec;	e	codec
	m	()Lid;	f	getType
	f	Lia$a;	a	DESERIALIZER
	f	Lcom/mojang/serialization/Codec;	b	codec
c	id$1	net/minecraft/core/particles/SimpleParticleType$1
	m	(Lib;Lcom/mojang/brigadier/StringReader;)Lid;	a	fromCommand
	m	(Lib;Lpy;)Lid;	a	fromNetwork
	m	(Lib;Lcom/mojang/brigadier/StringReader;)Lia;	b	fromCommand
	m	(Lib;Lpy;)Lia;	b	fromNetwork
c	ie	net/minecraft/core/particles/VibrationParticleOption
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lie;)Lctg;	a	lambda$static$0
	m	(Lpy;)V	a	writeToNetwork
	m	()Lib;	b	getType
	m	()Lctg;	c	getVibrationPath
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lia$a;	b	DESERIALIZER
	f	Lctg;	c	vibrationPath
c	ie$1	net/minecraft/core/particles/VibrationParticleOption$1
	m	(Lib;Lcom/mojang/brigadier/StringReader;)Lie;	a	fromCommand
	m	(Lib;Lpy;)Lie;	a	fromNetwork
	m	(Lib;Lcom/mojang/brigadier/StringReader;)Lia;	b	fromCommand
	m	(Lib;Lpy;)Lia;	b	fromNetwork
c	ig	net/minecraft/core/particles/package-info
c	ih	net/minecraft/data/BlockFamilies
	m	()Ljava/util/stream/Stream;	a	getAllFamilies
	m	(Lcdq;)Lii$a;	a	familyBuilder
	f	Lii;	A	WAXED_WEATHERED_COPPER
	f	Lii;	B	WAXED_WEATHERED_CUT_COPPER
	f	Lii;	C	OXIDIZED_COPPER
	f	Lii;	D	OXIDIZED_CUT_COPPER
	f	Lii;	E	WAXED_OXIDIZED_COPPER
	f	Lii;	F	WAXED_OXIDIZED_CUT_COPPER
	f	Lii;	G	COBBLESTONE
	f	Lii;	H	MOSSY_COBBLESTONE
	f	Lii;	I	DIORITE
	f	Lii;	J	POLISHED_DIORITE
	f	Lii;	K	GRANITE
	f	Lii;	L	POLISHED_GRANITE
	f	Lii;	M	NETHER_BRICKS
	f	Lii;	N	RED_NETHER_BRICKS
	f	Lii;	O	PRISMARINE
	f	Lii;	P	PURPUR
	f	Lii;	Q	PRISMARINE_BRICKS
	f	Lii;	R	DARK_PRISMARINE
	f	Lii;	S	QUARTZ
	f	Lii;	T	SMOOTH_QUARTZ
	f	Lii;	U	SANDSTONE
	f	Lii;	V	CUT_SANDSTONE
	f	Lii;	W	SMOOTH_SANDSTONE
	f	Lii;	X	RED_SANDSTONE
	f	Lii;	Y	CUT_RED_SANDSTONE
	f	Lii;	Z	SMOOTH_RED_SANDSTONE
	f	Lii;	a	ACACIA_PLANKS
	f	Lii;	aa	STONE
	f	Lii;	ab	STONE_BRICK
	f	Lii;	ac	DEEPSLATE
	f	Lii;	ad	COBBLED_DEEPSLATE
	f	Lii;	ae	POLISHED_DEEPSLATE
	f	Lii;	af	DEEPSLATE_BRICKS
	f	Lii;	ag	DEEPSLATE_TILES
	f	Ljava/util/Map;	ah	MAP
	f	Ljava/lang/String;	ai	RECIPE_GROUP_PREFIX_WOODEN
	f	Ljava/lang/String;	aj	RECIPE_UNLOCKED_BY_HAS_PLANKS
	f	Lii;	b	BIRCH_PLANKS
	f	Lii;	c	CRIMSON_PLANKS
	f	Lii;	d	JUNGLE_PLANKS
	f	Lii;	e	OAK_PLANKS
	f	Lii;	f	DARK_OAK_PLANKS
	f	Lii;	g	SPRUCE_PLANKS
	f	Lii;	h	WARPED_PLANKS
	f	Lii;	i	ANDESITE
	f	Lii;	j	POLISHED_ANDESITE
	f	Lii;	k	BLACKSTONE
	f	Lii;	l	POLISHED_BLACKSTONE
	f	Lii;	m	POLISHED_BLACKSTONE_BRICKS
	f	Lii;	n	BRICKS
	f	Lii;	o	END_STONE_BRICKS
	f	Lii;	p	MOSSY_STONE_BRICKS
	f	Lii;	q	COPPER_BLOCK
	f	Lii;	r	CUT_COPPER
	f	Lii;	s	WAXED_COPPER_BLOCK
	f	Lii;	t	WAXED_CUT_COPPER
	f	Lii;	u	EXPOSED_COPPER
	f	Lii;	v	EXPOSED_CUT_COPPER
	f	Lii;	w	WAXED_EXPOSED_COPPER
	f	Lii;	x	WAXED_EXPOSED_CUT_COPPER
	f	Lii;	y	WEATHERED_COPPER
	f	Lii;	z	WEATHERED_CUT_COPPER
c	ii	net/minecraft/data/BlockFamily
	m	()Lcdq;	a	getBaseBlock
	m	(Lii$b;)Lcdq;	a	get
	m	()Ljava/util/Map;	b	getVariants
	m	()Z	c	shouldGenerateModel
	m	()Z	d	shouldGenerateRecipe
	m	()Ljava/util/Optional;	e	getRecipeGroupPrefix
	m	()Ljava/util/Optional;	f	getRecipeUnlockedBy
	f	Lcdq;	a	baseBlock
	f	Ljava/util/Map;	b	variants
	f	Z	c	generateModel
	f	Z	d	generateRecipe
	f	Ljava/lang/String;	e	recipeGroupPrefix
	f	Ljava/lang/String;	f	recipeUnlockedBy
c	ii$a	net/minecraft/data/BlockFamily$Builder
	m	()Lii;	a	getFamily
	m	(Lcdq;)Lii$a;	a	button
	m	(Lcdq;Lcdq;)Lii$a;	a	sign
	m	(Ljava/lang/String;)Lii$a;	a	recipeGroupPrefix
	m	()Lii$a;	b	dontGenerateModel
	m	(Lcdq;)Lii$a;	b	chiseled
	m	(Ljava/lang/String;)Lii$a;	b	recipeUnlockedBy
	m	()Lii$a;	c	dontGenerateRecipe
	m	(Lcdq;)Lii$a;	c	cracked
	m	(Lcdq;)Lii$a;	d	cut
	m	(Lcdq;)Lii$a;	e	door
	m	(Lcdq;)Lii$a;	f	fence
	m	(Lcdq;)Lii$a;	g	fenceGate
	m	(Lcdq;)Lii$a;	h	slab
	m	(Lcdq;)Lii$a;	i	stairs
	m	(Lcdq;)Lii$a;	j	pressurePlate
	m	(Lcdq;)Lii$a;	k	polished
	m	(Lcdq;)Lii$a;	l	trapdoor
	m	(Lcdq;)Lii$a;	m	wall
	f	Lii;	a	family
c	ii$b	net/minecraft/data/BlockFamily$Variant
	m	()Ljava/lang/String;	a	getName
	m	()[Lii$b;	b	$values
	f	Lii$b;	a	BUTTON
	f	Lii$b;	b	CHISELED
	f	Lii$b;	c	CRACKED
	f	Lii$b;	d	CUT
	f	Lii$b;	e	DOOR
	f	Lii$b;	f	FENCE
	f	Lii$b;	g	FENCE_GATE
	f	Lii$b;	h	SIGN
	f	Lii$b;	i	SLAB
	f	Lii$b;	j	STAIRS
	f	Lii$b;	k	PRESSURE_PLATE
	f	Lii$b;	l	POLISHED
	f	Lii$b;	m	TRAPDOOR
	f	Lii$b;	n	WALL
	f	Lii$b;	o	WALL_SIGN
	f	Ljava/lang/String;	p	name
	f	[Lii$b;	q	$VALUES
c	ij	net/minecraft/data/BuiltinRegistries
	m	()V	a	bootstrap
	m	(Lhb;Ljava/lang/String;Ljava/lang/Object;)Lgs;	a	registerExact
	m	(Lhb;Lys;Ljava/lang/Object;)Lgs;	a	register
	m	(Lhb;Lyt;Ljava/lang/Object;)Lgs;	a	register
	m	(Lys;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lhb;	a	registerSimple
	m	(Lys;Lhi;Ljava/util/function/Supplier;Lcom/mojang/serialization/Lifecycle;)Lhi;	a	internalRegister
	m	(Lys;Ljava/util/function/Supplier;)Lhb;	a	registerSimple
	m	(Lyt;Ljava/util/function/Supplier;)V	a	lambda$static$2
	m	()Lgs;	b	lambda$static$1
	m	(Lhb;Ljava/lang/String;Ljava/lang/Object;)Lgs;	b	register
	m	()Lgs;	c	lambda$static$0
	f	Lhb;	a	REGISTRY
	f	Lhb;	b	CONFIGURED_CARVER
	f	Lhb;	c	CONFIGURED_FEATURE
	f	Lhb;	d	PLACED_FEATURE
	f	Lhb;	e	CONFIGURED_STRUCTURE_FEATURE
	f	Lhb;	f	STRUCTURE_SETS
	f	Lhb;	g	PROCESSOR_LIST
	f	Lhb;	h	TEMPLATE_POOL
	f	Lhb;	i	BIOME
	f	Lhb;	j	NOISE
	f	Lhb;	k	DENSITY_FUNCTION
	f	Lhb;	l	NOISE_GENERATOR_SETTINGS
	f	Lhc;	m	ACCESS
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	Ljava/util/Map;	o	LOADERS
	f	Lhi;	p	WRITABLE_REGISTRY
c	ik	net/minecraft/data/DataGenerator
	m	()Ljava/util/Collection;	a	getInputFolders
	m	(Lil;)V	a	addProvider
	m	()Ljava/nio/file/Path;	b	getOutputFolder
	m	()V	c	run
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Collection;	b	inputFolders
	f	Ljava/nio/file/Path;	c	outputFolder
	f	Ljava/util/List;	d	providers
c	il	net/minecraft/data/DataProvider
	m	()Ljava/lang/String;	a	getName
	m	(Lcom/google/gson/Gson;Lim;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)V	a	save
	m	(Lim;)V	a	run
	f	Lcom/google/common/hash/HashFunction;	a	SHA1
c	im	net/minecraft/data/HashCache
	m	()V	a	purgeStaleAndWrite
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	a	getHash
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	putNew
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	lambda$purgeStaleAndWrite$2
	m	()V	b	removeStale
	m	(Ljava/nio/file/Path;)Z	b	had
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	b	lambda$new$1
	m	()Ljava/util/stream/Stream;	c	walkOutputFiles
	m	(Ljava/nio/file/Path;)V	c	keep
	m	(Ljava/nio/file/Path;)Z	d	lambda$walkOutputFiles$4
	m	(Ljava/nio/file/Path;)V	e	lambda$removeStale$3
	m	(Ljava/nio/file/Path;)V	f	lambda$new$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	path
	f	Ljava/nio/file/Path;	c	cachePath
	f	I	d	hits
	f	Ljava/util/Map;	e	oldCache
	f	Ljava/util/Map;	f	newCache
	f	Ljava/util/Set;	g	keep
c	in	net/minecraft/data/advancements/AdvancementProvider
	m	()Ljava/lang/String;	a	getName
	m	(Lim;)V	a	run
	m	(Ljava/nio/file/Path;Laf;)Ljava/nio/file/Path;	a	createPath
	m	(Ljava/util/Set;Ljava/nio/file/Path;Lim;Laf;)V	a	lambda$run$0
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Lik;	d	generator
	f	Ljava/util/List;	e	tabs
c	io	net/minecraft/data/advancements/AdventureAdvancements
	m	()Ljava/util/List;	a	getAllOverworldBiomes
	m	(Laf$a;)Laf$a;	a	addMobsToKill
	m	(Laf$a;Ljava/util/List;)Laf$a;	a	addBiomes
	m	(Laxo;Lbus;)Lde$a;	a	lookAtThroughItem
	m	(Lcj$d;Lbo;)Lcf$a;	a	fireCountAndBystander
	m	(Lgs;)Ljava/util/stream/Stream;	a	lambda$getAllOverworldBiomes$0
	m	(Ljava/util/function/Consumer;)V	a	accept
	f	I	a	DISTANCE_FROM_BOTTOM_TO_TOP
	f	I	b	Y_COORDINATE_AT_TOP
	f	I	c	Y_COORDINATE_AT_BOTTOM
	f	I	d	BEDROCK_THICKNESS
	f	[Laxo;	e	MOBS_TO_KILL
c	ip	net/minecraft/data/advancements/HusbandryAdvancements
	m	(Laf$a;)Laf$a;	a	addFood
	m	(Laf$a;Ljava/lang/Integer;Lyt;)V	a	lambda$addCatVariants$0
	m	(Ljava/util/function/Consumer;)V	a	accept
	m	(Laf$a;)Laf$a;	b	addBreedable
	m	(Laf$a;)Laf$a;	c	addFishBuckets
	m	(Laf$a;)Laf$a;	d	addFish
	m	(Laf$a;)Laf$a;	e	addCatVariants
	f	[Laxo;	a	BREEDABLE_ANIMALS
	f	[Lbus;	b	FISH
	f	[Lbus;	c	FISH_BUCKETS
	f	[Lbus;	d	EDIBLE_ITEMS
	f	[Lbus;	e	WAX_SCRAPING_TOOLS
c	iq	net/minecraft/data/advancements/NetherAdvancements
	m	(Ljava/util/function/Consumer;)V	a	accept
	f	Ljava/util/List;	a	EXPLORABLE_BIOMES
	f	Lbo$b;	b	DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE
c	ir	net/minecraft/data/advancements/StoryAdvancements
	m	(Ljava/util/function/Consumer;)V	a	accept
c	is	net/minecraft/data/advancements/TheEndAdvancements
	m	(Ljava/util/function/Consumer;)V	a	accept
c	it	net/minecraft/data/advancements/package-info
c	iu	net/minecraft/data/info/BlockListReport
	m	()Ljava/lang/String;	a	getName
	m	(Lim;)V	a	run
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lik;	c	generator
c	iv	net/minecraft/data/info/CommandsReport
	m	()Ljava/lang/String;	a	getName
	m	(Lim;)V	a	run
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lik;	c	generator
c	iw	net/minecraft/data/info/RegistryDumpReport
	m	()Ljava/lang/String;	a	getName
	m	(Lcom/google/gson/JsonObject;Lgs$c;)V	a	lambda$run$0
	m	(Lhb;)Lcom/google/gson/JsonElement;	a	dumpRegistry
	m	(Lhb;Lcom/google/gson/JsonObject;Lgs$c;)V	a	lambda$dumpRegistry$1
	m	(Lim;)V	a	run
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lik;	c	generator
c	ix	net/minecraft/data/info/WorldgenRegistryDumpReport
	m	()Ljava/lang/String;	a	getName
	m	(Lim;)V	a	run
	m	(Lim;Ljava/nio/file/Path;Lhc;Lcom/mojang/serialization/DynamicOps;Lhc$c;)V	a	dumpRegistryCap
	m	(Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	resolveTopPath
	m	(Ljava/nio/file/Path;Lim;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)V	a	dumpValue
	m	(Ljava/nio/file/Path;Lim;Lcom/mojang/serialization/DynamicOps;Lys;Lhb;Lcom/mojang/serialization/Encoder;)V	a	dumpRegistry
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	lambda$dumpValue$1
	m	(Ljava/nio/file/Path;Lyt;Lyt;)Ljava/nio/file/Path;	a	createPath
	m	(Lim;Ljava/nio/file/Path;Lhc;Lcom/mojang/serialization/DynamicOps;Lhc$c;)V	b	lambda$run$0
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Lik;	d	generator
c	iy	net/minecraft/data/info/package-info
c	iz	net/minecraft/data/loot/BlockLoot
	m	(Lcdq;)Ldlf$a;	A	lambda$accept$75
	m	(Lcdq;)Ldlf$a;	B	lambda$accept$74
	m	(Lcdq;)Ldlf$a;	C	lambda$accept$73
	m	(Lcdq;)Ldlf$a;	D	lambda$accept$72
	m	(Lcdq;)Ldlf$a;	E	lambda$accept$71
	m	(Lcdq;)Ldlf$a;	F	lambda$accept$70
	m	(Lcdq;)Ldlf$a;	G	lambda$accept$69
	m	(Lcdq;)Ldlf$a;	H	lambda$accept$68
	m	(Lcdq;)Ldlf$a;	I	lambda$accept$67
	m	(Lcdq;)Ldlf$a;	J	lambda$accept$66
	m	(Lcdq;)Ldlf$a;	K	lambda$accept$65
	m	(Lcdq;)Ldlf$a;	L	lambda$accept$64
	m	(Lcdq;)Ldlf$a;	M	lambda$accept$63
	m	(Lcdq;)Ldlf$a;	N	lambda$accept$62
	m	(Lcdq;)Ldlf$a;	O	lambda$accept$61
	m	(Lcdq;)Ldlf$a;	P	lambda$accept$60
	m	(Lcdq;)Ldlf$a;	Q	lambda$accept$59
	m	(Lcdq;)Ldlf$a;	R	lambda$accept$58
	m	(Lcdq;)Ldlf$a;	S	lambda$accept$57
	m	(Lcdq;)Ldlf$a;	T	lambda$accept$56
	m	(Lcdq;)Ldlf$a;	U	lambda$accept$55
	m	(Lcdq;)Ldlf$a;	V	lambda$accept$54
	m	(Lcdq;)Ldlf$a;	W	lambda$accept$53
	m	(Lcdq;)Ldlf$a;	X	lambda$accept$52
	m	(Lcdq;)Ldlf$a;	Y	lambda$accept$51
	m	(Lcdq;)Ldlf$a;	Z	lambda$accept$50
	m	()Ldlf$a;	a	noDrop
	m	(Lcau;)Ldlf$a;	a	createSingleItemTable
	m	(Lcau;Ldmk;)Ljava/lang/Object;	a	applyExplosionDecay
	m	(Lcau;Ldno;)Ljava/lang/Object;	a	applyExplosionCondition
	m	(Lcau;Ldoq;)Ldlf$a;	a	createSingleItemTable
	m	(Lcdq;)Ldlf$a;	a	createDoorTable
	m	(Lcdq;Lbus;)Ldlf$a;	a	createOreDrop
	m	(Lcdq;Lbus;Lbus;Ldnv$a;)Ldlf$a;	a	createCropDrops
	m	(Lcdq;Lcau;)V	a	dropOther
	m	(Lcdq;Lcau;Ldoq;)Ldlf$a;	a	createSingleItemTableWithSilkTouch
	m	(Lcdq;Lcdq;)V	a	otherWhenSilkTouch
	m	(Lcdq;Lcdq;[F)Ldlf$a;	a	createLeavesDrops
	m	(Lcdq;Lcpy;Ljava/lang/Comparable;)Ldlf$a;	a	createSinglePropConditionTable
	m	(Lcdq;Ldlf$a;)V	a	add
	m	(Lcdq;Ldlu$a;)Ldlf$a;	a	createSilkTouchDispatchTable
	m	(Lcdq;Ldnv$a;Ldlu$a;)Ldlf$a;	a	createSelfDropDispatchTable
	m	(Lcdq;Ljava/util/function/Function;)V	a	add
	m	(Ljava/util/function/BiConsumer;)V	a	accept
	m	(Lcdq;)Ldlf$a;	aA	lambda$accept$23
	m	(Lcdq;)Ldlf$a;	aB	lambda$accept$22
	m	(Lcdq;)Ldlf$a;	aC	lambda$accept$21
	m	(Lcdq;)Ldlf$a;	aD	lambda$accept$20
	m	(Lcdq;)Ldlf$a;	aE	lambda$accept$19
	m	(Lcdq;)Ldlf$a;	aF	lambda$accept$18
	m	(Lcdq;)Ldlf$a;	aG	lambda$accept$17
	m	(Lcdq;)Ldlf$a;	aH	lambda$accept$16
	m	(Lcdq;)Ldlf$a;	aI	lambda$accept$15
	m	(Lcdq;)Ldlf$a;	aJ	lambda$accept$14
	m	(Lcdq;)Ldlf$a;	aK	lambda$accept$13
	m	(Lcdq;)Ldlf$a;	aL	lambda$accept$12
	m	(Lcdq;)Ldlf$a;	aM	lambda$accept$11
	m	(Lcdq;)Ldlf$a;	aN	lambda$accept$10
	m	(Lcdq;)Ldlf$a;	aO	lambda$accept$9
	m	(Lcdq;)Ldlf$a;	aP	lambda$accept$8
	m	(Lcdq;)Ldlf$a;	aQ	lambda$accept$7
	m	(Lcdq;)Ldlf$a;	aR	lambda$accept$6
	m	(Lcdq;)Ldlf$a;	aS	lambda$accept$5
	m	(Lcdq;)Ldlf$a;	aT	lambda$accept$4
	m	(Lcdq;)Ldlf$a;	aU	lambda$accept$3
	m	(Lcdq;)Ldlf$a;	aV	lambda$accept$2
	m	(Lcdq;)Ldlf$a;	aW	lambda$accept$1
	m	(Lcdq;)Ldlf$a;	aX	lambda$accept$0
	m	(Lcdq;)Ldlf$a;	aa	lambda$accept$49
	m	(Lcdq;)Ldlf$a;	ab	lambda$accept$48
	m	(Lcdq;)Ldlf$a;	ac	lambda$accept$47
	m	(Lcdq;)Ldlf$a;	ad	lambda$accept$46
	m	(Lcdq;)Ldlf$a;	ae	lambda$accept$45
	m	(Lcdq;)Ldlf$a;	af	lambda$accept$44
	m	(Lcdq;)Ldlf$a;	ag	lambda$accept$43
	m	(Lcdq;)Ldlf$a;	ah	lambda$accept$42
	m	(Lcdq;)Ldlf$a;	ai	lambda$accept$41
	m	(Lcdq;)Ldlf$a;	aj	lambda$accept$40
	m	(Lcdq;)Ldlf$a;	ak	lambda$accept$39
	m	(Lcdq;)Ldlf$a;	al	lambda$accept$38
	m	(Lcdq;)Ldlf$a;	am	lambda$accept$37
	m	(Lcdq;)Ldlf$a;	an	lambda$accept$36
	m	(Lcdq;)Ldlf$a;	ao	lambda$accept$35
	m	(Lcdq;)Ldlf$a;	ap	lambda$accept$34
	m	(Lcdq;)Ldlf$a;	aq	lambda$accept$33
	m	(Lcdq;)Ldlf$a;	ar	lambda$accept$32
	m	(Lcdq;)Ldlf$a;	as	lambda$accept$31
	m	(Lcdq;)Ldlf$a;	at	lambda$accept$30
	m	(Lcdq;)Ldlf$a;	au	lambda$accept$29
	m	(Lcdq;)Ldlf$a;	av	lambda$accept$28
	m	(Lcdq;)Ldlf$a;	aw	lambda$accept$27
	m	(Lcdq;)Ldlf$a;	ax	lambda$accept$26
	m	(Lcdq;)Ldlf$a;	ay	lambda$accept$25
	m	(Lcdq;)Ldlf$a;	az	lambda$accept$24
	m	(Lcau;)Ldlf$a;	b	createSilkTouchOnlyTable
	m	(Lcdq;)V	b	dropPottedContents
	m	(Lcdq;Lbus;)Ldlf$a;	b	createStemDrops
	m	(Lcdq;Lcau;)Ldlf$a;	b	createSingleItemTableWithSilkTouch
	m	(Lcdq;Lcdq;)Ldlf$a;	b	createDoublePlantWithSeedDrops
	m	(Lcdq;Lcdq;[F)Ldlf$a;	b	createOakLeavesDrops
	m	(Lcdq;Ldlu$a;)Ldlf$a;	b	createShearsDispatchTable
	m	(Lcau;)Ldlf$a;	c	createPotFlowerItemTable
	m	(Lcdq;)V	c	dropWhenSilkTouch
	m	(Lcdq;Lbus;)Ldlf$a;	c	createAttachedStemDrops
	m	(Lcdq;Lcau;)Ldlf$a;	c	createMushroomBlockDrop
	m	(Lcdq;Lcdq;)V	c	addNetherVinesDropTable
	m	(Lcdq;Ldlu$a;)Ldlf$a;	c	createSilkTouchOrShearsDispatchTable
	m	(Lcau;)Ldlf$a;	d	createShearsOnlyDrop
	m	(Lcdq;)V	d	dropSelf
	m	(Lcdq;)Ldlf$a;	e	createSlabItemTable
	m	(Lcdq;)Ldlf$a;	f	createNameableBlockEntityTable
	m	(Lcdq;)Ldlf$a;	g	createShulkerBoxDrop
	m	(Lcdq;)Ldlf$a;	h	createCopperOreDrops
	m	(Lcdq;)Ldlf$a;	i	createLapisOreDrops
	m	(Lcdq;)Ldlf$a;	j	createRedstoneOreDrops
	m	(Lcdq;)Ldlf$a;	k	createBannerDrop
	m	(Lcdq;)Ldlf$a;	l	createBeeNestDrop
	m	(Lcdq;)Ldlf$a;	m	createBeeHiveDrop
	m	(Lcdq;)Ldlf$a;	n	createCaveVinesDrop
	m	(Lcdq;)Ldlf$a;	o	createGrassDrops
	m	(Lcdq;)Ldlf$a;	p	createGlowLichenDrops
	m	(Lcdq;)Ldlf$a;	q	createDoublePlantShearsDrop
	m	(Lcdq;)Ldlf$a;	r	createCandleDrops
	m	(Lcdq;)Ldlf$a;	s	createCandleCakeDrops
	m	(Lcdq;)Ldlf$a;	t	lambda$dropPottedContents$82
	m	(Lcdq;)Ldlf$a;	u	lambda$accept$81
	m	(Lcdq;)Ldlf$a;	v	lambda$accept$80
	m	(Lcdq;)Ldlf$a;	w	lambda$accept$79
	m	(Lcdq;)Ldlf$a;	x	lambda$accept$78
	m	(Lcdq;)Ldlf$a;	y	lambda$accept$77
	m	(Lcdq;)Ldlf$a;	z	lambda$accept$76
	f	Ldnv$a;	a	HAS_SILK_TOUCH
	f	Ldnv$a;	b	HAS_NO_SILK_TOUCH
	f	Ldnv$a;	c	HAS_SHEARS
	f	Ldnv$a;	d	HAS_SHEARS_OR_SILK_TOUCH
	f	Ldnv$a;	e	HAS_NO_SHEARS_OR_SILK_TOUCH
	f	Ljava/util/Set;	f	EXPLOSION_RESISTANT
	f	[F	g	NORMAL_LEAVES_SAPLING_CHANCES
	f	[F	h	JUNGLE_LEAVES_SAPLING_CHANGES
	f	Ljava/util/Map;	i	map
c	ja	net/minecraft/data/loot/ChestLoot
	m	(Ljava/util/function/BiConsumer;)V	a	accept
c	jb	net/minecraft/data/loot/EntityLoot
	m	(Laxo;Ldlf$a;)V	a	add
	m	(Lcau;)Ldlf$a;	a	createSheepTable
	m	(Ljava/util/function/BiConsumer;)V	a	accept
	m	(Lyt;Ldlf$a;)V	a	add
	f	Lbo$a;	a	ENTITY_ON_FIRE
	f	Ljava/util/Set;	b	SPECIAL_LOOT_TABLE_TYPES
	f	Ljava/util/Map;	c	map
c	jc	net/minecraft/data/loot/FishingLoot
	m	(Ljava/util/function/BiConsumer;)V	a	accept
	f	Ldnv$a;	a	IN_JUNGLE
	f	Ldnv$a;	b	IN_SPARSE_JUNGLE
	f	Ldnv$a;	c	IN_BAMBOO_JUNGLE
c	jd	net/minecraft/data/loot/GiftLoot
	m	(Ljava/util/function/BiConsumer;)V	a	accept
c	je	net/minecraft/data/loot/LootTableProvider
	m	()Ljava/lang/String;	a	getName
	m	(Ldlk;Lyt;Ldlf;)V	a	lambda$run$3
	m	(Lim;)V	a	run
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	lambda$run$4
	m	(Ljava/nio/file/Path;Lim;Lyt;Ldlf;)V	a	lambda$run$5
	m	(Ljava/nio/file/Path;Lyt;)Ljava/nio/file/Path;	a	createPath
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$run$1
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;Lyt;Ldlf$a;)V	a	lambda$run$0
	m	(Lyt;)Ldnv;	a	lambda$run$2
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Lik;	d	generator
	f	Ljava/util/List;	e	subProviders
c	jf	net/minecraft/data/loot/PiglinBarterLoot
	m	(Ljava/util/function/BiConsumer;)V	a	accept
c	jg	net/minecraft/data/loot/package-info
c	jh	net/minecraft/data/models/BlockModelGenerators
	m	()V	A	createEndPortalFrame
	m	(Lcdq;)V	A	createNonTemplateHorizontalBlock
	m	()V	B	createChorusPlant
	m	(Lcdq;)V	B	createMultiface
	m	()V	C	createComposter
	m	(Lcdq;)V	C	createShulkerBox
	m	()V	D	createAmethystClusters
	m	()V	E	createPointedDripstone
	m	()V	F	createDaylightDetector
	m	()V	G	createLightningRod
	m	()V	H	createFarmland
	m	()V	I	createFire
	m	()V	J	createSoulFire
	m	()V	K	createFrostedIce
	m	()V	L	createGrassBlocks
	m	()V	M	createCocoa
	m	()V	N	createDirtPath
	m	()V	O	createHopper
	m	()V	P	createIronBars
	m	()V	Q	createLever
	m	()V	R	createLilyPad
	m	()V	S	createNetherPortalBlock
	m	()V	T	createNetherrack
	m	()V	U	createObserver
	m	()V	V	createPistons
	m	()V	W	createPistonHeads
	m	()V	X	createSculkSensor
	m	()V	Y	createScaffolding
	m	()V	Z	createCaveVines
	m	()V	a	run
	m	(I)Ljava/util/List;	a	createBambooModels
	m	(ILjava/lang/String;Ljy;)Lyt;	a	createTurtleEggModel
	m	(Lbus;)V	a	createSimpleFlatItemModel
	m	(Lbus;Lyt;)V	a	delegateItemModel
	m	(Lbvx;)V	a	lambda$run$49
	m	(Lcdq;)V	a	skipAutoItemBlock
	m	(Lcdq;II)Lyt;	a	lambda$createCropBlock$11
	m	(Lcdq;Lbus;)V	a	createAirLikeBlock
	m	(Lcdq;Lcdq;)V	a	createNonTemplateModelBlock
	m	(Lcdq;Lcdq;Lcdq;Lcdq;Lcdq;Lcdq;Lcdq;Lcdq;)V	a	createCoral
	m	(Lcdq;Lcdq;Ljava/util/function/BiFunction;)V	a	createCraftingTableLike
	m	(Lcdq;Lcdq;Ljh$d;)V	a	createPlant
	m	(Lcdq;Lcpy;[I)V	a	createCropBlock
	m	(Lcdq;Ljava/lang/String;)V	a	createSimpleFlatItemModel
	m	(Lcdq;Ljava/lang/String;Ljw;Ljava/util/function/Function;)Lyt;	a	createSuffixedVariant
	m	(Lcdq;Ljava/util/function/Function;)V	a	createBeeNest
	m	(Lcdq;Ljh$d;)V	a	createCrossBlockWithDefaultItem
	m	(Lcdq;Ljh$d;Ljy;)V	a	createCrossBlockWithDefaultItem
	m	(Lcdq;Ljl$c;)V	a	lambda$createMultiface$44
	m	(Lcdq;Ljl$c;Lcpm;Ljava/util/function/Function;)V	a	lambda$createMultiface$43
	m	(Lcdq;Ljm;Lyt;Ljl$c;Lcpm;Ljava/util/function/Function;)V	a	lambda$createMultiface$45
	m	(Lcdq;Ljy;)V	a	createPumpkinVariant
	m	(Lcdq;Ljy;Ljava/lang/Integer;)Ljq;	a	lambda$createStems$5
	m	(Lcdq;Ljy;Ljw;)V	a	createTrivialBlock
	m	(Lcdq;Lka$a;)V	a	createAxisAlignedPillarBlock
	m	(Lcdq;Lka$a;Lka$a;)V	a	createRotatedPillarWithHorizontalVariant
	m	(Lcdq;Lyt;)V	a	delegateItemModel
	m	(Lcdq;Lyt;Ljq;)V	a	createGrassLikeBlock
	m	(Lcdq;Lyt;Ljy;)V	a	createPistonVariant
	m	(Lcdq;Lyt;Ljy;Ljava/util/function/BiConsumer;)Ljk;	a	createMirroredCubeGenerator
	m	(Lcdq;Lyt;Lyt;)Ljn;	a	createRotatedVariant
	m	(Lcdq;Lyt;Lyt;Lyt;)Ljk;	a	createWall
	m	(Lcdq;Lyt;Lyt;Lyt;Lyt;)Ljk;	a	createDoor
	m	(Lcpm;Lyt;Lyt;)Ljo;	a	createBooleanModelDispatch
	m	(Lcpy;Ljava/lang/Comparable;Lyt;Lyt;)Ljo;	a	createEmptyOrFullDispatch
	m	(Lcqe;)Ljq;	a	lambda$createStructureBlock$32
	m	(Lgo;Lcps;)Ljq;	a	createPointedDripstoneVariant
	m	(Lgq;)Ljq;	a	lambda$createJigsaw$47
	m	(Lgq;Ljq;)Ljq;	a	applyRotation
	m	(Lii;)V	a	lambda$run$48
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;)Ljq;	a	lambda$createTripwireHook$34
	m	(Ljava/lang/Comparable;Ljq;Ljq;Ljava/lang/Comparable;)Ljq;	a	lambda$createEmptyOrFullDispatch$10
	m	(Ljava/lang/Integer;)Ljq;	a	lambda$createSweetBerryBush$33
	m	(Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Boolean;)Ljq;	a	lambda$createRepeater$30
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Lyt;	a	createTurtleEggModel
	m	(Ljava/lang/String;I)Ljq;	a	lambda$createBambooModels$8
	m	(Ljava/util/HashMap;)V	a	lambda$static$42
	m	(Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List;	a	wrapModels
	m	(Ljo$d;Lcpr;Lyt;Lyt;)Ljo$d;	a	configureDoorHalf
	m	(Ljq;)Ljq;	a	lambda$createSoulFire$26
	m	(Ljy;)V	a	lambda$new$4
	m	(Ljy;Lyt;)Ljy;	a	lambda$createChorusFlower$14
	m	(Lka$a;[Lcdq;)V	a	createColoredBlockWithRandomRotations
	m	(Lyt;)[Ljq;	a	createRotatedVariants
	m	(Lyt;Lcdq;)Ljh$a;	a	blockEntityModels
	m	(Lyt;Ljava/lang/Integer;)Ljq;	a	lambda$createSnowBlocks$31
	m	(Lyt;Ljy;)V	a	lambda$createGrassBlocks$28
	m	(Lyt;Lyt;Lcqb;)Ljq;	a	lambda$createSculkSensor$29
	m	(Lyt;Lyt;Lyt;Lyt;Lyt;Lyt;Ljava/lang/Boolean;Lcpz;)Ljq;	a	lambda$createActiveRail$6
	m	([ILit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcdq;Ljava/lang/Integer;)Ljq;	a	lambda$createCropBlock$12
	m	([Lcdq;)V	a	createCampfires
	m	([Lyt;Ljava/lang/Integer;)Ljq;	a	lambda$createRespawnAnchor$46
	m	()V	aa	createRedstoneLamp
	m	()V	ab	createRedstoneTorch
	m	()V	ac	createRepeater
	m	()V	ad	createSeaPickle
	m	()V	ae	createSnowBlocks
	m	()V	af	createStonecutter
	m	()V	ag	createStructureBlock
	m	()V	ah	createSweetBerryBush
	m	()V	ai	createTripwire
	m	()V	aj	createTripwireHook
	m	()V	ak	createTurtleEgg
	m	()V	al	createMagmaBlock
	m	()V	am	createInfestedStone
	m	()V	an	createInfestedDeepslate
	m	()V	ao	createRespawnAnchor
	m	()V	ap	createJigsaw
	m	()V	aq	createPetrifiedOakSlab
	m	()V	ar	createLightBlock
	m	()Ljo;	b	createHorizontalFacingDispatch
	m	(Lcdq;)V	b	createSimpleFlatItemModel
	m	(Lcdq;Lcdq;)V	b	createCoralFans
	m	(Lcdq;Lcdq;Ljh$d;)V	b	createGrowingPlant
	m	(Lcdq;Ljh$d;)V	b	createCrossBlock
	m	(Lcdq;Ljh$d;Ljy;)V	b	createCrossBlock
	m	(Lcdq;Lka$a;)V	b	createHorizontallyRotatedBlock
	m	(Lcdq;Lyt;)Ljn;	b	createRotatedVariant
	m	(Lcdq;Lyt;Ljy;Ljava/util/function/BiConsumer;)Ljk;	b	createMirroredColumnGenerator
	m	(Lcdq;Lyt;Lyt;)Ljk;	b	createButton
	m	(Lcdq;Lyt;Lyt;Lyt;)Ljk;	b	createStairs
	m	(Lcdq;Lyt;Lyt;Lyt;Lyt;)Ljk;	b	createFenceGate
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/util/List;	b	lambda$createTurtleEgg$35
	m	(Ljq;)Ljq;	b	lambda$createSoulFire$25
	m	(Ljy;)V	b	lambda$new$3
	m	(Ljy;Lyt;)Ljy;	b	lambda$createCommandBlock$7
	m	(Lka$a;[Lcdq;)V	b	createColoredBlockWithStateRotations
	m	(Lyt;)Ljq;	b	lambda$static$41
	m	(Lyt;Ljy;)V	b	lambda$createGrassBlocks$27
	m	()Ljo;	c	createHorizontalFacingDispatchAlt
	m	(Lcdq;)V	c	createRotatedMirroredVariantBlock
	m	(Lcdq;Lcdq;)V	c	createStems
	m	(Lcdq;Ljh$d;)V	c	createDoublePlant
	m	(Lcdq;Lka$a;)V	c	createTrivialBlock
	m	(Lcdq;Lyt;)Ljn;	c	createSimpleBlock
	m	(Lcdq;Lyt;Lyt;)Ljk;	c	createFence
	m	(Lcdq;Lyt;Lyt;Lyt;)Ljk;	c	createOrientableTrapdoor
	m	(Ljq;)Ljq;	c	lambda$createSoulFire$24
	m	(Ljy;)V	c	lambda$new$2
	m	(Lyt;)Ljq;	c	lambda$static$40
	m	(Lyt;Ljy;)V	c	lambda$createFurnace$13
	m	()Ljo;	d	createTorchHorizontalDispatch
	m	(Lcdq;)V	d	createRotatedVariantBlock
	m	(Lcdq;Lcdq;)Ljh$a;	d	blockEntityModels
	m	(Lcdq;Lka$a;)V	d	createFurnace
	m	(Lcdq;Lyt;)Ljk;	d	createAxisAlignedPillarBlock
	m	(Lcdq;Lyt;Lyt;)Ljk;	d	createRotatedPillarWithHorizontalVariant
	m	(Lcdq;Lyt;Lyt;Lyt;)Ljk;	d	createTrapdoor
	m	(Ljq;)Ljq;	d	lambda$createSoulFire$23
	m	(Ljy;)V	d	lambda$new$1
	m	(Lyt;)Ljq;	d	lambda$static$39
	m	(Lyt;Ljy;)V	d	lambda$createBarrel$9
	m	()Ljo;	e	createFacingDispatch
	m	(Lcdq;)V	e	createTrivialCube
	m	(Lcdq;Lcdq;)V	e	createFullAndCarpetBlocks
	m	(Lcdq;Lyt;)V	e	createAxisAlignedPillarBlockCustomModel
	m	(Lcdq;Lyt;Lyt;)Ljk;	e	createPressurePlate
	m	(Lcdq;Lyt;Lyt;Lyt;)Ljk;	e	createSlab
	m	(Ljq;)Ljq;	e	lambda$createSoulFire$22
	m	(Ljy;)V	e	lambda$new$0
	m	(Lyt;)Ljq;	e	lambda$static$38
	m	()Ljo;	f	createRotatedPillar
	m	(Lcdq;)Ljh$b;	f	family
	m	(Lcdq;Lcdq;)V	f	createGlassBlocks
	m	(Lcdq;Lyt;)V	f	createAirLikeBlock
	m	(Lcdq;Lyt;Lyt;)V	f	createDoubleBlock
	m	(Ljq;)Ljq;	f	lambda$createFire$21
	m	(Lyt;)Ljq;	f	lambda$static$37
	m	()V	g	createBigDripLeafBlock
	m	(Lcdq;)V	g	createDoor
	m	(Lcdq;Lcdq;)V	g	createWeightedPressurePlate
	m	(Ljq;)Ljq;	g	lambda$createFire$20
	m	(Lyt;)Ljq;	g	lambda$static$36
	m	()V	h	createSunflower
	m	(Lcdq;)V	h	createOrientableTrapdoor
	m	(Lcdq;Lcdq;)V	h	copyModel
	m	(Ljq;)Ljq;	h	lambda$createFire$19
	m	(Lyt;)Ljq;	h	lambda$wrapModels$15
	m	()V	i	createTallSeagrass
	m	(Lcdq;)V	i	createTrapdoor
	m	(Lcdq;Lcdq;)V	i	createNormalTorch
	m	(Ljq;)Ljq;	i	lambda$createFire$18
	m	()V	j	createSmallDripleaf
	m	(Lcdq;)Ljh$e;	j	woodProvider
	m	(Lcdq;Lcdq;)V	j	createBedItem
	m	(Ljq;)Ljq;	j	lambda$createFire$17
	m	()V	k	createBamboo
	m	(Lcdq;)V	k	createNonTemplateModelBlock
	m	(Lcdq;Lcdq;)V	k	createNetherRoots
	m	(Ljq;)Ljq;	k	lambda$createFire$16
	m	()Ljo;	l	createColumnWithFacing
	m	(Lcdq;)V	l	createPassiveRail
	m	(Lcdq;Lcdq;)V	l	createCandleAndCandleCake
	m	()V	m	createBarrel
	m	(Lcdq;)V	m	createActiveRail
	m	()V	n	createBell
	m	(Lcdq;)V	n	createCommandBlock
	m	()V	o	createGrindstone
	m	(Lcdq;)V	o	createAnvil
	m	()V	p	createBookshelf
	m	(Lcdq;)V	p	createAzalea
	m	()V	q	createRedstoneWire
	m	(Lcdq;)V	q	createPottedAzalea
	m	()V	r	createComparator
	m	(Lcdq;)V	r	createMushroomBlock
	m	()V	s	createSmoothStoneSlab
	m	(Lcdq;)V	s	createDispenserBlock
	m	()V	t	createBrewingStand
	m	(Lcdq;)V	t	createAmethystCluster
	m	()V	u	createCakeBlock
	m	(Lcdq;)V	u	createNyliumBlock
	m	()V	v	createCartographyTable
	m	(Lcdq;)V	v	createRotatableColumn
	m	()V	w	createSmithingTable
	m	(Lcdq;)Ljava/util/List;	w	createFloorFireModels
	m	()V	x	createPumpkins
	m	(Lcdq;)Ljava/util/List;	x	createSideFireModels
	m	()V	y	createCauldrons
	m	(Lcdq;)Ljava/util/List;	y	createTopFireModels
	m	()V	z	createChorusFlower
	m	(Lcdq;)V	z	createLantern
	f	Ljava/util/Map;	a	MULTIFACE_GENERATOR
	f	Ljava/util/function/Consumer;	b	blockStateOutput
	f	Ljava/util/function/BiConsumer;	c	modelOutput
	f	Ljava/util/function/Consumer;	d	skippedAutoModelsOutput
	f	Ljava/util/List;	e	nonOrientableTrapdoor
	f	Ljava/util/Map;	f	fullBlockModelCustomGenerators
	f	Ljava/util/Map;	g	texturedModels
	f	Ljava/util/Map;	h	SHAPE_CONSUMERS
c	jh$1	net/minecraft/data/models/BlockModelGenerators$1
	f	[I	a	$SwitchMap$net$minecraft$core$FrontAndTop
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
c	jh$a	net/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator
	m	(Ljw;[Lcdq;)Ljh$a;	a	createWithCustomBlockItemModel
	m	([Lcdq;)Ljh$a;	a	create
	m	([Lcdq;)Ljh$a;	b	createWithoutBlockItem
	f	Ljh;	a	this$0
	f	Lyt;	b	baseModel
c	jh$b	net/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider
	m	(Lcdq;)Ljh$b;	a	button
	m	(Lcdq;Ljw;)Ljh$b;	a	fullBlock
	m	(Lii$b;Lcdq;)V	a	lambda$generateFor$1
	m	(Lii;)Ljh$b;	a	generateFor
	m	(Ljw;Lcdq;)Lyt;	a	getOrCreateModel
	m	([Lcdq;)Ljh$b;	a	fullBlockCopies
	m	(Lcdq;)Ljh$b;	b	wall
	m	(Lcdq;Ljw;)Lyt;	b	lambda$getOrCreateModel$0
	m	(Lcdq;)Ljh$b;	c	fence
	m	(Lcdq;)Ljh$b;	d	fenceGate
	m	(Lcdq;)Ljh$b;	e	pressurePlate
	m	(Lcdq;)Ljh$b;	f	sign
	m	(Lcdq;)Ljh$b;	g	slab
	m	(Lcdq;)Ljh$b;	h	stairs
	m	(Lcdq;)Ljh$b;	i	fullBlockVariant
	m	(Lcdq;)Ljh$b;	j	door
	m	(Lcdq;)V	k	trapdoor
	f	Ljh;	a	this$0
	f	Ljy;	b	mapping
	f	Ljava/util/Map;	c	models
	f	Lii;	d	family
	f	Lyt;	e	fullBlock
c	jh$c	net/minecraft/data/models/BlockModelGenerators$BlockStateGeneratorSupplier
c	jh$d	net/minecraft/data/models/BlockModelGenerators$TintState
	m	()Ljw;	a	getCross
	m	()Ljw;	b	getCrossPot
	m	()[Ljh$d;	c	$values
	f	Ljh$d;	a	TINTED
	f	Ljh$d;	b	NOT_TINTED
	f	[Ljh$d;	c	$VALUES
c	jh$e	net/minecraft/data/models/BlockModelGenerators$WoodProvider
	m	(Lcdq;)Ljh$e;	a	wood
	m	(Lcdq;)Ljh$e;	b	log
	m	(Lcdq;)Ljh$e;	c	logWithHorizontal
	f	Ljh;	a	this$0
	f	Ljy;	b	logMapping
c	ji	net/minecraft/data/models/ItemModelGenerators
	m	()V	a	run
	m	(Lbus;Lbus;Ljw;)V	a	generateFlatItem
	m	(Lbus;Ljava/lang/String;Ljw;)V	a	generateFlatItem
	m	(Lbus;Ljw;)V	a	generateFlatItem
	f	Ljava/util/function/BiConsumer;	a	output
c	jj	net/minecraft/data/models/ModelProvider
	m	()Ljava/lang/String;	a	getName
	m	(Lim;)V	a	run
	m	(Lim;Ljava/nio/file/Path;Ljava/util/Map;Ljava/util/function/BiFunction;)V	a	saveCollection
	m	(Ljava/nio/file/Path;Lcdq;)Ljava/nio/file/Path;	a	createBlockStatePath
	m	(Ljava/nio/file/Path;Lyt;)Ljava/nio/file/Path;	a	createModelPath
	m	(Ljava/util/Map;Lcdq;)Z	a	lambda$run$2
	m	(Ljava/util/Map;Ljk;)V	a	lambda$run$0
	m	(Ljava/util/Map;Lyt;Ljava/util/function/Supplier;)V	a	lambda$run$1
	m	(Ljava/util/Set;Ljava/util/Map;Lcdq;)V	a	lambda$run$3
	m	(Ljava/util/function/BiFunction;Ljava/nio/file/Path;Lim;Ljava/lang/Object;Ljava/util/function/Supplier;)V	a	lambda$saveCollection$4
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Lik;	d	generator
c	jk	net/minecraft/data/models/blockstates/BlockStateGenerator
	m	()Lcdq;	a	getBlock
c	jl	net/minecraft/data/models/blockstates/Condition
	m	()Ljl$c;	a	condition
	m	(Lcow;)V	a	validate
	m	([Ljl;)Ljl;	a	and
	m	([Ljl;)Ljl;	b	or
c	jl$a	net/minecraft/data/models/blockstates/Condition$CompositeCondition
	m	(Lcow;)V	a	validate
	m	(Lcow;Ljl;)V	a	lambda$validate$0
	m	()Lcom/google/gson/JsonElement;	b	get
	f	Ljl$b;	a	operation
	f	Ljava/util/List;	b	subconditions
c	jl$b	net/minecraft/data/models/blockstates/Condition$Operation
	m	()[Ljl$b;	a	$values
	f	Ljl$b;	a	AND
	f	Ljl$b;	b	OR
	f	Ljava/lang/String;	c	id
	f	[Ljl$b;	d	$VALUES
c	jl$c	net/minecraft/data/models/blockstates/Condition$TerminalCondition
	m	(Lcom/google/gson/JsonObject;Lcpy;Ljava/lang/String;)V	a	lambda$get$0
	m	(Lcow;)V	a	validate
	m	(Lcow;Lcpy;)Z	a	lambda$validate$1
	m	(Lcpy;Ljava/lang/Comparable;)Ljl$c;	a	term
	m	(Lcpy;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljl$c;	a	term
	m	(Lcpy;Ljava/lang/String;)V	a	putValue
	m	(Lcpy;Ljava/util/stream/Stream;)Ljava/lang/String;	a	joinValues
	m	()Lcom/google/gson/JsonElement;	b	get
	m	(Lcpy;Ljava/lang/Comparable;)Ljl$c;	b	negatedTerm
	m	(Lcpy;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljl$c;	b	negatedTerm
	m	(Lcpy;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String;	c	getTerm
	f	Ljava/util/Map;	a	terms
c	jm	net/minecraft/data/models/blockstates/MultiPartGenerator
	m	()Lcdq;	a	getBlock
	m	(Lcdq;)Ljm;	a	multiPart
	m	(Lcow;Ljm$b;)V	a	lambda$get$0
	m	(Ljava/util/List;)Ljm;	a	with
	m	(Ljl;Ljava/util/List;)Ljm;	a	with
	m	(Ljl;Ljq;)Ljm;	a	with
	m	(Ljl;[Ljq;)Ljm;	a	with
	m	(Ljq;)Ljm;	a	with
	m	()Lcom/google/gson/JsonElement;	b	get
	f	Lcdq;	a	block
	f	Ljava/util/List;	b	parts
c	jm$a	net/minecraft/data/models/blockstates/MultiPartGenerator$ConditionalEntry
	m	(Lcom/google/gson/JsonObject;)V	a	decorate
	m	(Lcow;)V	a	validate
	f	Ljl;	a	condition
c	jm$b	net/minecraft/data/models/blockstates/MultiPartGenerator$Entry
	m	()Lcom/google/gson/JsonElement;	a	get
	m	(Lcom/google/gson/JsonObject;)V	a	decorate
	m	(Lcow;)V	a	validate
	f	Ljava/util/List;	a	variants
c	jn	net/minecraft/data/models/blockstates/MultiVariantGenerator
	m	()Lcdq;	a	getBlock
	m	(Lcdq;)Ljn;	a	multiVariant
	m	(Lcdq;Ljq;)Ljn;	a	multiVariant
	m	(Lcdq;[Ljq;)Ljn;	a	multiVariant
	m	(Lcom/google/common/collect/ImmutableList$Builder;Ljq;Ljq;)V	a	lambda$mergeVariants$5
	m	(Lcom/mojang/datafixers/util/Pair;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$get$1
	m	(Lcpy;)V	a	lambda$with$0
	m	(Ljava/util/List;Lcom/google/common/collect/ImmutableList$Builder;Ljq;)V	a	lambda$mergeVariants$6
	m	(Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	mergeVariants
	m	(Ljava/util/Map;Lcom/google/gson/JsonObject;)V	a	lambda$get$4
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$get$3
	m	(Ljo;)Ljn;	a	with
	m	()Lcom/google/gson/JsonElement;	b	get
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream;	b	lambda$get$2
	f	Lcdq;	a	block
	f	Ljava/util/List;	b	baseVariants
	f	Ljava/util/Set;	c	seenProperties
	f	Ljava/util/List;	d	declaredPropertySets
c	jo	net/minecraft/data/models/blockstates/PropertyDispatch
	m	()Ljava/util/Map;	a	getEntries
	m	(Lcpy;)Ljo$a;	a	property
	m	(Lcpy;Lcpy;)Ljo$b;	a	properties
	m	(Lcpy;Lcpy;Lcpy;)Ljo$c;	a	properties
	m	(Lcpy;Lcpy;Lcpy;Lcpy;)Ljo$d;	a	properties
	m	(Lcpy;Lcpy;Lcpy;Lcpy;Lcpy;)Ljo$e;	a	properties
	m	(Lcpy;Ljp;)Ljava/util/stream/Stream;	a	lambda$verifyComplete$0
	m	(Ljp;)Z	a	lambda$verifyComplete$1
	m	(Ljp;Ljava/util/List;)V	a	putValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	()V	c	verifyComplete
	f	Ljava/util/Map;	a	values
c	jo$a	net/minecraft/data/models/blockstates/PropertyDispatch$C1
	m	(Ljava/lang/Comparable;Ljava/util/List;)Ljo$a;	a	select
	m	(Ljava/lang/Comparable;Ljq;)Ljo$a;	a	select
	m	(Ljava/util/function/Function;)Ljo;	a	generate
	m	(Ljava/util/function/Function;Ljava/lang/Comparable;)V	a	lambda$generateList$1
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/util/function/Function;)Ljo;	b	generateList
	m	(Ljava/util/function/Function;Ljava/lang/Comparable;)V	b	lambda$generate$0
	f	Lcpy;	a	property1
c	jo$b	net/minecraft/data/models/blockstates/PropertyDispatch$C2
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Ljo$b;	a	select
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljq;)Ljo$b;	a	select
	m	(Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	a	lambda$generateList$2
	m	(Ljava/util/function/BiFunction;)Ljo;	a	generate
	m	(Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	a	lambda$generateList$3
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	b	lambda$generate$0
	m	(Ljava/util/function/BiFunction;)Ljo;	b	generateList
	m	(Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	b	lambda$generate$1
	f	Lcpy;	a	property1
	f	Lcpy;	b	property2
c	jo$c	net/minecraft/data/models/blockstates/PropertyDispatch$C3
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Ljo$c;	a	select
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljq;)Ljo$c;	a	select
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljo$h;Ljava/lang/Comparable;)V	a	lambda$generateList$3
	m	(Ljava/lang/Comparable;Ljo$h;Ljava/lang/Comparable;)V	a	lambda$generateList$4
	m	(Ljo$h;)Ljo;	a	generate
	m	(Ljo$h;Ljava/lang/Comparable;)V	a	lambda$generateList$5
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljo$h;Ljava/lang/Comparable;)V	b	lambda$generate$0
	m	(Ljava/lang/Comparable;Ljo$h;Ljava/lang/Comparable;)V	b	lambda$generate$1
	m	(Ljo$h;)Ljo;	b	generateList
	m	(Ljo$h;Ljava/lang/Comparable;)V	b	lambda$generate$2
	f	Lcpy;	a	property1
	f	Lcpy;	b	property2
	f	Lcpy;	c	property3
c	jo$d	net/minecraft/data/models/blockstates/PropertyDispatch$C4
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Ljo$d;	a	select
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljq;)Ljo$d;	a	select
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljo$g;Ljava/lang/Comparable;)V	a	lambda$generateList$4
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljo$g;Ljava/lang/Comparable;)V	a	lambda$generateList$5
	m	(Ljava/lang/Comparable;Ljo$g;Ljava/lang/Comparable;)V	a	lambda$generateList$6
	m	(Ljo$g;)Ljo;	a	generate
	m	(Ljo$g;Ljava/lang/Comparable;)V	a	lambda$generateList$7
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljo$g;Ljava/lang/Comparable;)V	b	lambda$generate$0
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljo$g;Ljava/lang/Comparable;)V	b	lambda$generate$1
	m	(Ljava/lang/Comparable;Ljo$g;Ljava/lang/Comparable;)V	b	lambda$generate$2
	m	(Ljo$g;)Ljo;	b	generateList
	m	(Ljo$g;Ljava/lang/Comparable;)V	b	lambda$generate$3
	f	Lcpy;	a	property1
	f	Lcpy;	b	property2
	f	Lcpy;	c	property3
	f	Lcpy;	d	property4
c	jo$e	net/minecraft/data/models/blockstates/PropertyDispatch$C5
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Ljo$e;	a	select
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljq;)Ljo$e;	a	select
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljo$f;Ljava/lang/Comparable;)V	a	lambda$generateList$5
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljo$f;Ljava/lang/Comparable;)V	a	lambda$generateList$6
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljo$f;Ljava/lang/Comparable;)V	a	lambda$generateList$7
	m	(Ljava/lang/Comparable;Ljo$f;Ljava/lang/Comparable;)V	a	lambda$generateList$8
	m	(Ljo$f;)Ljo;	a	generate
	m	(Ljo$f;Ljava/lang/Comparable;)V	a	lambda$generateList$9
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljo$f;Ljava/lang/Comparable;)V	b	lambda$generate$0
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljo$f;Ljava/lang/Comparable;)V	b	lambda$generate$1
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljo$f;Ljava/lang/Comparable;)V	b	lambda$generate$2
	m	(Ljava/lang/Comparable;Ljo$f;Ljava/lang/Comparable;)V	b	lambda$generate$3
	m	(Ljo$f;)Ljo;	b	generateList
	m	(Ljo$f;Ljava/lang/Comparable;)V	b	lambda$generate$4
	f	Lcpy;	a	property1
	f	Lcpy;	b	property2
	f	Lcpy;	c	property3
	f	Lcpy;	d	property4
	f	Lcpy;	e	property5
c	jo$f	net/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction
c	jo$g	net/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction
c	jo$h	net/minecraft/data/models/blockstates/PropertyDispatch$TriFunction
c	jp	net/minecraft/data/models/blockstates/Selector
	m	()Ljp;	a	empty
	m	(Lcpy$a;)Ljp;	a	extend
	m	(Ljp;)Ljp;	a	extend
	m	([Lcpy$a;)Ljp;	a	of
	m	()Ljava/lang/String;	b	getKey
	m	(Lcpy$a;)Ljava/lang/String;	b	lambda$static$0
	f	Ljp;	a	EMPTY
	f	Ljava/util/Comparator;	b	COMPARE_BY_NAME
	f	Ljava/util/List;	c	values
c	jq	net/minecraft/data/models/blockstates/Variant
	m	()Ljq;	a	variant
	m	(Lcom/google/gson/JsonArray;Ljq;)V	a	lambda$convertList$1
	m	(Lcom/google/gson/JsonObject;Ljs$a;)V	a	lambda$get$0
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	a	convertList
	m	(Ljq;Ljq;)Ljq;	a	merge
	m	(Ljs;Ljava/lang/Object;)Ljq;	a	with
	m	()Lcom/google/gson/JsonElement;	b	get
	f	Ljava/util/Map;	a	values
c	jr	net/minecraft/data/models/blockstates/VariantProperties
	m	(Ljr$a;)Lcom/google/gson/JsonElement;	a	lambda$static$1
	m	(Lyt;)Lcom/google/gson/JsonElement;	a	lambda$static$2
	m	(Ljr$a;)Lcom/google/gson/JsonElement;	b	lambda$static$0
	f	Ljs;	a	X_ROT
	f	Ljs;	b	Y_ROT
	f	Ljs;	c	MODEL
	f	Ljs;	d	UV_LOCK
	f	Ljs;	e	WEIGHT
c	jr$a	net/minecraft/data/models/blockstates/VariantProperties$Rotation
	m	()[Ljr$a;	a	$values
	f	Ljr$a;	a	R0
	f	Ljr$a;	b	R90
	f	Ljr$a;	c	R180
	f	Ljr$a;	d	R270
	f	I	e	value
	f	[Ljr$a;	f	$VALUES
c	js	net/minecraft/data/models/blockstates/VariantProperty
	m	(Ljava/lang/Object;)Ljs$a;	a	withValue
	f	Ljava/lang/String;	a	key
	f	Ljava/util/function/Function;	b	serializer
c	js$a	net/minecraft/data/models/blockstates/VariantProperty$Value
	m	()Ljs;	a	getKey
	m	(Lcom/google/gson/JsonObject;)V	a	addToVariant
	f	Ljs;	a	this$0
	f	Ljava/lang/Object;	b	value
c	jt	net/minecraft/data/models/blockstates/package-info
c	ju	net/minecraft/data/models/model/DelegatedModel
	m	()Lcom/google/gson/JsonElement;	a	get
	f	Lyt;	a	parent
c	jv	net/minecraft/data/models/model/ModelLocationUtils
	m	(Lbus;)Lyt;	a	getModelLocation
	m	(Lbus;Ljava/lang/String;)Lyt;	a	getModelLocation
	m	(Lcdq;)Lyt;	a	getModelLocation
	m	(Lcdq;Ljava/lang/String;)Lyt;	a	getModelLocation
	m	(Ljava/lang/String;)Lyt;	a	decorateBlockModelLocation
	m	(Ljava/lang/String;)Lyt;	b	decorateItemModelLocation
c	jw	net/minecraft/data/models/model/ModelTemplate
	m	(Lcdq;Ljava/lang/String;Ljy;Ljava/util/function/BiConsumer;)Lyt;	a	createWithSuffix
	m	(Lcdq;Ljy;Ljava/util/function/BiConsumer;)Lyt;	a	create
	m	(Lcom/google/gson/JsonObject;Ljz;Lyt;)V	a	lambda$create$1
	m	(Lcom/google/gson/JsonObject;Lyt;)V	a	lambda$create$0
	m	(Ljava/util/Map;)Lcom/google/gson/JsonElement;	a	lambda$create$2
	m	(Ljy;)Ljava/util/Map;	a	createMap
	m	(Lyt;Ljy;Ljava/util/function/BiConsumer;)Lyt;	a	create
	m	(Lcdq;Ljava/lang/String;Ljy;Ljava/util/function/BiConsumer;)Lyt;	b	createWithOverride
	f	Ljava/util/Optional;	a	model
	f	Ljava/util/Set;	b	requiredSlots
	f	Ljava/util/Optional;	c	suffix
c	jx	net/minecraft/data/models/model/ModelTemplates
	m	(I)[Ljw;	a	lambda$static$1
	m	(Ljava/lang/String;Ljava/lang/String;[Ljz;)Ljw;	a	create
	m	(Ljava/lang/String;[Ljz;)Ljw;	a	create
	m	([Ljz;)Ljw;	a	create
	m	(I)Ljw;	b	lambda$static$0
	m	(Ljava/lang/String;[Ljz;)Ljw;	b	createItem
	f	Ljw;	A	FENCE_GATE_CLOSED
	f	Ljw;	B	FENCE_GATE_OPEN
	f	Ljw;	C	FENCE_GATE_WALL_CLOSED
	f	Ljw;	D	FENCE_GATE_WALL_OPEN
	f	Ljw;	E	PRESSURE_PLATE_UP
	f	Ljw;	F	PRESSURE_PLATE_DOWN
	f	Ljw;	G	PARTICLE_ONLY
	f	Ljw;	H	SLAB_BOTTOM
	f	Ljw;	I	SLAB_TOP
	f	Ljw;	J	LEAVES
	f	Ljw;	K	STAIRS_STRAIGHT
	f	Ljw;	L	STAIRS_INNER
	f	Ljw;	M	STAIRS_OUTER
	f	Ljw;	N	TRAPDOOR_TOP
	f	Ljw;	O	TRAPDOOR_BOTTOM
	f	Ljw;	P	TRAPDOOR_OPEN
	f	Ljw;	Q	ORIENTABLE_TRAPDOOR_TOP
	f	Ljw;	R	ORIENTABLE_TRAPDOOR_BOTTOM
	f	Ljw;	S	ORIENTABLE_TRAPDOOR_OPEN
	f	Ljw;	T	POINTED_DRIPSTONE
	f	Ljw;	U	CROSS
	f	Ljw;	V	TINTED_CROSS
	f	Ljw;	W	FLOWER_POT_CROSS
	f	Ljw;	X	TINTED_FLOWER_POT_CROSS
	f	Ljw;	Y	RAIL_FLAT
	f	Ljw;	Z	RAIL_CURVED
	f	Ljw;	aA	HANGING_LANTERN
	f	Ljw;	aB	TORCH
	f	Ljw;	aC	WALL_TORCH
	f	Ljw;	aD	PISTON
	f	Ljw;	aE	PISTON_HEAD
	f	Ljw;	aF	PISTON_HEAD_SHORT
	f	Ljw;	aG	SEAGRASS
	f	Ljw;	aH	TURTLE_EGG
	f	Ljw;	aI	TWO_TURTLE_EGGS
	f	Ljw;	aJ	THREE_TURTLE_EGGS
	f	Ljw;	aK	FOUR_TURTLE_EGGS
	f	Ljw;	aL	SINGLE_FACE
	f	Ljw;	a	CUBE
	f	Ljw;	aM	CAULDRON_LEVEL1
	f	Ljw;	aN	CAULDRON_LEVEL2
	f	Ljw;	aO	CAULDRON_FULL
	f	Ljw;	aP	AZALEA
	f	Ljw;	aQ	POTTED_AZALEA
	f	Ljw;	aR	FLAT_ITEM
	f	Ljw;	aS	FLAT_HANDHELD_ITEM
	f	Ljw;	aT	FLAT_HANDHELD_ROD_ITEM
	f	Ljw;	aU	SHULKER_BOX_INVENTORY
	f	Ljw;	aV	BED_INVENTORY
	f	Ljw;	aW	BANNER_INVENTORY
	f	Ljw;	aX	SKULL_INVENTORY
	f	Ljw;	aY	CANDLE
	f	Ljw;	aZ	TWO_CANDLES
	f	Ljw;	aa	RAIL_RAISED_NE
	f	Ljw;	ab	RAIL_RAISED_SW
	f	Ljw;	ac	CARPET
	f	Ljw;	ad	CORAL_FAN
	f	Ljw;	ae	CORAL_WALL_FAN
	f	Ljw;	af	GLAZED_TERRACOTTA
	f	Ljw;	ag	CHORUS_FLOWER
	f	Ljw;	ah	DAYLIGHT_DETECTOR
	f	Ljw;	ai	STAINED_GLASS_PANE_NOSIDE
	f	Ljw;	aj	STAINED_GLASS_PANE_NOSIDE_ALT
	f	Ljw;	ak	STAINED_GLASS_PANE_POST
	f	Ljw;	al	STAINED_GLASS_PANE_SIDE
	f	Ljw;	am	STAINED_GLASS_PANE_SIDE_ALT
	f	Ljw;	an	COMMAND_BLOCK
	f	Ljw;	ao	ANVIL
	f	[Ljw;	ap	STEMS
	f	Ljw;	aq	ATTACHED_STEM
	f	Ljw;	ar	CROP
	f	Ljw;	as	FARMLAND
	f	Ljw;	at	FIRE_FLOOR
	f	Ljw;	au	FIRE_SIDE
	f	Ljw;	av	FIRE_SIDE_ALT
	f	Ljw;	aw	FIRE_UP
	f	Ljw;	ax	FIRE_UP_ALT
	f	Ljw;	ay	CAMPFIRE
	f	Ljw;	az	LANTERN
	f	Ljw;	b	CUBE_DIRECTIONAL
	f	Ljw;	ba	THREE_CANDLES
	f	Ljw;	bb	FOUR_CANDLES
	f	Ljw;	bc	CANDLE_CAKE
	f	Ljw;	c	CUBE_ALL
	f	Ljw;	d	CUBE_MIRRORED_ALL
	f	Ljw;	e	CUBE_COLUMN
	f	Ljw;	f	CUBE_COLUMN_HORIZONTAL
	f	Ljw;	g	CUBE_COLUMN_MIRRORED
	f	Ljw;	h	CUBE_TOP
	f	Ljw;	i	CUBE_BOTTOM_TOP
	f	Ljw;	j	CUBE_ORIENTABLE
	f	Ljw;	k	CUBE_ORIENTABLE_TOP_BOTTOM
	f	Ljw;	l	CUBE_ORIENTABLE_VERTICAL
	f	Ljw;	m	BUTTON
	f	Ljw;	n	BUTTON_PRESSED
	f	Ljw;	o	BUTTON_INVENTORY
	f	Ljw;	p	DOOR_BOTTOM
	f	Ljw;	q	DOOR_BOTTOM_HINGE
	f	Ljw;	r	DOOR_TOP
	f	Ljw;	s	DOOR_TOP_HINGE
	f	Ljw;	t	FENCE_POST
	f	Ljw;	u	FENCE_SIDE
	f	Ljw;	v	FENCE_INVENTORY
	f	Ljw;	w	WALL_POST
	f	Ljw;	x	WALL_LOW_SIDE
	f	Ljw;	y	WALL_TALL_SIDE
	f	Ljw;	z	WALL_INVENTORY
c	jy	net/minecraft/data/models/model/TextureMapping
	m	(Lcdq;)Ljy;	A	campfire
	m	(Lcdq;)Ljy;	B	layer0
	m	(Lcdq;)Lyt;	C	getBlockTexture
	m	()Ljava/util/stream/Stream;	a	getForced
	m	(Lbus;)Ljy;	a	particleFromItem
	m	(Lbus;Ljava/lang/String;)Lyt;	a	getItemTexture
	m	(Lcdq;)Ljy;	a	cube
	m	(Lcdq;Lcdq;)Ljy;	a	attachedStem
	m	(Lcdq;Ljava/lang/String;)Lyt;	a	getBlockTexture
	m	(Lcdq;Z)Ljy;	a	candleCake
	m	(Ljz;)Lyt;	a	get
	m	(Ljz;Ljz;)Ljy;	a	copySlot
	m	(Ljz;Lyt;)Ljy;	a	put
	m	(Lyt;)Ljy;	a	defaultTexture
	m	(Lyt;Lyt;)Ljy;	a	column
	m	(Lbus;)Ljy;	b	layer0
	m	(Lcdq;)Ljy;	b	defaultTexture
	m	(Lcdq;Lcdq;)Ljy;	b	pane
	m	(Ljz;Ljz;)Ljy;	b	copyForced
	m	(Ljz;Lyt;)Ljy;	b	putForced
	m	(Lyt;)Ljy;	b	cube
	m	(Lyt;Lyt;)Ljy;	b	door
	m	(Lbus;)Lyt;	c	getItemTexture
	m	(Lcdq;)Ljy;	c	cross
	m	(Lcdq;Lcdq;)Ljy;	c	craftingTable
	m	(Ljz;Lyt;)Ljy;	c	copyAndUpdate
	m	(Lyt;)Ljy;	c	cross
	m	(Lcdq;)Ljy;	d	plant
	m	(Lcdq;Lcdq;)Ljy;	d	fletchingTable
	m	(Ljz;Lyt;)Ljy;	d	singleSlot
	m	(Lyt;)Ljy;	d	plant
	m	(Lcdq;)Ljy;	e	rail
	m	(Lyt;)Ljy;	e	rail
	m	(Lcdq;)Ljy;	f	wool
	m	(Lyt;)Ljy;	f	wool
	m	(Lcdq;)Ljy;	g	stem
	m	(Lyt;)Ljy;	g	crop
	m	(Lcdq;)Ljy;	h	pattern
	m	(Lyt;)Ljy;	h	particle
	m	(Lcdq;)Ljy;	i	fan
	m	(Lyt;)Ljy;	i	torch
	m	(Lcdq;)Ljy;	j	column
	m	(Lyt;)Ljy;	j	cauldron
	m	(Lcdq;)Ljy;	k	cubeTop
	m	(Lyt;)Ljy;	k	layer0
	m	(Lcdq;)Ljy;	l	logColumn
	m	(Lcdq;)Ljy;	m	cubeBottomTop
	m	(Lcdq;)Ljy;	n	cubeBottomTopWithWall
	m	(Lcdq;)Ljy;	o	columnWithWall
	m	(Lcdq;)Ljy;	p	door
	m	(Lcdq;)Ljy;	q	particle
	m	(Lcdq;)Ljy;	r	fire0
	m	(Lcdq;)Ljy;	s	fire1
	m	(Lcdq;)Ljy;	t	lantern
	m	(Lcdq;)Ljy;	u	torch
	m	(Lcdq;)Ljy;	v	commandBlock
	m	(Lcdq;)Ljy;	w	orientableCube
	m	(Lcdq;)Ljy;	x	orientableCubeOnlyTop
	m	(Lcdq;)Ljy;	y	orientableCubeSameEnds
	m	(Lcdq;)Ljy;	z	top
	f	Ljava/util/Map;	a	slots
	f	Ljava/util/Set;	b	forcedSlots
c	jz	net/minecraft/data/models/model/TextureSlot
	m	()Ljava/lang/String;	a	getId
	m	(Ljava/lang/String;)Ljz;	a	create
	m	(Ljava/lang/String;Ljz;)Ljz;	a	create
	m	()Ljz;	b	getParent
	f	Ljz;	A	CROP
	f	Ljz;	B	DIRT
	f	Ljz;	C	FIRE
	f	Ljz;	D	LANTERN
	f	Ljz;	E	PLATFORM
	f	Ljz;	F	UNSTICKY
	f	Ljz;	G	TORCH
	f	Ljz;	H	LAYER0
	f	Ljz;	I	LIT_LOG
	f	Ljz;	J	CANDLE
	f	Ljz;	K	INSIDE
	f	Ljz;	L	CONTENT
	f	Ljava/lang/String;	M	id
	f	Ljz;	N	parent
	f	Ljz;	a	ALL
	f	Ljz;	b	TEXTURE
	f	Ljz;	c	PARTICLE
	f	Ljz;	d	END
	f	Ljz;	e	BOTTOM
	f	Ljz;	f	TOP
	f	Ljz;	g	FRONT
	f	Ljz;	h	BACK
	f	Ljz;	i	SIDE
	f	Ljz;	j	NORTH
	f	Ljz;	k	SOUTH
	f	Ljz;	l	EAST
	f	Ljz;	m	WEST
	f	Ljz;	n	UP
	f	Ljz;	o	DOWN
	f	Ljz;	p	CROSS
	f	Ljz;	q	PLANT
	f	Ljz;	r	WALL
	f	Ljz;	s	RAIL
	f	Ljz;	t	WOOL
	f	Ljz;	u	PATTERN
	f	Ljz;	v	PANE
	f	Ljz;	w	EDGE
	f	Ljz;	x	FAN
	f	Ljz;	y	STEM
	f	Ljz;	z	UPPER_STEM
c	ka	net/minecraft/data/models/model/TexturedModel
	m	()Ljw;	a	getTemplate
	m	(Lcdq;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lyt;	a	createWithSuffix
	m	(Lcdq;Ljava/util/function/BiConsumer;)Lyt;	a	create
	m	(Ljava/util/function/Consumer;)Lka;	a	updateTextures
	m	(Ljava/util/function/Function;Ljw;)Lka$a;	a	createDefault
	m	(Ljava/util/function/Function;Ljw;Lcdq;)Lka;	a	lambda$createDefault$0
	m	(Lyt;)Lka;	a	createAllSame
	m	()Ljy;	b	getMapping
	f	Lka$a;	a	CUBE
	f	Lka$a;	b	CUBE_MIRRORED
	f	Lka$a;	c	COLUMN
	f	Lka$a;	d	COLUMN_HORIZONTAL
	f	Lka$a;	e	CUBE_TOP_BOTTOM
	f	Lka$a;	f	CUBE_TOP
	f	Lka$a;	g	ORIENTABLE_ONLY_TOP
	f	Lka$a;	h	ORIENTABLE
	f	Lka$a;	i	CARPET
	f	Lka$a;	j	GLAZED_TERRACOTTA
	f	Lka$a;	k	CORAL_FAN
	f	Lka$a;	l	PARTICLE_ONLY
	f	Lka$a;	m	ANVIL
	f	Lka$a;	n	LEAVES
	f	Lka$a;	o	LANTERN
	f	Lka$a;	p	HANGING_LANTERN
	f	Lka$a;	q	SEAGRASS
	f	Lka$a;	r	COLUMN_ALT
	f	Lka$a;	s	COLUMN_HORIZONTAL_ALT
	f	Lka$a;	t	TOP_BOTTOM_WITH_WALL
	f	Lka$a;	u	COLUMN_WITH_WALL
	f	Ljy;	v	mapping
	f	Ljw;	w	template
c	ka$a	net/minecraft/data/models/model/TexturedModel$Provider
	m	(Ljava/util/function/Consumer;Lcdq;)Lka;	a	lambda$updateTexture$0
c	kb	net/minecraft/data/models/model/package-info
c	kc	net/minecraft/data/models/package-info
c	kd	net/minecraft/data/package-info
c	ke	net/minecraft/data/recipes/FinishedRecipe
	m	()Lcom/google/gson/JsonObject;	a	serializeRecipe
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
	m	()Lyt;	b	getId
	m	()Lbxq;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Lyt;	e	getAdvancementId
c	kf	net/minecraft/data/recipes/RecipeBuilder
	m	()Lbus;	a	getResult
	m	(Lcau;)Lyt;	a	getDefaultRecipeId
	m	(Ljava/lang/String;)Lkf;	a	group
	m	(Ljava/lang/String;Lan;)Lkf;	a	unlockedBy
	m	(Ljava/util/function/Consumer;)V	a	save
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	save
	m	(Ljava/util/function/Consumer;Lyt;)V	a	save
c	kg	net/minecraft/data/recipes/RecipeProvider
	m	()Ljava/lang/String;	a	getName
	m	(Laif;)Lbv$a;	a	has
	m	(Lcau;)Lbv$a;	a	has
	m	(Lcau;Lbxl;)Lkf;	a	wallBuilder
	m	(Lcau;Lcau;)Ljava/lang/String;	a	getConversionRecipeName
	m	(Lcdq;)Lbk$a;	a	insideOf
	m	(Lcj$d;Lcau;)Lbv$a;	a	has
	m	(Lii;Lii$b;)Lcdq;	a	getBaseBlock
	m	(Lii;Ljava/util/function/Consumer;Lii$b;Lcdq;)V	a	lambda$generateRecipes$5
	m	(Lim;)V	a	run
	m	(Lim;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V	a	saveRecipe
	m	(Ljava/util/Set;Lim;Ljava/nio/file/Path;Lke;)V	a	lambda$run$0
	m	(Ljava/util/function/Consumer;)V	a	buildCraftingRecipes
	m	(Ljava/util/function/Consumer;Lbus;Lbus;)V	a	netheriteSmithing
	m	(Ljava/util/function/Consumer;Lbxx;Ljava/util/List;Lcau;FILjava/lang/String;Ljava/lang/String;)V	a	oreCooking
	m	(Ljava/util/function/Consumer;Lcau;Laif;)V	a	planksFromLog
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	a	candle
	m	(Ljava/util/function/Consumer;Lcau;Lcau;I)V	a	stonecutterResultFromBase
	m	(Ljava/util/function/Consumer;Lcau;Lcau;Ljava/lang/String;)V	a	oneToOneConversionRecipe
	m	(Ljava/util/function/Consumer;Lcau;Lcau;Ljava/lang/String;I)V	a	oneToOneConversionRecipe
	m	(Ljava/util/function/Consumer;Lcau;Lcau;Ljava/lang/String;Ljava/lang/String;)V	a	nineBlockStorageRecipesWithCustomPacking
	m	(Ljava/util/function/Consumer;Lcau;Lcau;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	a	nineBlockStorageRecipes
	m	(Ljava/util/function/Consumer;Lcdq;Lcdq;)V	a	lambda$waxRecipes$2
	m	(Ljava/util/function/Consumer;Lii;)V	a	generateRecipes
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Lbxx;I)V	a	cookRecipes
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Lbxx;ILcau;Lcau;F)V	a	simpleCookingRecipe
	m	(Ljava/util/function/Consumer;Ljava/util/List;Lcau;FILjava/lang/String;)V	a	oreSmelting
	m	(Lkf;Lii$b;Ljava/lang/String;)V	a	lambda$generateRecipes$3
	m	([Lby;)Lbv$a;	a	inventoryTrigger
	m	(Lcau;)Ljava/lang/String;	b	getHasName
	m	(Lcau;Lbxl;)Lkf;	b	polishedBuilder
	m	(Lcau;Lcau;)Lkf;	b	lambda$static$18
	m	(Lim;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V	b	saveAdvancement
	m	(Ljava/util/function/Consumer;)V	b	waxRecipes
	m	(Ljava/util/function/Consumer;Lcau;Laif;)V	b	planksFromLogs
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	b	wall
	m	(Ljava/util/function/Consumer;Lcau;Lcau;Ljava/lang/String;Ljava/lang/String;)V	b	nineBlockStorageRecipesRecipesWithCustomUnpacking
	m	(Ljava/util/function/Consumer;Lii;)V	b	lambda$buildCraftingRecipes$1
	m	(Ljava/util/function/Consumer;Ljava/util/List;Lcau;FILjava/lang/String;)V	b	oreBlasting
	m	(Lcau;)Ljava/lang/String;	c	getItemName
	m	(Lcau;Lbxl;)Lkh;	c	cutBuilder
	m	(Lcau;Lcau;)Lkf;	c	lambda$static$17
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	c	polished
	m	(Lcau;)Ljava/lang/String;	d	getSimpleRecipeName
	m	(Lcau;Lbxl;)Lkh;	d	chiseledBuilder
	m	(Lcau;Lcau;)Lkf;	d	lambda$static$16
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	d	cut
	m	(Lcau;)Ljava/lang/String;	e	getSmeltingRecipeName
	m	(Lcau;Lbxl;)Lkf;	e	buttonBuilder
	m	(Lcau;Lcau;)Lkf;	e	lambda$static$15
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	e	chiseled
	m	(Lcau;)Ljava/lang/String;	f	getBlastingRecipeName
	m	(Lcau;Lbxl;)Lkf;	f	doorBuilder
	m	(Lcau;Lcau;)Lkf;	f	lambda$static$14
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	f	woodFromLogs
	m	(Lcau;)Ljava/lang/String;	g	lambda$generateRecipes$4
	m	(Lcau;Lbxl;)Lkf;	g	fenceBuilder
	m	(Lcau;Lcau;)Lkf;	g	lambda$static$13
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	g	woodenBoat
	m	(Lcau;Lbxl;)Lkf;	h	fenceGateBuilder
	m	(Lcau;Lcau;)Lkf;	h	lambda$static$12
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	h	pressurePlate
	m	(Lcau;Lbxl;)Lkf;	i	pressurePlateBuilder
	m	(Lcau;Lcau;)Lkf;	i	lambda$static$11
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	i	slab
	m	(Lcau;Lbxl;)Lkf;	j	slabBuilder
	m	(Lcau;Lcau;)Lkf;	j	lambda$static$10
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	j	coloredWoolFromWhiteWoolAndDye
	m	(Lcau;Lbxl;)Lkf;	k	stairBuilder
	m	(Lcau;Lcau;)Lkf;	k	lambda$static$9
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	k	carpet
	m	(Lcau;Lbxl;)Lkf;	l	trapdoorBuilder
	m	(Lcau;Lcau;)Lkf;	l	lambda$static$8
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	l	coloredCarpetFromWhiteCarpetAndDye
	m	(Lcau;Lbxl;)Lkf;	m	signBuilder
	m	(Lcau;Lcau;)Lkf;	m	lambda$static$7
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	m	bedFromPlanksAndWool
	m	(Lcau;Lcau;)Lkf;	n	lambda$static$6
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	n	bedFromWhiteBedAndDye
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	o	banner
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	p	stainedGlassFromGlassAndDye
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	q	stainedGlassPaneFromStainedGlass
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	r	stainedGlassPaneFromGlassPaneAndDye
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	s	coloredTerracottaFromTerracottaAndDye
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	t	concretePowder
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	u	stonecutterResultFromBase
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	v	smeltingResultFromBase
	m	(Ljava/util/function/Consumer;Lcau;Lcau;)V	w	nineBlockStorageRecipes
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Lcom/google/common/collect/ImmutableList;	d	COAL_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	e	IRON_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	f	COPPER_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	g	GOLD_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	h	DIAMOND_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	i	LAPIS_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	j	REDSTONE_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	k	EMERALD_SMELTABLES
	f	Lik;	l	generator
	f	Ljava/util/Map;	m	shapeBuilders
c	kh	net/minecraft/data/recipes/ShapedRecipeBuilder
	m	()Lbus;	a	getResult
	m	(Lcau;I)Lkh;	a	shaped
	m	(Ljava/lang/Character;Laif;)Lkh;	a	define
	m	(Ljava/lang/Character;Lbxl;)Lkh;	a	define
	m	(Ljava/lang/Character;Lcau;)Lkh;	a	define
	m	(Ljava/lang/String;)Lkf;	a	group
	m	(Ljava/lang/String;Lan;)Lkf;	a	unlockedBy
	m	(Ljava/util/function/Consumer;Lyt;)V	a	save
	m	(Lyt;)V	a	ensureValid
	m	(Lcau;)Lkh;	b	shaped
	m	(Ljava/lang/String;)Lkh;	b	pattern
	m	(Ljava/lang/String;Lan;)Lkh;	b	unlockedBy
	m	(Ljava/lang/String;)Lkh;	c	group
	f	Lbus;	a	result
	f	I	b	count
	f	Ljava/util/List;	c	rows
	f	Ljava/util/Map;	d	key
	f	Laf$a;	e	advancement
	f	Ljava/lang/String;	f	group
c	kh$a	net/minecraft/data/recipes/ShapedRecipeBuilder$Result
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
	m	()Lyt;	b	getId
	m	()Lbxq;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Lyt;	e	getAdvancementId
	f	Lyt;	a	id
	f	Lbus;	b	result
	f	I	c	count
	f	Ljava/lang/String;	d	group
	f	Ljava/util/List;	e	pattern
	f	Ljava/util/Map;	f	key
	f	Laf$a;	g	advancement
	f	Lyt;	h	advancementId
c	ki	net/minecraft/data/recipes/ShapelessRecipeBuilder
	m	()Lbus;	a	getResult
	m	(Laif;)Lki;	a	requires
	m	(Lbxl;)Lki;	a	requires
	m	(Lbxl;I)Lki;	a	requires
	m	(Lcau;I)Lki;	a	shapeless
	m	(Ljava/lang/String;)Lkf;	a	group
	m	(Ljava/lang/String;Lan;)Lkf;	a	unlockedBy
	m	(Ljava/util/function/Consumer;Lyt;)V	a	save
	m	(Lyt;)V	a	ensureValid
	m	(Lcau;)Lki;	b	shapeless
	m	(Lcau;I)Lki;	b	requires
	m	(Ljava/lang/String;)Lki;	b	group
	m	(Ljava/lang/String;Lan;)Lki;	b	unlockedBy
	m	(Lcau;)Lki;	c	requires
	f	Lbus;	a	result
	f	I	b	count
	f	Ljava/util/List;	c	ingredients
	f	Laf$a;	d	advancement
	f	Ljava/lang/String;	e	group
c	ki$a	net/minecraft/data/recipes/ShapelessRecipeBuilder$Result
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
	m	()Lyt;	b	getId
	m	()Lbxq;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Lyt;	e	getAdvancementId
	f	Lyt;	a	id
	f	Lbus;	b	result
	f	I	c	count
	f	Ljava/lang/String;	d	group
	f	Ljava/util/List;	e	ingredients
	f	Laf$a;	f	advancement
	f	Lyt;	g	advancementId
c	kj	net/minecraft/data/recipes/SimpleCookingRecipeBuilder
	m	()Lbus;	a	getResult
	m	(Lbxl;Lcau;FI)Lkj;	a	campfireCooking
	m	(Lbxl;Lcau;FILbxx;)Lkj;	a	cooking
	m	(Ljava/lang/String;)Lkf;	a	group
	m	(Ljava/lang/String;Lan;)Lkf;	a	unlockedBy
	m	(Ljava/util/function/Consumer;Lyt;)V	a	save
	m	(Lyt;)V	a	ensureValid
	m	(Lbxl;Lcau;FI)Lkj;	b	blasting
	m	(Ljava/lang/String;)Lkj;	b	group
	m	(Ljava/lang/String;Lan;)Lkj;	b	unlockedBy
	m	(Lbxl;Lcau;FI)Lkj;	c	smelting
	m	(Lbxl;Lcau;FI)Lkj;	d	smoking
	f	Lbus;	a	result
	f	Lbxl;	b	ingredient
	f	F	c	experience
	f	I	d	cookingTime
	f	Laf$a;	e	advancement
	f	Ljava/lang/String;	f	group
	f	Lbxx;	g	serializer
c	kj$a	net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
	m	()Lyt;	b	getId
	m	()Lbxq;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Lyt;	e	getAdvancementId
	f	Lyt;	a	id
	f	Ljava/lang/String;	b	group
	f	Lbxl;	c	ingredient
	f	Lbus;	d	result
	f	F	e	experience
	f	I	f	cookingTime
	f	Laf$a;	g	advancement
	f	Lyt;	h	advancementId
	f	Lbxq;	i	serializer
c	kk	net/minecraft/data/recipes/SingleItemRecipeBuilder
	m	()Lbus;	a	getResult
	m	(Lbxl;Lcau;)Lkk;	a	stonecutting
	m	(Lbxl;Lcau;I)Lkk;	a	stonecutting
	m	(Ljava/lang/String;)Lkf;	a	group
	m	(Ljava/lang/String;Lan;)Lkf;	a	unlockedBy
	m	(Ljava/util/function/Consumer;Lyt;)V	a	save
	m	(Lyt;)V	a	ensureValid
	m	(Ljava/lang/String;)Lkk;	b	group
	m	(Ljava/lang/String;Lan;)Lkk;	b	unlockedBy
	f	Lbus;	a	result
	f	Lbxl;	b	ingredient
	f	I	c	count
	f	Laf$a;	d	advancement
	f	Ljava/lang/String;	e	group
	f	Lbxq;	f	type
c	kk$a	net/minecraft/data/recipes/SingleItemRecipeBuilder$Result
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
	m	()Lyt;	b	getId
	m	()Lbxq;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Lyt;	e	getAdvancementId
	f	Lyt;	a	id
	f	Ljava/lang/String;	b	group
	f	Lbxl;	c	ingredient
	f	Lbus;	d	result
	f	I	e	count
	f	Laf$a;	f	advancement
	f	Lyt;	g	advancementId
	f	Lbxq;	h	type
c	kl	net/minecraft/data/recipes/SpecialRecipeBuilder
	m	(Lbxy;)Lkl;	a	special
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	save
	f	Lbxy;	a	serializer
c	kl$1	net/minecraft/data/recipes/SpecialRecipeBuilder$1
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
	m	()Lyt;	b	getId
	m	()Lbxq;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Lyt;	e	getAdvancementId
	f	Ljava/lang/String;	a	val$id
	f	Lkl;	b	this$0
c	km	net/minecraft/data/recipes/UpgradeRecipeBuilder
	m	(Lbxl;Lbxl;Lbus;)Lkm;	a	smithing
	m	(Ljava/lang/String;Lan;)Lkm;	a	unlocks
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	save
	m	(Ljava/util/function/Consumer;Lyt;)V	a	save
	m	(Lyt;)V	a	ensureValid
	f	Lbxl;	a	base
	f	Lbxl;	b	addition
	f	Lbus;	c	result
	f	Laf$a;	d	advancement
	f	Lbxq;	e	type
c	km$a	net/minecraft/data/recipes/UpgradeRecipeBuilder$Result
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
	m	()Lyt;	b	getId
	m	()Lbxq;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Lyt;	e	getAdvancementId
	f	Lyt;	a	id
	f	Lbxl;	b	base
	f	Lbxl;	c	addition
	f	Lbus;	d	result
	f	Laf$a;	e	advancement
	f	Lyt;	f	advancementId
	f	Lbxq;	g	type
c	kn	net/minecraft/data/recipes/package-info
c	ko	net/minecraft/data/structures/NbtToSnbt
	m	()Ljava/lang/String;	a	getName
	m	(Lim;)V	a	run
	m	(Ljava/nio/file/Path;)Z	a	lambda$run$0
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	writeSnbt
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	convertStructure
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	getName
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	lambda$run$1
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lik;	c	generator
c	kp	net/minecraft/data/structures/SnbtToNbt
	m	()Ljava/lang/String;	a	getName
	m	(Lim;)V	a	run
	m	(Lim;Lkp$c;Ljava/nio/file/Path;)V	a	storeStructureIfChanged
	m	(Ljava/lang/String;Lok;)Lok;	a	applyFilters
	m	(Ljava/nio/file/Path;)Z	a	lambda$run$0
	m	(Ljava/nio/file/Path;Ljava/lang/String;)Lkp$c;	a	readStructure
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	getName
	m	(Ljava/util/List;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	lambda$run$2
	m	(Lkp$a;)Lkp;	a	addFilter
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Lkp$c;	b	lambda$run$1
	f	Ljava/nio/file/Path;	b	DUMP_SNBT_TO
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lik;	d	generator
	f	Ljava/util/List;	e	filters
c	kp$a	net/minecraft/data/structures/SnbtToNbt$Filter
c	kp$b	net/minecraft/data/structures/SnbtToNbt$StructureConversionException
c	kp$c	net/minecraft/data/structures/SnbtToNbt$TaskResult
	f	Ljava/lang/String;	a	name
	f	[B	b	payload
	f	Ljava/lang/String;	c	snbtPayload
	f	Ljava/lang/String;	d	hash
c	kq	net/minecraft/data/structures/StructureUpdater
	m	(Ljava/lang/String;Lok;)Lok;	a	update
	m	(Lok;)Lok;	a	patchVersion
	m	(Ljava/lang/String;Lok;)Lok;	b	updateStructure
	f	Lorg/slf4j/Logger;	a	LOGGER
c	kr	net/minecraft/data/structures/package-info
c	ks	net/minecraft/data/tags/BiomeTagsProvider
	m	()Ljava/lang/String;	a	getName
	m	()V	b	addTags
c	kt	net/minecraft/data/tags/BlockTagsProvider
	m	()Ljava/lang/String;	a	getName
	m	()V	b	addTags
c	ku	net/minecraft/data/tags/ConfiguredStructureTagsProvider
	m	()Ljava/lang/String;	a	getName
	m	()V	b	addTags
c	kv	net/minecraft/data/tags/EntityTypeTagsProvider
	m	()Ljava/lang/String;	a	getName
	m	()V	b	addTags
c	kw	net/minecraft/data/tags/FluidTagsProvider
	m	()Ljava/lang/String;	a	getName
	m	()V	b	addTags
c	kx	net/minecraft/data/tags/GameEventTagsProvider
	m	()Ljava/lang/String;	a	getName
	m	()V	b	addTags
c	ky	net/minecraft/data/tags/ItemTagsProvider
	m	()Ljava/lang/String;	a	getName
	m	(Laif;Laif;)V	a	copy
	m	()V	b	addTags
	f	Ljava/util/function/Function;	d	blockTags
c	kz	net/minecraft/data/tags/TagsProvider
	m	(Laie$b;)Z	a	lambda$run$0
	m	(Laif;)Lkz$a;	a	tag
	m	(Lim;)V	a	run
	m	(Lim;Lyt;Laie$a;)V	a	lambda$run$1
	m	(Lyt;)Ljava/nio/file/Path;	a	getPath
	m	()V	b	addTags
	m	(Laif;)Laie$a;	b	getOrCreateRawBuilder
	m	(Lyt;)Laie$a;	b	lambda$getOrCreateRawBuilder$2
	f	Lik;	b	generator
	f	Lhb;	c	registry
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lcom/google/gson/Gson;	e	GSON
	f	Ljava/util/Map;	f	builders
c	kz$a	net/minecraft/data/tags/TagsProvider$TagAppender
	m	(Laif;)Lkz$a;	a	addTag
	m	(Ljava/lang/Object;)Lkz$a;	a	add
	m	(Lyt;)Lkz$a;	a	addOptional
	m	([Ljava/lang/Object;)Lkz$a;	a	add
	m	([Lys;)Lkz$a;	a	add
	m	(Lyt;)Lkz$a;	b	addOptionalTag
	m	(Lyt;)V	c	lambda$add$0
	f	Laie$a;	a	builder
	f	Lhb;	b	registry
	f	Ljava/lang/String;	c	source
c	la	net/minecraft/data/tags/package-info
c	lb	net/minecraft/data/worldgen/BastionBridgePools
	m	()V	a	bootstrap
c	lc	net/minecraft/data/worldgen/BastionHoglinStablePools
	m	()V	a	bootstrap
c	ld	net/minecraft/data/worldgen/BastionHousingUnitsPools
	m	()V	a	bootstrap
c	le	net/minecraft/data/worldgen/BastionPieces
	m	()V	a	bootstrap
	f	Lgs;	a	START
c	lf	net/minecraft/data/worldgen/BastionSharedPools
	m	()V	a	bootstrap
c	lg	net/minecraft/data/worldgen/BastionTreasureRoomPools
	m	()V	a	bootstrap
c	lh	net/minecraft/data/worldgen/BiomeDefaultFeatures
	m	(Lcbs$a;)V	A	addMountainTrees
	m	(Lcbs$a;)V	B	addMountainForestTrees
	m	(Lcbs$a;)V	C	addJungleTrees
	m	(Lcbs$a;)V	D	addSparseJungleTrees
	m	(Lcbs$a;)V	E	addBadlandsTrees
	m	(Lcbs$a;)V	F	addSnowyTrees
	m	(Lcbs$a;)V	G	addJungleGrass
	m	(Lcbs$a;)V	H	addSavannaGrass
	m	(Lcbs$a;)V	I	addShatteredSavannaGrass
	m	(Lcbs$a;)V	J	addSavannaExtraGrass
	m	(Lcbs$a;)V	K	addBadlandGrass
	m	(Lcbs$a;)V	L	addForestFlowers
	m	(Lcbs$a;)V	M	addForestGrass
	m	(Lcbs$a;)V	N	addSwampVegetation
	m	(Lcbs$a;)V	O	addMushroomFieldVegetation
	m	(Lcbs$a;)V	P	addPlainVegetation
	m	(Lcbs$a;)V	Q	addDesertVegetation
	m	(Lcbs$a;)V	R	addGiantTaigaVegetation
	m	(Lcbs$a;)V	S	addDefaultFlowers
	m	(Lcbs$a;)V	T	addMeadowVegetation
	m	(Lcbs$a;)V	U	addWarmFlowers
	m	(Lcbs$a;)V	V	addDefaultGrass
	m	(Lcbs$a;)V	W	addTaigaGrass
	m	(Lcbs$a;)V	X	addPlainGrass
	m	(Lcbs$a;)V	Y	addDefaultMushrooms
	m	(Lcbs$a;)V	Z	addDefaultExtraVegetation
	m	(Lcbs$a;)V	a	addDefaultCarversAndLakes
	m	(Lcbs$a;Z)V	a	addDefaultOres
	m	(Lccb$a;)V	a	farmAnimals
	m	(Lccb$a;II)V	a	warmOceanSpawns
	m	(Lccb$a;III)V	a	oceanSpawns
	m	(Lccb$a;IIIZ)V	a	monsters
	m	(Lcbs$a;)V	aa	addBadlandExtraVegetation
	m	(Lcbs$a;)V	ab	addJungleMelons
	m	(Lcbs$a;)V	ac	addSparseJungleMelons
	m	(Lcbs$a;)V	ad	addJungleVines
	m	(Lcbs$a;)V	ae	addDesertExtraVegetation
	m	(Lcbs$a;)V	af	addSwampExtraVegetation
	m	(Lcbs$a;)V	ag	addDesertExtraDecoration
	m	(Lcbs$a;)V	ah	addFossilDecoration
	m	(Lcbs$a;)V	ai	addColdOceanExtraVegetation
	m	(Lcbs$a;)V	aj	addDefaultSeagrass
	m	(Lcbs$a;)V	ak	addLukeWarmKelp
	m	(Lcbs$a;)V	al	addDefaultSprings
	m	(Lcbs$a;)V	am	addFrozenSprings
	m	(Lcbs$a;)V	an	addIcebergs
	m	(Lcbs$a;)V	ao	addBlueIce
	m	(Lcbs$a;)V	ap	addSurfaceFreezing
	m	(Lcbs$a;)V	aq	addNetherDefaultOres
	m	(Lcbs$a;)V	ar	addAncientDebris
	m	(Lcbs$a;)V	as	addDefaultCrystalFormations
	m	(Lcbs$a;)V	b	addDefaultMonsterRoom
	m	(Lccb$a;)V	b	caveSpawns
	m	(Lcbs$a;)V	c	addDefaultUndergroundVariety
	m	(Lccb$a;)V	c	commonSpawns
	m	(Lcbs$a;)V	d	addDripstone
	m	(Lccb$a;)V	d	plainsSpawns
	m	(Lcbs$a;)V	e	addDefaultOres
	m	(Lccb$a;)V	e	snowySpawns
	m	(Lcbs$a;)V	f	addExtraGold
	m	(Lccb$a;)V	f	desertSpawns
	m	(Lcbs$a;)V	g	addExtraEmeralds
	m	(Lccb$a;)V	g	dripstoneCavesSpawns
	m	(Lcbs$a;)V	h	addInfestedStone
	m	(Lccb$a;)V	h	mooshroomSpawns
	m	(Lcbs$a;)V	i	addDefaultSoftDisks
	m	(Lccb$a;)V	i	baseJungleSpawns
	m	(Lcbs$a;)V	j	addSwampClayDisk
	m	(Lccb$a;)V	j	endSpawns
	m	(Lcbs$a;)V	k	addMossyStoneBlock
	m	(Lcbs$a;)V	l	addFerns
	m	(Lcbs$a;)V	m	addRareBerryBushes
	m	(Lcbs$a;)V	n	addCommonBerryBushes
	m	(Lcbs$a;)V	o	addLightBambooVegetation
	m	(Lcbs$a;)V	p	addBambooVegetation
	m	(Lcbs$a;)V	q	addTaigaTrees
	m	(Lcbs$a;)V	r	addGroveTrees
	m	(Lcbs$a;)V	s	addWaterTrees
	m	(Lcbs$a;)V	t	addBirchTrees
	m	(Lcbs$a;)V	u	addOtherBirchTrees
	m	(Lcbs$a;)V	v	addTallBirchTrees
	m	(Lcbs$a;)V	w	addSavannaTrees
	m	(Lcbs$a;)V	x	addShatteredSavannaTrees
	m	(Lcbs$a;)V	y	addLushCavesVegetationFeatures
	m	(Lcbs$a;)V	z	addLushCavesSpecialOres
c	li	net/minecraft/data/worldgen/Carvers
	m	(Ljava/lang/String;Lcvz;)Lgs;	a	register
	f	Lgs;	a	CAVE
	f	Lgs;	b	CAVE_EXTRA_UNDERGROUND
	f	Lgs;	c	CANYON
	f	Lgs;	d	NETHER_CAVE
c	lj	net/minecraft/data/worldgen/DesertVillagePools
	m	()V	a	bootstrap
	f	Lgs;	a	START
c	lk	net/minecraft/data/worldgen/NoiseData
	m	()Lgs;	a	bootstrap
	m	(ILys;Lys;Lys;Lys;)V	a	registerBiomeNoises
	m	(Lys;ID[D)V	a	register
c	ll	net/minecraft/data/worldgen/PillagerOutpostPools
	m	()V	a	bootstrap
	f	Lgs;	a	START
c	lm	net/minecraft/data/worldgen/PlainVillagePools
	m	()V	a	bootstrap
	f	Lgs;	a	START
c	ln	net/minecraft/data/worldgen/Pools
	m	()Lgs;	a	bootstrap
	m	(Ldgs;)Lgs;	a	register
	f	Lys;	a	EMPTY
	f	Lgs;	b	BUILTIN_EMPTY
c	lo	net/minecraft/data/worldgen/ProcessorLists
	m	(Ljava/lang/String;Lcom/google/common/collect/ImmutableList;)Lgs;	a	register
	f	Lgs;	A	BRIDGE
	f	Lgs;	B	ROOF
	f	Lgs;	C	HIGH_WALL
	f	Lgs;	D	HIGH_RAMPART
	f	Lgs;	E	FOSSIL_ROT
	f	Lgs;	F	FOSSIL_COAL
	f	Lgs;	G	FOSSIL_DIAMONDS
	f	Ldhk;	H	ADD_GILDED_BLACKSTONE
	f	Ldhk;	I	REMOVE_GILDED_BLACKSTONE
	f	Lgs;	a	EMPTY
	f	Lgs;	b	ZOMBIE_PLAINS
	f	Lgs;	c	ZOMBIE_SAVANNA
	f	Lgs;	d	ZOMBIE_SNOWY
	f	Lgs;	e	ZOMBIE_TAIGA
	f	Lgs;	f	ZOMBIE_DESERT
	f	Lgs;	g	MOSSIFY_10_PERCENT
	f	Lgs;	h	MOSSIFY_20_PERCENT
	f	Lgs;	i	MOSSIFY_70_PERCENT
	f	Lgs;	j	STREET_PLAINS
	f	Lgs;	k	STREET_SAVANNA
	f	Lgs;	l	STREET_SNOWY_OR_TAIGA
	f	Lgs;	m	FARM_PLAINS
	f	Lgs;	n	FARM_SAVANNA
	f	Lgs;	o	FARM_SNOWY
	f	Lgs;	p	FARM_TAIGA
	f	Lgs;	q	FARM_DESERT
	f	Lgs;	r	OUTPOST_ROT
	f	Lgs;	s	BOTTOM_RAMPART
	f	Lgs;	t	TREASURE_ROOMS
	f	Lgs;	u	HOUSING
	f	Lgs;	v	SIDE_WALL_DEGRADATION
	f	Lgs;	w	STABLE_DEGRADATION
	f	Lgs;	x	BASTION_GENERIC_DEGRADATION
	f	Lgs;	y	RAMPART_DEGRADATION
	f	Lgs;	z	ENTRANCE_REPLACEMENT
c	lp	net/minecraft/data/worldgen/SavannaVillagePools
	m	()V	a	bootstrap
	f	Lgs;	a	START
c	lq	net/minecraft/data/worldgen/SnowyVillagePools
	m	()V	a	bootstrap
	f	Lgs;	a	START
c	lr	net/minecraft/data/worldgen/StructureFeatures
	m	()Lgs;	a	bootstrap
	m	(Lys;Lcwr;)Lgs;	a	register
	f	Lgs;	A	RUINED_PORTAL_JUNGLE
	f	Lgs;	B	RUINED_PORTAL_SWAMP
	f	Lgs;	C	RUINED_PORTAL_MOUNTAIN
	f	Lgs;	D	RUINED_PORTAL_OCEAN
	f	Lgs;	E	RUINED_PORTAL_NETHER
	f	Lgs;	a	PILLAGER_OUTPOST
	f	Lgs;	b	MINESHAFT
	f	Lgs;	c	MINESHAFT_MESA
	f	Lgs;	d	WOODLAND_MANSION
	f	Lgs;	e	JUNGLE_TEMPLE
	f	Lgs;	f	DESERT_PYRAMID
	f	Lgs;	g	IGLOO
	f	Lgs;	h	SHIPWRECK
	f	Lgs;	i	SHIPWRECK_BEACHED
	f	Lgs;	j	SWAMP_HUT
	f	Lgs;	k	STRONGHOLD
	f	Lgs;	l	OCEAN_MONUMENT
	f	Lgs;	m	OCEAN_RUIN_COLD
	f	Lgs;	n	OCEAN_RUIN_WARM
	f	Lgs;	o	FORTRESS
	f	Lgs;	p	NETHER_FOSSIL
	f	Lgs;	q	END_CITY
	f	Lgs;	r	BURIED_TREASURE
	f	Lgs;	s	BASTION_REMNANT
	f	Lgs;	t	VILLAGE_PLAINS
	f	Lgs;	u	VILLAGE_DESERT
	f	Lgs;	v	VILLAGE_SAVANNA
	f	Lgs;	w	VILLAGE_SNOWY
	f	Lgs;	x	VILLAGE_TAIGA
	f	Lgs;	y	RUINED_PORTAL_STANDARD
	f	Lgs;	z	RUINED_PORTAL_DESERT
c	ls	net/minecraft/data/worldgen/StructureSets
	m	()Lgs;	a	bootstrap
	m	(Lys;Ldfp;)Lgs;	a	register
	m	(Lys;Lgs;Ldgg;)Lgs;	a	register
	f	Lgs;	a	VILLAGES
	f	Lgs;	b	DESERT_PYRAMIDS
	f	Lgs;	c	IGLOOS
	f	Lgs;	d	JUNGLE_TEMPLES
	f	Lgs;	e	SWAMP_HUTS
	f	Lgs;	f	PILLAGER_OUTPOSTS
	f	Lgs;	g	OCEAN_MONUMENTS
	f	Lgs;	h	WOODLAND_MANSIONS
	f	Lgs;	i	BURIED_TREASURES
	f	Lgs;	j	MINESHAFTS
	f	Lgs;	k	RUINED_PORTALS
	f	Lgs;	l	SHIPWRECKS
	f	Lgs;	m	OCEAN_RUINS
	f	Lgs;	n	NETHER_COMPLEXES
	f	Lgs;	o	NETHER_FOSSILS
	f	Lgs;	p	END_CITIES
	f	Lgs;	q	STRONGHOLDS
c	lt	net/minecraft/data/worldgen/SurfaceRuleData
	m	()Lcuq$o;	a	overworld
	m	(D)Lcuq$f;	a	surfaceNoiseAbove
	m	(I)[Lcuq$o;	a	lambda$overworldLike$0
	m	(Lcdq;)Lcuq$o;	a	makeStateRule
	m	(ZZZ)Lcuq$o;	a	overworldLike
	m	()Lcuq$o;	b	nether
	m	()Lcuq$o;	c	end
	f	Lcuq$o;	A	SOUL_SOIL
	f	Lcuq$o;	B	BASALT
	f	Lcuq$o;	C	BLACKSTONE
	f	Lcuq$o;	D	WARPED_WART_BLOCK
	f	Lcuq$o;	E	WARPED_NYLIUM
	f	Lcuq$o;	F	NETHER_WART_BLOCK
	f	Lcuq$o;	G	CRIMSON_NYLIUM
	f	Lcuq$o;	H	ENDSTONE
	f	Lcuq$o;	a	AIR
	f	Lcuq$o;	b	BEDROCK
	f	Lcuq$o;	c	WHITE_TERRACOTTA
	f	Lcuq$o;	d	ORANGE_TERRACOTTA
	f	Lcuq$o;	e	TERRACOTTA
	f	Lcuq$o;	f	RED_SAND
	f	Lcuq$o;	g	RED_SANDSTONE
	f	Lcuq$o;	h	STONE
	f	Lcuq$o;	i	DEEPSLATE
	f	Lcuq$o;	j	DIRT
	f	Lcuq$o;	k	PODZOL
	f	Lcuq$o;	l	COARSE_DIRT
	f	Lcuq$o;	m	MYCELIUM
	f	Lcuq$o;	n	GRASS_BLOCK
	f	Lcuq$o;	o	CALCITE
	f	Lcuq$o;	p	GRAVEL
	f	Lcuq$o;	q	SAND
	f	Lcuq$o;	r	SANDSTONE
	f	Lcuq$o;	s	PACKED_ICE
	f	Lcuq$o;	t	SNOW_BLOCK
	f	Lcuq$o;	u	POWDER_SNOW
	f	Lcuq$o;	v	ICE
	f	Lcuq$o;	w	WATER
	f	Lcuq$o;	x	LAVA
	f	Lcuq$o;	y	NETHERRACK
	f	Lcuq$o;	z	SOUL_SAND
c	lu	net/minecraft/data/worldgen/TaigaVillagePools
	m	()V	a	bootstrap
	f	Lgs;	a	START
c	lv	net/minecraft/data/worldgen/TerrainProvider
	m	()Lcce;	a	caves
	m	(Z)Lcce;	a	overworld
	m	()Lcce;	b	floatingIslands
	m	()Lcce;	c	nether
	m	()Lcce;	d	end
c	lw	net/minecraft/data/worldgen/VillagePools
	m	()V	a	bootstrap
c	lx	net/minecraft/data/worldgen/biome/Biomes
	m	()Lgs;	a	bootstrap
	m	(Lys;Lcbr;)V	a	register
c	ly	net/minecraft/data/worldgen/biome/EndBiomes
	m	()Lcbr;	a	endBarrens
	m	(Lcbs$a;)Lcbr;	a	baseEndBiome
	m	()Lcbr;	b	theEnd
	m	()Lcbr;	c	endMidlands
	m	()Lcbr;	d	endHighlands
	m	()Lcbr;	e	smallEndIslands
c	lz	net/minecraft/data/worldgen/biome/NetherBiomes
	m	()Lcbr;	a	netherWastes
	m	()Lcbr;	b	soulSandValley
	m	()Lcbr;	c	basaltDeltas
	m	()Lcbr;	d	crimsonForest
	m	()Lcbr;	e	warpedForest
c	ma	net/minecraft/data/worldgen/biome/OverworldBiomes
	m	()Lcbr;	a	sparseJungle
	m	(F)I	a	calculateSkyColor
	m	(FZZZLccb$a;)Lcbr;	a	baseJungle
	m	(Lcbr$d;Lcbr$b;FFIILccb$a;Lcbs$a;Lahh;)Lcbr;	a	biome
	m	(Lcbr$d;Lcbr$b;FFLccb$a;Lcbs$a;Lahh;)Lcbr;	a	biome
	m	(Lcbs$a;)V	a	globalOverworldGeneration
	m	(Lccb$a;IILcbs$a;)Lcbr;	a	baseOcean
	m	(Z)Lcbr;	a	oldGrowthTaiga
	m	(ZZ)Lcbr;	a	savanna
	m	(ZZZ)Lcbr;	a	plains
	m	()Lcbr;	b	jungle
	m	(Z)Lcbr;	b	windsweptHills
	m	(ZZ)Lcbr;	b	beach
	m	(ZZZ)Lcbr;	b	forest
	m	()Lcbr;	c	bambooJungle
	m	(Z)Lcbr;	c	badlands
	m	()Lcbr;	d	desert
	m	(Z)Lcbr;	d	coldOcean
	m	()Lcbr;	e	mushroomFields
	m	(Z)Lcbr;	e	ocean
	m	()Lcbr;	f	warmOcean
	m	(Z)Lcbr;	f	lukeWarmOcean
	m	()Lcbr;	g	darkForest
	m	(Z)Lcbr;	g	frozenOcean
	m	()Lcbr;	h	swamp
	m	(Z)Lcbr;	h	taiga
	m	()Lcbr;	i	theVoid
	m	(Z)Lcbr;	i	river
	m	()Lcbr;	j	meadow
	m	()Lcbr;	k	frozenPeaks
	m	()Lcbr;	l	jaggedPeaks
	m	()Lcbr;	m	stonyPeaks
	m	()Lcbr;	n	snowySlopes
	m	()Lcbr;	o	grove
	m	()Lcbr;	p	lushCaves
	m	()Lcbr;	q	dripstoneCaves
	m	()Lcbs$a;	r	baseOceanGeneration
	f	I	a	NORMAL_WATER_COLOR
	f	I	b	NORMAL_WATER_FOG_COLOR
	f	I	c	OVERWORLD_FOG_COLOR
	f	Lahh;	d	NORMAL_MUSIC
c	mb	net/minecraft/data/worldgen/biome/package-info
c	mc	net/minecraft/data/worldgen/features/AquaticFeatures
	f	Lgs;	a	SEAGRASS_SHORT
	f	Lgs;	b	SEAGRASS_SLIGHTLY_LESS_SHORT
	f	Lgs;	c	SEAGRASS_MID
	f	Lgs;	d	SEAGRASS_TALL
	f	Lgs;	e	SEA_PICKLE
	f	Lgs;	f	SEAGRASS_SIMPLE
	f	Lgs;	g	KELP
	f	Lgs;	h	WARM_OCEAN_VEGETATION
c	md	net/minecraft/data/worldgen/features/CaveFeatures
	m	()Lgs;	a	makeSmallDripleaf
	m	(Lgo;)Lgs;	a	makeDripleaf
	f	Lgs;	a	MONSTER_ROOM
	f	Lgs;	b	FOSSIL_COAL
	f	Lgs;	c	FOSSIL_DIAMONDS
	f	Lgs;	d	DRIPSTONE_CLUSTER
	f	Lgs;	e	LARGE_DRIPSTONE
	f	Lgs;	f	POINTED_DRIPSTONE
	f	Lgs;	g	UNDERWATER_MAGMA
	f	Lgs;	h	GLOW_LICHEN
	f	Lgs;	i	ROOTED_AZALEA_TREE
	f	Lgs;	j	CAVE_VINE
	f	Lgs;	k	CAVE_VINE_IN_MOSS
	f	Lgs;	l	MOSS_VEGETATION
	f	Lgs;	m	MOSS_PATCH
	f	Lgs;	n	MOSS_PATCH_BONEMEAL
	f	Lgs;	o	DRIPLEAF
	f	Lgs;	p	CLAY_WITH_DRIPLEAVES
	f	Lgs;	q	CLAY_POOL_WITH_DRIPLEAVES
	f	Lgs;	r	LUSH_CAVES_CLAY
	f	Lgs;	s	MOSS_PATCH_CEILING
	f	Lgs;	t	SPORE_BLOSSOM
	f	Lgs;	u	AMETHYST_GEODE
	f	Ljava/util/List;	v	FOSSIL_STRUCTURES
	f	Ljava/util/List;	w	FOSSIL_COAL_STRUCTURES
	f	Ldch;	x	CAVE_VINES_BODY_PROVIDER
	f	Ldce;	y	CAVE_VINES_HEAD_PROVIDER
c	me	net/minecraft/data/worldgen/features/EndFeatures
	f	Lgs;	a	END_SPIKE
	f	Lgs;	b	END_GATEWAY_RETURN
	f	Lgs;	c	END_GATEWAY_DELAYED
	f	Lgs;	d	CHORUS_PLANT
	f	Lgs;	e	END_ISLAND
c	mf	net/minecraft/data/worldgen/features/FeatureUtils
	m	()Lgs;	a	bootstrap
	m	(ILgs;)Ldap;	a	simpleRandomPatchConfiguration
	m	(Lcxg;Lczz;)Ldap;	a	simplePatchConfiguration
	m	(Lcxg;Lczz;Ljava/util/List;)Ldap;	a	simplePatchConfiguration
	m	(Lcxg;Lczz;Ljava/util/List;I)Ldap;	a	simplePatchConfiguration
	m	(Ljava/lang/String;Lcxg;)Lgs;	a	register
	m	(Ljava/lang/String;Lcxg;Lczz;)Lgs;	a	register
	m	(Ljava/util/List;)Lcvd;	a	simplePatchPredicate
c	mg	net/minecraft/data/worldgen/features/MiscOverworldFeatures
	f	Lgs;	a	ICE_SPIKE
	f	Lgs;	b	ICE_PATCH
	f	Lgs;	c	FOREST_ROCK
	f	Lgs;	d	ICEBERG_PACKED
	f	Lgs;	e	ICEBERG_BLUE
	f	Lgs;	f	BLUE_ICE
	f	Lgs;	g	LAKE_LAVA
	f	Lgs;	h	DISK_CLAY
	f	Lgs;	i	DISK_GRAVEL
	f	Lgs;	j	DISK_SAND
	f	Lgs;	k	FREEZE_TOP_LAYER
	f	Lgs;	l	BONUS_CHEST
	f	Lgs;	m	VOID_START_PLATFORM
	f	Lgs;	n	DESERT_WELL
	f	Lgs;	o	SPRING_LAVA_OVERWORLD
	f	Lgs;	p	SPRING_LAVA_FROZEN
	f	Lgs;	q	SPRING_WATER
c	mh	net/minecraft/data/worldgen/features/NetherFeatures
	f	Lgs;	a	DELTA
	f	Lgs;	b	SMALL_BASALT_COLUMNS
	f	Lgs;	c	LARGE_BASALT_COLUMNS
	f	Lgs;	d	BASALT_BLOBS
	f	Lgs;	e	BLACKSTONE_BLOBS
	f	Lgs;	f	GLOWSTONE_EXTRA
	f	Ldch;	g	CRIMSON_VEGETATION_PROVIDER
	f	Lgs;	h	CRIMSON_FOREST_VEGETATION
	f	Lgs;	i	CRIMSON_FOREST_VEGETATION_BONEMEAL
	f	Ldch;	j	WARPED_VEGETATION_PROVIDER
	f	Lgs;	k	WARPED_FOREST_VEGETION
	f	Lgs;	l	WARPED_FOREST_VEGETATION_BONEMEAL
	f	Lgs;	m	NETHER_SPROUTS
	f	Lgs;	n	NETHER_SPROUTS_BONEMEAL
	f	Lgs;	o	TWISTING_VINES
	f	Lgs;	p	TWISTING_VINES_BONEMEAL
	f	Lgs;	q	WEEPING_VINES
	f	Lgs;	r	PATCH_CRIMSON_ROOTS
	f	Lgs;	s	BASALT_PILLAR
	f	Lgs;	t	SPRING_LAVA_NETHER
	f	Lgs;	u	SPRING_NETHER_CLOSED
	f	Lgs;	v	SPRING_NETHER_OPEN
	f	Lgs;	w	PATCH_FIRE
	f	Lgs;	x	PATCH_SOUL_FIRE
c	mi	net/minecraft/data/worldgen/features/OreFeatures
	f	Lgs;	A	ORE_IRON_SMALL
	f	Lgs;	B	ORE_GOLD
	f	Lgs;	C	ORE_GOLD_BURIED
	f	Lgs;	D	ORE_REDSTONE
	f	Lgs;	E	ORE_DIAMOND_SMALL
	f	Lgs;	F	ORE_DIAMOND_LARGE
	f	Lgs;	G	ORE_DIAMOND_BURIED
	f	Lgs;	H	ORE_LAPIS
	f	Lgs;	I	ORE_LAPIS_BURIED
	f	Lgs;	J	ORE_INFESTED
	f	Lgs;	K	ORE_EMERALD
	f	Lgs;	L	ORE_ANCIENT_DEBRIS_LARGE
	f	Lgs;	M	ORE_ANCIENT_DEBRIS_SMALL
	f	Lgs;	N	ORE_COPPPER_SMALL
	f	Lgs;	O	ORE_COPPER_LARGE
	f	Lgs;	P	ORE_CLAY
	f	Ldhp;	a	NATURAL_STONE
	f	Ldhp;	b	STONE_ORE_REPLACEABLES
	f	Ldhp;	c	DEEPSLATE_ORE_REPLACEABLES
	f	Ldhp;	d	NETHERRACK
	f	Ldhp;	e	NETHER_ORE_REPLACEABLES
	f	Ljava/util/List;	f	ORE_IRON_TARGET_LIST
	f	Ljava/util/List;	g	ORE_GOLD_TARGET_LIST
	f	Ljava/util/List;	h	ORE_DIAMOND_TARGET_LIST
	f	Ljava/util/List;	i	ORE_LAPIS_TARGET_LIST
	f	Ljava/util/List;	j	ORE_COPPER_TARGET_LIST
	f	Ljava/util/List;	k	ORE_COAL_TARGET_LIST
	f	Lgs;	l	ORE_MAGMA
	f	Lgs;	m	ORE_SOUL_SAND
	f	Lgs;	n	ORE_NETHER_GOLD
	f	Lgs;	o	ORE_QUARTZ
	f	Lgs;	p	ORE_GRAVEL_NETHER
	f	Lgs;	q	ORE_BLACKSTONE
	f	Lgs;	r	ORE_DIRT
	f	Lgs;	s	ORE_GRAVEL
	f	Lgs;	t	ORE_GRANITE
	f	Lgs;	u	ORE_DIORITE
	f	Lgs;	v	ORE_ANDESITE
	f	Lgs;	w	ORE_TUFF
	f	Lgs;	x	ORE_COAL
	f	Lgs;	y	ORE_COAL_BURIED
	f	Lgs;	z	ORE_IRON
c	mj	net/minecraft/data/worldgen/features/PileFeatures
	f	Lgs;	a	PILE_HAY
	f	Lgs;	b	PILE_MELON
	f	Lgs;	c	PILE_SNOW
	f	Lgs;	d	PILE_ICE
	f	Lgs;	e	PILE_PUMPKIN
c	mk	net/minecraft/data/worldgen/features/TreeFeatures
	m	()Ldba$a;	a	createOak
	m	(Lcdq;Lcdq;IIII)Ldba$a;	a	createStraightBlobTree
	m	()Ldba$a;	b	createBirch
	m	()Ldba$a;	c	createSuperBirch
	m	()Ldba$a;	d	createJungleTree
	m	()Ldba$a;	e	createFancyOak
	f	Lgs;	A	BIRCH_BEES_0002
	f	Lgs;	B	BIRCH_BEES_002
	f	Lgs;	C	BIRCH_BEES_005
	f	Lgs;	D	FANCY_OAK_BEES_0002
	f	Lgs;	E	FANCY_OAK_BEES_002
	f	Lgs;	F	FANCY_OAK_BEES_005
	f	Lgs;	G	FANCY_OAK_BEES
	f	Ldck;	H	BEEHIVE_0002
	f	Ldck;	I	BEEHIVE_002
	f	Ldck;	J	BEEHIVE_005
	f	Ldck;	K	BEEHIVE
	f	Lgs;	a	CRIMSON_FUNGUS
	f	Lgs;	b	CRIMSON_FUNGUS_PLANTED
	f	Lgs;	c	WARPED_FUNGUS
	f	Lgs;	d	WARPED_FUNGUS_PLANTED
	f	Lgs;	e	HUGE_BROWN_MUSHROOM
	f	Lgs;	f	HUGE_RED_MUSHROOM
	f	Lgs;	g	OAK
	f	Lgs;	h	DARK_OAK
	f	Lgs;	i	BIRCH
	f	Lgs;	j	ACACIA
	f	Lgs;	k	SPRUCE
	f	Lgs;	l	PINE
	f	Lgs;	m	JUNGLE_TREE
	f	Lgs;	n	FANCY_OAK
	f	Lgs;	o	JUNGLE_TREE_NO_VINE
	f	Lgs;	p	MEGA_JUNGLE_TREE
	f	Lgs;	q	MEGA_SPRUCE
	f	Lgs;	r	MEGA_PINE
	f	Lgs;	s	SUPER_BIRCH_BEES_0002
	f	Lgs;	t	SUPER_BIRCH_BEES
	f	Lgs;	u	SWAMP_OAK
	f	Lgs;	v	JUNGLE_BUSH
	f	Lgs;	w	AZALEA_TREE
	f	Lgs;	x	OAK_BEES_0002
	f	Lgs;	y	OAK_BEES_002
	f	Lgs;	z	OAK_BEES_005
c	ml	net/minecraft/data/worldgen/features/VegetationFeatures
	m	(Ldby;I)Ldap;	a	grassPatch
	f	Lgs;	A	TREES_FLOWER_FOREST
	f	Lgs;	B	MEADOW_TREES
	f	Lgs;	C	TREES_TAIGA
	f	Lgs;	D	TREES_GROVE
	f	Lgs;	E	TREES_SAVANNA
	f	Lgs;	F	BIRCH_TALL
	f	Lgs;	G	TREES_WINDSWEPT_HILLS
	f	Lgs;	H	TREES_WATER
	f	Lgs;	I	TREES_BIRCH_AND_OAK
	f	Lgs;	J	TREES_PLAINS
	f	Lgs;	K	TREES_SPARSE_JUNGLE
	f	Lgs;	L	TREES_OLD_GROWTH_SPRUCE_TAIGA
	f	Lgs;	M	TREES_OLD_GROWTH_PINE_TAIGA
	f	Lgs;	N	TREES_JUNGLE
	f	Lgs;	O	BAMBOO_VEGETATION
	f	Lgs;	P	MUSHROOM_ISLAND_VEGETATION
	f	Lgs;	a	BAMBOO_NO_PODZOL
	f	Lgs;	b	BAMBOO_SOME_PODZOL
	f	Lgs;	c	VINES
	f	Lgs;	d	PATCH_BROWN_MUSHROOM
	f	Lgs;	e	PATCH_RED_MUSHROOM
	f	Lgs;	f	PATCH_SUNFLOWER
	f	Lgs;	g	PATCH_PUMPKIN
	f	Lgs;	h	PATCH_BERRY_BUSH
	f	Lgs;	i	PATCH_TAIGA_GRASS
	f	Lgs;	j	PATCH_GRASS
	f	Lgs;	k	PATCH_GRASS_JUNGLE
	f	Lgs;	l	SINGLE_PIECE_OF_GRASS
	f	Lgs;	m	PATCH_DEAD_BUSH
	f	Lgs;	n	PATCH_MELON
	f	Lgs;	o	PATCH_WATERLILY
	f	Lgs;	p	PATCH_TALL_GRASS
	f	Lgs;	q	PATCH_LARGE_FERN
	f	Lgs;	r	PATCH_CACTUS
	f	Lgs;	s	PATCH_SUGAR_CANE
	f	Lgs;	t	FLOWER_DEFAULT
	f	Lgs;	u	FLOWER_FLOWER_FOREST
	f	Lgs;	v	FLOWER_SWAMP
	f	Lgs;	w	FLOWER_PLAIN
	f	Lgs;	x	FLOWER_MEADOW
	f	Lgs;	y	FOREST_FLOWERS
	f	Lgs;	z	DARK_FOREST_VEGETATION
c	mm	net/minecraft/data/worldgen/features/package-info
c	mn	net/minecraft/data/worldgen/package-info
c	mo	net/minecraft/data/worldgen/placement/AquaticPlacements
	m	(I)Ljava/util/List;	a	seagrassPlacement
	f	Lgs;	a	SEAGRASS_WARM
	f	Lgs;	b	SEAGRASS_NORMAL
	f	Lgs;	c	SEAGRASS_COLD
	f	Lgs;	d	SEAGRASS_RIVER
	f	Lgs;	e	SEAGRASS_SWAMP
	f	Lgs;	f	SEAGRASS_DEEP_WARM
	f	Lgs;	g	SEAGRASS_DEEP
	f	Lgs;	h	SEAGRASS_DEEP_COLD
	f	Lgs;	i	SEAGRASS_SIMPLE
	f	Lgs;	j	SEA_PICKLE
	f	Lgs;	k	KELP_COLD
	f	Lgs;	l	KELP_WARM
	f	Lgs;	m	WARM_OCEAN_VEGETATION
c	mp	net/minecraft/data/worldgen/placement/CavePlacements
	f	Lgs;	a	MONSTER_ROOM
	f	Lgs;	b	MONSTER_ROOM_DEEP
	f	Lgs;	c	FOSSIL_UPPER
	f	Lgs;	d	FOSSIL_LOWER
	f	Lgs;	e	DRIPSTONE_CLUSTER
	f	Lgs;	f	LARGE_DRIPSTONE
	f	Lgs;	g	POINTED_DRIPSTONE
	f	Lgs;	h	UNDERWATER_MAGMA
	f	Lgs;	i	GLOW_LICHEN
	f	Lgs;	j	ROOTED_AZALEA_TREE
	f	Lgs;	k	CAVE_VINES
	f	Lgs;	l	LUSH_CAVES_VEGETATION
	f	Lgs;	m	LUSH_CAVES_CLAY
	f	Lgs;	n	LUSH_CAVES_CEILING_VEGETATION
	f	Lgs;	o	SPORE_BLOSSOM
	f	Lgs;	p	CLASSIC_VINES
	f	Lgs;	q	AMETHYST_GEODE
c	mq	net/minecraft/data/worldgen/placement/EndPlacements
	f	Lgs;	a	END_SPIKE
	f	Lgs;	b	END_GATEWAY_RETURN
	f	Lgs;	c	CHORUS_PLANT
	f	Lgs;	d	END_ISLAND_DECORATED
c	mr	net/minecraft/data/worldgen/placement/MiscOverworldPlacements
	f	Lgs;	a	ICE_SPIKE
	f	Lgs;	b	ICE_PATCH
	f	Lgs;	c	FOREST_ROCK
	f	Lgs;	d	ICEBERG_PACKED
	f	Lgs;	e	ICEBERG_BLUE
	f	Lgs;	f	BLUE_ICE
	f	Lgs;	g	LAKE_LAVA_UNDERGROUND
	f	Lgs;	h	LAKE_LAVA_SURFACE
	f	Lgs;	i	DISK_CLAY
	f	Lgs;	j	DISK_GRAVEL
	f	Lgs;	k	DISK_SAND
	f	Lgs;	l	FREEZE_TOP_LAYER
	f	Lgs;	m	VOID_START_PLATFORM
	f	Lgs;	n	DESERT_WELL
	f	Lgs;	o	SPRING_LAVA
	f	Lgs;	p	SPRING_LAVA_FROZEN
	f	Lgs;	q	SPRING_WATER
c	ms	net/minecraft/data/worldgen/placement/NetherPlacements
	f	Lgs;	a	DELTA
	f	Lgs;	b	SMALL_BASALT_COLUMNS
	f	Lgs;	c	LARGE_BASALT_COLUMNS
	f	Lgs;	d	BASALT_BLOBS
	f	Lgs;	e	BLACKSTONE_BLOBS
	f	Lgs;	f	GLOWSTONE_EXTRA
	f	Lgs;	g	GLOWSTONE
	f	Lgs;	h	CRIMSON_FOREST_VEGETATION
	f	Lgs;	i	WARPED_FOREST_VEGETATION
	f	Lgs;	j	NETHER_SPROUTS
	f	Lgs;	k	TWISTING_VINES
	f	Lgs;	l	WEEPING_VINES
	f	Lgs;	m	PATCH_CRIMSON_ROOTS
	f	Lgs;	n	BASALT_PILLAR
	f	Lgs;	o	SPRING_DELTA
	f	Lgs;	p	SPRING_CLOSED
	f	Lgs;	q	SPRING_CLOSED_DOUBLE
	f	Lgs;	r	SPRING_OPEN
	f	Ljava/util/List;	s	FIRE_PLACEMENT
	f	Lgs;	t	PATCH_SOUL_FIRE
	f	Lgs;	u	PATCH_FIRE
c	mt	net/minecraft/data/worldgen/placement/OrePlacements
	m	(ILdeg;)Ljava/util/List;	a	commonOrePlacement
	m	(Ldeg;Ldeg;)Ljava/util/List;	a	orePlacement
	m	(ILdeg;)Ljava/util/List;	b	rareOrePlacement
	f	Lgs;	A	ORE_REDSTONE_LOWER
	f	Lgs;	B	ORE_DIAMOND
	f	Lgs;	C	ORE_DIAMOND_LARGE
	f	Lgs;	D	ORE_DIAMOND_BURIED
	f	Lgs;	E	ORE_LAPIS
	f	Lgs;	F	ORE_LAPIS_BURIED
	f	Lgs;	G	ORE_INFESTED
	f	Lgs;	H	ORE_EMERALD
	f	Lgs;	I	ORE_ANCIENT_DEBRIS_LARGE
	f	Lgs;	J	ORE_ANCIENT_DEBRIS_SMALL
	f	Lgs;	K	ORE_COPPER
	f	Lgs;	L	ORE_COPPER_LARGE
	f	Lgs;	M	ORE_CLAY
	f	Lgs;	a	ORE_MAGMA
	f	Lgs;	b	ORE_SOUL_SAND
	f	Lgs;	c	ORE_GOLD_DELTAS
	f	Lgs;	d	ORE_QUARTZ_DELTAS
	f	Lgs;	e	ORE_GOLD_NETHER
	f	Lgs;	f	ORE_QUARTZ_NETHER
	f	Lgs;	g	ORE_GRAVEL_NETHER
	f	Lgs;	h	ORE_BLACKSTONE
	f	Lgs;	i	ORE_DIRT
	f	Lgs;	j	ORE_GRAVEL
	f	Lgs;	k	ORE_GRANITE_UPPER
	f	Lgs;	l	ORE_GRANITE_LOWER
	f	Lgs;	m	ORE_DIORITE_UPPER
	f	Lgs;	n	ORE_DIORITE_LOWER
	f	Lgs;	o	ORE_ANDESITE_UPPER
	f	Lgs;	p	ORE_ANDESITE_LOWER
	f	Lgs;	q	ORE_TUFF
	f	Lgs;	r	ORE_COAL_UPPER
	f	Lgs;	s	ORE_COAL_LOWER
	f	Lgs;	t	ORE_IRON_UPPER
	f	Lgs;	u	ORE_IRON_MIDDLE
	f	Lgs;	v	ORE_IRON_SMALL
	f	Lgs;	w	ORE_GOLD_EXTRA
	f	Lgs;	x	ORE_GOLD
	f	Lgs;	y	ORE_GOLD_LOWER
	f	Lgs;	z	ORE_REDSTONE
c	mu	net/minecraft/data/worldgen/placement/PlacementUtils
	m	()Lgs;	a	bootstrap
	m	(IFI)Ldeg;	a	countExtra
	m	(Lcdq;)Ldds;	a	filteredByBlockSurvival
	m	(Lcxg;Lczz;)Lgs;	a	onlyWhenEmpty
	m	(Lcxg;Lczz;Lcvd;)Lgs;	a	filtered
	m	(Lcxg;Lczz;[Ldeg;)Lgs;	a	inlinePlaced
	m	(Lgs;[Ldeg;)Lgs;	a	inlinePlaced
	m	(Ljava/lang/String;Lgs;Ljava/util/List;)Lgs;	a	register
	m	(Ljava/lang/String;Lgs;[Ldeg;)Lgs;	a	register
	m	()Ldef;	b	isEmpty
	f	Ldeg;	a	HEIGHTMAP
	f	Ldeg;	b	HEIGHTMAP_TOP_SOLID
	f	Ldeg;	c	HEIGHTMAP_WORLD_SURFACE
	f	Ldeg;	d	HEIGHTMAP_OCEAN_FLOOR
	f	Ldeg;	e	FULL_RANGE
	f	Ldeg;	f	RANGE_10_10
	f	Ldeg;	g	RANGE_8_8
	f	Ldeg;	h	RANGE_4_4
	f	Ldeg;	i	RANGE_BOTTOM_TO_MAX_TERRAIN_HEIGHT
c	mv	net/minecraft/data/worldgen/placement/TreePlacements
	f	Lgs;	A	FANCY_OAK_BEES
	f	Lgs;	a	CRIMSON_FUNGI
	f	Lgs;	b	WARPED_FUNGI
	f	Lgs;	c	OAK_CHECKED
	f	Lgs;	d	DARK_OAK_CHECKED
	f	Lgs;	e	BIRCH_CHECKED
	f	Lgs;	f	ACACIA_CHECKED
	f	Lgs;	g	SPRUCE_CHECKED
	f	Lcvd;	h	SNOW_TREE_PREDICATE
	f	Ljava/util/List;	i	SNOW_TREE_FILTER_DECORATOR
	f	Lgs;	j	PINE_ON_SNOW
	f	Lgs;	k	SPRUCE_ON_SNOW
	f	Lgs;	l	PINE_CHECKED
	f	Lgs;	m	JUNGLE_TREE_CHECKED
	f	Lgs;	n	FANCY_OAK_CHECKED
	f	Lgs;	o	MEGA_JUNGLE_TREE_CHECKED
	f	Lgs;	p	MEGA_SPRUCE_CHECKED
	f	Lgs;	q	MEGA_PINE_CHECKED
	f	Lgs;	r	JUNGLE_BUSH
	f	Lgs;	s	SUPER_BIRCH_BEES_0002
	f	Lgs;	t	SUPER_BIRCH_BEES
	f	Lgs;	u	OAK_BEES_0002
	f	Lgs;	v	OAK_BEES_002
	f	Lgs;	w	BIRCH_BEES_0002_PLACED
	f	Lgs;	x	BIRCH_BEES_002
	f	Lgs;	y	FANCY_OAK_BEES_0002
	f	Lgs;	z	FANCY_OAK_BEES_002
c	mw	net/minecraft/data/worldgen/placement/VegetationPlacements
	m	(I)Ljava/util/List;	a	worldSurfaceSquaredWithCount
	m	(ILdeg;)Ljava/util/List;	a	getMushroomPlacement
	m	(Ldeg;)Ljava/util/List;	a	treePlacement
	m	(Ldeg;Lcdq;)Ljava/util/List;	a	treePlacement
	m	(Ldeg;)Lcom/google/common/collect/ImmutableList$Builder;	b	treePlacementBase
	f	Lgs;	A	PATCH_CACTUS_DECORATED
	f	Lgs;	B	PATCH_SUGAR_CANE_SWAMP
	f	Lgs;	C	PATCH_SUGAR_CANE_DESERT
	f	Lgs;	D	PATCH_SUGAR_CANE_BADLANDS
	f	Lgs;	E	PATCH_SUGAR_CANE
	f	Lgs;	F	BROWN_MUSHROOM_NETHER
	f	Lgs;	G	RED_MUSHROOM_NETHER
	f	Lgs;	H	BROWN_MUSHROOM_NORMAL
	f	Lgs;	I	RED_MUSHROOM_NORMAL
	f	Lgs;	J	BROWN_MUSHROOM_TAIGA
	f	Lgs;	K	RED_MUSHROOM_TAIGA
	f	Lgs;	L	BROWN_MUSHROOM_OLD_GROWTH
	f	Lgs;	M	RED_MUSHROOM_OLD_GROWTH
	f	Lgs;	N	BROWN_MUSHROOM_SWAMP
	f	Lgs;	O	RED_MUSHROOM_SWAMP
	f	Lgs;	P	FLOWER_WARM
	f	Lgs;	Q	FLOWER_DEFAULT
	f	Lgs;	R	FLOWER_FLOWER_FOREST
	f	Lgs;	S	FLOWER_SWAMP
	f	Lgs;	T	FLOWER_PLAINS
	f	Lgs;	U	FLOWER_MEADOW
	f	Ldeg;	V	TREE_THRESHOLD
	f	Lgs;	W	TREES_PLAINS
	f	Lgs;	X	DARK_FOREST_VEGETATION
	f	Lgs;	Y	FLOWER_FOREST_FLOWERS
	f	Lgs;	Z	FOREST_FLOWERS
	f	Lgs;	a	BAMBOO_LIGHT
	f	Lgs;	aa	TREES_FLOWER_FOREST
	f	Lgs;	ab	TREES_MEADOW
	f	Lgs;	ac	TREES_TAIGA
	f	Lgs;	ad	TREES_GROVE
	f	Lgs;	ae	TREES_BADLANDS
	f	Lgs;	af	TREES_SNOWY
	f	Lgs;	ag	TREES_SWAMP
	f	Lgs;	ah	TREES_WINDSWEPT_SAVANNA
	f	Lgs;	ai	TREES_SAVANNA
	f	Lgs;	aj	BIRCH_TALL
	f	Lgs;	ak	TREES_BIRCH
	f	Lgs;	al	TREES_WINDSWEPT_FOREST
	f	Lgs;	am	TREES_WINDSWEPT_HILLS
	f	Lgs;	an	TREES_WATER
	f	Lgs;	ao	TREES_BIRCH_AND_OAK
	f	Lgs;	ap	TREES_SPARSE_JUNGLE
	f	Lgs;	aq	TREES_OLD_GROWTH_SPRUCE_TAIGA
	f	Lgs;	ar	TREES_OLD_GROWTH_PINE_TAIGA
	f	Lgs;	as	TREES_JUNGLE
	f	Lgs;	at	BAMBOO_VEGETATION
	f	Lgs;	au	MUSHROOM_ISLAND_VEGETATION
	f	Lgs;	b	BAMBOO
	f	Lgs;	c	VINES
	f	Lgs;	d	PATCH_SUNFLOWER
	f	Lgs;	e	PATCH_PUMPKIN
	f	Lgs;	f	PATCH_GRASS_PLAIN
	f	Lgs;	g	PATCH_GRASS_FOREST
	f	Lgs;	h	PATCH_GRASS_BADLANDS
	f	Lgs;	i	PATCH_GRASS_SAVANNA
	f	Lgs;	j	PATCH_GRASS_NORMAL
	f	Lgs;	k	PATCH_GRASS_TAIGA_2
	f	Lgs;	l	PATCH_GRASS_TAIGA
	f	Lgs;	m	PATCH_GRASS_JUNGLE
	f	Lgs;	n	GRASS_BONEMEAL
	f	Lgs;	o	PATCH_DEAD_BUSH_2
	f	Lgs;	p	PATCH_DEAD_BUSH
	f	Lgs;	q	PATCH_DEAD_BUSH_BADLANDS
	f	Lgs;	r	PATCH_MELON
	f	Lgs;	s	PATCH_MELON_SPARSE
	f	Lgs;	t	PATCH_BERRY_COMMON
	f	Lgs;	u	PATCH_BERRY_RARE
	f	Lgs;	v	PATCH_WATERLILY
	f	Lgs;	w	PATCH_TALL_GRASS_2
	f	Lgs;	x	PATCH_TALL_GRASS
	f	Lgs;	y	PATCH_LARGE_FERN
	f	Lgs;	z	PATCH_CACTUS_DESERT
c	mx	net/minecraft/data/worldgen/placement/VillagePlacements
	f	Lgs;	a	PILE_HAY_VILLAGE
	f	Lgs;	b	PILE_MELON_VILLAGE
	f	Lgs;	c	PILE_SNOW_VILLAGE
	f	Lgs;	d	PILE_ICE_VILLAGE
	f	Lgs;	e	PILE_PUMPKIN_VILLAGE
	f	Lgs;	f	OAK_VILLAGE
	f	Lgs;	g	ACACIA_VILLAGE
	f	Lgs;	h	SPRUCE_VILLAGE
	f	Lgs;	i	PINE_VILLAGE
	f	Lgs;	j	PATCH_CACTUS_VILLAGE
	f	Lgs;	k	FLOWER_PLAIN_VILLAGE
	f	Lgs;	l	PATCH_TAIGA_GRASS_VILLAGE
	f	Lgs;	m	PATCH_BERRY_BUSH_VILLAGE
c	my	net/minecraft/data/worldgen/placement/package-info
c	mz	net/minecraft/gametest/framework/AfterBatch
	m	()Ljava/lang/String;	a	batch
c	na	net/minecraft/gametest/framework/BeforeBatch
	m	()Ljava/lang/String;	a	batch
c	nb	net/minecraft/gametest/framework/ExhaustedAttemptsException
c	nc	net/minecraft/gametest/framework/GameTest
	m	()I	a	timeoutTicks
	m	()Ljava/lang/String;	b	batch
	m	()I	c	rotationSteps
	m	()Z	d	required
	m	()Ljava/lang/String;	e	template
	m	()J	f	setupTicks
	m	()I	g	attempts
	m	()I	h	requiredSuccesses
c	nd	net/minecraft/gametest/framework/GameTestAssertException
c	ne	net/minecraft/gametest/framework/GameTestAssertPosException
	m	()Ljava/lang/String;	a	getMessageToShowAtBlock
	m	()Lgj;	b	getRelativePos
	m	()Lgj;	c	getAbsolutePos
	f	Lgj;	a	absolutePos
	f	Lgj;	b	relativePos
	f	J	c	tick
c	nf	net/minecraft/gametest/framework/GameTestBatch
	m	()Ljava/lang/String;	a	getName
	m	(Ladw;)V	a	runBeforeBatchFunction
	m	()Ljava/util/Collection;	b	getTestFunctions
	m	(Ladw;)V	b	runAfterBatchFunction
	f	Ljava/lang/String;	a	DEFAULT_BATCH_NAME
	f	Ljava/lang/String;	b	name
	f	Ljava/util/Collection;	c	testFunctions
	f	Ljava/util/function/Consumer;	d	beforeBatchFunction
	f	Ljava/util/function/Consumer;	e	afterBatchFunction
c	ng	net/minecraft/gametest/framework/GameTestBatchRunner
	m	()Ljava/util/List;	a	getTestInfos
	m	(I)V	a	runBatch
	m	(Lcjm;Ladw;Lnf;)Lcom/mojang/datafixers/util/Pair;	a	lambda$new$1
	m	(Lcjm;Ladw;Lob;)Lnk;	a	lambda$new$0
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream;	a	lambda$new$2
	m	(Ljava/util/Collection;)Ljava/util/Map;	a	createStructuresForBatch
	m	(Ljava/util/Map;Lnk;)V	a	lambda$runBatch$3
	m	()V	b	start
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lgj;	b	firstTestNorthWestCorner
	f	Ladw;	c	level
	f	Lnq;	d	testTicker
	f	I	e	testsPerRow
	f	Ljava/util/List;	f	allTestInfos
	f	Ljava/util/List;	g	batches
	f	Lgj$a;	h	nextTestNorthWestCorner
c	ng$1	net/minecraft/gametest/framework/GameTestBatchRunner$1
	m	()V	a	testCompleted
	m	(Lnk;)V	a	testStructureLoaded
	m	(Lnk;)V	b	testPassed
	m	(Lnk;)V	c	testFailed
	f	Lnv;	a	val$currentBatchTracker
	f	Lnf;	b	val$currentBatch
	f	I	c	val$batchIndex
	f	Lng;	d	this$0
c	nh	net/minecraft/gametest/framework/GameTestEvent
	m	(JLjava/lang/Runnable;)Lnh;	a	create
	m	(Ljava/lang/Runnable;)Lnh;	a	create
	f	Ljava/lang/Long;	a	expectedDelay
	f	Ljava/lang/Runnable;	b	assertion
c	ni	net/minecraft/gametest/framework/GameTestGenerator
c	nj	net/minecraft/gametest/framework/GameTestHelper
	m	()Ladw;	a	getLevel
	m	(I)V	a	setDayTime
	m	(III)V	a	pressButton
	m	(IIILcdq;)V	a	setBlock
	m	(IIILcov;)V	a	setBlock
	m	(ILjava/lang/Runnable;)V	a	succeedOnTickWhen
	m	(JLgj;)V	a	assertAtTickTimeContainerEmpty
	m	(JLgj;Lbus;)V	a	assertAtTickTimeContainerContains
	m	(JLjava/lang/Runnable;)V	a	runAtTickTime
	m	(Laxk;)Z	a	lambda$killAllEntities$0
	m	(Laxk;III)V	a	assertEntityInstancePresent
	m	(Laxk;Laxk;)Z	a	lambda$assertEntityInstancePresent$14
	m	(Laxk;Lgj;)V	a	assertEntityInstancePresent
	m	(Laxk;Lgj;Lgj;)Lne;	a	lambda$assertEntityInstancePresent$15
	m	(Laxk;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/Object;)V	a	assertEntityProperty
	m	(Laxk;Ljava/util/function/Predicate;Ljava/lang/String;)V	a	assertEntityProperty
	m	(Laxo;)V	a	assertEntityPresent
	m	(Laxo;DDD)V	a	assertEntityTouching
	m	(Laxo;FFF)Laxk;	a	spawn
	m	(Laxo;III)Laxk;	a	spawn
	m	(Laxo;Ldpo;)Laxk;	a	spawn
	m	(Laxo;Lgj;)Laxk;	a	spawn
	m	(Laxo;Lgj;D)V	a	assertEntityPresent
	m	(Laxy;)Laxy;	a	makeAboutToDrown
	m	(Laya;Lgj;F)Lno;	a	walkTo
	m	(Lbus;FFF)Lbli;	a	spawnItem
	m	(Lbus;Lgj;D)V	a	assertItemEntityPresent
	m	(Lbus;Lgj;DI)V	a	assertItemEntityCountIs
	m	(Lcdq;III)V	a	assertBlockPresent
	m	(Lcdq;Lgj;)V	a	assertBlockPresent
	m	(Lcov;)Z	a	lambda$pressButton$2
	m	(Lcov;Lcdq;Lcdq;)Z	a	lambda$assertBlockPresent$5
	m	(Lcpy;Ljava/lang/Comparable;)Ljava/lang/String;	a	lambda$assertBlockProperty$11
	m	(Lcpy;Ljava/lang/Comparable;Lcov;)Z	a	lambda$assertBlockProperty$10
	m	(Ldeo;Lgj;)V	a	assertSameBlockStates
	m	(Ldpo;)Ldpo;	a	absoluteVec
	m	(Ldpo;Laxk;)Z	a	lambda$assertEntityNotTouching$17
	m	(Lgj;)Lcov;	a	getBlockState
	m	(Lgj;J)V	a	pulseRedstone
	m	(Lgj;Laxo;Ljava/util/function/Function;Ljava/lang/Object;)V	a	assertEntityData
	m	(Lgj;Lbus;)V	a	assertContainerContains
	m	(Lgj;Lcdq;)V	a	setBlock
	m	(Lgj;Lcdq;Lcdq;)Z	a	lambda$assertBlockNotPresent$6
	m	(Lgj;Lcov;)V	a	setBlock
	m	(Lgj;Lcpy;Ljava/lang/Comparable;)V	a	assertBlockProperty
	m	(Lgj;Lcpy;Ljava/util/function/Predicate;Ljava/lang/String;)V	a	assertBlockProperty
	m	(Lgj;Ldeo;Lgj;)V	a	lambda$assertSameBlockStates$18
	m	(Lgj;Lgj;)V	a	assertSameBlockState
	m	(Lgj;Ljava/util/function/Predicate;Ljava/lang/String;)V	a	assertBlock
	m	(Lgj;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V	a	assertBlock
	m	(Ljava/lang/Runnable;)V	a	succeedIf
	m	(Ljava/lang/Runnable;J)V	a	lambda$onEachTick$26
	m	(Ljava/lang/String;)V	a	fail
	m	(Ljava/lang/String;Laxk;)V	a	fail
	m	(Ljava/lang/String;Lgj;)V	a	fail
	m	(Ljava/util/function/Consumer;)V	a	forEveryBlockInStructure
	m	(Ljava/util/function/Predicate;Lcov;)Z	a	lambda$assertBlock$9
	m	(Ljava/util/function/Predicate;Lcpy;Lcov;)Z	a	lambda$assertBlockProperty$12
	m	()V	b	killAllEntities
	m	(III)V	b	pullLever
	m	(JLjava/lang/Runnable;)V	b	runAfterDelay
	m	(Laxo;)V	b	assertEntityNotPresent
	m	(Laxo;DDD)V	b	assertEntityNotTouching
	m	(Laxo;FFF)Laya;	b	spawnWithNoFreeWill
	m	(Laxo;III)Laya;	b	spawnWithNoFreeWill
	m	(Laxo;Ldpo;)Laya;	b	spawnWithNoFreeWill
	m	(Laxo;Lgj;)Laya;	b	spawnWithNoFreeWill
	m	(Laya;Lgj;F)V	b	lambda$walkTo$1
	m	(Lcdq;III)V	b	assertBlockNotPresent
	m	(Lcdq;Lgj;)V	b	assertBlockNotPresent
	m	(Ldpo;Laxk;)Z	b	lambda$assertEntityTouching$16
	m	(Lgj;)Lcmr;	b	getBlockEntity
	m	(Lgj;Laxo;Ljava/util/function/Function;Ljava/lang/Object;)V	b	succeedWhenEntityData
	m	(Lgj;Lbus;)V	b	lambda$assertAtTickTimeContainerContains$19
	m	(Lgj;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V	b	assertBlockState
	m	(Ljava/lang/Runnable;)V	b	succeedWhen
	m	(Ljava/lang/Runnable;J)V	b	lambda$failIfEver$25
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$assertBlockProperty$13
	m	()Lboj;	c	makeMockPlayer
	m	(Laxo;III)V	c	assertEntityPresent
	m	(Laxo;Lgj;)V	c	assertEntityPresent
	m	(Lcdq;III)V	c	succeedWhenBlockPresent
	m	(Lcdq;Lgj;)V	c	succeedWhenBlockPresent
	m	(Lgj;)V	c	pressButton
	m	(Lgj;Laxo;Ljava/util/function/Function;Ljava/lang/Object;)V	c	lambda$succeedWhenEntityData$21
	m	(Ljava/lang/Runnable;)V	c	failIf
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$assertBlock$8
	m	()V	d	setNight
	m	(Laxo;III)V	d	assertEntityNotPresent
	m	(Laxo;Lgj;)V	d	assertEntityNotPresent
	m	(Lcdq;Lgj;)V	d	lambda$succeedWhenBlockPresent$7
	m	(Lgj;)V	d	useBlock
	m	(Ljava/lang/Runnable;)V	d	failIfEver
	m	()V	e	succeed
	m	(Laxo;III)V	e	succeedWhenEntityPresent
	m	(Laxo;Lgj;)V	e	succeedWhenEntityPresent
	m	(Lgj;)V	e	pullLever
	m	(Ljava/lang/Runnable;)V	e	onEachTick
	m	()Lno;	f	startSequence
	m	(Laxo;III)V	f	succeedWhenEntityNotPresent
	m	(Laxo;Lgj;)V	f	succeedWhenEntityNotPresent
	m	(Lgj;)V	f	destroyBlock
	m	()J	g	getTick
	m	(Laxo;Lgj;)V	g	lambda$succeedWhenEntityNotPresent$23
	m	(Lgj;)V	g	assertContainerEmpty
	m	()V	h	ensureSingleFinalCheck
	m	(Laxo;Lgj;)V	h	lambda$succeedWhenEntityPresent$22
	m	(Lgj;)V	h	randomTick
	m	()Ldpj;	i	getBounds
	m	(Lgj;)Lgj;	i	absolutePos
	m	()Ldpj;	j	getRelativeBounds
	m	(Lgj;)Lgj;	j	relativePos
	m	()Ljava/lang/Exception;	k	lambda$failIf$24
	m	(Lgj;)V	k	lambda$assertAtTickTimeContainerEmpty$20
	m	()Ljava/lang/String;	l	lambda$pressButton$3
	m	(Lgj;)V	l	lambda$pulseRedstone$4
	f	Lnk;	a	testInfo
	f	Z	b	finalCheckAdded
c	nj$1	net/minecraft/gametest/framework/GameTestHelper$1
	m	()Z	B_	isSpectator
	m	()Z	f	isCreative
	f	Lnj;	b	this$0
c	nk	net/minecraft/gametest/framework/GameTestInfo
	m	()V	A	tickInternal
	m	()V	B	startTest
	m	()Lcnv;	C	getStructureBlockEntity
	m	()V	D	finish
	m	()V	a	startExecution
	m	(JLjava/lang/Runnable;)V	a	setRunAtTickTime
	m	(Lgj;)V	a	setStructureBlockPos
	m	(Lgj;I)V	a	spawnStructure
	m	(Ljava/lang/Throwable;)V	a	fail
	m	(Lnl;)V	a	addListener
	m	(Lno;)V	a	lambda$tickInternal$3
	m	()V	b	tick
	m	(Lnl;)V	b	lambda$spawnStructure$4
	m	(Lno;)V	b	lambda$tickInternal$2
	m	()Ljava/lang/String;	c	getTestName
	m	(Lnl;)V	c	lambda$tick$1
	m	()Lgj;	d	getStructureBlockPos
	m	(Lnl;)V	d	lambda$tick$0
	m	()Lhh;	e	getStructureSize
	m	()Ldpj;	f	getStructureBounds
	m	()Ladw;	g	getLevel
	m	()Z	h	hasSucceeded
	m	()Z	i	hasFailed
	m	()Z	j	hasStarted
	m	()Z	k	isDone
	m	()J	l	getRunTime
	m	()V	m	succeed
	m	()Ljava/lang/Throwable;	n	getError
	m	()V	o	clearStructure
	m	()J	p	getTick
	m	()Lno;	q	createSequence
	m	()Z	r	isRequired
	m	()Z	s	isOptional
	m	()Ljava/lang/String;	t	getStructureName
	m	()Lcjm;	u	getRotation
	m	()Lob;	v	getTestFunction
	m	()I	w	getTimeoutTicks
	m	()Z	x	isFlaky
	m	()I	y	maxAttempts
	m	()I	z	requiredSuccesses
	f	Lob;	a	testFunction
	f	Lgj;	b	structureBlockPos
	f	Ladw;	c	level
	f	Ljava/util/Collection;	d	listeners
	f	I	e	timeoutTicks
	f	Ljava/util/Collection;	f	sequences
	f	Lit/unimi/dsi/fastutil/objects/Object2LongMap;	g	runAtTickTimeMap
	f	J	h	startTick
	f	J	i	tickCount
	f	Z	j	started
	f	Lcom/google/common/base/Stopwatch;	k	timer
	f	Z	l	done
	f	Lcjm;	m	rotation
	f	Ljava/lang/Throwable;	n	error
	f	Lcnv;	o	structureBlockEntity
c	nl	net/minecraft/gametest/framework/GameTestListener
	m	(Lnk;)V	a	testStructureLoaded
	m	(Lnk;)V	b	testPassed
	m	(Lnk;)V	c	testFailed
c	nm	net/minecraft/gametest/framework/GameTestRegistry
	m	()Ljava/util/Collection;	a	getAllTestFunctions
	m	(Ljava/lang/Class;)V	a	register
	m	(Ljava/lang/String;)Ljava/util/Collection;	a	getTestFunctionsForClassName
	m	(Ljava/lang/String;Lob;)Z	a	lambda$findTestFunction$1
	m	(Ljava/lang/reflect/Method;)V	a	register
	m	(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/Map;)V	a	registerBatchFunction
	m	(Ljava/lang/reflect/Method;Ljava/lang/Object;)V	a	lambda$turnMethodIntoConsumer$2
	m	(Lob;)V	a	rememberFailedTest
	m	(Lob;Ljava/lang/String;)Z	a	isTestFunctionPartOfClass
	m	()Ljava/util/Collection;	b	getAllTestClassNames
	m	(Ljava/lang/String;)Z	b	isTestClass
	m	(Ljava/lang/String;Lob;)Z	b	lambda$getTestFunctionsForClassName$0
	m	(Ljava/lang/reflect/Method;)Ljava/util/Collection;	b	useTestGeneratorMethod
	m	()Ljava/util/Collection;	c	getLastFailedTests
	m	(Ljava/lang/String;)Ljava/util/function/Consumer;	c	getBeforeBatchFunction
	m	(Ljava/lang/reflect/Method;)Lob;	c	turnMethodIntoTestFunction
	m	()V	d	forgetFailedTests
	m	(Ljava/lang/String;)Ljava/util/function/Consumer;	d	getAfterBatchFunction
	m	(Ljava/lang/reflect/Method;)Ljava/util/function/Consumer;	d	turnMethodIntoConsumer
	m	(Ljava/lang/String;)Ljava/util/Optional;	e	findTestFunction
	m	(Ljava/lang/String;)Lob;	f	getTestFunction
	f	Ljava/util/Collection;	a	TEST_FUNCTIONS
	f	Ljava/util/Set;	b	TEST_CLASS_NAMES
	f	Ljava/util/Map;	c	BEFORE_BATCH_FUNCTIONS
	f	Ljava/util/Map;	d	AFTER_BATCH_FUNCTIONS
	f	Ljava/util/Collection;	e	LAST_FAILED_TESTS
c	nn	net/minecraft/gametest/framework/GameTestRunner
	m	(Ladw;)V	a	clearMarkers
	m	(Ladw;Lgj;)V	a	lambda$clearAllTests$3
	m	(Ladw;Lgj;Lnq;I)V	a	clearAllTests
	m	(Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/List;)Lnf;	a	lambda$groupTestsIntoBatches$0
	m	(Ljava/util/Collection;)Ljava/util/Collection;	a	groupTestsIntoBatches
	m	(Ljava/util/Collection;Lgj;Lcjm;Ladw;Lnq;I)Ljava/util/Collection;	a	runTestBatches
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$groupTestsIntoBatches$1
	m	(Lnk;Lgj;Lnq;)V	a	runTest
	m	(Ladw;Lgj;)Z	b	lambda$clearAllTests$2
	m	(Ljava/util/Collection;Lgj;Lcjm;Ladw;Lnq;I)Ljava/util/Collection;	b	runTests
	f	I	a	PADDING_AROUND_EACH_STRUCTURE
	f	I	b	SPACE_BETWEEN_COLUMNS
	f	I	c	SPACE_BETWEEN_ROWS
	f	I	d	DEFAULT_TESTS_PER_ROW
	f	I	e	MAX_TESTS_PER_BATCH
c	no	net/minecraft/gametest/framework/GameTestSequence
	m	()V	a	thenSucceed
	m	(I)Lno;	a	thenIdle
	m	(ILjava/lang/Runnable;)Lno;	a	thenExecuteAfter
	m	(J)V	a	tickAndContinue
	m	(JLjava/lang/Runnable;)Lno;	a	thenWaitUntil
	m	(Ljava/lang/Runnable;)Lno;	a	thenWaitUntil
	m	(Ljava/util/function/Supplier;)V	a	thenFail
	m	(Lno$a;)V	a	lambda$thenTrigger$5
	m	()Lno$a;	b	thenTrigger
	m	(ILjava/lang/Runnable;)Lno;	b	thenExecuteFor
	m	(J)V	b	tickAndFailIfNotComplete
	m	(Ljava/lang/Runnable;)Lno;	b	thenExecute
	m	(Ljava/util/function/Supplier;)V	b	lambda$thenFail$4
	m	()V	c	lambda$thenIdle$0
	m	(ILjava/lang/Runnable;)V	c	lambda$thenExecuteFor$3
	m	(J)V	c	tick
	m	(Ljava/lang/Runnable;)V	c	executeWithoutFail
	m	(ILjava/lang/Runnable;)V	d	lambda$thenExecuteAfter$2
	m	(Ljava/lang/Runnable;)V	d	lambda$thenExecute$1
	f	Lnk;	a	parent
	f	Ljava/util/List;	b	events
	f	J	c	lastTick
c	no$a	net/minecraft/gametest/framework/GameTestSequence$Condition
	m	()V	a	assertTriggeredThisTick
	m	(J)V	a	trigger
	f	Lno;	a	this$0
	f	J	b	NOT_TRIGGERED
	f	J	c	triggerTime
c	np	net/minecraft/gametest/framework/GameTestServer
	m	()Z	G_	shouldInformAdmins
	m	(Lac;)Lac;	a	fillServerSystemReport
	m	(Laga;Lcaj;)Lcom/mojang/datafixers/util/Pair;	a	lambda$create$2
	m	(Lcar;)V	a	lambda$static$0
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
	m	(Ljava/lang/Thread;Ldkp$a;Lafn;Ljava/util/Collection;Lgj;)Lnp;	a	create
	m	(Ljava/util/function/BooleanSupplier;)V	a	tickServer
	m	(Lnk;)V	a	lambda$tickServer$4
	m	(Lq;)V	a	onServerCrash
	m	(Ladw;)V	b	startTests
	m	(Lnk;)V	b	lambda$tickServer$3
	m	()Z	bd	haveTestsStarted
	m	()Lcaj;	be	lambda$create$1
	m	()Z	e	initServer
	m	()V	f	onServerExit
	m	()Z	g	isHardcore
	m	()I	h	getOperatorUserPermissionLevel
	m	()I	i	getFunctionCompilationLevel
	m	()Z	j	shouldRconBroadcast
	m	()Z	k	isDedicatedServer
	m	()I	l	getRateLimitPacketsPerSecond
	m	()Z	m	isEpollEnabled
	m	()Z	n	isCommandBlockEnabled
	m	()Z	o	isPublished
	f	Lorg/slf4j/Logger;	q	LOGGER
	f	I	r	PROGRESS_REPORT_INTERVAL
	f	Ljava/util/List;	s	testBatches
	f	Lgj;	t	spawnPos
	f	Lcar;	u	TEST_GAME_RULES
	f	Lcaz;	v	TEST_SETTINGS
	f	Lnv;	w	testTracker
c	np$1	net/minecraft/gametest/framework/GameTestServer$1
	f	Lnp;	a	this$0
c	nq	net/minecraft/gametest/framework/GameTestTicker
	m	()V	a	clear
	m	(Lnk;)V	a	add
	m	()V	b	tick
	f	Lnq;	a	SINGLETON
	f	Ljava/util/Collection;	b	testInfos
c	nr	net/minecraft/gametest/framework/GameTestTimeoutException
c	ns	net/minecraft/gametest/framework/GlobalTestReporter
	m	()V	a	finish
	m	(Lnk;)V	a	onTestFailed
	m	(Lod;)V	a	replaceWith
	m	(Lnk;)V	b	onTestSuccess
	f	Lod;	a	DELEGATE
c	nt	net/minecraft/gametest/framework/JUnitLikeTestReporter
	m	()V	a	finish
	m	(Ljava/io/File;)V	a	save
	m	(Lnk;)V	a	onTestFailed
	m	(Lnk;Ljava/lang/String;)Lorg/w3c/dom/Element;	a	createTestCase
	m	(Lnk;)V	b	onTestSuccess
	f	Lorg/w3c/dom/Document;	a	document
	f	Lorg/w3c/dom/Element;	b	testSuite
	f	Lcom/google/common/base/Stopwatch;	c	stopwatch
	f	Ljava/io/File;	d	destination
c	nu	net/minecraft/gametest/framework/LogTestReporter
	m	(Lnk;)V	a	onTestFailed
	m	(Lnk;)V	b	onTestSuccess
	f	Lorg/slf4j/Logger;	a	LOGGER
c	nv	net/minecraft/gametest/framework/MultipleTestTracker
	m	()I	a	getFailedRequiredCount
	m	(Ljava/lang/StringBuffer;Lnk;)V	a	lambda$getProgressBar$1
	m	(Ljava/util/function/Consumer;)V	a	addFailureListener
	m	(Lnk;)V	a	addTestToTrack
	m	(Lnl;)V	a	addListener
	m	(Lnl;Lnk;)V	a	lambda$addListener$0
	m	()I	b	getFailedOptionalCount
	m	()I	c	getDoneCount
	m	()Z	d	hasFailedRequired
	m	()Z	e	hasFailedOptional
	m	()Ljava/util/Collection;	f	getFailedRequired
	m	()Ljava/util/Collection;	g	getFailedOptional
	m	()I	h	getTotalCount
	m	()Z	i	isDone
	m	()Ljava/lang/String;	j	getProgressBar
	f	C	a	NOT_STARTED_TEST_CHAR
	f	C	b	ONGOING_TEST_CHAR
	f	C	c	SUCCESSFUL_TEST_CHAR
	f	C	d	FAILED_OPTIONAL_TEST_CHAR
	f	C	e	FAILED_REQUIRED_TEST_CHAR
	f	Ljava/util/Collection;	f	tests
	f	Ljava/util/Collection;	g	listeners
c	nv$1	net/minecraft/gametest/framework/MultipleTestTracker$1
	m	(Lnk;)V	a	testStructureLoaded
	m	(Lnk;)V	b	testPassed
	m	(Lnk;)V	c	testFailed
	f	Ljava/util/function/Consumer;	a	val$listener
	f	Lnv;	b	this$0
c	nw	net/minecraft/gametest/framework/ReportGameListener
	m	()V	a	rerunTest
	m	(Ladw;Lgj;Ljava/lang/String;)V	a	showRedBox
	m	(Ladw;Lp;Ljava/lang/String;)V	a	say
	m	(Ladx;)Z	a	lambda$say$1
	m	(Ljava/lang/String;Lp;Ladx;)V	a	lambda$say$2
	m	(Ljava/lang/String;ZLjava/lang/String;)Lbuw;	a	createBook
	m	(Ljava/lang/StringBuffer;Ljava/lang/String;)V	a	lambda$createBook$0
	m	(Lnk;)V	a	testStructureLoaded
	m	(Lnk;Lcdq;)V	a	spawnBeacon
	m	(Lnk;Ljava/lang/String;)V	a	reportPassed
	m	(Lnk;Ljava/lang/Throwable;)V	a	reportFailure
	m	(Lnk;)V	b	testPassed
	m	(Lnk;Ljava/lang/String;)V	b	visualizePassedTest
	m	(Lnk;Ljava/lang/Throwable;)V	b	visualizeFailedTest
	m	(Lnk;)V	c	testFailed
	m	(Lnk;Ljava/lang/String;)V	c	spawnLectern
	f	I	a	attempts
	f	I	b	successes
	f	Lnk;	c	originalTestInfo
	f	Lnq;	d	testTicker
	f	Lgj;	e	structurePos
c	nx	net/minecraft/gametest/framework/StructureUtils
	m	(I)Lcjm;	a	getRotationForRotationSteps
	m	(ILadw;Lgj;)V	a	lambda$clearSpaceForStructure$2
	m	(ILgj;Ladw;)V	a	clearBlock
	m	(Laxk;)Z	a	lambda$clearSpaceForStructure$3
	m	(Lcjm;)I	a	getRotationStepsForRotation
	m	(Lcnv;)Ldpj;	a	getStructureBounds
	m	(Ldeo;ILadw;)V	a	clearSpaceForStructure
	m	(Lgj;ILadw;)Ljava/util/Optional;	a	findStructureBlockContainingPos
	m	(Lgj;Ladw;)V	a	forceLoadChunks
	m	(Lgj;Ladw;Lgj;)Z	a	lambda$findStructureBlockContainingPos$4
	m	(Lgj;Lgj;)I	a	lambda$findNearestStructureBlock$5
	m	(Lgj;Lgj;Ladw;)Z	a	doesStructureContain
	m	(Lgj;Lgj;Lcjm;Ladw;)V	a	addCommandBlockAndButtonToStartTest
	m	(Lgj;Lhh;Lcjm;)Ldeo;	a	getStructureBoundingBox
	m	(Ljava/lang/String;Ladw;)Ldhw;	a	getStructureTemplate
	m	(Ljava/lang/String;Lgj;Lcjm;ILadw;Z)Lcnv;	a	spawnStructure
	m	(Ljava/lang/String;Lgj;Lcjm;Ladw;Z)Lcnv;	a	createStructureBlock
	m	(Ljava/lang/String;Lgj;Lhh;Lcjm;Ladw;)V	a	createNewEmptyStructureBlock
	m	(Ljava/nio/file/Path;)Lok;	a	tryLoadStructure
	m	([Ljava/lang/String;)V	a	main
	m	(Lcnv;)Ldeo;	b	getStructureBoundingBox
	m	(Lgj;ILadw;)Lgj;	b	findNearestStructureBlock
	m	(Ljava/nio/file/Path;)V	b	lambda$main$1
	m	(Lgj;ILadw;)Ljava/util/Collection;	c	findStructureBlocks
	m	(Ljava/nio/file/Path;)Z	c	lambda$main$0
	f	Ljava/lang/String;	a	DEFAULT_TEST_STRUCTURES_DIR
	f	Ljava/lang/String;	b	testStructuresDir
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	HOW_MANY_CHUNKS_TO_LOAD_IN_EACH_DIRECTION_OF_STRUCTURE
c	nx$1	net/minecraft/gametest/framework/StructureUtils$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
c	ny	net/minecraft/gametest/framework/TeamcityTestReporter
	m	(Lnk;)V	a	onTestFailed
	m	(Lnk;)V	b	onTestSuccess
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/common/escape/Escaper;	b	ESCAPER
c	nz	net/minecraft/gametest/framework/TestClassNameArgument
	m	()Lnz;	a	testClassName
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	getTestClassName
	f	Ljava/util/Collection;	a	EXAMPLES
c	oa	net/minecraft/gametest/framework/TestCommand
	m	(Ladw;Lgj;Lnv;)V	a	runTest
	m	(Ladw;Ljava/lang/String;Lp;)V	a	say
	m	(Ladw;Lnv;)V	a	showTestSummaryIfAllDone
	m	(Ladw;Lnv;Lgj;)V	a	lambda$runAllNearbyTests$24
	m	(Ladx;)Z	a	lambda$say$26
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$23
	m	(Ldm;)I	a	runNearbyTest
	m	(Ldm;I)I	a	clearAllTests
	m	(Ldm;II)I	a	runAllTests
	m	(Ldm;Ljava/lang/String;)I	a	showPos
	m	(Ldm;Ljava/lang/String;II)I	a	runAllTestsInClass
	m	(Ldm;Ljava/lang/String;III)I	a	createNewStructure
	m	(Ldm;Ljava/util/Collection;II)V	a	runTests
	m	(Ldm;Lob;I)I	a	runTest
	m	(Ldm;ZII)I	a	runLastFailedTests
	m	(Lnk;)V	a	lambda$runTests$25
	m	(Lob;Ladw;)V	a	runTestPreparation
	m	(Lp;Ljava/lang/String;Ladx;)V	a	lambda$say$27
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$22
	m	(Ldm;)I	b	runAllNearbyTests
	m	(Ldm;Ljava/lang/String;)V	b	say
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$21
	m	(Ldm;)I	c	exportNearestTestStructure
	m	(Ldm;Ljava/lang/String;)I	c	exportTestStructure
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$20
	m	(Ldm;Ljava/lang/String;)I	d	importTestStructure
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$19
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$18
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$17
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	x	lambda$register$0
	f	I	a	DEFAULT_CLEAR_RADIUS
	f	I	b	MAX_CLEAR_RADIUS
	f	I	c	STRUCTURE_BLOCK_NEARBY_SEARCH_RADIUS
	f	I	d	STRUCTURE_BLOCK_FULL_SEARCH_RADIUS
	f	I	e	TEST_POS_Z_OFFSET_FROM_PLAYER
	f	I	f	SHOW_POS_DURATION_MS
	f	I	g	DEFAULT_X_SIZE
	f	I	h	DEFAULT_Y_SIZE
	f	I	i	DEFAULT_Z_SIZE
c	oa$a	net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer
	m	(Lnk;)V	a	testStructureLoaded
	m	(Lnk;)V	b	testPassed
	m	(Lnk;)V	c	testFailed
	f	Ladw;	a	level
	f	Lnv;	b	tracker
c	ob	net/minecraft/gametest/framework/TestFunction
	m	()Ljava/lang/String;	a	getTestName
	m	(Lnj;)V	a	run
	m	()Ljava/lang/String;	b	getStructureName
	m	()I	c	getMaxTicks
	m	()Z	d	isRequired
	m	()Ljava/lang/String;	e	getBatchName
	m	()J	f	getSetupTicks
	m	()Lcjm;	g	getRotation
	m	()Z	h	isFlaky
	m	()I	i	getMaxAttempts
	m	()I	j	getRequiredSuccesses
	f	Ljava/lang/String;	a	batchName
	f	Ljava/lang/String;	b	testName
	f	Ljava/lang/String;	c	structureName
	f	Z	d	required
	f	I	e	maxAttempts
	f	I	f	requiredSuccesses
	f	Ljava/util/function/Consumer;	g	function
	f	I	h	maxTicks
	f	J	i	setupTicks
	f	Lcjm;	j	rotation
c	oc	net/minecraft/gametest/framework/TestFunctionArgument
	m	()Loc;	a	testFunctionArgument
	m	(Lcom/mojang/brigadier/StringReader;)Lob;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lob;	a	getTestFunction
	f	Ljava/util/Collection;	a	EXAMPLES
c	od	net/minecraft/gametest/framework/TestReporter
	m	()V	a	finish
	m	(Lnk;)V	a	onTestFailed
	m	(Lnk;)V	b	onTestSuccess
c	oe	net/minecraft/gametest/framework/package-info
c	of	net/minecraft/locale/Language
	m	()Lof;	a	getInstance
	m	(Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V	a	loadFromJson
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getOrDefault
	m	(Ljava/util/List;)Ljava/util/List;	a	getVisualOrder
	m	(Lof;)V	a	inject
	m	(Lqn;)Laiz;	a	getVisualOrder
	m	()Z	b	isDefaultRightToLeft
	m	(Ljava/lang/String;)Z	b	has
	m	()Lof;	c	loadDefault
	f	Ljava/lang/String;	a	DEFAULT
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Ljava/util/regex/Pattern;	d	UNSUPPORTED_FORMAT_PATTERN
	f	Lof;	e	instance
c	of$1	net/minecraft/locale/Language$1
	m	(Laja;Lqu;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getVisualOrder$0
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getOrDefault
	m	(Lqn;)Laiz;	a	getVisualOrder
	m	(Lqn;Laja;)Z	a	lambda$getVisualOrder$1
	m	()Z	b	isDefaultRightToLeft
	m	(Ljava/lang/String;)Z	b	has
	f	Ljava/util/Map;	b	val$storage
c	og	net/minecraft/locale/package-info
c	oh	net/minecraft/nbt/ByteArrayTag
	m	()B	a	getId
	m	(I)Loi;	a	get
	m	(ILoi;)Loi;	a	set
	m	(ILpd;)Z	a	setTag
	m	(Ljava/io/DataOutput;)V	a	write
	m	(Ljava/util/List;)[B	a	toArray
	m	(Lpa;)Lpa$b;	a	accept
	m	(Lph;)V	a	accept
	m	()Lpf;	b	getType
	m	(I)Loi;	b	remove
	m	(ILoi;)V	b	add
	m	(ILpd;)Z	b	addTag
	m	()Lpd;	c	copy
	m	(I)Lpd;	c	remove
	m	(ILpd;)V	c	add
	m	()[B	d	getAsByteArray
	m	(ILpd;)Lpd;	d	set
	m	()B	e	getElementType
	f	Lpf;	a	TYPE
	f	I	b	SELF_SIZE_IN_BITS
	f	[B	c	data
c	oh$1	net/minecraft/nbt/ByteArrayTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
	m	(Ljava/io/DataInput;ILot;)Loh;	a	load
	m	(Ljava/io/DataInput;Lpa;)Lpa$b;	a	parse
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILot;)Lpd;	b	load
c	oi	net/minecraft/nbt/ByteTag
	m	()B	a	getId
	m	(B)Loi;	a	valueOf
	m	(Ljava/io/DataOutput;)V	a	write
	m	(Lpa;)Lpa$b;	a	accept
	m	(Lph;)V	a	accept
	m	(Z)Loi;	a	valueOf
	m	()Lpf;	b	getType
	m	()Lpd;	c	copy
	m	()Loi;	d	copy
	m	()J	e	getAsLong
	m	()I	f	getAsInt
	m	()S	g	getAsShort
	m	()B	h	getAsByte
	m	()D	i	getAsDouble
	m	()F	j	getAsFloat
	m	()Ljava/lang/Number;	k	getAsNumber
	f	Lpf;	a	TYPE
	f	Loi;	b	ZERO
	f	Loi;	c	ONE
	f	I	w	SELF_SIZE_IN_BITS
	f	B	x	data
c	oi$1	net/minecraft/nbt/ByteTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILot;)Loi;	a	load
	m	(Ljava/io/DataInput;Lpa;)Lpa$b;	a	parse
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILot;)Lpd;	b	load
	m	()I	c	size
	m	()Z	d	isValue
c	oi$a	net/minecraft/nbt/ByteTag$Cache
	f	[Loi;	a	cache
c	oj	net/minecraft/nbt/CollectionTag
	m	(ILpd;)Z	a	setTag
	m	(ILpd;)Z	b	addTag
	m	(I)Lpd;	c	remove
	m	(ILpd;)V	c	add
	m	(ILpd;)Lpd;	d	set
	m	()B	e	getElementType
c	ok	net/minecraft/nbt/CompoundTag
	m	()B	a	getId
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$static$0
	m	(Ljava/io/DataInput;Lot;)B	a	readNamedTagType
	m	(Ljava/io/DataOutput;)V	a	write
	m	(Ljava/lang/String;)Ljava/util/UUID;	a	getUUID
	m	(Ljava/lang/String;B)V	a	putByte
	m	(Ljava/lang/String;D)V	a	putDouble
	m	(Ljava/lang/String;F)V	a	putFloat
	m	(Ljava/lang/String;I)V	a	putInt
	m	(Ljava/lang/String;J)V	a	putLong
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	putString
	m	(Ljava/lang/String;Ljava/util/List;)V	a	putByteArray
	m	(Ljava/lang/String;Ljava/util/UUID;)V	a	putUUID
	m	(Ljava/lang/String;Lpd;)Lpd;	a	put
	m	(Ljava/lang/String;Lpd;Ljava/io/DataOutput;)V	a	writeNamedTag
	m	(Ljava/lang/String;Lpf;Ljava/lang/ClassCastException;)Lq;	a	createReport
	m	(Ljava/lang/String;S)V	a	putShort
	m	(Ljava/lang/String;Z)V	a	putBoolean
	m	(Ljava/lang/String;[B)V	a	putByteArray
	m	(Ljava/lang/String;[I)V	a	putIntArray
	m	(Ljava/lang/String;[J)V	a	putLongArray
	m	(Lok;)Lok;	a	merge
	m	(Lpa;)Lpa$b;	a	accept
	m	(Lpf;Ljava/lang/String;Ljava/io/DataInput;ILot;)Lpd;	a	readNamedTagData
	m	(Lph;)V	a	accept
	m	()Lpf;	b	getType
	m	(Ljava/io/DataInput;Lot;)Ljava/lang/String;	b	readNamedTagName
	m	(Ljava/lang/String;)Z	b	hasUUID
	m	(Ljava/lang/String;I)Z	b	contains
	m	(Ljava/lang/String;Ljava/util/List;)V	b	putIntArray
	m	(Lok;)Lcom/mojang/serialization/Dynamic;	b	lambda$static$1
	m	()Lpd;	c	copy
	m	(Ljava/lang/String;)Lpd;	c	get
	m	(Ljava/lang/String;I)Loq;	c	getList
	m	(Ljava/lang/String;Ljava/util/List;)V	c	putLongArray
	m	()Ljava/util/Set;	d	getAllKeys
	m	(Ljava/lang/String;)B	d	getTagType
	m	()I	e	size
	m	(Ljava/lang/String;)Z	e	contains
	m	()Z	f	isEmpty
	m	(Ljava/lang/String;)B	f	getByte
	m	()Lok;	g	copy
	m	(Ljava/lang/String;)S	g	getShort
	m	()Ljava/util/Map;	h	entries
	m	(Ljava/lang/String;)I	h	getInt
	m	(Ljava/lang/String;)J	i	getLong
	m	(Ljava/lang/String;)F	j	getFloat
	m	(Ljava/lang/String;)D	k	getDouble
	m	(Ljava/lang/String;)Ljava/lang/String;	l	getString
	m	(Ljava/lang/String;)[B	m	getByteArray
	m	(Ljava/lang/String;)[I	n	getIntArray
	m	(Ljava/lang/String;)[J	o	getLongArray
	m	(Ljava/lang/String;)Lok;	p	getCompound
	m	(Ljava/lang/String;)Z	q	getBoolean
	m	(Ljava/lang/String;)V	r	remove
	m	(Ljava/lang/String;)Ljava/lang/String;	s	lambda$createReport$2
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lpf;	b	TYPE
	f	I	c	SELF_SIZE_IN_BITS
	f	I	w	MAP_ENTRY_SIZE_IN_BITS
	f	Ljava/util/Map;	x	tags
c	ok$1	net/minecraft/nbt/CompoundTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
	m	(Ljava/io/DataInput;ILot;)Lok;	a	load
	m	(Ljava/io/DataInput;Lpa;)Lpa$b;	a	parse
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILot;)Lpd;	b	load
c	ok$2	net/minecraft/nbt/CompoundTag$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$EntryResult
	f	[I	b	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
c	ol	net/minecraft/nbt/DoubleTag
	m	()B	a	getId
	m	(D)Lol;	a	valueOf
	m	(Ljava/io/DataOutput;)V	a	write
	m	(Lpa;)Lpa$b;	a	accept
	m	(Lph;)V	a	accept
	m	()Lpf;	b	getType
	m	()Lpd;	c	copy
	m	()Lol;	d	copy
	m	()J	e	getAsLong
	m	()I	f	getAsInt
	m	()S	g	getAsShort
	m	()B	h	getAsByte
	m	()D	i	getAsDouble
	m	()F	j	getAsFloat
	m	()Ljava/lang/Number;	k	getAsNumber
	f	Lol;	a	ZERO
	f	Lpf;	b	TYPE
	f	I	c	SELF_SIZE_IN_BITS
	f	D	w	data
c	ol$1	net/minecraft/nbt/DoubleTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILot;)Lol;	a	load
	m	(Ljava/io/DataInput;Lpa;)Lpa$b;	a	parse
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILot;)Lpd;	b	load
	m	()I	c	size
	m	()Z	d	isValue
c	om	net/minecraft/nbt/EndTag
	m	()B	a	getId
	m	(Ljava/io/DataOutput;)V	a	write
	m	(Lpa;)Lpa$b;	a	accept
	m	(Lph;)V	a	accept
	m	()Lpf;	b	getType
	m	()Lpd;	c	copy
	m	()Lom;	d	copy
	f	Lpf;	a	TYPE
	f	Lom;	b	INSTANCE
	f	I	c	SELF_SIZE_IN_BITS
c	om$1	net/minecraft/nbt/EndTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
	m	(Ljava/io/DataInput;I)V	a	skip
	m	(Ljava/io/DataInput;ILot;)Lom;	a	load
	m	(Ljava/io/DataInput;Lpa;)Lpa$b;	a	parse
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILot;)Lpd;	b	load
	m	()Z	d	isValue
c	on	net/minecraft/nbt/FloatTag
	m	()B	a	getId
	m	(F)Lon;	a	valueOf
	m	(Ljava/io/DataOutput;)V	a	write
	m	(Lpa;)Lpa$b;	a	accept
	m	(Lph;)V	a	accept
	m	()Lpf;	b	getType
	m	()Lpd;	c	copy
	m	()Lon;	d	copy
	m	()J	e	getAsLong
	m	()I	f	getAsInt
	m	()S	g	getAsShort
	m	()B	h	getAsByte
	m	()D	i	getAsDouble
	m	()F	j	getAsFloat
	m	()Ljava/lang/Number;	k	getAsNumber
	f	Lon;	a	ZERO
	f	Lpf;	b	TYPE
	f	I	c	SELF_SIZE_IN_BITS
	f	F	w	data
c	on$1	net/minecraft/nbt/FloatTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILot;)Lon;	a	load
	m	(Ljava/io/DataInput;Lpa;)Lpa$b;	a	parse
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILot;)Lpd;	b	load
	m	()I	c	size
	m	()Z	d	isValue
c	oo	net/minecraft/nbt/IntArrayTag
	m	()B	a	getId
	m	(I)Lop;	a	get
	m	(ILop;)Lop;	a	set
	m	(ILpd;)Z	a	setTag
	m	(Ljava/io/DataOutput;)V	a	write
	m	(Ljava/util/List;)[I	a	toArray
	m	(Lpa;)Lpa$b;	a	accept
	m	(Lph;)V	a	accept
	m	()Lpf;	b	getType
	m	(I)Lop;	b	remove
	m	(ILop;)V	b	add
	m	(ILpd;)Z	b	addTag
	m	()Lpd;	c	copy
	m	(I)Lpd;	c	remove
	m	(ILpd;)V	c	add
	m	()Loo;	d	copy
	m	(ILpd;)Lpd;	d	set
	m	()B	e	getElementType
	m	()[I	f	getAsIntArray
	f	Lpf;	a	TYPE
	f	I	b	SELF_SIZE_IN_BITS
	f	[I	c	data
c	oo$1	net/minecraft/nbt/IntArrayTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
	m	(Ljava/io/DataInput;ILot;)Loo;	a	load
	m	(Ljava/io/DataInput;Lpa;)Lpa$b;	a	parse
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILot;)Lpd;	b	load
c	op	net/minecraft/nbt/IntTag
	m	()B	a	getId
	m	(I)Lop;	a	valueOf
	m	(Ljava/io/DataOutput;)V	a	write
	m	(Lpa;)Lpa$b;	a	accept
	m	(Lph;)V	a	accept
	m	()Lpf;	b	getType
	m	()Lpd;	c	copy
	m	()Lop;	d	copy
	m	()J	e	getAsLong
	m	()I	f	getAsInt
	m	()S	g	getAsShort
	m	()B	h	getAsByte
	m	()D	i	getAsDouble
	m	()F	j	getAsFloat
	m	()Ljava/lang/Number;	k	getAsNumber
	f	Lpf;	a	TYPE
	f	I	b	SELF_SIZE_IN_BITS
	f	I	c	data
c	op$1	net/minecraft/nbt/IntTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILot;)Lop;	a	load
	m	(Ljava/io/DataInput;Lpa;)Lpa$b;	a	parse
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILot;)Lpd;	b	load
	m	()I	c	size
	m	()Z	d	isValue
c	op$a	net/minecraft/nbt/IntTag$Cache
	f	[Lop;	a	cache
	f	I	b	HIGH
	f	I	c	LOW
c	oq	net/minecraft/nbt/ListTag
	m	()B	a	getId
	m	(I)Lok;	a	getCompound
	m	(ILpd;)Z	a	setTag
	m	(Ljava/io/DataOutput;)V	a	write
	m	(Lpa;)Lpa$b;	a	accept
	m	(Lpd;)Z	a	updateType
	m	(Lph;)V	a	accept
	m	()Lpf;	b	getType
	m	(I)Loq;	b	getList
	m	(ILpd;)Z	b	addTag
	m	()Lpd;	c	copy
	m	(I)Lpd;	c	remove
	m	(ILpd;)V	c	add
	m	()Loq;	d	copy
	m	(I)S	d	getShort
	m	(ILpd;)Lpd;	d	set
	m	()B	e	getElementType
	m	(I)I	e	getInt
	m	()V	f	updateTypeAfterRemove
	m	(I)[I	f	getIntArray
	m	(I)[J	g	getLongArray
	m	(I)D	h	getDouble
	m	(I)F	i	getFloat
	m	(I)Ljava/lang/String;	j	getString
	m	(I)Lpd;	k	get
	f	Lpf;	a	TYPE
	f	I	b	SELF_SIZE_IN_BITS
	f	Ljava/util/List;	c	list
	f	B	w	type
c	oq$1	net/minecraft/nbt/ListTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
	m	(Ljava/io/DataInput;ILot;)Loq;	a	load
	m	(Ljava/io/DataInput;Lpa;)Lpa$b;	a	parse
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILot;)Lpd;	b	load
c	oq$2	net/minecraft/nbt/ListTag$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
	f	[I	b	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$EntryResult
c	or	net/minecraft/nbt/LongArrayTag
	m	()B	a	getId
	m	(I)Los;	a	get
	m	(ILos;)Los;	a	set
	m	(ILpd;)Z	a	setTag
	m	(Ljava/io/DataOutput;)V	a	write
	m	(Ljava/util/List;)[J	a	toArray
	m	(Lpa;)Lpa$b;	a	accept
	m	(Lph;)V	a	accept
	m	()Lpf;	b	getType
	m	(I)Los;	b	remove
	m	(ILos;)V	b	add
	m	(ILpd;)Z	b	addTag
	m	()Lpd;	c	copy
	m	(I)Lpd;	c	remove
	m	(ILpd;)V	c	add
	m	()Lor;	d	copy
	m	(ILpd;)Lpd;	d	set
	m	()B	e	getElementType
	m	()[J	f	getAsLongArray
	f	Lpf;	a	TYPE
	f	I	b	SELF_SIZE_IN_BITS
	f	[J	c	data
c	or$1	net/minecraft/nbt/LongArrayTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
	m	(Ljava/io/DataInput;ILot;)Lor;	a	load
	m	(Ljava/io/DataInput;Lpa;)Lpa$b;	a	parse
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILot;)Lpd;	b	load
c	os	net/minecraft/nbt/LongTag
	m	()B	a	getId
	m	(J)Los;	a	valueOf
	m	(Ljava/io/DataOutput;)V	a	write
	m	(Lpa;)Lpa$b;	a	accept
	m	(Lph;)V	a	accept
	m	()Lpf;	b	getType
	m	()Lpd;	c	copy
	m	()Los;	d	copy
	m	()J	e	getAsLong
	m	()I	f	getAsInt
	m	()S	g	getAsShort
	m	()B	h	getAsByte
	m	()D	i	getAsDouble
	m	()F	j	getAsFloat
	m	()Ljava/lang/Number;	k	getAsNumber
	f	Lpf;	a	TYPE
	f	I	b	SELF_SIZE_IN_BITS
	f	J	c	data
c	os$1	net/minecraft/nbt/LongTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILot;)Los;	a	load
	m	(Ljava/io/DataInput;Lpa;)Lpa$b;	a	parse
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILot;)Lpd;	b	load
	m	()I	c	size
	m	()Z	d	isValue
c	os$a	net/minecraft/nbt/LongTag$Cache
	f	[Los;	a	cache
	f	I	b	HIGH
	f	I	c	LOW
c	ot	net/minecraft/nbt/NbtAccounter
	m	(J)V	a	accountBits
	f	Lot;	a	UNLIMITED
	f	J	b	quota
	f	J	c	usage
c	ot$1	net/minecraft/nbt/NbtAccounter$1
	m	(J)V	a	accountBits
c	ou	net/minecraft/nbt/NbtIo
	m	(Ljava/io/DataInput;)Lok;	a	read
	m	(Ljava/io/DataInput;ILot;)Lpd;	a	readUnnamedTag
	m	(Ljava/io/DataInput;Lot;)Lok;	a	read
	m	(Ljava/io/DataInput;Lpa;)V	a	parse
	m	(Ljava/io/File;)Lok;	a	readCompressed
	m	(Ljava/io/File;Lpa;)V	a	parseCompressed
	m	(Ljava/io/InputStream;)Lok;	a	readCompressed
	m	(Ljava/io/InputStream;Lpa;)V	a	parseCompressed
	m	(Lok;Ljava/io/DataOutput;)V	a	write
	m	(Lok;Ljava/io/File;)V	a	writeCompressed
	m	(Lok;Ljava/io/OutputStream;)V	a	writeCompressed
	m	(Lpd;Ljava/io/DataOutput;)V	a	writeUnnamedTag
	m	(Ljava/io/File;)Lok;	b	read
	m	(Ljava/io/InputStream;)Ljava/io/DataInputStream;	b	createDecompressorStream
	m	(Lok;Ljava/io/File;)V	b	write
c	ou$1	net/minecraft/nbt/NbtIo$1
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
c	ov	net/minecraft/nbt/NbtOps
	m	()Lpd;	a	empty
	m	(B)Lpd;	a	createByte
	m	(BB)Loj;	a	createGenericList
	m	(BBB)Z	a	typesMatch
	m	(D)Lpd;	a	createDouble
	m	(F)Lpd;	a	createFloat
	m	(I)Lpd;	a	createInt
	m	(J)Lpd;	a	createLong
	m	(Lcom/mojang/serialization/DynamicOps;Lpd;)Ljava/lang/Object;	a	convertTo
	m	(Ljava/lang/Number;)Lpd;	a	createNumeric
	m	(Ljava/lang/String;)Lpd;	a	createString
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	lambda$remove$14
	m	(Ljava/nio/ByteBuffer;)Lpd;	a	createByteList
	m	(Ljava/util/List;Lok;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$mergeToMap$5
	m	(Ljava/util/function/BiConsumer;Lok;Ljava/lang/String;)V	a	lambda$getMapEntries$7
	m	(Ljava/util/stream/IntStream;)Lpd;	a	createIntList
	m	(Ljava/util/stream/LongStream;)Lpd;	a	createLongList
	m	(Ljava/util/stream/Stream;)Lpd;	a	createMap
	m	(Loj;Lpd;)V	a	lambda$fillMany$2
	m	(Loj;Lpd;Ljava/util/List;)V	a	fillMany
	m	(Loj;Lpd;Lpd;)V	a	fillOne
	m	(Lok;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$createMap$9
	m	(Lok;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	lambda$getMapValues$6
	m	(Lok;Ljava/util/function/BiConsumer;)V	a	lambda$getMapEntries$8
	m	(Lok;Lok;Ljava/lang/String;)V	a	lambda$remove$15
	m	(Lpd;)Lcom/mojang/serialization/DataResult;	a	getNumberValue
	m	(Lpd;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Lpd;Ljava/lang/String;)Lpd;	a	remove
	m	(Lpd;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Lpd;Lpd;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Lpd;Lpd;Lpd;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(S)Lpd;	a	createShort
	m	(Z)Lpd;	a	createBoolean
	m	(Ljava/util/stream/Stream;)Lpd;	b	createList
	m	(Loj;Lpd;)V	b	lambda$fillMany$1
	m	(Lok;Lok;Ljava/lang/String;)V	b	lambda$mergeToMap$4
	m	(Lpd;)Lcom/mojang/serialization/DataResult;	b	getStringValue
	m	(Loj;Lpd;)V	c	lambda$fillOne$0
	m	(Lok;Lok;Ljava/lang/String;)V	c	lambda$mergeToMap$3
	m	(Lpd;)Lcom/mojang/serialization/DataResult;	c	getMapValues
	m	(Lpd;)Lcom/mojang/serialization/DataResult;	d	getMapEntries
	m	(Lpd;)Lcom/mojang/serialization/DataResult;	e	getMap
	m	(Lpd;)Lcom/mojang/serialization/DataResult;	f	getStream
	m	(Lpd;)Lcom/mojang/serialization/DataResult;	g	getList
	m	(Lpd;)Lcom/mojang/serialization/DataResult;	h	getByteBuffer
	m	(Lpd;)Lcom/mojang/serialization/DataResult;	i	getIntStream
	m	(Lpd;)Lcom/mojang/serialization/DataResult;	j	getLongStream
	m	(Lpd;)Ljava/lang/Long;	k	lambda$createList$13
	m	(Lpd;)Ljava/lang/Integer;	l	lambda$createList$12
	m	(Lpd;)Ljava/lang/Byte;	m	lambda$createList$11
	m	(Lpd;)Lpd;	n	lambda$getStream$10
	f	Lov;	a	INSTANCE
c	ov$1	net/minecraft/nbt/NbtOps$1
	m	(Ljava/lang/String;)Lpd;	a	get
	m	(Lok;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	lambda$entries$0
	m	(Lpd;)Lpd;	a	get
	f	Lok;	a	val$tag
	f	Lov;	b	this$0
c	ov$a	net/minecraft/nbt/NbtOps$NbtRecordBuilder
	m	()Lok;	a	initBuilder
	m	(Ljava/lang/String;Lpd;Lok;)Lok;	a	append
	m	(Lok;Lpd;)Lcom/mojang/serialization/DataResult;	a	build
	f	Lov;	a	this$0
c	ow	net/minecraft/nbt/NbtUtils
	m	(ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder;	a	indent
	m	(Lcom/mojang/datafixers/DataFixer;Lakd;Lok;I)Lok;	a	update
	m	(Lcom/mojang/datafixers/DataFixer;Lakd;Lok;II)Lok;	a	update
	m	(Lcov;)Lok;	a	writeBlockState
	m	(Lcox;Lcpy;Ljava/lang/String;Lok;Lok;)Lcox;	a	setValueHelper
	m	(Lcpy;Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
	m	(Ldix;)Lok;	a	writeFluidState
	m	(Lgj;)Lok;	a	writeBlockPos
	m	(Ljava/lang/String;)Lok;	a	snbtToStructure
	m	(Ljava/lang/StringBuilder;Lpd;IZ)Ljava/lang/StringBuilder;	a	prettyPrint
	m	(Ljava/util/Map;Lok;)Loq;	a	lambda$unpackStructureTemplate$10
	m	(Ljava/util/UUID;)Loo;	a	createUUID
	m	(Lok;)Lcom/mojang/authlib/GameProfile;	a	readGameProfile
	m	(Lok;Lcom/mojang/authlib/GameProfile;)Lok;	a	writeGameProfile
	m	(Lok;Ljava/lang/String;)Ljava/lang/String;	a	lambda$packBlockState$11
	m	(Lok;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$unpackBlockState$12
	m	(Loq;)D	a	lambda$static$5
	m	(Loq;Lok;)V	a	lambda$packStructureTemplate$9
	m	(Loq;Loq;Loq;)V	a	lambda$packStructureTemplate$6
	m	(Lpd;)Ljava/util/UUID;	a	loadUUID
	m	(Lpd;Lpd;Z)Z	a	compareNbt
	m	(Lpd;Z)Ljava/lang/String;	a	prettyPrint
	m	(Ljava/lang/String;)Lok;	b	unpackBlockState
	m	(Lok;)Lgj;	b	readBlockPos
	m	(Loq;)D	b	lambda$static$4
	m	(Lpd;)Ljava/lang/String;	b	prettyPrint
	m	(Lok;)Lcov;	c	readBlockState
	m	(Loq;)D	c	lambda$static$3
	m	(Lpd;)Lqk;	c	toPrettyComponent
	m	(Lok;)Ljava/lang/String;	d	structureToSnbt
	m	(Loq;)I	d	lambda$static$2
	m	(Lok;)Lok;	e	packStructureTemplate
	m	(Loq;)I	e	lambda$static$1
	m	(Lok;)Lok;	f	unpackStructureTemplate
	m	(Loq;)I	f	lambda$static$0
	m	(Lok;)Ljava/lang/String;	g	packBlockState
	m	(Lok;)Loq;	h	lambda$packStructureTemplate$8
	m	(Lok;)Loq;	i	lambda$packStructureTemplate$7
	f	Ljava/lang/String;	a	SNBT_DATA_TAG
	f	Ljava/util/Comparator;	b	YXZ_LISTTAG_INT_COMPARATOR
	f	Ljava/util/Comparator;	c	YXZ_LISTTAG_DOUBLE_COMPARATOR
	f	C	d	PROPERTIES_START
	f	C	e	PROPERTIES_END
	f	Ljava/lang/String;	f	ELEMENT_SEPARATOR
	f	C	g	KEY_VALUE_SEPARATOR
	f	Lcom/google/common/base/Splitter;	h	COMMA_SPLITTER
	f	Lcom/google/common/base/Splitter;	i	COLON_SPLITTER
	f	Lorg/slf4j/Logger;	j	LOGGER
	f	I	k	INDENT
	f	I	l	NOT_FOUND
c	ox	net/minecraft/nbt/NumericTag
	m	()J	e	getAsLong
	m	()I	f	getAsInt
	m	()S	g	getAsShort
	m	()B	h	getAsByte
	m	()D	i	getAsDouble
	m	()F	j	getAsFloat
	m	()Ljava/lang/Number;	k	getAsNumber
c	oy	net/minecraft/nbt/ShortTag
	m	()B	a	getId
	m	(Ljava/io/DataOutput;)V	a	write
	m	(Lpa;)Lpa$b;	a	accept
	m	(Lph;)V	a	accept
	m	(S)Loy;	a	valueOf
	m	()Lpf;	b	getType
	m	()Lpd;	c	copy
	m	()Loy;	d	copy
	m	()J	e	getAsLong
	m	()I	f	getAsInt
	m	()S	g	getAsShort
	m	()B	h	getAsByte
	m	()D	i	getAsDouble
	m	()F	j	getAsFloat
	m	()Ljava/lang/Number;	k	getAsNumber
	f	Lpf;	a	TYPE
	f	I	b	SELF_SIZE_IN_BITS
	f	S	c	data
c	oy$1	net/minecraft/nbt/ShortTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILot;)Loy;	a	load
	m	(Ljava/io/DataInput;Lpa;)Lpa$b;	a	parse
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILot;)Lpd;	b	load
	m	()I	c	size
	m	()Z	d	isValue
c	oy$a	net/minecraft/nbt/ShortTag$Cache
	f	[Loy;	a	cache
	f	I	b	HIGH
	f	I	c	LOW
c	oz	net/minecraft/nbt/SnbtPrinterTagVisitor
	m	()Ljava/lang/String;	a	pathString
	m	(Ljava/lang/String;)Ljava/lang/String;	a	handleEscapePretty
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	(Loh;)V	a	visitByteArray
	m	(Loi;)V	a	visitByte
	m	(Lok;)V	a	visitCompound
	m	(Lol;)V	a	visitDouble
	m	(Lom;)V	a	visitEnd
	m	(Lon;)V	a	visitFloat
	m	(Loo;)V	a	visitIntArray
	m	(Lop;)V	a	visitInt
	m	(Loq;)V	a	visitList
	m	(Lor;)V	a	visitLongArray
	m	(Los;)V	a	visitLong
	m	(Loy;)V	a	visitShort
	m	(Lpb;)V	a	visitString
	m	(Lpd;)Ljava/lang/String;	a	visit
	m	()V	b	popPath
	m	(Ljava/lang/String;)V	b	pushPath
	m	(Lok;)Ljava/util/List;	b	getKeys
	f	Ljava/util/Map;	a	KEY_ORDER
	f	Ljava/util/Set;	b	NO_INDENTATION
	f	Ljava/util/regex/Pattern;	c	SIMPLE_VALUE
	f	Ljava/lang/String;	d	NAME_VALUE_SEPARATOR
	f	Ljava/lang/String;	e	ELEMENT_SEPARATOR
	f	Ljava/lang/String;	f	LIST_OPEN
	f	Ljava/lang/String;	g	LIST_CLOSE
	f	Ljava/lang/String;	h	LIST_TYPE_SEPARATOR
	f	Ljava/lang/String;	i	ELEMENT_SPACING
	f	Ljava/lang/String;	j	STRUCT_OPEN
	f	Ljava/lang/String;	k	STRUCT_CLOSE
	f	Ljava/lang/String;	l	NEWLINE
	f	Ljava/lang/String;	m	indentation
	f	I	n	depth
	f	Ljava/util/List;	o	path
	f	Ljava/lang/String;	p	result
c	pa	net/minecraft/nbt/StreamTagVisitor
	m	()Lpa$b;	a	visitEnd
	m	(B)Lpa$b;	a	visit
	m	(D)Lpa$b;	a	visit
	m	(F)Lpa$b;	a	visit
	m	(I)Lpa$b;	a	visit
	m	(J)Lpa$b;	a	visit
	m	(Ljava/lang/String;)Lpa$b;	a	visit
	m	(Lpf;)Lpa$a;	a	visitEntry
	m	(Lpf;I)Lpa$b;	a	visitList
	m	(Lpf;Ljava/lang/String;)Lpa$a;	a	visitEntry
	m	(S)Lpa$b;	a	visit
	m	([B)Lpa$b;	a	visit
	m	([I)Lpa$b;	a	visit
	m	([J)Lpa$b;	a	visit
	m	()Lpa$b;	b	visitContainerEnd
	m	(Lpf;)Lpa$b;	b	visitRootEntry
	m	(Lpf;I)Lpa$a;	b	visitElement
c	pa$a	net/minecraft/nbt/StreamTagVisitor$EntryResult
	m	()[Lpa$a;	a	$values
	f	Lpa$a;	a	ENTER
	f	Lpa$a;	b	SKIP
	f	Lpa$a;	c	BREAK
	f	Lpa$a;	d	HALT
	f	[Lpa$a;	e	$VALUES
c	pa$b	net/minecraft/nbt/StreamTagVisitor$ValueResult
	m	()[Lpa$b;	a	$values
	f	Lpa$b;	a	CONTINUE
	f	Lpa$b;	b	BREAK
	f	Lpa$b;	c	HALT
	f	[Lpa$b;	d	$VALUES
c	pb	net/minecraft/nbt/StringTag
	m	()B	a	getId
	m	(Ljava/io/DataInput;)V	a	skipString
	m	(Ljava/io/DataOutput;)V	a	write
	m	(Ljava/lang/String;)Lpb;	a	valueOf
	m	(Lpa;)Lpa$b;	a	accept
	m	(Lph;)V	a	accept
	m	()Lpf;	b	getType
	m	(Ljava/lang/String;)Ljava/lang/String;	b	quoteAndEscape
	m	()Lpd;	c	copy
	m	()Lpb;	d	copy
	m	()Ljava/lang/String;	e_	getAsString
	f	Ljava/lang/String;	A	data
	f	Lpf;	a	TYPE
	f	I	b	SELF_SIZE_IN_BITS
	f	Lpb;	c	EMPTY
	f	C	w	DOUBLE_QUOTE
	f	C	x	SINGLE_QUOTE
	f	C	y	ESCAPE
	f	C	z	NOT_SET
c	pb$1	net/minecraft/nbt/StringTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
	m	(Ljava/io/DataInput;ILot;)Lpb;	a	load
	m	(Ljava/io/DataInput;Lpa;)Lpa$b;	a	parse
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILot;)Lpd;	b	load
	m	()Z	d	isValue
c	pc	net/minecraft/nbt/StringTagVisitor
	m	(Ljava/lang/String;)Ljava/lang/String;	a	handleEscape
	m	(Loh;)V	a	visitByteArray
	m	(Loi;)V	a	visitByte
	m	(Lok;)V	a	visitCompound
	m	(Lol;)V	a	visitDouble
	m	(Lom;)V	a	visitEnd
	m	(Lon;)V	a	visitFloat
	m	(Loo;)V	a	visitIntArray
	m	(Lop;)V	a	visitInt
	m	(Loq;)V	a	visitList
	m	(Lor;)V	a	visitLongArray
	m	(Los;)V	a	visitLong
	m	(Loy;)V	a	visitShort
	m	(Lpb;)V	a	visitString
	m	(Lpd;)Ljava/lang/String;	a	visit
	f	Ljava/util/regex/Pattern;	a	SIMPLE_VALUE
	f	Ljava/lang/StringBuilder;	b	builder
c	pd	net/minecraft/nbt/Tag
	m	()B	a	getId
	m	(Ljava/io/DataOutput;)V	a	write
	m	(Lpa;)Lpa$b;	a	accept
	m	(Lph;)V	a	accept
	m	()Lpf;	b	getType
	m	(Lpa;)V	b	acceptAsRoot
	m	()Lpd;	c	copy
	m	()Ljava/lang/String;	e_	getAsString
	f	I	d	OBJECT_HEADER
	f	I	e	ARRAY_HEADER
	f	I	f	OBJECT_REFERENCE
	f	I	g	STRING_SIZE
	f	B	h	TAG_END
	f	B	i	TAG_BYTE
	f	B	j	TAG_SHORT
	f	B	k	TAG_INT
	f	B	l	TAG_LONG
	f	B	m	TAG_FLOAT
	f	B	n	TAG_DOUBLE
	f	B	o	TAG_BYTE_ARRAY
	f	B	p	TAG_STRING
	f	B	q	TAG_LIST
	f	B	r	TAG_COMPOUND
	f	B	s	TAG_INT_ARRAY
	f	B	t	TAG_LONG_ARRAY
	f	B	u	TAG_ANY_NUMERIC
	f	I	v	MAX_DEPTH
c	pe	net/minecraft/nbt/TagParser
	m	()Lok;	a	readSingleStruct
	m	(C)V	a	expect
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/String;)Lok;	a	parseTag
	m	(Lpf;Lpf;)Ljava/util/List;	a	readArray
	m	()Ljava/lang/String;	b	readKey
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	(Ljava/lang/String;)Lpd;	b	type
	m	()Lpd;	c	readTypedValue
	m	()Lpd;	d	readValue
	m	()Lpd;	e	readList
	m	()Lok;	f	readStruct
	m	()Lpd;	g	readListTag
	m	()Lpd;	h	readArrayTag
	m	()Z	i	hasElementSeparator
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TRAILING_DATA
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_EXPECTED_KEY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_EXPECTED_VALUE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_INSERT_MIXED_LIST
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	ERROR_INSERT_MIXED_ARRAY
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_INVALID_ARRAY
	f	C	g	ELEMENT_SEPARATOR
	f	C	h	NAME_VALUE_SEPARATOR
	f	C	i	LIST_OPEN
	f	C	j	LIST_CLOSE
	f	C	k	STRUCT_CLOSE
	f	C	l	STRUCT_OPEN
	f	Ljava/util/regex/Pattern;	m	DOUBLE_PATTERN_NOSUFFIX
	f	Ljava/util/regex/Pattern;	n	DOUBLE_PATTERN
	f	Ljava/util/regex/Pattern;	o	FLOAT_PATTERN
	f	Ljava/util/regex/Pattern;	p	BYTE_PATTERN
	f	Ljava/util/regex/Pattern;	q	LONG_PATTERN
	f	Ljava/util/regex/Pattern;	r	SHORT_PATTERN
	f	Ljava/util/regex/Pattern;	s	INT_PATTERN
	f	Lcom/mojang/brigadier/StringReader;	t	reader
c	pf	net/minecraft/nbt/TagType
	m	()Ljava/lang/String;	a	getName
	m	(I)Lpf;	a	createInvalid
	m	(Ljava/io/DataInput;)V	a	skip
	m	(Ljava/io/DataInput;I)V	a	skip
	m	(Ljava/io/DataInput;Lpa;)Lpa$b;	a	parse
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILot;)Lpd;	b	load
	m	(Ljava/io/DataInput;Lpa;)V	b	parseRoot
	m	()Z	d	isValue
c	pf$1	net/minecraft/nbt/TagType$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
	m	(Ljava/io/DataInput;I)V	a	skip
	m	(Ljava/io/DataInput;ILot;)Lom;	a	load
	m	(Ljava/io/DataInput;Lpa;)Lpa$b;	a	parse
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILot;)Lpd;	b	load
	m	()Ljava/io/IOException;	c	createException
	f	I	a	val$id
c	pf$2	net/minecraft/nbt/TagType$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
c	pf$a	net/minecraft/nbt/TagType$StaticSize
	m	(Ljava/io/DataInput;)V	a	skip
	m	(Ljava/io/DataInput;I)V	a	skip
	m	()I	c	size
c	pf$b	net/minecraft/nbt/TagType$VariableSize
	m	(Ljava/io/DataInput;I)V	a	skip
c	pg	net/minecraft/nbt/TagTypes
	m	(I)Lpf;	a	getType
	f	[Lpf;	a	TYPES
c	ph	net/minecraft/nbt/TagVisitor
	m	(Loh;)V	a	visitByteArray
	m	(Loi;)V	a	visitByte
	m	(Lok;)V	a	visitCompound
	m	(Lol;)V	a	visitDouble
	m	(Lom;)V	a	visitEnd
	m	(Lon;)V	a	visitFloat
	m	(Loo;)V	a	visitIntArray
	m	(Lop;)V	a	visitInt
	m	(Loq;)V	a	visitList
	m	(Lor;)V	a	visitLongArray
	m	(Los;)V	a	visitLong
	m	(Loy;)V	a	visitShort
	m	(Lpb;)V	a	visitString
c	pi	net/minecraft/nbt/TextComponentTagVisitor
	m	(Ljava/lang/String;)Lqk;	a	handleEscapePretty
	m	(Loh;)V	a	visitByteArray
	m	(Loi;)V	a	visitByte
	m	(Lok;)V	a	visitCompound
	m	(Lol;)V	a	visitDouble
	m	(Lom;)V	a	visitEnd
	m	(Lon;)V	a	visitFloat
	m	(Loo;)V	a	visitIntArray
	m	(Lop;)V	a	visitInt
	m	(Loq;)V	a	visitList
	m	(Lor;)V	a	visitLongArray
	m	(Los;)V	a	visitLong
	m	(Loy;)V	a	visitShort
	m	(Lpb;)V	a	visitString
	m	(Lpd;)Lqk;	a	visit
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	INLINE_LIST_THRESHOLD
	f	Lit/unimi/dsi/fastutil/bytes/ByteCollection;	c	INLINE_ELEMENT_TYPES
	f	Lp;	d	SYNTAX_HIGHLIGHTING_KEY
	f	Lp;	e	SYNTAX_HIGHLIGHTING_STRING
	f	Lp;	f	SYNTAX_HIGHLIGHTING_NUMBER
	f	Lp;	g	SYNTAX_HIGHLIGHTING_NUMBER_TYPE
	f	Ljava/util/regex/Pattern;	h	SIMPLE_VALUE
	f	Ljava/lang/String;	i	NAME_VALUE_SEPARATOR
	f	Ljava/lang/String;	j	ELEMENT_SEPARATOR
	f	Ljava/lang/String;	k	LIST_OPEN
	f	Ljava/lang/String;	l	LIST_CLOSE
	f	Ljava/lang/String;	m	LIST_TYPE_SEPARATOR
	f	Ljava/lang/String;	n	ELEMENT_SPACING
	f	Ljava/lang/String;	o	STRUCT_OPEN
	f	Ljava/lang/String;	p	STRUCT_CLOSE
	f	Ljava/lang/String;	q	NEWLINE
	f	Ljava/lang/String;	r	indentation
	f	I	s	depth
	f	Lqk;	t	result
c	pj	net/minecraft/nbt/package-info
c	pk	net/minecraft/nbt/visitors/CollectFields
	m	(Lpf;)Lpa$a;	a	visitEntry
	m	(Lpf;Ljava/lang/String;)Lpa$a;	a	visitEntry
	m	()Lpa$b;	b	visitContainerEnd
	m	(Lpf;)Lpa$b;	b	visitRootEntry
	m	()I	c	getMissingFieldCount
	f	I	a	fieldsToGetCount
	f	Ljava/util/Set;	b	wantedTypes
	f	Ljava/util/Deque;	c	stack
c	pl	net/minecraft/nbt/visitors/CollectToTag
	m	()Lpa$b;	a	visitEnd
	m	(B)Lpa$b;	a	visit
	m	(D)Lpa$b;	a	visit
	m	(F)Lpa$b;	a	visit
	m	(I)Lpa$b;	a	visit
	m	(J)Lpa$b;	a	visit
	m	(Ljava/lang/String;)Lpa$b;	a	visit
	m	(Lok;Lpd;)V	a	lambda$visitRootEntry$1
	m	(Lpd;)V	a	appendEntry
	m	(Lpf;)Lpa$a;	a	visitEntry
	m	(Lpf;I)Lpa$b;	a	visitList
	m	(Lpf;Ljava/lang/String;)Lpa$a;	a	visitEntry
	m	(S)Lpa$b;	a	visit
	m	([B)Lpa$b;	a	visit
	m	([I)Lpa$b;	a	visit
	m	([J)Lpa$b;	a	visit
	m	()Lpa$b;	b	visitContainerEnd
	m	(Lok;Lpd;)V	b	lambda$enterContainerIfNeeded$0
	m	(Lpd;)V	b	lambda$visitRootEntry$2
	m	(Lpf;)Lpa$b;	b	visitRootEntry
	m	(Lpf;I)Lpa$a;	b	visitElement
	m	(Lpf;)V	c	enterContainerIfNeeded
	m	()Lpd;	d	getResult
	m	()I	e	depth
	f	Ljava/lang/String;	a	lastId
	f	Lpd;	b	rootTag
	f	Ljava/util/Deque;	c	consumerStack
c	pm	net/minecraft/nbt/visitors/FieldSelector
	m	()Ljava/util/List;	a	path
	m	()Lpf;	b	type
	m	()Ljava/lang/String;	c	name
	f	Ljava/util/List;	a	path
	f	Lpf;	b	type
	f	Ljava/lang/String;	c	name
c	pn	net/minecraft/nbt/visitors/FieldTree
	m	()Lpn;	a	createRoot
	m	(Ljava/lang/String;)Lpn;	a	lambda$addEntry$0
	m	(Lpf;Ljava/lang/String;)Z	a	isSelected
	m	(Lpm;)V	a	addEntry
	m	()I	b	depth
	m	()Ljava/util/Map;	c	selectedFields
	m	()Ljava/util/Map;	d	fieldsToRecurse
	f	I	a	depth
	f	Ljava/util/Map;	b	selectedFields
	f	Ljava/util/Map;	c	fieldsToRecurse
c	po	net/minecraft/nbt/visitors/SkipAll
	m	()Lpa$b;	a	visitEnd
	m	(B)Lpa$b;	a	visit
	m	(D)Lpa$b;	a	visit
	m	(F)Lpa$b;	a	visit
	m	(I)Lpa$b;	a	visit
	m	(J)Lpa$b;	a	visit
	m	(Ljava/lang/String;)Lpa$b;	a	visit
	m	(Lpf;)Lpa$a;	a	visitEntry
	m	(Lpf;I)Lpa$b;	a	visitList
	m	(Lpf;Ljava/lang/String;)Lpa$a;	a	visitEntry
	m	(S)Lpa$b;	a	visit
	m	([B)Lpa$b;	a	visit
	m	([I)Lpa$b;	a	visit
	m	([J)Lpa$b;	a	visit
	m	()Lpa$b;	b	visitContainerEnd
	m	(Lpf;)Lpa$b;	b	visitRootEntry
	m	(Lpf;I)Lpa$a;	b	visitElement
	f	Lpo;	a	INSTANCE
c	po$1	net/minecraft/nbt/visitors/SkipAll$1
c	pp	net/minecraft/nbt/visitors/SkipFields
	m	(Lpf;Ljava/lang/String;)Lpa$a;	a	visitEntry
	m	()Lpa$b;	b	visitContainerEnd
	f	Ljava/util/Deque;	a	stack
c	pq	net/minecraft/nbt/visitors/package-info
c	pr	net/minecraft/network/CipherBase
	m	(Lio/netty/buffer/ByteBuf;)[B	a	bufToByte
	m	(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encipher
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;	a	decipher
	f	Ljavax/crypto/Cipher;	a	cipher
	f	[B	b	heapIn
	f	[B	c	heapOut
c	ps	net/minecraft/network/CipherDecoder
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V	a	decode
	f	Lpr;	a	cipher
c	pt	net/minecraft/network/CipherEncoder
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	Lpr;	a	cipher
c	pu	net/minecraft/network/CompressionDecoder
	m	(IZ)V	a	setThreshold
	f	I	a	MAXIMUM_COMPRESSED_LENGTH
	f	I	b	MAXIMUM_UNCOMPRESSED_LENGTH
	f	Ljava/util/zip/Inflater;	c	inflater
	f	I	d	threshold
	f	Z	e	validateDecompressed
c	pv	net/minecraft/network/CompressionEncoder
	m	()I	a	getThreshold
	m	(I)V	a	setThreshold
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	[B	a	encodeBuf
	f	Ljava/util/zip/Deflater;	b	deflater
	f	I	c	threshold
c	pw	net/minecraft/network/Connection
	m	()V	a	tick
	m	(IZ)V	a	setupCompression
	m	(Lio/netty/channel/ChannelHandlerContext;Lrc;)V	a	channelRead0
	m	(Ljava/net/InetSocketAddress;Z)Lpw;	a	connectToServer
	m	(Ljava/net/SocketAddress;)Lpw;	a	connectToLocalServer
	m	(Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V	a	setEncryptionKey
	m	(Lorg/slf4j/Marker;)V	a	lambda$static$2
	m	(Lpx;)V	a	setProtocol
	m	(Lqb;)V	a	setListener
	m	(Lqk;)V	a	disconnect
	m	(Lqk;Lio/netty/util/concurrent/Future;)V	a	lambda$exceptionCaught$6
	m	(Lrc;)V	a	send
	m	(Lrc;Lio/netty/util/concurrent/GenericFutureListener;)V	a	send
	m	(Lrc;Lio/netty/util/concurrent/GenericFutureListener;Lpx;Lpx;)V	a	doSendPacket
	m	(Lrc;Lqb;)V	a	genericsFtw
	m	()V	b	tickSecond
	m	(Lorg/slf4j/Marker;)V	b	lambda$static$1
	m	(Lrc;Lio/netty/util/concurrent/GenericFutureListener;)V	b	sendPacket
	m	(Lrc;Lio/netty/util/concurrent/GenericFutureListener;Lpx;Lpx;)V	b	lambda$sendPacket$7
	m	()Ljava/net/SocketAddress;	c	getRemoteAddress
	m	(Lorg/slf4j/Marker;)V	c	lambda$static$0
	m	()Z	d	isMemoryConnection
	m	()Lrd;	e	getReceiving
	m	()Lrd;	f	getSending
	m	()Z	g	isEncrypted
	m	()Z	h	isConnected
	m	()Z	i	isConnecting
	m	()Lqb;	j	getPacketListener
	m	()Lqk;	k	getDisconnectedReason
	m	()V	l	setReadOnly
	m	()V	m	handleDisconnection
	m	()F	n	getAverageReceivedPackets
	m	()F	o	getAverageSentPackets
	m	()Lpx;	p	getCurrentProtocol
	m	()V	q	flushQueue
	m	()Lio/netty/channel/DefaultEventLoopGroup;	r	lambda$static$5
	m	()Lio/netty/channel/epoll/EpollEventLoopGroup;	s	lambda$static$4
	m	()Lio/netty/channel/nio/NioEventLoopGroup;	t	lambda$static$3
	f	Lorg/slf4j/Marker;	a	ROOT_MARKER
	f	Lorg/slf4j/Marker;	b	PACKET_MARKER
	f	Lorg/slf4j/Marker;	c	PACKET_RECEIVED_MARKER
	f	Lorg/slf4j/Marker;	d	PACKET_SENT_MARKER
	f	Lio/netty/util/AttributeKey;	e	ATTRIBUTE_PROTOCOL
	f	Lajg;	f	NETWORK_WORKER_GROUP
	f	Lajg;	g	NETWORK_EPOLL_WORKER_GROUP
	f	Lajg;	h	LOCAL_WORKER_GROUP
	f	F	i	AVERAGE_PACKETS_SMOOTHING
	f	Lorg/slf4j/Logger;	j	LOGGER
	f	Lrd;	k	receiving
	f	Ljava/util/Queue;	l	queue
	f	Lio/netty/channel/Channel;	m	channel
	f	Ljava/net/SocketAddress;	n	address
	f	Lqb;	o	packetListener
	f	Lqk;	p	disconnectedReason
	f	Z	q	encrypted
	f	Z	r	disconnectionHandled
	f	I	s	receivedPackets
	f	I	t	sentPackets
	f	F	u	averageReceivedPackets
	f	F	v	averageSentPackets
	f	I	w	tickCount
	f	Z	x	handlingFault
c	pw$1	net/minecraft/network/Connection$1
	f	Lpw;	a	val$connection
c	pw$2	net/minecraft/network/Connection$2
	f	Lpw;	a	val$connection
c	pw$a	net/minecraft/network/Connection$PacketHolder
	f	Lrc;	a	packet
	f	Lio/netty/util/concurrent/GenericFutureListener;	b	listener
c	px	net/minecraft/network/ConnectionProtocol
	m	()I	a	getId
	m	(I)Lpx;	a	getById
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Ljava/lang/Class;Ljava/lang/Integer;)V	a	lambda$getPacketsByIds$0
	m	(Lpx;Ljava/lang/Class;)V	a	lambda$static$1
	m	(Lpx;Lrd;Lpx$a;)V	a	lambda$static$2
	m	(Lrc;)Lpx;	a	getProtocolForPacket
	m	(Lrd;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	getPacketsByIds
	m	(Lrd;ILpy;)Lrc;	a	createPacket
	m	(Lrd;Lrc;)Ljava/lang/Integer;	a	getPacketId
	m	()Lpx$b;	b	protocol
	m	()[Lpx;	c	$values
	f	Lpx;	a	HANDSHAKING
	f	Lpx;	b	PLAY
	f	Lpx;	c	STATUS
	f	Lpx;	d	LOGIN
	f	I	e	MIN_PROTOCOL_ID
	f	I	f	MAX_PROTOCOL_ID
	f	[Lpx;	g	LOOKUP
	f	Ljava/util/Map;	h	PROTOCOL_BY_PACKET
	f	I	i	id
	f	Ljava/util/Map;	j	flows
	f	[Lpx;	k	$VALUES
c	px$a	net/minecraft/network/ConnectionProtocol$PacketSet
	m	()Ljava/lang/Iterable;	a	getAllPackets
	m	(ILpy;)Lrc;	a	createPacket
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$new$0
	m	(Ljava/lang/Class;)Ljava/lang/Integer;	a	getId
	m	(Ljava/lang/Class;Ljava/util/function/Function;)Lpx$a;	a	addPacket
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	classToId
	f	Ljava/util/List;	c	idToDeserializer
c	px$b	net/minecraft/network/ConnectionProtocol$ProtocolBuilder
	m	(Lrd;Lpx$a;)Lpx$b;	a	addFlow
	f	Ljava/util/Map;	a	flows
c	py	net/minecraft/network/FriendlyByteBuf
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	readIntIdList
	m	(I)I	a	getVarIntSize
	m	(ILjava/util/function/IntFunction;I)Ljava/lang/Object;	a	lambda$limitValue$2
	m	(J)I	a	getVarLongSize
	m	(Lbuw;)Lpy;	a	writeItem
	m	(Lcac;)Lpy;	a	writeChunkPos
	m	(Lcom/mojang/serialization/Codec;)Ljava/lang/Object;	a	readWithCodec
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V	a	writeWithCodec
	m	(Ldpk;)V	a	writeBlockHitResult
	m	(Lgj;)Lpy;	a	writeBlockPos
	m	(Lhf;)Lpy;	a	writeSectionPos
	m	(Lit/unimi/dsi/fastutil/ints/IntList;)V	a	writeIntIdList
	m	(Ljava/lang/Class;)Ljava/lang/Enum;	a	readEnum
	m	(Ljava/lang/Enum;)Lpy;	a	writeEnum
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$writeWithCodec$1
	m	(Ljava/lang/String;)Lpy;	a	writeUtf
	m	(Ljava/lang/String;I)Lpy;	a	writeUtf
	m	(Ljava/util/BitSet;)V	a	writeBitSet
	m	(Ljava/util/Collection;Ljava/util/function/BiConsumer;)V	a	writeCollection
	m	(Ljava/util/Date;)Lpy;	a	writeDate
	m	(Ljava/util/Map;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)V	a	writeMap
	m	(Ljava/util/Optional;Ljava/util/function/BiConsumer;)V	a	writeOptional
	m	(Ljava/util/UUID;)Lpy;	a	writeUUID
	m	(Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V	a	lambda$writeMap$3
	m	(Ljava/util/function/Consumer;)V	a	readWithCount
	m	(Ljava/util/function/Function;)Ljava/util/List;	a	readList
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Map;	a	readMap
	m	(Ljava/util/function/IntFunction;I)Ljava/util/function/IntFunction;	a	limitValue
	m	(Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/Collection;	a	readCollection
	m	(Ljava/util/function/IntFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Map;	a	readMap
	m	(Lok;)Lpy;	a	writeNbt
	m	(Lok;Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$readWithCodec$0
	m	(Lot;)Lok;	a	readNbt
	m	(Lqk;)Lpy;	a	writeComponent
	m	(Lyt;)Lpy;	a	writeResourceLocation
	m	([B)Lpy;	a	writeByteArray
	m	([I)Lpy;	a	writeVarIntArray
	m	([J)Lpy;	a	writeLongArray
	m	([JI)[J	a	readLongArray
	m	()[B	b	readByteArray
	m	(I)[B	b	readByteArray
	m	(J)Lpy;	b	writeVarLong
	m	(Ljava/util/function/Function;)Ljava/util/Optional;	b	readOptional
	m	([J)[J	b	readLongArray
	m	()[I	c	readVarIntArray
	m	(I)[I	c	readVarIntArray
	m	()[J	d	readLongArray
	m	(I)Lpy;	d	writeVarInt
	m	()[B	e	accessByteBufWithCorrectSize
	m	(I)Ljava/lang/String;	e	readUtf
	m	()Lgj;	f	readBlockPos
	m	()Lcac;	g	readChunkPos
	m	()Lhf;	h	readSectionPos
	m	()Lqk;	i	readComponent
	m	()I	j	readVarInt
	m	()J	k	readVarLong
	m	()Ljava/util/UUID;	l	readUUID
	m	()Lok;	m	readNbt
	m	()Lok;	n	readAnySizeNbt
	m	()Lbuw;	o	readItem
	m	()Ljava/lang/String;	p	readUtf
	m	()Lyt;	q	readResourceLocation
	m	()Ljava/util/Date;	r	readDate
	m	()Ldpk;	s	readBlockHitResult
	m	()Ljava/util/BitSet;	t	readBitSet
	f	S	a	MAX_STRING_LENGTH
	f	I	b	MAX_COMPONENT_STRING_LENGTH
	f	I	c	MAX_VARINT_SIZE
	f	I	d	MAX_VARLONG_SIZE
	f	I	e	DEFAULT_NBT_QUOTA
	f	Lio/netty/buffer/ByteBuf;	f	source
c	pz	net/minecraft/network/PacketDecoder
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lrd;	b	flow
c	qa	net/minecraft/network/PacketEncoder
	m	(Lio/netty/channel/ChannelHandlerContext;Lrc;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lrd;	b	flow
c	qb	net/minecraft/network/PacketListener
	m	()Lpw;	a	getConnection
	m	(Lqk;)V	a	onDisconnect
	m	()Z	b	shouldPropagateHandlingExceptions
c	qc	net/minecraft/network/RateKickingConnection
	m	(Lio/netty/util/concurrent/Future;)V	a	lambda$tickSecond$0
	m	()V	b	tickSecond
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	Lqk;	j	EXCEED_REASON
	f	I	k	rateLimitPacketsPerSecond
c	qd	net/minecraft/network/SkipPacketException
c	qe	net/minecraft/network/Varint21FrameDecoder
c	qf	net/minecraft/network/Varint21LengthFieldPrepender
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	I	a	MAX_BYTES
c	qg	net/minecraft/network/chat/BaseComponent
	m	()Ljava/lang/String;	a	getContents
	m	(Lqk;)Lqq;	a	append
	m	(Lqu;)Lqq;	a	setStyle
	m	()Ljava/util/List;	b	getSiblings
	m	()Lqu;	c	getStyle
	m	()Lqg;	d	plainCopy
	m	()Lqq;	e	copy
	m	()Laiz;	f	getVisualOrderText
	m	()Lqq;	g	plainCopy
	f	Ljava/util/List;	a	siblings
	f	Laiz;	d	visualOrderText
	f	Lof;	e	decomposedWith
	f	Lqu;	f	style
c	qh	net/minecraft/network/chat/ChatType
	m	()B	a	getIndex
	m	(B)Lqh;	a	getForIndex
	m	()Z	b	shouldInterrupt
	m	()[Lqh;	c	$values
	f	Lqh;	a	CHAT
	f	Lqh;	b	SYSTEM
	f	Lqh;	c	GAME_INFO
	f	B	d	index
	f	Z	e	interrupt
	f	[Lqh;	f	$VALUES
c	qi	net/minecraft/network/chat/ClickEvent
	m	()Lqi$a;	a	getAction
	m	()Ljava/lang/String;	b	getValue
	f	Lqi$a;	a	action
	f	Ljava/lang/String;	b	value
c	qi$a	net/minecraft/network/chat/ClickEvent$Action
	m	()Z	a	isAllowedFromServer
	m	(Ljava/lang/String;)Lqi$a;	a	getByName
	m	(Lqi$a;)Lqi$a;	a	lambda$static$0
	m	()Ljava/lang/String;	b	getName
	m	()[Lqi$a;	c	$values
	f	Lqi$a;	a	OPEN_URL
	f	Lqi$a;	b	OPEN_FILE
	f	Lqi$a;	c	RUN_COMMAND
	f	Lqi$a;	d	SUGGEST_COMMAND
	f	Lqi$a;	e	CHANGE_PAGE
	f	Lqi$a;	f	COPY_TO_CLIPBOARD
	f	Ljava/util/Map;	g	LOOKUP
	f	Z	h	allowFromServer
	f	Ljava/lang/String;	i	name
	f	[Lqi$a;	j	$VALUES
c	qj	net/minecraft/network/chat/CommonComponents
	m	(Ljava/util/Collection;)Lqk;	a	joinLines
	m	(Lqk;Lqk;)Lqq;	a	optionNameValue
	m	(Lqk;Z)Lqq;	a	optionStatus
	m	(Z)Lqk;	a	optionStatus
	m	([Lqk;)Lqk;	a	joinLines
	m	(Lqk;Lqk;)Lqq;	b	joinForNarration
	f	Lqk;	a	OPTION_ON
	f	Lqk;	b	OPTION_OFF
	f	Lqk;	c	GUI_DONE
	f	Lqk;	d	GUI_CANCEL
	f	Lqk;	e	GUI_YES
	f	Lqk;	f	GUI_NO
	f	Lqk;	g	GUI_PROCEED
	f	Lqk;	h	GUI_BACK
	f	Lqk;	i	CONNECT_FAILED
	f	Lqk;	j	NEW_LINE
	f	Lqk;	k	NARRATION_SEPARATOR
c	qk	net/minecraft/network/chat/Component
	m	()Ljava/lang/String;	a	getContents
	m	(I)Ljava/lang/String;	a	getString
	m	(ILjava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getString$0
	m	(Ljava/lang/String;)Lqk;	a	nullToEmpty
	m	(Ljava/util/List;Lqu;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$toFlatList$1
	m	(Lqn$a;)Ljava/util/Optional;	a	visit
	m	(Lqn$b;Lqu;)Ljava/util/Optional;	a	visit
	m	()Ljava/util/List;	b	getSiblings
	m	(Lqn$a;)Ljava/util/Optional;	b	visitSelf
	m	(Lqn$b;Lqu;)Ljava/util/Optional;	b	visitSelf
	m	(Lqu;)Ljava/util/List;	b	toFlatList
	m	()Lqu;	c	getStyle
	m	()Lqq;	e	copy
	m	()Laiz;	f	getVisualOrderText
	m	()Lqq;	g	plainCopy
c	qk$a	net/minecraft/network/chat/Component$Serializer
	m	()Ljava/lang/reflect/Field;	a	lambda$static$2
	m	(Lcom/google/gson/JsonElement;)Lqq;	a	fromJson
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lqq;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;Lqk;)V	a	lambda$serializeSeparator$3
	m	(Lcom/google/gson/JsonSerializationContext;Lcom/google/gson/JsonObject;Ljava/util/Optional;)V	a	serializeSeparator
	m	(Lcom/google/gson/stream/JsonReader;)I	a	getPos
	m	(Lcom/mojang/brigadier/StringReader;)Lqq;	a	fromJson
	m	(Ljava/lang/String;)Lqq;	a	fromJson
	m	(Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Optional;	a	parseSeparator
	m	(Lqk;)Ljava/lang/String;	a	toJson
	m	(Lqk;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lqu;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	serializeStyle
	m	()Ljava/lang/reflect/Field;	b	lambda$static$1
	m	(Ljava/lang/String;)Lqq;	b	fromJsonLenient
	m	(Lqk;)Lcom/google/gson/JsonElement;	b	toJsonTree
	m	()Lcom/google/gson/Gson;	c	lambda$static$0
	f	Lcom/google/gson/Gson;	a	GSON
	f	Ljava/lang/reflect/Field;	b	JSON_READER_POS
	f	Ljava/lang/reflect/Field;	c	JSON_READER_LINESTART
c	ql	net/minecraft/network/chat/ComponentUtils
	m	(Lcom/mojang/authlib/GameProfile;)Lqk;	a	getDisplayName
	m	(Lcom/mojang/brigadier/Message;)Lqk;	a	fromMessage
	m	(Ldm;Ljava/util/Optional;Laxk;I)Ljava/util/Optional;	a	updateForEntity
	m	(Ldm;Lqk;Laxk;I)Lqq;	a	updateForEntity
	m	(Ldm;Lqu;Laxk;I)Lqu;	a	resolveStyle
	m	(Ljava/lang/String;)Lqk;	a	lambda$formatList$0
	m	(Ljava/util/Collection;)Lqk;	a	formatList
	m	(Ljava/util/Collection;Ljava/util/Optional;Ljava/util/function/Function;)Lqq;	a	formatList
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Lqk;	a	formatAndSortList
	m	(Ljava/util/Collection;Lqk;)Lqk;	a	formatList
	m	(Ljava/util/Collection;Lqk;Ljava/util/function/Function;)Lqq;	a	formatList
	m	(Lqk;)Lqq;	a	wrapInSquareBrackets
	m	(Lqq;Lqu;)Lqq;	a	mergeStyles
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Lqk;	b	formatList
	f	Ljava/lang/String;	a	DEFAULT_SEPARATOR_TEXT
	f	Lqk;	b	DEFAULT_SEPARATOR
	f	Lqk;	c	DEFAULT_NO_STYLE_SEPARATOR
c	qm	net/minecraft/network/chat/ContextAwareComponent
	m	(Ldm;Laxk;I)Lqq;	a	resolve
c	qn	net/minecraft/network/chat/FormattedText
	m	(Ljava/lang/String;Lqu;)Lqn;	a	of
	m	(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getString$0
	m	(Ljava/util/List;)Lqn;	a	composite
	m	(Lqn$a;)Ljava/util/Optional;	a	visit
	m	(Lqn$b;Lqu;)Ljava/util/Optional;	a	visit
	m	([Lqn;)Lqn;	a	composite
	m	(Ljava/lang/String;)Lqn;	b	of
	f	Ljava/util/Optional;	b	STOP_ITERATION
	f	Lqn;	c	EMPTY
c	qn$1	net/minecraft/network/chat/FormattedText$1
	m	(Lqn$a;)Ljava/util/Optional;	a	visit
	m	(Lqn$b;Lqu;)Ljava/util/Optional;	a	visit
c	qn$2	net/minecraft/network/chat/FormattedText$2
	m	(Lqn$a;)Ljava/util/Optional;	a	visit
	m	(Lqn$b;Lqu;)Ljava/util/Optional;	a	visit
	f	Ljava/lang/String;	a	val$text
c	qn$3	net/minecraft/network/chat/FormattedText$3
	m	(Lqn$a;)Ljava/util/Optional;	a	visit
	m	(Lqn$b;Lqu;)Ljava/util/Optional;	a	visit
	f	Ljava/lang/String;	a	val$text
	f	Lqu;	d	val$style
c	qn$4	net/minecraft/network/chat/FormattedText$4
	m	(Lqn$a;)Ljava/util/Optional;	a	visit
	m	(Lqn$b;Lqu;)Ljava/util/Optional;	a	visit
	f	Ljava/util/List;	a	val$parts
c	qn$a	net/minecraft/network/chat/FormattedText$ContentConsumer
c	qn$b	net/minecraft/network/chat/FormattedText$StyledContentConsumer
c	qo	net/minecraft/network/chat/HoverEvent
	m	()Lqo$a;	a	getAction
	m	(Lcom/google/gson/JsonObject;)Lqo;	a	deserialize
	m	(Lqo$a;)Ljava/lang/Object;	a	getValue
	m	()Lcom/google/gson/JsonObject;	b	serialize
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lqo$a;	b	action
	f	Ljava/lang/Object;	c	value
c	qo$a	net/minecraft/network/chat/HoverEvent$Action
	m	()Z	a	isAllowedFromServer
	m	(Lcom/google/gson/JsonElement;)Lqo;	a	deserialize
	m	(Ljava/lang/Object;)Lcom/google/gson/JsonElement;	a	serializeArg
	m	(Ljava/lang/String;)Lqo$a;	a	getByName
	m	(Lqk;)Lqo;	a	deserializeFromLegacy
	m	(Lqo$a;)Lqo$a;	a	lambda$static$0
	m	()Ljava/lang/String;	b	getName
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	cast
	f	Lqo$a;	a	SHOW_TEXT
	f	Lqo$a;	b	SHOW_ITEM
	f	Lqo$a;	c	SHOW_ENTITY
	f	Ljava/util/Map;	d	LOOKUP
	f	Ljava/lang/String;	e	name
	f	Z	f	allowFromServer
	f	Ljava/util/function/Function;	g	argDeserializer
	f	Ljava/util/function/Function;	h	argSerializer
	f	Ljava/util/function/Function;	i	legacyArgDeserializer
c	qo$b	net/minecraft/network/chat/HoverEvent$EntityTooltipInfo
	m	()Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;)Lqo$b;	a	create
	m	(Lqk;)Lqo$b;	a	create
	m	()Ljava/util/List;	b	getTooltipLines
	f	Laxo;	a	type
	f	Ljava/util/UUID;	b	id
	f	Lqk;	c	name
	f	Ljava/util/List;	d	linesCache
c	qo$c	net/minecraft/network/chat/HoverEvent$ItemStackInfo
	m	()Lbuw;	a	getItemStack
	m	(Lcom/google/gson/JsonElement;)Lqo$c;	a	create
	m	(Lqk;)Lqo$c;	a	create
	m	()Lcom/google/gson/JsonElement;	b	serialize
	f	Lbus;	a	item
	f	I	b	count
	f	Lok;	c	tag
	f	Lbuw;	d	itemStack
c	qp	net/minecraft/network/chat/KeybindComponent
	m	(Ljava/util/function/Function;)V	a	setKeyResolver
	m	(Lqn$a;)Ljava/util/Optional;	b	visitSelf
	m	(Lqn$b;Lqu;)Ljava/util/Optional;	b	visitSelf
	m	()Lqg;	d	plainCopy
	m	(Ljava/lang/String;)Ljava/util/function/Supplier;	d	lambda$static$1
	m	(Ljava/lang/String;)Lqk;	e	lambda$static$0
	m	()Lqq;	g	plainCopy
	m	()Lqp;	h	plainCopy
	m	()Ljava/lang/String;	i	getName
	m	()Lqk;	j	getNestedComponent
	f	Ljava/util/function/Function;	d	keyResolver
	f	Ljava/lang/String;	e	name
	f	Ljava/util/function/Supplier;	f	nameResolver
c	qq	net/minecraft/network/chat/MutableComponent
	m	(Ljava/util/function/UnaryOperator;)Lqq;	a	withStyle
	m	(Lp;)Lqq;	a	withStyle
	m	(Lqk;)Lqq;	a	append
	m	(Lqu;)Lqq;	a	setStyle
	m	([Lp;)Lqq;	a	withStyle
	m	(Ljava/lang/String;)Lqq;	c	append
	m	(Lqu;)Lqq;	c	withStyle
c	qr	net/minecraft/network/chat/NbtComponent
	m	(Ldm;)Ljava/util/stream/Stream;	a	getData
	m	(Ldm;Laxk;I)Lqq;	a	resolve
	m	(Ldm;Laxk;ILjava/lang/String;)Ljava/util/stream/Stream;	a	lambda$resolve$1
	m	(Ljava/util/stream/Stream;)Lqq;	a	lambda$resolve$8
	m	(Ljava/util/stream/Stream;Lqq;)Lqq;	a	lambda$resolve$7
	m	(Lok;)Ljava/util/stream/Stream;	a	lambda$resolve$0
	m	(Lqk;Lqq;Lqq;)Lqq;	a	lambda$resolve$2
	m	(Lqq;Lqq;Lqq;)Lqq;	a	lambda$resolve$5
	m	(Ljava/lang/String;)Lec$g;	d	compileNbtPath
	m	(Ljava/lang/String;)Lqq;	e	lambda$resolve$4
	m	()Ljava/lang/String;	h	getNbtPath
	m	()Z	i	isInterpreting
	m	()Lqq;	j	lambda$resolve$6
	m	()Lqq;	k	lambda$resolve$3
	f	Z	d	interpreting
	f	Ljava/util/Optional;	e	separator
	f	Ljava/lang/String;	f	nbtPathPattern
	f	Lec$g;	g	compiledNbtPath
	f	Lorg/slf4j/Logger;	h	LOGGER
c	qr$a	net/minecraft/network/chat/NbtComponent$BlockNbtComponent
	m	(Ldm;)Ljava/util/stream/Stream;	a	getData
	m	()Lqg;	d	plainCopy
	m	(Ljava/lang/String;)Lez;	d	compilePos
	m	()Lqq;	g	plainCopy
	m	()Ljava/lang/String;	j	getPos
	m	()Lqr$a;	k	plainCopy
	f	Ljava/lang/String;	h	posPattern
	f	Lez;	i	compiledPos
c	qr$b	net/minecraft/network/chat/NbtComponent$EntityNbtComponent
	m	(Ldm;)Ljava/util/stream/Stream;	a	getData
	m	()Lqg;	d	plainCopy
	m	(Ljava/lang/String;)Lfp;	d	compileSelector
	m	()Lqq;	g	plainCopy
	m	()Ljava/lang/String;	j	getSelector
	m	()Lqr$b;	k	plainCopy
	f	Ljava/lang/String;	h	selectorPattern
	f	Lfp;	i	compiledSelector
c	qr$c	net/minecraft/network/chat/NbtComponent$StorageNbtComponent
	m	(Ldm;)Ljava/util/stream/Stream;	a	getData
	m	()Lqg;	d	plainCopy
	m	()Lqq;	g	plainCopy
	m	()Lyt;	j	getId
	m	()Lqr$c;	k	plainCopy
	f	Lyt;	h	id
c	qs	net/minecraft/network/chat/ScoreComponent
	m	(Ldm;)Ljava/lang/String;	a	findTargetName
	m	(Ldm;Laxk;I)Lqq;	a	resolve
	m	(Ljava/lang/String;Ldm;)Ljava/lang/String;	a	getScore
	m	()Lqg;	d	plainCopy
	m	(Ljava/lang/String;)Lfp;	d	parseSelector
	m	()Lqq;	g	plainCopy
	m	()Ljava/lang/String;	h	getName
	m	()Lfp;	i	getSelector
	m	()Ljava/lang/String;	j	getObjective
	m	()Lqs;	k	plainCopy
	f	Ljava/lang/String;	d	SCORER_PLACEHOLDER
	f	Ljava/lang/String;	e	name
	f	Lfp;	f	selector
	f	Ljava/lang/String;	g	objective
c	qt	net/minecraft/network/chat/SelectorComponent
	m	()Ljava/lang/String;	a	getContents
	m	(Ldm;Laxk;I)Lqq;	a	resolve
	m	()Lqg;	d	plainCopy
	m	()Lqq;	g	plainCopy
	m	()Ljava/lang/String;	h	getPattern
	m	()Lfp;	i	getSelector
	m	()Ljava/util/Optional;	j	getSeparator
	m	()Lqt;	k	plainCopy
	f	Ljava/util/Optional;	d	separator
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Ljava/lang/String;	f	pattern
	f	Lfp;	g	selector
c	qu	net/minecraft/network/chat/Style
	m	()Lqw;	a	getColor
	m	(I)Lqu;	a	withColor
	m	(Ljava/lang/Boolean;)Lqu;	a	withBold
	m	(Ljava/lang/String;)Lqu;	a	withInsertion
	m	(Lp;)Lqu;	a	withColor
	m	(Lqi;)Lqu;	a	withClickEvent
	m	(Lqo;)Lqu;	a	withHoverEvent
	m	(Lqu;)Lqu;	a	applyTo
	m	(Lqw;)Lqu;	a	withColor
	m	(Lyt;)Lqu;	a	withFont
	m	([Lp;)Lqu;	a	applyFormats
	m	()Z	b	isBold
	m	(Ljava/lang/Boolean;)Lqu;	b	withItalic
	m	(Lp;)Lqu;	b	applyFormat
	m	()Z	c	isItalic
	m	(Ljava/lang/Boolean;)Lqu;	c	withUnderlined
	m	(Lp;)Lqu;	c	applyLegacyFormat
	m	()Z	d	isStrikethrough
	m	(Ljava/lang/Boolean;)Lqu;	d	withStrikethrough
	m	()Z	e	isUnderlined
	m	(Ljava/lang/Boolean;)Lqu;	e	withObfuscated
	m	()Z	f	isObfuscated
	m	()Z	g	isEmpty
	m	()Lqi;	h	getClickEvent
	m	()Lqo;	i	getHoverEvent
	m	()Ljava/lang/String;	j	getInsertion
	m	()Lyt;	k	getFont
	f	Lqu;	a	EMPTY
	f	Lyt;	b	DEFAULT_FONT
	f	Lqw;	c	color
	f	Ljava/lang/Boolean;	d	bold
	f	Ljava/lang/Boolean;	e	italic
	f	Ljava/lang/Boolean;	f	underlined
	f	Ljava/lang/Boolean;	g	strikethrough
	f	Ljava/lang/Boolean;	h	obfuscated
	f	Lqi;	i	clickEvent
	f	Lqo;	j	hoverEvent
	f	Ljava/lang/String;	k	insertion
	f	Lyt;	l	font
c	qu$1	net/minecraft/network/chat/Style$1
	f	[I	a	$SwitchMap$net$minecraft$ChatFormatting
c	qu$a	net/minecraft/network/chat/Style$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lqu;	a	deserialize
	m	(Lcom/google/gson/JsonObject;)Lyt;	a	getFont
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean;	a	getOptionalFlag
	m	(Lqu;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonObject;)Lqo;	b	getHoverEvent
	m	(Lcom/google/gson/JsonObject;)Lqi;	c	getClickEvent
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	d	getInsertion
	m	(Lcom/google/gson/JsonObject;)Lqw;	e	getTextColor
c	qv	net/minecraft/network/chat/SubStringSource
	m	()Ljava/lang/String;	a	getPlainText
	m	(I)I	a	lambda$create$0
	m	(IIZ)Ljava/util/List;	a	substring
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$create$1
	m	(Ljava/lang/StringBuilder;Ljava/util/List;ILqu;I)Z	a	lambda$create$2
	m	(Ljava/lang/StringBuilder;Ljava/util/List;Lqu;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$create$3
	m	(Lqn;)Lqv;	a	create
	m	(Lqn;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Lqv;	a	create
	f	Ljava/lang/String;	a	plainText
	f	Ljava/util/List;	b	charStyles
	f	Lit/unimi/dsi/fastutil/ints/Int2IntFunction;	c	reverseCharModifier
c	qw	net/minecraft/network/chat/TextColor
	m	()I	a	getValue
	m	(I)Lqw;	a	fromRgb
	m	(Ljava/lang/String;)Lqw;	a	parseColor
	m	(Lp;)Lqw;	a	fromLegacyFormat
	m	(Lqw;)Ljava/lang/String;	a	lambda$static$1
	m	()Ljava/lang/String;	b	serialize
	m	(Lp;)Lqw;	b	lambda$static$0
	m	()Ljava/lang/String;	c	formatValue
	f	Ljava/lang/String;	a	CUSTOM_COLOR_PREFIX
	f	Ljava/util/Map;	b	LEGACY_FORMAT_TO_COLOR
	f	Ljava/util/Map;	c	NAMED_COLORS
	f	I	d	value
	f	Ljava/lang/String;	e	name
c	qx	net/minecraft/network/chat/TextComponent
	m	()Ljava/lang/String;	a	getContents
	m	()Lqg;	d	plainCopy
	m	()Lqq;	g	plainCopy
	m	()Ljava/lang/String;	h	getText
	m	()Lqx;	i	plainCopy
	f	Lqk;	d	EMPTY
	f	Ljava/lang/String;	e	text
c	qy	net/minecraft/network/chat/TranslatableComponent
	m	(Ldm;Laxk;I)Lqq;	a	resolve
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)V	a	decomposeTemplate
	m	(I)Lqn;	b	getArgument
	m	(Lqn$a;)Ljava/util/Optional;	b	visitSelf
	m	(Lqn$b;Lqu;)Ljava/util/Optional;	b	visitSelf
	m	()Lqg;	d	plainCopy
	m	()Lqq;	g	plainCopy
	m	()Lqy;	h	plainCopy
	m	()Ljava/lang/String;	i	getKey
	m	()[Ljava/lang/Object;	j	getArgs
	m	()V	k	decompose
	f	[Ljava/lang/Object;	d	NO_ARGS
	f	Lqn;	e	TEXT_PERCENT
	f	Lqn;	f	TEXT_NULL
	f	Ljava/lang/String;	g	key
	f	[Ljava/lang/Object;	h	args
	f	Lof;	i	decomposedWith
	f	Ljava/util/List;	j	decomposedParts
	f	Ljava/util/regex/Pattern;	k	FORMAT_PATTERN
c	qz	net/minecraft/network/chat/TranslatableFormatException
c	ra	net/minecraft/network/chat/package-info
c	rb	net/minecraft/network/package-info
c	rc	net/minecraft/network/protocol/Packet
	m	()Z	a	isSkippable
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
c	rd	net/minecraft/network/protocol/PacketFlow
	m	()Lrd;	a	getOpposite
	m	()[Lrd;	b	$values
	f	Lrd;	a	SERVERBOUND
	f	Lrd;	b	CLIENTBOUND
	f	[Lrd;	c	$VALUES
c	re	net/minecraft/network/protocol/PacketUtils
	m	(Lqb;Lrc;)V	a	lambda$ensureRunningOnSameThread$0
	m	(Lrc;Lqb;Ladw;)V	a	ensureRunningOnSameThread
	m	(Lrc;Lqb;Lauz;)V	a	ensureRunningOnSameThread
	f	Lorg/slf4j/Logger;	a	LOGGER
c	rf	net/minecraft/network/protocol/game/ClientGamePacketListener
	m	(Lrg;)V	a	handleAddEntity
	m	(Lrh;)V	a	handleAddExperienceOrb
	m	(Lri;)V	a	handleAddMob
	m	(Lrj;)V	a	handleAddPainting
	m	(Lrk;)V	a	handleAddPlayer
	m	(Lrl;)V	a	handleAddVibrationSignal
	m	(Lrm;)V	a	handleAnimate
	m	(Lrn;)V	a	handleAwardStats
	m	(Lro;)V	a	handleBlockBreakAck
	m	(Lrp;)V	a	handleBlockDestruction
	m	(Lrq;)V	a	handleBlockEntityData
	m	(Lrr;)V	a	handleBlockEvent
	m	(Lrs;)V	a	handleBlockUpdate
	m	(Lrt;)V	a	handleBossUpdate
	m	(Lru;)V	a	handleChangeDifficulty
	m	(Lrv;)V	a	handleChat
	m	(Lrw;)V	a	handleTitlesClear
	m	(Lrx;)V	a	handleCommandSuggestions
	m	(Lry;)V	a	handleCommands
	m	(Lrz;)V	a	handleContainerClose
	m	(Lsa;)V	a	handleContainerContent
	m	(Lsb;)V	a	handleContainerSetData
	m	(Lsc;)V	a	handleContainerSetSlot
	m	(Lsd;)V	a	handleItemCooldown
	m	(Lse;)V	a	handleCustomPayload
	m	(Lsf;)V	a	handleCustomSoundEvent
	m	(Lsg;)V	a	handleDisconnect
	m	(Lsh;)V	a	handleEntityEvent
	m	(Lsi;)V	a	handleExplosion
	m	(Lsj;)V	a	handleForgetLevelChunk
	m	(Lsk;)V	a	handleGameEvent
	m	(Lsl;)V	a	handleHorseScreenOpen
	m	(Lsm;)V	a	handleInitializeBorder
	m	(Lsn;)V	a	handleKeepAlive
	m	(Lsp;)V	a	handleLevelChunkWithLight
	m	(Lsq;)V	a	handleLevelEvent
	m	(Lsr;)V	a	handleParticleEvent
	m	(Lss;)V	a	handleLightUpdatePacket
	m	(Lsu;)V	a	handleLogin
	m	(Lsv;)V	a	handleMapItemData
	m	(Lsw;)V	a	handleMerchantOffers
	m	(Lsx;)V	a	handleMoveEntity
	m	(Lsy;)V	a	handleMoveVehicle
	m	(Lsz;)V	a	handleOpenBook
	m	(Lta;)V	a	handleOpenScreen
	m	(Ltb;)V	a	handleOpenSignEditor
	m	(Ltc;)V	a	handlePing
	m	(Ltd;)V	a	handlePlaceRecipe
	m	(Lte;)V	a	handlePlayerAbilities
	m	(Ltf;)V	a	handlePlayerCombatEnd
	m	(Ltg;)V	a	handlePlayerCombatEnter
	m	(Lth;)V	a	handlePlayerCombatKill
	m	(Lti;)V	a	handlePlayerInfo
	m	(Ltj;)V	a	handleLookAt
	m	(Ltk;)V	a	handleMovePlayer
	m	(Ltl;)V	a	handleAddOrRemoveRecipes
	m	(Ltm;)V	a	handleRemoveEntities
	m	(Ltn;)V	a	handleRemoveMobEffect
	m	(Lto;)V	a	handleResourcePack
	m	(Ltp;)V	a	handleRespawn
	m	(Ltq;)V	a	handleRotateMob
	m	(Ltr;)V	a	handleChunkBlocksUpdate
	m	(Lts;)V	a	handleSelectAdvancementsTab
	m	(Ltt;)V	a	setActionBarText
	m	(Ltu;)V	a	handleSetBorderCenter
	m	(Ltv;)V	a	handleSetBorderLerpSize
	m	(Ltw;)V	a	handleSetBorderSize
	m	(Ltx;)V	a	handleSetBorderWarningDelay
	m	(Lty;)V	a	handleSetBorderWarningDistance
	m	(Ltz;)V	a	handleSetCamera
	m	(Lua;)V	a	handleSetCarriedItem
	m	(Lub;)V	a	handleSetChunkCacheCenter
	m	(Luc;)V	a	handleSetChunkCacheRadius
	m	(Lud;)V	a	handleSetSpawn
	m	(Lue;)V	a	handleSetDisplayObjective
	m	(Luf;)V	a	handleSetEntityData
	m	(Lug;)V	a	handleEntityLinkPacket
	m	(Luh;)V	a	handleSetEntityMotion
	m	(Lui;)V	a	handleSetEquipment
	m	(Luj;)V	a	handleSetExperience
	m	(Luk;)V	a	handleSetHealth
	m	(Lul;)V	a	handleAddObjective
	m	(Lum;)V	a	handleSetEntityPassengersPacket
	m	(Lun;)V	a	handleSetPlayerTeamPacket
	m	(Luo;)V	a	handleSetScore
	m	(Lup;)V	a	handleSetSimulationDistance
	m	(Luq;)V	a	setSubtitleText
	m	(Lur;)V	a	handleSetTime
	m	(Lus;)V	a	setTitleText
	m	(Lut;)V	a	setTitlesAnimation
	m	(Luu;)V	a	handleSoundEntityEvent
	m	(Luv;)V	a	handleSoundEvent
	m	(Luw;)V	a	handleStopSoundEvent
	m	(Lux;)V	a	handleTabListCustomisation
	m	(Luy;)V	a	handleTagQueryPacket
	m	(Luz;)V	a	handleTakeItemEntity
	m	(Lva;)V	a	handleTeleportEntity
	m	(Lvb;)V	a	handleUpdateAdvancementsPacket
	m	(Lvc;)V	a	handleUpdateAttributes
	m	(Lvd;)V	a	handleUpdateMobEffect
	m	(Lve;)V	a	handleUpdateRecipes
	m	(Lvf;)V	a	handleUpdateTags
c	rg	net/minecraft/network/protocol/game/ClientboundAddEntityPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getId
	m	()Ljava/util/UUID;	c	getUUID
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()D	g	getXa
	m	()D	h	getYa
	m	()D	i	getZa
	m	()I	j	getxRot
	m	()I	k	getyRot
	m	()Laxo;	l	getType
	m	()I	m	getData
	f	D	a	MAGICAL_QUANTIZATION
	f	D	b	LIMIT
	f	I	c	id
	f	Ljava/util/UUID;	d	uuid
	f	D	e	x
	f	D	f	y
	f	D	g	z
	f	I	h	xa
	f	I	i	ya
	f	I	j	za
	f	I	k	xRot
	f	I	l	yRot
	f	Laxo;	m	type
	f	I	n	data
c	rh	net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getId
	m	()D	c	getX
	m	()D	d	getY
	m	()D	e	getZ
	m	()I	f	getValue
	f	I	a	id
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	I	e	value
c	ri	net/minecraft/network/protocol/game/ClientboundAddMobPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getId
	m	()Ljava/util/UUID;	c	getUUID
	m	()I	d	getType
	m	()D	e	getX
	m	()D	f	getY
	m	()D	g	getZ
	m	()I	h	getXd
	m	()I	i	getYd
	m	()I	j	getZd
	m	()B	k	getyRot
	m	()B	l	getxRot
	m	()B	m	getyHeadRot
	f	I	a	id
	f	Ljava/util/UUID;	b	uuid
	f	I	c	type
	f	D	d	x
	f	D	e	y
	f	D	f	z
	f	I	g	xd
	f	I	h	yd
	f	I	i	zd
	f	B	j	yRot
	f	B	k	xRot
	f	B	l	yHeadRot
c	rj	net/minecraft/network/protocol/game/ClientboundAddPaintingPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getId
	m	()Ljava/util/UUID;	c	getUUID
	m	()Lgj;	d	getPos
	m	()Lgo;	e	getDirection
	m	()Lble;	f	getMotive
	f	I	a	id
	f	Ljava/util/UUID;	b	uuid
	f	Lgj;	c	pos
	f	Lgo;	d	direction
	f	I	e	motive
c	rk	net/minecraft/network/protocol/game/ClientboundAddPlayerPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getEntityId
	m	()Ljava/util/UUID;	c	getPlayerId
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()B	g	getyRot
	m	()B	h	getxRot
	f	I	a	entityId
	f	Ljava/util/UUID;	b	playerId
	f	D	c	x
	f	D	d	y
	f	D	e	z
	f	B	f	yRot
	f	B	g	xRot
c	rl	net/minecraft/network/protocol/game/ClientboundAddVibrationSignalPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lctg;	b	getVibrationPath
	f	Lctg;	a	vibrationPath
c	rm	net/minecraft/network/protocol/game/ClientboundAnimatePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getId
	m	()I	c	getAction
	f	I	a	SWING_MAIN_HAND
	f	I	b	HURT
	f	I	c	WAKE_UP
	f	I	d	SWING_OFF_HAND
	f	I	e	CRITICAL_HIT
	f	I	f	MAGIC_CRITICAL_HIT
	f	I	g	id
	f	I	h	action
c	rn	net/minecraft/network/protocol/game/ClientboundAwardStatsPacket
	m	(Lahr;)I	a	getStatIdCap
	m	(Laht;I)Lahr;	a	readStatCap
	m	(Lpy;)V	a	write
	m	(Lpy;Lahr;)V	a	lambda$write$1
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Ljava/util/Map;	b	getStats
	m	(Lpy;)Lahr;	b	lambda$new$0
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	stats
c	ro	net/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lgj;	b	pos
	m	()Lcov;	c	state
	m	()Lwh$a;	d	action
	m	()Z	e	allGood
	f	Lgj;	a	pos
	f	Lcov;	b	state
	f	Lwh$a;	c	action
	f	Z	d	allGood
	f	Lorg/slf4j/Logger;	e	LOGGER
c	rp	net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getId
	m	()Lgj;	c	getPos
	m	()I	d	getProgress
	f	I	a	id
	f	Lgj;	b	pos
	f	I	c	progress
c	rq	net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket
	m	(Lcmr;)Lrq;	a	create
	m	(Lcmr;Ljava/util/function/Function;)Lrq;	a	create
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lgj;	b	getPos
	m	()Lcmt;	c	getType
	m	()Lok;	d	getTag
	f	Lgj;	a	pos
	f	Lcmt;	b	type
	f	Lok;	c	tag
c	rr	net/minecraft/network/protocol/game/ClientboundBlockEventPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lgj;	b	getPos
	m	()I	c	getB0
	m	()I	d	getB1
	m	()Lcdq;	e	getBlock
	f	Lgj;	a	pos
	f	I	b	b0
	f	I	c	b1
	f	Lcdq;	d	block
c	rs	net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lcov;	b	getBlockState
	m	()Lgj;	c	getPos
	f	Lgj;	a	pos
	f	Lcov;	b	blockState
c	rt	net/minecraft/network/protocol/game/ClientboundBossEventPacket
	m	(Lavx;)Lrt;	a	createAddPacket
	m	(Ljava/util/UUID;)Lrt;	a	createRemovePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	(Lrt$b;)V	a	dispatch
	m	(ZZZ)I	a	encodeProperties
	m	(Lavx;)Lrt;	b	createUpdateProgressPacket
	m	(Lavx;)Lrt;	c	createUpdateNamePacket
	m	(Lavx;)Lrt;	d	createUpdateStylePacket
	m	(Lavx;)Lrt;	e	createUpdatePropertiesPacket
	f	I	a	FLAG_DARKEN
	f	I	b	FLAG_MUSIC
	f	I	c	FLAG_FOG
	f	Ljava/util/UUID;	d	id
	f	Lrt$c;	e	operation
	f	Lrt$c;	f	REMOVE_OPERATION
c	rt$1	net/minecraft/network/protocol/game/ClientboundBossEventPacket$1
	m	()Lrt$d;	a	getType
	m	(Ljava/util/UUID;Lrt$b;)V	a	dispatch
	m	(Lpy;)V	a	write
c	rt$a	net/minecraft/network/protocol/game/ClientboundBossEventPacket$AddOperation
	m	()Lrt$d;	a	getType
	m	(Ljava/util/UUID;Lrt$b;)V	a	dispatch
	m	(Lpy;)V	a	write
	f	Lqk;	a	name
	f	F	b	progress
	f	Lavx$a;	c	color
	f	Lavx$b;	d	overlay
	f	Z	e	darkenScreen
	f	Z	f	playMusic
	f	Z	g	createWorldFog
c	rt$b	net/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler
	m	(Ljava/util/UUID;)V	a	remove
	m	(Ljava/util/UUID;F)V	a	updateProgress
	m	(Ljava/util/UUID;Lavx$a;Lavx$b;)V	a	updateStyle
	m	(Ljava/util/UUID;Lqk;)V	a	updateName
	m	(Ljava/util/UUID;Lqk;FLavx$a;Lavx$b;ZZZ)V	a	add
	m	(Ljava/util/UUID;ZZZ)V	a	updateProperties
c	rt$c	net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation
	m	()Lrt$d;	a	getType
	m	(Ljava/util/UUID;Lrt$b;)V	a	dispatch
	m	(Lpy;)V	a	write
c	rt$d	net/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType
	m	()[Lrt$d;	a	$values
	m	(Lpy;)Lrt$c;	a	lambda$static$0
	f	Lrt$d;	a	ADD
	f	Lrt$d;	b	REMOVE
	f	Lrt$d;	c	UPDATE_PROGRESS
	f	Lrt$d;	d	UPDATE_NAME
	f	Lrt$d;	e	UPDATE_STYLE
	f	Lrt$d;	f	UPDATE_PROPERTIES
	f	Ljava/util/function/Function;	g	reader
	f	[Lrt$d;	h	$VALUES
c	rt$e	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateNameOperation
	m	()Lrt$d;	a	getType
	m	(Ljava/util/UUID;Lrt$b;)V	a	dispatch
	m	(Lpy;)V	a	write
	f	Lqk;	a	name
c	rt$f	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateProgressOperation
	m	()Lrt$d;	a	getType
	m	(Ljava/util/UUID;Lrt$b;)V	a	dispatch
	m	(Lpy;)V	a	write
	f	F	a	progress
c	rt$g	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdatePropertiesOperation
	m	()Lrt$d;	a	getType
	m	(Ljava/util/UUID;Lrt$b;)V	a	dispatch
	m	(Lpy;)V	a	write
	f	Z	a	darkenScreen
	f	Z	b	playMusic
	f	Z	c	createWorldFog
c	rt$h	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateStyleOperation
	m	()Lrt$d;	a	getType
	m	(Ljava/util/UUID;Lrt$b;)V	a	dispatch
	m	(Lpy;)V	a	write
	f	Lavx$a;	a	color
	f	Lavx$b;	b	overlay
c	ru	net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Z	b	isLocked
	m	()Lawe;	c	getDifficulty
	f	Lawe;	a	difficulty
	f	Z	b	locked
c	rv	net/minecraft/network/protocol/game/ClientboundChatPacket
	m	()Z	a	isSkippable
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lqk;	b	getMessage
	m	()Lqh;	c	getType
	m	()Ljava/util/UUID;	d	getSender
	f	Lqk;	a	message
	f	Lqh;	b	type
	f	Ljava/util/UUID;	c	sender
c	rw	net/minecraft/network/protocol/game/ClientboundClearTitlesPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Z	b	shouldResetTimes
	f	Z	a	resetTimes
c	rx	net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket
	m	(Lcom/mojang/brigadier/context/StringRange;Lpy;)Lcom/mojang/brigadier/suggestion/Suggestion;	a	lambda$new$0
	m	(Lpy;)V	a	write
	m	(Lpy;Lcom/mojang/brigadier/suggestion/Suggestion;)V	a	lambda$write$1
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getId
	m	()Lcom/mojang/brigadier/suggestion/Suggestions;	c	getSuggestions
	f	I	a	id
	f	Lcom/mojang/brigadier/suggestion/Suggestions;	b	suggestions
c	ry	net/minecraft/network/protocol/game/ClientboundCommandsPacket
	m	(Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	enumerateNodes
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Ljava/util/List;	a	getNodesInIdOrder
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lpy;Lcom/mojang/brigadier/tree/CommandNode;)V	a	lambda$write$0
	m	(Ljava/util/List;)V	a	resolveEntries
	m	(Ljava/util/List;Lry$a;)Z	a	lambda$resolveEntries$1
	m	(Lpy;)V	a	write
	m	(Lpy;B)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	createBuilder
	m	(Lpy;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Map;)V	a	writeNode
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lcom/mojang/brigadier/tree/RootCommandNode;	b	getRoot
	m	(Lpy;)Lry$a;	b	readNode
	f	B	a	MASK_TYPE
	f	B	b	FLAG_EXECUTABLE
	f	B	c	FLAG_REDIRECT
	f	B	d	FLAG_CUSTOM_SUGGESTIONS
	f	B	e	TYPE_ROOT
	f	B	f	TYPE_LITERAL
	f	B	g	TYPE_ARGUMENT
	f	Lcom/mojang/brigadier/tree/RootCommandNode;	h	root
c	ry$a	net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$build$0
	m	(Ljava/util/List;)Z	a	build
	f	Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	builder
	f	B	b	flags
	f	I	c	redirect
	f	[I	d	children
	f	Lcom/mojang/brigadier/tree/CommandNode;	e	node
c	rz	net/minecraft/network/protocol/game/ClientboundContainerClosePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getContainerId
	f	I	a	containerId
c	sa	net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getContainerId
	m	()Ljava/util/List;	c	getItems
	m	()Lbuw;	d	getCarriedItem
	m	()I	e	getStateId
	f	I	a	containerId
	f	I	b	stateId
	f	Ljava/util/List;	c	items
	f	Lbuw;	d	carriedItem
c	sb	net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getContainerId
	m	()I	c	getId
	m	()I	d	getValue
	f	I	a	containerId
	f	I	b	id
	f	I	c	value
c	sc	net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getContainerId
	m	()I	c	getSlot
	m	()Lbuw;	d	getItem
	m	()I	e	getStateId
	f	I	a	CARRIED_ITEM
	f	I	b	PLAYER_INVENTORY
	f	I	c	containerId
	f	I	d	stateId
	f	I	e	slot
	f	Lbuw;	f	itemStack
c	sd	net/minecraft/network/protocol/game/ClientboundCooldownPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lbus;	b	getItem
	m	()I	c	getDuration
	f	Lbus;	a	item
	f	I	b	duration
c	se	net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lyt;	b	getIdentifier
	m	()Lpy;	c	getData
	f	Lyt;	a	BRAND
	f	Lyt;	b	DEBUG_PATHFINDING_PACKET
	f	Lyt;	c	DEBUG_NEIGHBORSUPDATE_PACKET
	f	Lyt;	d	DEBUG_STRUCTURES_PACKET
	f	Lyt;	e	DEBUG_WORLDGENATTEMPT_PACKET
	f	Lyt;	f	DEBUG_POI_TICKET_COUNT_PACKET
	f	Lyt;	g	DEBUG_POI_ADDED_PACKET
	f	Lyt;	h	DEBUG_POI_REMOVED_PACKET
	f	Lyt;	i	DEBUG_VILLAGE_SECTIONS
	f	Lyt;	j	DEBUG_GOAL_SELECTOR
	f	Lyt;	k	DEBUG_BRAIN
	f	Lyt;	l	DEBUG_BEE
	f	Lyt;	m	DEBUG_HIVE
	f	Lyt;	n	DEBUG_GAME_TEST_ADD_MARKER
	f	Lyt;	o	DEBUG_GAME_TEST_CLEAR
	f	Lyt;	p	DEBUG_RAIDS
	f	Lyt;	q	DEBUG_GAME_EVENT
	f	Lyt;	r	DEBUG_GAME_EVENT_LISTENER
	f	I	s	MAX_PAYLOAD_SIZE
	f	Lyt;	t	identifier
	f	Lpy;	u	data
c	sf	net/minecraft/network/protocol/game/ClientboundCustomSoundPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lyt;	b	getName
	m	()Lahl;	c	getSource
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()F	g	getVolume
	m	()F	h	getPitch
	f	F	a	LOCATION_ACCURACY
	f	Lyt;	b	name
	f	Lahl;	c	source
	f	I	d	x
	f	I	e	y
	f	I	f	z
	f	F	g	volume
	f	F	h	pitch
c	sg	net/minecraft/network/protocol/game/ClientboundDisconnectPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lqk;	b	getReason
	f	Lqk;	a	reason
c	sh	net/minecraft/network/protocol/game/ClientboundEntityEventPacket
	m	(Lcav;)Laxk;	a	getEntity
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()B	b	getEventId
	f	I	a	entityId
	f	B	b	eventId
c	si	net/minecraft/network/protocol/game/ClientboundExplodePacket
	m	(IIILpy;)Lgj;	a	lambda$new$0
	m	(IIILpy;Lgj;)V	a	lambda$write$1
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()F	b	getKnockbackX
	m	()F	c	getKnockbackY
	m	()F	d	getKnockbackZ
	m	()D	e	getX
	m	()D	f	getY
	m	()D	g	getZ
	m	()F	h	getPower
	m	()Ljava/util/List;	i	getToBlow
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	power
	f	Ljava/util/List;	e	toBlow
	f	F	f	knockbackX
	f	F	g	knockbackY
	f	F	h	knockbackZ
c	sj	net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getX
	m	()I	c	getZ
	f	I	a	x
	f	I	b	z
c	sk	net/minecraft/network/protocol/game/ClientboundGameEventPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lsk$a;	b	getEvent
	m	()F	c	getParam
	f	Lsk$a;	a	NO_RESPAWN_BLOCK_AVAILABLE
	f	Lsk$a;	b	START_RAINING
	f	Lsk$a;	c	STOP_RAINING
	f	Lsk$a;	d	CHANGE_GAME_MODE
	f	Lsk$a;	e	WIN_GAME
	f	Lsk$a;	f	DEMO_EVENT
	f	Lsk$a;	g	ARROW_HIT_PLAYER
	f	Lsk$a;	h	RAIN_LEVEL_CHANGE
	f	Lsk$a;	i	THUNDER_LEVEL_CHANGE
	f	Lsk$a;	j	PUFFER_FISH_STING
	f	Lsk$a;	k	GUARDIAN_ELDER_EFFECT
	f	Lsk$a;	l	IMMEDIATE_RESPAWN
	f	I	m	DEMO_PARAM_INTRO
	f	I	n	DEMO_PARAM_HINT_1
	f	I	o	DEMO_PARAM_HINT_2
	f	I	p	DEMO_PARAM_HINT_3
	f	I	q	DEMO_PARAM_HINT_4
	f	Lsk$a;	r	event
	f	F	s	param
c	sk$a	net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	TYPES
	f	I	b	id
c	sl	net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getContainerId
	m	()I	c	getSize
	m	()I	d	getEntityId
	f	I	a	containerId
	f	I	b	size
	f	I	c	entityId
c	sm	net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()D	b	getNewCenterX
	m	()D	c	getNewCenterZ
	m	()D	d	getNewSize
	m	()D	e	getOldSize
	m	()J	f	getLerpTime
	m	()I	g	getNewAbsoluteMaxSize
	m	()I	h	getWarningTime
	m	()I	i	getWarningBlocks
	f	D	a	newCenterX
	f	D	b	newCenterZ
	f	D	c	oldSize
	f	D	d	newSize
	f	J	e	lerpTime
	f	I	f	newAbsoluteMaxSize
	f	I	g	warningBlocks
	f	I	h	warningTime
c	sn	net/minecraft/network/protocol/game/ClientboundKeepAlivePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()J	b	getId
	f	J	a	id
c	so	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData
	m	()Lpy;	a	getReadBuffer
	m	(II)Ljava/util/function/Consumer;	a	getBlockEntitiesTagsConsumer
	m	(IILso$b;)V	a	lambda$getBlockEntitiesTagsConsumer$1
	m	(Lcra;)I	a	calculateChunkSize
	m	(Lpy;)V	a	write
	m	(Lpy;Lcra;)V	a	extractChunkData
	m	(Lpy;Lso$a;)V	a	lambda$write$0
	m	(Lso$b;II)V	a	getBlockEntitiesTags
	m	()Lok;	b	getHeightmaps
	m	()Lio/netty/buffer/ByteBuf;	c	getWriteBuffer
	f	I	a	TWO_MEGABYTES
	f	Lok;	b	heightmaps
	f	[B	c	buffer
	f	Ljava/util/List;	d	blockEntitiesData
c	so$a	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityInfo
	m	(Lcmr;)Lso$a;	a	create
	m	(Lpy;)V	a	write
	f	I	a	packedXZ
	f	I	b	y
	f	Lcmt;	c	type
	f	Lok;	d	tag
c	so$b	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityTagOutput
c	sp	net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getX
	m	()I	c	getZ
	m	()Lso;	d	getChunkData
	m	()Lst;	e	getLightData
	f	I	a	x
	f	I	b	z
	f	Lso;	c	chunkData
	f	Lst;	d	lightData
c	sq	net/minecraft/network/protocol/game/ClientboundLevelEventPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Z	b	isGlobalEvent
	m	()I	c	getType
	m	()I	d	getData
	m	()Lgj;	e	getPos
	f	I	a	type
	f	Lgj;	b	pos
	f	I	c	data
	f	Z	d	globalEvent
c	sr	net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket
	m	(Lpy;)V	a	write
	m	(Lpy;Lib;)Lia;	a	readParticle
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Z	b	isOverrideLimiter
	m	()D	c	getX
	m	()D	d	getY
	m	()D	e	getZ
	m	()F	f	getXDist
	m	()F	g	getYDist
	m	()F	h	getZDist
	m	()F	i	getMaxSpeed
	m	()I	j	getCount
	m	()Lia;	k	getParticle
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	xDist
	f	F	e	yDist
	f	F	f	zDist
	f	F	g	maxSpeed
	f	I	h	count
	f	Z	i	overrideLimiter
	f	Lia;	j	particle
c	ss	net/minecraft/network/protocol/game/ClientboundLightUpdatePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getX
	m	()I	c	getZ
	m	()Lst;	d	getLightData
	f	I	a	x
	f	I	b	z
	f	Lst;	c	lightData
c	st	net/minecraft/network/protocol/game/ClientboundLightUpdatePacketData
	m	()Ljava/util/BitSet;	a	getSkyYMask
	m	(Lcac;Ldio;Lcbe;ILjava/util/BitSet;Ljava/util/BitSet;Ljava/util/List;)V	a	prepareSectionData
	m	(Lpy;)V	a	write
	m	()Ljava/util/BitSet;	b	getEmptySkyYMask
	m	(Lpy;)[B	b	lambda$new$1
	m	()Ljava/util/List;	c	getSkyUpdates
	m	(Lpy;)[B	c	lambda$new$0
	m	()Ljava/util/BitSet;	d	getBlockYMask
	m	()Ljava/util/BitSet;	e	getEmptyBlockYMask
	m	()Ljava/util/List;	f	getBlockUpdates
	m	()Z	g	getTrustEdges
	f	Ljava/util/BitSet;	a	skyYMask
	f	Ljava/util/BitSet;	b	blockYMask
	f	Ljava/util/BitSet;	c	emptySkyYMask
	f	Ljava/util/BitSet;	d	emptyBlockYMask
	f	Ljava/util/List;	e	skyUpdates
	f	Ljava/util/List;	f	blockUpdates
	f	Z	g	trustEdges
c	su	net/minecraft/network/protocol/game/ClientboundLoginPacket
	m	(Lpy;)V	a	write
	m	(Lpy;Lys;)V	a	lambda$write$1
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	playerId
	m	(Lpy;)Lys;	b	lambda$new$0
	m	()Z	c	hardcore
	m	()Lcas;	d	gameType
	m	()Lcas;	e	previousGameType
	m	()Ljava/util/Set;	f	levels
	m	()Lhc$a;	g	registryHolder
	m	()Lgs;	h	dimensionType
	m	()Lys;	i	dimension
	m	()J	j	seed
	m	()I	k	maxPlayers
	m	()I	l	chunkRadius
	m	()I	m	simulationDistance
	m	()Z	n	reducedDebugInfo
	m	()Z	o	showDeathScreen
	m	()Z	p	isDebug
	m	()Z	q	isFlat
	f	I	a	playerId
	f	Z	b	hardcore
	f	Lcas;	c	gameType
	f	Lcas;	d	previousGameType
	f	Ljava/util/Set;	e	levels
	f	Lhc$a;	f	registryHolder
	f	Lgs;	g	dimensionType
	f	Lys;	h	dimension
	f	J	i	seed
	f	I	j	maxPlayers
	f	I	k	chunkRadius
	f	I	l	simulationDistance
	f	Z	m	reducedDebugInfo
	f	Z	n	showDeathScreen
	f	Z	o	isDebug
	f	Z	p	isFlat
c	sv	net/minecraft/network/protocol/game/ClientboundMapItemDataPacket
	m	(Ldkf;)V	a	applyToMap
	m	(Lpy;)V	a	write
	m	(Lpy;Ldkc;)V	a	lambda$write$1
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getMapId
	m	(Lpy;)Ldkc;	b	lambda$new$0
	m	()B	c	getScale
	m	()Z	d	isLocked
	f	I	a	mapId
	f	B	b	scale
	f	Z	c	locked
	f	Ljava/util/List;	d	decorations
	f	Ldkf$b;	e	colorPatch
c	sw	net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getContainerId
	m	()Lbzu;	c	getOffers
	m	()I	d	getVillagerLevel
	m	()I	e	getVillagerXp
	m	()Z	f	showProgress
	m	()Z	g	canRestock
	f	I	a	containerId
	f	Lbzu;	b	offers
	f	I	c	villagerLevel
	f	I	d	villagerXp
	f	Z	e	showProgress
	f	Z	f	canRestock
c	sx	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket
	m	(D)J	a	entityToPacket
	m	(J)D	a	packetToEntity
	m	(JJJ)Ldpo;	a	packetToEntity
	m	(Lcav;)Laxk;	a	getEntity
	m	(Ldpo;)Ldpo;	a	updateEntityPosition
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()S	b	getXa
	m	()S	c	getYa
	m	()S	d	getZa
	m	()B	e	getyRot
	m	()B	f	getxRot
	m	()Z	g	hasRotation
	m	()Z	h	hasPosition
	m	()Z	i	isOnGround
	f	I	a	entityId
	f	S	b	xa
	f	S	c	ya
	f	S	d	za
	f	B	e	yRot
	f	B	f	xRot
	f	Z	g	onGround
	f	Z	h	hasRot
	f	Z	i	hasPos
	f	D	j	TRUNCATION_STEPS
c	sx$a	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lpy;)Lsx$a;	b	read
c	sx$b	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lpy;)Lsx$b;	b	read
c	sx$c	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lpy;)Lsx$c;	b	read
c	sy	net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()D	b	getX
	m	()D	c	getY
	m	()D	d	getZ
	m	()F	e	getYRot
	m	()F	f	getXRot
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
c	sz	net/minecraft/network/protocol/game/ClientboundOpenBookPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lawg;	b	getHand
	f	Lawg;	a	hand
c	ta	net/minecraft/network/protocol/game/ClientboundOpenScreenPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getContainerId
	m	()Lbrt;	c	getType
	m	()Lqk;	d	getTitle
	f	I	a	containerId
	f	I	b	type
	f	Lqk;	c	title
c	tb	net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lgj;	b	getPos
	f	Lgj;	a	pos
c	tc	net/minecraft/network/protocol/game/ClientboundPingPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getId
	f	I	a	id
c	td	net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lyt;	b	getRecipe
	m	()I	c	getContainerId
	f	I	a	containerId
	f	Lyt;	b	recipe
c	te	net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Z	b	isInvulnerable
	m	()Z	c	isFlying
	m	()Z	d	canFly
	m	()Z	e	canInstabuild
	m	()F	f	getFlyingSpeed
	m	()F	g	getWalkingSpeed
	f	I	a	FLAG_INVULNERABLE
	f	I	b	FLAG_FLYING
	f	I	c	FLAG_CAN_FLY
	f	I	d	FLAG_INSTABUILD
	f	Z	e	invulnerable
	f	Z	f	isFlying
	f	Z	g	canFly
	f	Z	h	instabuild
	f	F	i	flyingSpeed
	f	F	j	walkingSpeed
c	tf	net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	f	I	a	killerId
	f	I	b	duration
c	tg	net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
c	th	net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket
	m	()Z	a	isSkippable
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getKillerId
	m	()I	c	getPlayerId
	m	()Lqk;	d	getMessage
	f	I	a	playerId
	f	I	b	killerId
	f	Lqk;	c	message
c	ti	net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket
	m	(Lpy;)V	a	write
	m	(Lpy;Lqk;)V	a	writeDisplayName
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Ljava/util/List;	b	getEntries
	m	(Lpy;)Lqk;	b	readDisplayName
	m	()Lti$a;	c	getAction
	f	Lti$a;	a	action
	f	Ljava/util/List;	b	entries
c	ti$a	net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action
	m	()[Lti$a;	a	$values
	m	(Lpy;)Lti$b;	a	read
	m	(Lpy;Lti$b;)V	a	write
	f	Lti$a;	a	ADD_PLAYER
	f	Lti$a;	b	UPDATE_GAME_MODE
	f	Lti$a;	c	UPDATE_LATENCY
	f	Lti$a;	d	UPDATE_DISPLAY_NAME
	f	Lti$a;	e	REMOVE_PLAYER
	f	[Lti$a;	f	$VALUES
c	ti$a$1	net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action$1
	m	(Lcom/mojang/authlib/properties/PropertyMap;Lpy;)V	a	lambda$read$0
	m	(Lpy;)Lti$b;	a	read
	m	(Lpy;Lcom/mojang/authlib/properties/Property;)V	a	lambda$write$1
	m	(Lpy;Lti$b;)V	a	write
c	ti$a$2	net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action$2
	m	(Lpy;)Lti$b;	a	read
	m	(Lpy;Lti$b;)V	a	write
c	ti$a$3	net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action$3
	m	(Lpy;)Lti$b;	a	read
	m	(Lpy;Lti$b;)V	a	write
c	ti$a$4	net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action$4
	m	(Lpy;)Lti$b;	a	read
	m	(Lpy;Lti$b;)V	a	write
c	ti$a$5	net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action$5
	m	(Lpy;)Lti$b;	a	read
	m	(Lpy;Lti$b;)V	a	write
c	ti$b	net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate
	m	()Lcom/mojang/authlib/GameProfile;	a	getProfile
	m	()I	b	getLatency
	m	()Lcas;	c	getGameMode
	m	()Lqk;	d	getDisplayName
	f	I	a	latency
	f	Lcas;	b	gameMode
	f	Lcom/mojang/authlib/GameProfile;	c	profile
	f	Lqk;	d	displayName
c	tj	net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket
	m	(Lcav;)Ldpo;	a	getPosition
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Ldv$a;	b	getFromAnchor
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	I	d	entity
	f	Ldv$a;	e	fromAnchor
	f	Ldv$a;	f	toAnchor
	f	Z	g	atEntity
c	tk	net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()D	b	getX
	m	()D	c	getY
	m	()D	d	getZ
	m	()F	e	getYRot
	m	()F	f	getXRot
	m	()I	g	getId
	m	()Z	h	requestDismountVehicle
	m	()Ljava/util/Set;	i	getRelativeArguments
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
	f	Ljava/util/Set;	f	relativeArguments
	f	I	g	id
	f	Z	h	dismountVehicle
c	tk$a	net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket$RelativeArgument
	m	()I	a	getMask
	m	(I)Ljava/util/Set;	a	unpack
	m	(Ljava/util/Set;)I	a	pack
	m	()[Ltk$a;	b	$values
	m	(I)Z	b	isSet
	f	Ltk$a;	a	X
	f	Ltk$a;	b	Y
	f	Ltk$a;	c	Z
	f	Ltk$a;	d	Y_ROT
	f	Ltk$a;	e	X_ROT
	f	I	f	bit
	f	[Ltk$a;	g	$VALUES
c	tl	net/minecraft/network/protocol/game/ClientboundRecipePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Ljava/util/List;	b	getRecipes
	m	()Ljava/util/List;	c	getHighlights
	m	()Laho;	d	getBookSettings
	m	()Ltl$a;	e	getState
	f	Ltl$a;	a	state
	f	Ljava/util/List;	b	recipes
	f	Ljava/util/List;	c	toHighlight
	f	Laho;	d	bookSettings
c	tl$a	net/minecraft/network/protocol/game/ClientboundRecipePacket$State
	m	()[Ltl$a;	a	$values
	f	Ltl$a;	a	INIT
	f	Ltl$a;	b	ADD
	f	Ltl$a;	c	REMOVE
	f	[Ltl$a;	d	$VALUES
c	tm	net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	b	getEntityIds
	f	Lit/unimi/dsi/fastutil/ints/IntList;	a	entityIds
c	tn	net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket
	m	(Lcav;)Laxk;	a	getEntity
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Laxc;	b	getEffect
	f	I	a	entityId
	f	Laxc;	b	effect
c	to	net/minecraft/network/protocol/game/ClientboundResourcePackPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Ljava/lang/String;	b	getUrl
	m	()Ljava/lang/String;	c	getHash
	m	()Z	d	isRequired
	m	()Lqk;	e	getPrompt
	f	I	a	MAX_HASH_LENGTH
	f	Ljava/lang/String;	b	url
	f	Ljava/lang/String;	c	hash
	f	Z	d	required
	f	Lqk;	e	prompt
c	tp	net/minecraft/network/protocol/game/ClientboundRespawnPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lgs;	b	getDimensionType
	m	()Lys;	c	getDimension
	m	()J	d	getSeed
	m	()Lcas;	e	getPlayerGameType
	m	()Lcas;	f	getPreviousPlayerGameType
	m	()Z	g	isDebug
	m	()Z	h	isFlat
	m	()Z	i	shouldKeepAllPlayerData
	f	Lgs;	a	dimensionType
	f	Lys;	b	dimension
	f	J	c	seed
	f	Lcas;	d	playerGameType
	f	Lcas;	e	previousPlayerGameType
	f	Z	f	isDebug
	f	Z	g	isFlat
	f	Z	h	keepAllPlayerData
c	tq	net/minecraft/network/protocol/game/ClientboundRotateHeadPacket
	m	(Lcav;)Laxk;	a	getEntity
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()B	b	getYHeadRot
	f	I	a	entityId
	f	B	b	yHeadRot
c	tr	net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket
	m	(Ljava/util/function/BiConsumer;)V	a	runUpdates
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Z	b	shouldSuppressLightUpdates
	f	I	a	POS_IN_SECTION_BITS
	f	Lhf;	b	sectionPos
	f	[S	c	positions
	f	[Lcov;	d	states
	f	Z	e	suppressLightUpdates
c	ts	net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lyt;	b	getTab
	f	Lyt;	a	tab
c	tt	net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lqk;	b	getText
	f	Lqk;	a	text
c	tu	net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()D	b	getNewCenterZ
	m	()D	c	getNewCenterX
	f	D	a	newCenterX
	f	D	b	newCenterZ
c	tv	net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()D	b	getOldSize
	m	()D	c	getNewSize
	m	()J	d	getLerpTime
	f	D	a	oldSize
	f	D	b	newSize
	f	J	c	lerpTime
c	tw	net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()D	b	getSize
	f	D	a	size
c	tx	net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getWarningDelay
	f	I	a	warningDelay
c	ty	net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getWarningBlocks
	f	I	a	warningBlocks
c	tz	net/minecraft/network/protocol/game/ClientboundSetCameraPacket
	m	(Lcav;)Laxk;	a	getEntity
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	f	I	a	cameraId
c	ua	net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getSlot
	f	I	a	slot
c	ub	net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getX
	m	()I	c	getZ
	f	I	a	x
	f	I	b	z
c	uc	net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getRadius
	f	I	a	radius
c	ud	net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lgj;	b	getPos
	m	()F	c	getAngle
	f	Lgj;	a	pos
	f	F	b	angle
c	ue	net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getSlot
	m	()Ljava/lang/String;	c	getObjectiveName
	f	I	a	slot
	f	Ljava/lang/String;	b	objectiveName
c	uf	net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Ljava/util/List;	b	getUnpackedData
	m	()I	c	getId
	f	I	a	id
	f	Ljava/util/List;	b	packedItems
c	ug	net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getSourceId
	m	()I	c	getDestId
	f	I	a	sourceId
	f	I	b	destId
c	uh	net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getId
	m	()I	c	getXa
	m	()I	d	getYa
	m	()I	e	getZa
	f	I	a	id
	f	I	b	xa
	f	I	c	ya
	f	I	d	za
c	ui	net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getEntity
	m	()Ljava/util/List;	c	getSlots
	f	B	a	CONTINUE_MASK
	f	I	b	entity
	f	Ljava/util/List;	c	slots
c	uj	net/minecraft/network/protocol/game/ClientboundSetExperiencePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()F	b	getExperienceProgress
	m	()I	c	getTotalExperience
	m	()I	d	getExperienceLevel
	f	F	a	experienceProgress
	f	I	b	totalExperience
	f	I	c	experienceLevel
c	uk	net/minecraft/network/protocol/game/ClientboundSetHealthPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()F	b	getHealth
	m	()I	c	getFood
	m	()F	d	getSaturation
	f	F	a	health
	f	I	b	food
	f	F	c	saturation
c	ul	net/minecraft/network/protocol/game/ClientboundSetObjectivePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Ljava/lang/String;	b	getObjectiveName
	m	()Lqk;	c	getDisplayName
	m	()I	d	getMethod
	m	()Ldqp$a;	e	getRenderType
	f	I	a	METHOD_ADD
	f	I	b	METHOD_REMOVE
	f	I	c	METHOD_CHANGE
	f	Ljava/lang/String;	d	objectiveName
	f	Lqk;	e	displayName
	f	Ldqp$a;	f	renderType
	f	I	g	method
c	um	net/minecraft/network/protocol/game/ClientboundSetPassengersPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()[I	b	getPassengers
	m	()I	c	getVehicle
	f	I	a	vehicle
	f	[I	b	passengers
c	un	net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket
	m	(I)Z	a	shouldHavePlayerList
	m	(Ldqk;)Lun;	a	createRemovePacket
	m	(Ldqk;Ljava/lang/String;Lun$a;)Lun;	a	createPlayerPacket
	m	(Ldqk;Z)Lun;	a	createAddOrModifyPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lun$a;	b	getPlayerAction
	m	(I)Z	b	shouldHaveParameters
	m	()Lun$a;	c	getTeamAction
	m	()Ljava/lang/String;	d	getName
	m	()Ljava/util/Collection;	e	getPlayers
	m	()Ljava/util/Optional;	f	getParameters
	m	()Ljava/lang/IllegalStateException;	g	lambda$write$0
	f	I	a	METHOD_ADD
	f	I	b	METHOD_REMOVE
	f	I	c	METHOD_CHANGE
	f	I	d	METHOD_JOIN
	f	I	e	METHOD_LEAVE
	f	I	f	MAX_VISIBILITY_LENGTH
	f	I	g	MAX_COLLISION_LENGTH
	f	I	h	method
	f	Ljava/lang/String;	i	name
	f	Ljava/util/Collection;	j	players
	f	Ljava/util/Optional;	k	parameters
c	un$a	net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action
	m	()[Lun$a;	a	$values
	f	Lun$a;	a	ADD
	f	Lun$a;	b	REMOVE
	f	[Lun$a;	c	$VALUES
c	un$b	net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Parameters
	m	()Lqk;	a	getDisplayName
	m	(Lpy;)V	a	write
	m	()I	b	getOptions
	m	()Lp;	c	getColor
	m	()Ljava/lang/String;	d	getNametagVisibility
	m	()Ljava/lang/String;	e	getCollisionRule
	m	()Lqk;	f	getPlayerPrefix
	m	()Lqk;	g	getPlayerSuffix
	f	Lqk;	a	displayName
	f	Lqk;	b	playerPrefix
	f	Lqk;	c	playerSuffix
	f	Ljava/lang/String;	d	nametagVisibility
	f	Ljava/lang/String;	e	collisionRule
	f	Lp;	f	color
	f	I	g	options
c	uo	net/minecraft/network/protocol/game/ClientboundSetScorePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Ljava/lang/String;	b	getOwner
	m	()Ljava/lang/String;	c	getObjectiveName
	m	()I	d	getScore
	m	()Lzi$a;	e	getMethod
	f	Ljava/lang/String;	a	owner
	f	Ljava/lang/String;	b	objectiveName
	f	I	c	score
	f	Lzi$a;	d	method
c	up	net/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	simulationDistance
	f	I	a	simulationDistance
c	uq	net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lqk;	b	getText
	f	Lqk;	a	text
c	ur	net/minecraft/network/protocol/game/ClientboundSetTimePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()J	b	getGameTime
	m	()J	c	getDayTime
	f	J	a	gameTime
	f	J	b	dayTime
c	us	net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lqk;	b	getText
	f	Lqk;	a	text
c	ut	net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getFadeIn
	m	()I	c	getStay
	m	()I	d	getFadeOut
	f	I	a	fadeIn
	f	I	b	stay
	f	I	c	fadeOut
c	uu	net/minecraft/network/protocol/game/ClientboundSoundEntityPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lahj;	b	getSound
	m	()Lahl;	c	getSource
	m	()I	d	getId
	m	()F	e	getVolume
	m	()F	f	getPitch
	f	Lahj;	a	sound
	f	Lahl;	b	source
	f	I	c	id
	f	F	d	volume
	f	F	e	pitch
c	uv	net/minecraft/network/protocol/game/ClientboundSoundPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lahj;	b	getSound
	m	()Lahl;	c	getSource
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()F	g	getVolume
	m	()F	h	getPitch
	f	F	a	LOCATION_ACCURACY
	f	Lahj;	b	sound
	f	Lahl;	c	source
	f	I	d	x
	f	I	e	y
	f	I	f	z
	f	F	g	volume
	f	F	h	pitch
c	uw	net/minecraft/network/protocol/game/ClientboundStopSoundPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lyt;	b	getName
	m	()Lahl;	c	getSource
	f	I	a	HAS_SOURCE
	f	I	b	HAS_SOUND
	f	Lyt;	c	name
	f	Lahl;	d	source
c	ux	net/minecraft/network/protocol/game/ClientboundTabListPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Lqk;	b	getHeader
	m	()Lqk;	c	getFooter
	f	Lqk;	a	header
	f	Lqk;	b	footer
c	uy	net/minecraft/network/protocol/game/ClientboundTagQueryPacket
	m	()Z	a	isSkippable
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getTransactionId
	m	()Lok;	c	getTag
	f	I	a	transactionId
	f	Lok;	b	tag
c	uz	net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getItemId
	m	()I	c	getPlayerId
	m	()I	d	getAmount
	f	I	a	itemId
	f	I	b	playerId
	f	I	c	amount
c	va	net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getId
	m	()D	c	getX
	m	()D	d	getY
	m	()D	e	getZ
	m	()B	f	getyRot
	m	()B	g	getxRot
	m	()Z	h	isOnGround
	f	I	a	id
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	B	e	yRot
	f	B	f	xRot
	f	Z	g	onGround
c	vb	net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket
	m	(Lpy;)V	a	write
	m	(Lpy;Laf$a;)V	a	lambda$write$0
	m	(Lpy;Lah;)V	a	lambda$write$1
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Ljava/util/Map;	b	getAdded
	m	()Ljava/util/Set;	c	getRemoved
	m	()Ljava/util/Map;	d	getProgress
	m	()Z	e	shouldReset
	f	Z	a	reset
	f	Ljava/util/Map;	b	added
	f	Ljava/util/Set;	c	removed
	f	Ljava/util/Map;	d	progress
c	vc	net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket
	m	(Lpy;)V	a	write
	m	(Lpy;Layx;)V	a	lambda$write$2
	m	(Lpy;Lvc$a;)V	a	lambda$write$3
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()I	b	getEntityId
	m	(Lpy;)Lvc$a;	b	lambda$new$1
	m	()Ljava/util/List;	c	getValues
	m	(Lpy;)Layx;	c	lambda$new$0
	f	I	a	entityId
	f	Ljava/util/List;	b	attributes
c	vc$a	net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot
	m	()Layu;	a	getAttribute
	m	()D	b	getBase
	m	()Ljava/util/Collection;	c	getModifiers
	f	Layu;	a	attribute
	f	D	b	base
	f	Ljava/util/Collection;	c	modifiers
c	vd	net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Z	b	isSuperLongDuration
	m	()I	c	getEntityId
	m	()I	d	getEffectId
	m	()B	e	getEffectAmplifier
	m	()I	f	getEffectDurationTicks
	m	()Z	g	isEffectVisible
	m	()Z	h	isEffectAmbient
	m	()Z	i	effectShowsIcon
	f	I	a	FLAG_AMBIENT
	f	I	b	FLAG_VISIBLE
	f	I	c	FLAG_SHOW_ICON
	f	I	d	entityId
	f	I	e	effectId
	f	B	f	effectAmplifier
	f	I	g	effectDurationTicks
	f	B	h	flags
c	ve	net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket
	m	(Lpy;)V	a	write
	m	(Lpy;Lbxo;)V	a	toNetwork
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	(Lyt;)Ljava/lang/IllegalArgumentException;	a	lambda$fromNetwork$0
	m	()Ljava/util/List;	b	getRecipes
	m	(Lpy;)Lbxo;	b	fromNetwork
	f	Ljava/util/List;	a	recipes
c	vf	net/minecraft/network/protocol/game/ClientboundUpdateTagsPacket
	m	(Lpy;)V	a	write
	m	(Lpy;Laii$a;)V	a	lambda$write$2
	m	(Lpy;Lys;)V	a	lambda$write$1
	m	(Lqb;)V	a	handle
	m	(Lrf;)V	a	handle
	m	()Ljava/util/Map;	b	getTags
	m	(Lpy;)Lys;	b	lambda$new$0
	f	Ljava/util/Map;	a	tags
c	vg	net/minecraft/network/protocol/game/DebugEntityNameGenerator
	m	(Laxk;)Ljava/lang/String;	a	getEntityName
	m	(Ljava/util/Random;[Ljava/lang/String;)Ljava/lang/String;	a	getRandomString
	m	(Ljava/util/UUID;)Ljava/lang/String;	a	getEntityName
	m	(Ljava/util/UUID;)Ljava/util/Random;	b	getRandom
	f	[Ljava/lang/String;	a	NAMES_FIRST_PART
	f	[Ljava/lang/String;	b	NAMES_SECOND_PART
c	vh	net/minecraft/network/protocol/game/DebugPackets
	m	(Ladw;)V	a	sendGameTestClearPacket
	m	(Ladw;Lbht;)V	a	lambda$sendPoiPacketsForChunk$1
	m	(Ladw;Lcac;)V	a	sendPoiPacketsForChunk
	m	(Ladw;Lgj;)V	a	sendPoiAddedPacket
	m	(Ladw;Lgj;Ljava/lang/String;II)V	a	sendGameTestAddMarker
	m	(Ladw;Ljava/lang/Object;)Ljava/lang/String;	a	getShortDescription
	m	(Ladw;Ljava/util/Collection;)V	a	sendRaids
	m	(Ladw;Lpy;Lyt;)V	a	sendPacketToAllPlayers
	m	(Laxy;)V	a	sendEntityBrain
	m	(Laxy;J)Ljava/util/List;	a	getMemoryDescriptions
	m	(Laxy;Lpy;)V	a	writeBrain
	m	(Lbhv;)Z	a	lambda$sendPoiPacketsForChunk$0
	m	(Lbie;)V	a	sendBeeInfo
	m	(Lcav;Laya;Lbdu;)V	a	sendGoalSelector
	m	(Lcav;Laya;Ldjn;F)V	a	sendPathFindingPacket
	m	(Lcav;Lcsy;Lgj;)V	a	sendGameEventInfo
	m	(Lcav;Lcta;)V	a	sendGameEventListenerInfo
	m	(Lcav;Lgj;)V	a	sendNeighborsUpdatePacket
	m	(Lcav;Lgj;Lcov;Lcmo;)V	a	sendHiveInfo
	m	(Lcbn;Ldfr;)V	a	sendStructurePacket
	m	(Ljava/util/List;Ljava/lang/String;Lbfv;Ljava/lang/Integer;)V	a	lambda$writeBrain$6
	m	(Ljava/util/List;Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	a	lambda$writeBrain$7
	m	(Lpy;Lbfg;)V	a	lambda$sendGoalSelector$2
	m	(Lpy;Lbpo;)V	a	lambda$sendRaids$3
	m	(Lpy;Lbps;)V	a	lambda$writeBrain$4
	m	(Lpy;Ljava/lang/String;)V	a	lambda$writeBrain$5
	m	(Ladw;Lgj;)V	b	sendPoiRemovedPacket
	m	(Ladw;Lgj;)V	c	sendPoiTicketCountPacket
	m	(Ladw;Lgj;)V	d	sendVillageSectionsPacket
	f	Lorg/slf4j/Logger;	a	LOGGER
c	vi	net/minecraft/network/protocol/game/ServerGamePacketListener
	m	(Lvk;)V	a	handleAcceptTeleportPacket
	m	(Lvl;)V	a	handleBlockEntityTagQuery
	m	(Lvm;)V	a	handleChangeDifficulty
	m	(Lvn;)V	a	handleChat
	m	(Lvo;)V	a	handleClientCommand
	m	(Lvp;)V	a	handleClientInformation
	m	(Lvq;)V	a	handleCustomCommandSuggestions
	m	(Lvr;)V	a	handleContainerButtonClick
	m	(Lvs;)V	a	handleContainerClick
	m	(Lvt;)V	a	handleContainerClose
	m	(Lvu;)V	a	handleCustomPayload
	m	(Lvv;)V	a	handleEditBook
	m	(Lvw;)V	a	handleEntityTagQuery
	m	(Lvx;)V	a	handleInteract
	m	(Lvy;)V	a	handleJigsawGenerate
	m	(Lvz;)V	a	handleKeepAlive
	m	(Lwa;)V	a	handleLockDifficulty
	m	(Lwb;)V	a	handleMovePlayer
	m	(Lwc;)V	a	handleMoveVehicle
	m	(Lwd;)V	a	handlePaddleBoat
	m	(Lwe;)V	a	handlePickItem
	m	(Lwf;)V	a	handlePlaceRecipe
	m	(Lwg;)V	a	handlePlayerAbilities
	m	(Lwh;)V	a	handlePlayerAction
	m	(Lwi;)V	a	handlePlayerCommand
	m	(Lwj;)V	a	handlePlayerInput
	m	(Lwk;)V	a	handlePong
	m	(Lwl;)V	a	handleRecipeBookChangeSettingsPacket
	m	(Lwm;)V	a	handleRecipeBookSeenRecipePacket
	m	(Lwn;)V	a	handleRenameItem
	m	(Lwo;)V	a	handleResourcePackResponse
	m	(Lwp;)V	a	handleSeenAdvancements
	m	(Lwq;)V	a	handleSelectTrade
	m	(Lwr;)V	a	handleSetBeaconPacket
	m	(Lws;)V	a	handleSetCarriedItem
	m	(Lwt;)V	a	handleSetCommandBlock
	m	(Lwu;)V	a	handleSetCommandMinecart
	m	(Lwv;)V	a	handleSetCreativeModeSlot
	m	(Lww;)V	a	handleSetJigsawBlock
	m	(Lwx;)V	a	handleSetStructureBlock
	m	(Lwy;)V	a	handleSignUpdate
	m	(Lwz;)V	a	handleAnimate
	m	(Lxa;)V	a	handleTeleportToEntityPacket
	m	(Lxb;)V	a	handleUseItemOn
	m	(Lxc;)V	a	handleUseItem
c	vj	net/minecraft/network/protocol/game/ServerPacketListener
	m	()Z	b	shouldPropagateHandlingExceptions
c	vk	net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()I	b	getId
	f	I	a	id
c	vl	net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()I	b	getTransactionId
	m	()Lgj;	c	getPos
	f	I	a	transactionId
	f	Lgj;	b	pos
c	vm	net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Lawe;	b	getDifficulty
	f	Lawe;	a	difficulty
c	vn	net/minecraft/network/protocol/game/ServerboundChatPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Ljava/lang/String;	b	getMessage
	f	I	a	MAX_MESSAGE_LENGTH
	f	Ljava/lang/String;	b	message
c	vo	net/minecraft/network/protocol/game/ServerboundClientCommandPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Lvo$a;	b	getAction
	f	Lvo$a;	a	action
c	vo$a	net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action
	m	()[Lvo$a;	a	$values
	f	Lvo$a;	a	PERFORM_RESPAWN
	f	Lvo$a;	b	REQUEST_STATS
	f	[Lvo$a;	c	$VALUES
c	vp	net/minecraft/network/protocol/game/ServerboundClientInformationPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Ljava/lang/String;	b	language
	m	()I	c	viewDistance
	m	()Lboh;	d	chatVisibility
	m	()Z	e	chatColors
	m	()I	f	modelCustomisation
	m	()Laxt;	g	mainHand
	m	()Z	h	textFilteringEnabled
	m	()Z	i	allowsListing
	f	I	a	MAX_LANGUAGE_LENGTH
	f	Ljava/lang/String;	b	language
	f	I	c	viewDistance
	f	Lboh;	d	chatVisibility
	f	Z	e	chatColors
	f	I	f	modelCustomisation
	f	Laxt;	g	mainHand
	f	Z	h	textFilteringEnabled
	f	Z	i	allowsListing
c	vq	net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()I	b	getId
	m	()Ljava/lang/String;	c	getCommand
	f	I	a	id
	f	Ljava/lang/String;	b	command
c	vr	net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()I	b	getContainerId
	m	()I	c	getButtonId
	f	I	a	containerId
	f	I	b	buttonId
c	vs	net/minecraft/network/protocol/game/ServerboundContainerClickPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()I	b	getContainerId
	m	(Lpy;)Ljava/lang/Integer;	b	lambda$new$0
	m	()I	c	getSlotNum
	m	()I	d	getButtonNum
	m	()Lbuw;	e	getCarriedItem
	m	()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	getChangedSlots
	m	()Lbqy;	g	getClickType
	m	()I	h	getStateId
	f	I	a	MAX_SLOT_COUNT
	f	I	b	containerId
	f	I	c	stateId
	f	I	d	slotNum
	f	I	e	buttonNum
	f	Lbqy;	f	clickType
	f	Lbuw;	g	carriedItem
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	h	changedSlots
c	vt	net/minecraft/network/protocol/game/ServerboundContainerClosePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()I	b	getContainerId
	f	I	a	containerId
c	vu	net/minecraft/network/protocol/game/ServerboundCustomPayloadPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Lyt;	b	getIdentifier
	m	()Lpy;	c	getData
	f	Lyt;	a	BRAND
	f	I	b	MAX_PAYLOAD_SIZE
	f	Lyt;	c	identifier
	f	Lpy;	d	data
c	vv	net/minecraft/network/protocol/game/ServerboundEditBookPacket
	m	(Lpy;)V	a	write
	m	(Lpy;Ljava/lang/String;)V	a	lambda$write$3
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Ljava/util/List;	b	getPages
	m	(Lpy;)Ljava/lang/String;	b	lambda$new$1
	m	(Lpy;Ljava/lang/String;)V	b	lambda$write$2
	m	()Ljava/util/Optional;	c	getTitle
	m	(Lpy;)Ljava/lang/String;	c	lambda$new$0
	m	()I	d	getSlot
	f	I	a	MAX_BYTES_PER_CHAR
	f	I	b	TITLE_MAX_CHARS
	f	I	c	PAGE_MAX_CHARS
	f	I	d	MAX_PAGES_COUNT
	f	I	e	slot
	f	Ljava/util/List;	f	pages
	f	Ljava/util/Optional;	g	title
c	vw	net/minecraft/network/protocol/game/ServerboundEntityTagQuery
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()I	b	getTransactionId
	m	()I	c	getEntityId
	f	I	a	transactionId
	f	I	b	entityId
c	vx	net/minecraft/network/protocol/game/ServerboundInteractPacket
	m	(Ladw;)Laxk;	a	getTarget
	m	(Laxk;Z)Lvx;	a	createAttackPacket
	m	(Laxk;ZLawg;)Lvx;	a	createInteractionPacket
	m	(Laxk;ZLawg;Ldpo;)Lvx;	a	createInteractionPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	(Lvx$c;)V	a	dispatch
	m	()Z	b	isUsingSecondaryAction
	f	I	a	entityId
	f	Lvx$a;	b	action
	f	Z	c	usingSecondaryAction
	f	Lvx$a;	d	ATTACK_ACTION
c	vx$1	net/minecraft/network/protocol/game/ServerboundInteractPacket$1
	m	()Lvx$b;	a	getType
	m	(Lpy;)V	a	write
	m	(Lvx$c;)V	a	dispatch
c	vx$a	net/minecraft/network/protocol/game/ServerboundInteractPacket$Action
	m	()Lvx$b;	a	getType
	m	(Lpy;)V	a	write
	m	(Lvx$c;)V	a	dispatch
c	vx$b	net/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType
	m	()[Lvx$b;	a	$values
	m	(Lpy;)Lvx$a;	a	lambda$static$0
	f	Lvx$b;	a	INTERACT
	f	Lvx$b;	b	ATTACK
	f	Lvx$b;	c	INTERACT_AT
	f	Ljava/util/function/Function;	d	reader
	f	[Lvx$b;	e	$VALUES
c	vx$c	net/minecraft/network/protocol/game/ServerboundInteractPacket$Handler
	m	()V	a	onAttack
	m	(Lawg;)V	a	onInteraction
	m	(Lawg;Ldpo;)V	a	onInteraction
c	vx$d	net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAction
	m	()Lvx$b;	a	getType
	m	(Lpy;)V	a	write
	m	(Lvx$c;)V	a	dispatch
	f	Lawg;	a	hand
c	vx$e	net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAtLocationAction
	m	()Lvx$b;	a	getType
	m	(Lpy;)V	a	write
	m	(Lvx$c;)V	a	dispatch
	f	Lawg;	a	hand
	f	Ldpo;	b	location
c	vy	net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Lgj;	b	getPos
	m	()I	c	levels
	m	()Z	d	keepJigsaws
	f	Lgj;	a	pos
	f	I	b	levels
	f	Z	c	keepJigsaws
c	vz	net/minecraft/network/protocol/game/ServerboundKeepAlivePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()J	b	getId
	f	J	a	id
c	wa	net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Z	b	isLocked
	f	Z	a	locked
c	wb	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket
	m	(D)D	a	getX
	m	(F)F	a	getYRot
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Z	b	isOnGround
	m	(D)D	b	getY
	m	(F)F	b	getXRot
	m	()Z	c	hasPosition
	m	(D)D	c	getZ
	m	()Z	d	hasRotation
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
	f	Z	f	onGround
	f	Z	g	hasPos
	f	Z	h	hasRot
c	wb$a	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lpy;)Lwb$a;	b	read
c	wb$b	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lpy;)Lwb$b;	b	read
c	wb$c	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lpy;)Lwb$c;	b	read
c	wb$d	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lpy;)Lwb$d;	b	read
c	wc	net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()D	b	getX
	m	()D	c	getY
	m	()D	d	getZ
	m	()F	e	getYRot
	m	()F	f	getXRot
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
c	wd	net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Z	b	getLeft
	m	()Z	c	getRight
	f	Z	a	left
	f	Z	b	right
c	we	net/minecraft/network/protocol/game/ServerboundPickItemPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()I	b	getSlot
	f	I	a	slot
c	wf	net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()I	b	getContainerId
	m	()Lyt;	c	getRecipe
	m	()Z	d	isShiftDown
	f	I	a	containerId
	f	Lyt;	b	recipe
	f	Z	c	shiftDown
c	wg	net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Z	b	isFlying
	f	I	a	FLAG_FLYING
	f	Z	b	isFlying
c	wh	net/minecraft/network/protocol/game/ServerboundPlayerActionPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Lgj;	b	getPos
	m	()Lgo;	c	getDirection
	m	()Lwh$a;	d	getAction
	f	Lgj;	a	pos
	f	Lgo;	b	direction
	f	Lwh$a;	c	action
c	wh$a	net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action
	m	()[Lwh$a;	a	$values
	f	Lwh$a;	a	START_DESTROY_BLOCK
	f	Lwh$a;	b	ABORT_DESTROY_BLOCK
	f	Lwh$a;	c	STOP_DESTROY_BLOCK
	f	Lwh$a;	d	DROP_ALL_ITEMS
	f	Lwh$a;	e	DROP_ITEM
	f	Lwh$a;	f	RELEASE_USE_ITEM
	f	Lwh$a;	g	SWAP_ITEM_WITH_OFFHAND
	f	[Lwh$a;	h	$VALUES
c	wi	net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()I	b	getId
	m	()Lwi$a;	c	getAction
	m	()I	d	getData
	f	I	a	id
	f	Lwi$a;	b	action
	f	I	c	data
c	wi$a	net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action
	m	()[Lwi$a;	a	$values
	f	Lwi$a;	a	PRESS_SHIFT_KEY
	f	Lwi$a;	b	RELEASE_SHIFT_KEY
	f	Lwi$a;	c	STOP_SLEEPING
	f	Lwi$a;	d	START_SPRINTING
	f	Lwi$a;	e	STOP_SPRINTING
	f	Lwi$a;	f	START_RIDING_JUMP
	f	Lwi$a;	g	STOP_RIDING_JUMP
	f	Lwi$a;	h	OPEN_INVENTORY
	f	Lwi$a;	i	START_FALL_FLYING
	f	[Lwi$a;	j	$VALUES
c	wj	net/minecraft/network/protocol/game/ServerboundPlayerInputPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()F	b	getXxa
	m	()F	c	getZza
	m	()Z	d	isJumping
	m	()Z	e	isShiftKeyDown
	f	I	a	FLAG_JUMPING
	f	I	b	FLAG_SHIFT_KEY_DOWN
	f	F	c	xxa
	f	F	d	zza
	f	Z	e	isJumping
	f	Z	f	isShiftKeyDown
c	wk	net/minecraft/network/protocol/game/ServerboundPongPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()I	b	getId
	f	I	a	id
c	wl	net/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Lbrz;	b	getBookType
	m	()Z	c	isOpen
	m	()Z	d	isFiltering
	f	Lbrz;	a	bookType
	f	Z	b	isOpen
	f	Z	c	isFiltering
c	wm	net/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Lyt;	b	getRecipe
	f	Lyt;	a	recipe
c	wn	net/minecraft/network/protocol/game/ServerboundRenameItemPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Ljava/lang/String;	b	getName
	f	Ljava/lang/String;	a	name
c	wo	net/minecraft/network/protocol/game/ServerboundResourcePackPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Lwo$a;	b	getAction
	f	Lwo$a;	a	action
c	wo$a	net/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action
	m	()[Lwo$a;	a	$values
	f	Lwo$a;	a	SUCCESSFULLY_LOADED
	f	Lwo$a;	b	DECLINED
	f	Lwo$a;	c	FAILED_DOWNLOAD
	f	Lwo$a;	d	ACCEPTED
	f	[Lwo$a;	e	$VALUES
c	wp	net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket
	m	(Laf;)Lwp;	a	openedTab
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Lwp;	b	closedScreen
	m	()Lwp$a;	c	getAction
	m	()Lyt;	d	getTab
	f	Lwp$a;	a	action
	f	Lyt;	b	tab
c	wp$a	net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action
	m	()[Lwp$a;	a	$values
	f	Lwp$a;	a	OPENED_TAB
	f	Lwp$a;	b	CLOSED_SCREEN
	f	[Lwp$a;	c	$VALUES
c	wq	net/minecraft/network/protocol/game/ServerboundSelectTradePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()I	b	getItem
	f	I	a	item
c	wr	net/minecraft/network/protocol/game/ServerboundSetBeaconPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()I	b	getPrimary
	m	()I	c	getSecondary
	f	I	a	primary
	f	I	b	secondary
c	ws	net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()I	b	getSlot
	f	I	a	slot
c	wt	net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Lgj;	b	getPos
	m	()Ljava/lang/String;	c	getCommand
	m	()Z	d	isTrackOutput
	m	()Z	e	isConditional
	m	()Z	f	isAutomatic
	m	()Lcmy$a;	g	getMode
	f	I	a	FLAG_TRACK_OUTPUT
	f	I	b	FLAG_CONDITIONAL
	f	I	c	FLAG_AUTOMATIC
	f	Lgj;	d	pos
	f	Ljava/lang/String;	e	command
	f	Z	f	trackOutput
	f	Z	g	conditional
	f	Z	h	automatic
	f	Lcmy$a;	i	mode
c	wu	net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket
	m	(Lcav;)Lbzw;	a	getCommandBlock
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Ljava/lang/String;	b	getCommand
	m	()Z	c	isTrackOutput
	f	I	a	entity
	f	Ljava/lang/String;	b	command
	f	Z	c	trackOutput
c	wv	net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()I	b	getSlotNum
	m	()Lbuw;	c	getItem
	f	I	a	slotNum
	f	Lbuw;	b	itemStack
c	ww	net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Lgj;	b	getPos
	m	()Lyt;	c	getName
	m	()Lyt;	d	getTarget
	m	()Lyt;	e	getPool
	m	()Ljava/lang/String;	f	getFinalState
	m	()Lcnk$a;	g	getJoint
	f	Lgj;	a	pos
	f	Lyt;	b	name
	f	Lyt;	c	target
	f	Lyt;	d	pool
	f	Ljava/lang/String;	e	finalState
	f	Lcnk$a;	f	joint
c	wx	net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Lgj;	b	getPos
	m	()Lcnv$a;	c	getUpdateType
	m	()Lcqe;	d	getMode
	m	()Ljava/lang/String;	e	getName
	m	()Lgj;	f	getOffset
	m	()Lhh;	g	getSize
	m	()Lchz;	h	getMirror
	m	()Lcjm;	i	getRotation
	m	()Ljava/lang/String;	j	getData
	m	()Z	k	isIgnoreEntities
	m	()Z	l	isShowAir
	m	()Z	m	isShowBoundingBox
	m	()F	n	getIntegrity
	m	()J	o	getSeed
	f	I	a	FLAG_IGNORE_ENTITIES
	f	I	b	FLAG_SHOW_AIR
	f	I	c	FLAG_SHOW_BOUNDING_BOX
	f	Lgj;	d	pos
	f	Lcnv$a;	e	updateType
	f	Lcqe;	f	mode
	f	Ljava/lang/String;	g	name
	f	Lgj;	h	offset
	f	Lhh;	i	size
	f	Lchz;	j	mirror
	f	Lcjm;	k	rotation
	f	Ljava/lang/String;	l	data
	f	Z	m	ignoreEntities
	f	Z	n	showAir
	f	Z	o	showBoundingBox
	f	F	p	integrity
	f	J	q	seed
c	wy	net/minecraft/network/protocol/game/ServerboundSignUpdatePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Lgj;	b	getPos
	m	()[Ljava/lang/String;	c	getLines
	f	I	a	MAX_STRING_LENGTH
	f	Lgj;	b	pos
	f	[Ljava/lang/String;	c	lines
c	wz	net/minecraft/network/protocol/game/ServerboundSwingPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Lawg;	b	getHand
	f	Lawg;	a	hand
c	xa	net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket
	m	(Ladw;)Laxk;	a	getEntity
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	f	Ljava/util/UUID;	a	uuid
c	xb	net/minecraft/network/protocol/game/ServerboundUseItemOnPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Lawg;	b	getHand
	m	()Ldpk;	c	getHitResult
	f	Ldpk;	a	blockHit
	f	Lawg;	b	hand
c	xc	net/minecraft/network/protocol/game/ServerboundUseItemPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lvi;)V	a	handle
	m	()Lawg;	b	getHand
	f	Lawg;	a	hand
c	xd	net/minecraft/network/protocol/game/package-info
c	xe	net/minecraft/network/protocol/handshake/ClientIntentionPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lxf;)V	a	handle
	m	()Lpx;	b	getIntention
	m	()I	c	getProtocolVersion
	m	()Ljava/lang/String;	d	getHostName
	m	()I	e	getPort
	f	I	a	MAX_HOST_LENGTH
	f	I	b	protocolVersion
	f	Ljava/lang/String;	c	hostName
	f	I	d	port
	f	Lpx;	e	intention
c	xf	net/minecraft/network/protocol/handshake/ServerHandshakePacketListener
	m	(Lxe;)V	a	handleIntention
c	xg	net/minecraft/network/protocol/handshake/package-info
c	xh	net/minecraft/network/protocol/login/ClientLoginPacketListener
	m	(Lxi;)V	a	handleCustomQuery
	m	(Lxj;)V	a	handleGameProfile
	m	(Lxk;)V	a	handleHello
	m	(Lxl;)V	a	handleCompression
	m	(Lxm;)V	a	handleDisconnect
c	xi	net/minecraft/network/protocol/login/ClientboundCustomQueryPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lxh;)V	a	handle
	m	()I	b	getTransactionId
	m	()Lyt;	c	getIdentifier
	m	()Lpy;	d	getData
	f	I	a	MAX_PAYLOAD_SIZE
	f	I	b	transactionId
	f	Lyt;	c	identifier
	f	Lpy;	d	data
c	xj	net/minecraft/network/protocol/login/ClientboundGameProfilePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lxh;)V	a	handle
	m	()Lcom/mojang/authlib/GameProfile;	b	getGameProfile
	f	Lcom/mojang/authlib/GameProfile;	a	gameProfile
c	xk	net/minecraft/network/protocol/login/ClientboundHelloPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lxh;)V	a	handle
	m	()Ljava/lang/String;	b	getServerId
	m	()Ljava/security/PublicKey;	c	getPublicKey
	m	()[B	d	getNonce
	f	Ljava/lang/String;	a	serverId
	f	[B	b	publicKey
	f	[B	c	nonce
c	xl	net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lxh;)V	a	handle
	m	()I	b	getCompressionThreshold
	f	I	a	compressionThreshold
c	xm	net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lxh;)V	a	handle
	m	()Lqk;	b	getReason
	f	Lqk;	a	reason
c	xn	net/minecraft/network/protocol/login/ServerLoginPacketListener
	m	(Lxo;)V	a	handleCustomQueryPacket
	m	(Lxp;)V	a	handleHello
	m	(Lxq;)V	a	handleKey
c	xo	net/minecraft/network/protocol/login/ServerboundCustomQueryPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lxn;)V	a	handle
	m	()I	b	getTransactionId
	m	()Lpy;	c	getData
	f	I	a	MAX_PAYLOAD_SIZE
	f	I	b	transactionId
	f	Lpy;	c	data
c	xp	net/minecraft/network/protocol/login/ServerboundHelloPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lxn;)V	a	handle
	m	()Lcom/mojang/authlib/GameProfile;	b	getGameProfile
	f	Lcom/mojang/authlib/GameProfile;	a	gameProfile
c	xq	net/minecraft/network/protocol/login/ServerboundKeyPacket
	m	(Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey;	a	getSecretKey
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lxn;)V	a	handle
	m	(Ljava/security/PrivateKey;)[B	b	getNonce
	f	[B	a	keybytes
	f	[B	b	nonce
c	xr	net/minecraft/network/protocol/login/package-info
c	xs	net/minecraft/network/protocol/package-info
c	xt	net/minecraft/network/protocol/status/ClientStatusPacketListener
	m	(Lxu;)V	a	handlePongResponse
	m	(Lxv;)V	a	handleStatusResponse
c	xu	net/minecraft/network/protocol/status/ClientboundPongResponsePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lxt;)V	a	handle
	m	()J	b	getTime
	f	J	a	time
c	xv	net/minecraft/network/protocol/status/ClientboundStatusResponsePacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lxt;)V	a	handle
	m	()Lxw;	b	getStatus
	f	Lcom/google/gson/Gson;	a	GSON
	f	Lxw;	b	status
c	xw	net/minecraft/network/protocol/status/ServerStatus
	m	()Lqk;	a	getDescription
	m	(Ljava/lang/String;)V	a	setFavicon
	m	(Lqk;)V	a	setDescription
	m	(Lxw$a;)V	a	setPlayers
	m	(Lxw$c;)V	a	setVersion
	m	()Lxw$a;	b	getPlayers
	m	()Lxw$c;	c	getVersion
	m	()Ljava/lang/String;	d	getFavicon
	f	I	a	FAVICON_WIDTH
	f	I	b	FAVICON_HEIGHT
	f	Lqk;	c	description
	f	Lxw$a;	d	players
	f	Lxw$c;	e	version
	f	Ljava/lang/String;	f	favicon
c	xw$a	net/minecraft/network/protocol/status/ServerStatus$Players
	m	()I	a	getMaxPlayers
	m	([Lcom/mojang/authlib/GameProfile;)V	a	setSample
	m	()I	b	getNumPlayers
	m	()[Lcom/mojang/authlib/GameProfile;	c	getSample
	f	I	a	maxPlayers
	f	I	b	numPlayers
	f	[Lcom/mojang/authlib/GameProfile;	c	sample
c	xw$a$a	net/minecraft/network/protocol/status/ServerStatus$Players$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lxw$a;	a	deserialize
	m	(Lxw$a;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	xw$b	net/minecraft/network/protocol/status/ServerStatus$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lxw;	a	deserialize
	m	(Lxw;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	xw$c	net/minecraft/network/protocol/status/ServerStatus$Version
	m	()Ljava/lang/String;	a	getName
	m	()I	b	getProtocol
	f	Ljava/lang/String;	a	name
	f	I	b	protocol
c	xw$c$a	net/minecraft/network/protocol/status/ServerStatus$Version$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lxw$c;	a	deserialize
	m	(Lxw$c;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	xx	net/minecraft/network/protocol/status/ServerStatusPacketListener
	m	(Lxy;)V	a	handlePingRequest
	m	(Lxz;)V	a	handleStatusRequest
c	xy	net/minecraft/network/protocol/status/ServerboundPingRequestPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lxx;)V	a	handle
	m	()J	b	getTime
	f	J	a	time
c	xz	net/minecraft/network/protocol/status/ServerboundStatusRequestPacket
	m	(Lpy;)V	a	write
	m	(Lqb;)V	a	handle
	m	(Lxx;)V	a	handle
c	ya	net/minecraft/network/protocol/status/package-info
c	yb	net/minecraft/network/syncher/EntityDataAccessor
	m	()I	a	getId
	m	()Lyc;	b	getSerializer
	f	I	a	id
	f	Lyc;	b	serializer
c	yc	net/minecraft/network/syncher/EntityDataSerializer
	m	(I)Lyb;	a	createAccessor
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Ljava/lang/Object;)V	a	write
c	yd	net/minecraft/network/syncher/EntityDataSerializers
	m	(I)Lyc;	a	getSerializer
	m	(Lyc;)V	a	registerSerializer
	m	(Lyc;)I	b	getSerializedId
	f	Lyc;	a	BYTE
	f	Lyc;	b	INT
	f	Lyc;	c	FLOAT
	f	Lyc;	d	STRING
	f	Lyc;	e	COMPONENT
	f	Lyc;	f	OPTIONAL_COMPONENT
	f	Lyc;	g	ITEM_STACK
	f	Lyc;	h	BLOCK_STATE
	f	Lyc;	i	BOOLEAN
	f	Lyc;	j	PARTICLE
	f	Lyc;	k	ROTATIONS
	f	Lyc;	l	BLOCK_POS
	f	Lyc;	m	OPTIONAL_BLOCK_POS
	f	Lyc;	n	DIRECTION
	f	Lyc;	o	OPTIONAL_UUID
	f	Lyc;	p	COMPOUND_TAG
	f	Lyc;	q	VILLAGER_DATA
	f	Lyc;	r	OPTIONAL_UNSIGNED_INT
	f	Lyc;	s	POSE
	f	Laim;	t	SERIALIZERS
c	yd$1	net/minecraft/network/syncher/EntityDataSerializers$1
	m	(Ljava/lang/Byte;)Ljava/lang/Byte;	a	copy
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Ljava/lang/Byte;)V	a	write
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;)Ljava/lang/Byte;	b	read
c	yd$2	net/minecraft/network/syncher/EntityDataSerializers$10
	m	(Lia;)Lia;	a	copy
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Lia;)V	a	write
	m	(Lpy;Lib;)Lia;	a	readParticle
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;)Lia;	b	read
c	yd$3	net/minecraft/network/syncher/EntityDataSerializers$11
	m	(Lhe;)Lhe;	a	copy
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Lhe;)V	a	write
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;)Lhe;	b	read
c	yd$4	net/minecraft/network/syncher/EntityDataSerializers$12
	m	(Lgj;)Lgj;	a	copy
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Lgj;)V	a	write
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;)Lgj;	b	read
c	yd$5	net/minecraft/network/syncher/EntityDataSerializers$13
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;Ljava/util/Optional;)V	a	write
	m	(Lpy;)Ljava/util/Optional;	b	read
c	yd$6	net/minecraft/network/syncher/EntityDataSerializers$14
	m	(Lgo;)Lgo;	a	copy
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Lgo;)V	a	write
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;)Lgo;	b	read
c	yd$7	net/minecraft/network/syncher/EntityDataSerializers$15
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;Ljava/util/Optional;)V	a	write
	m	(Lpy;)Ljava/util/Optional;	b	read
c	yd$8	net/minecraft/network/syncher/EntityDataSerializers$16
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Lok;)Lok;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;Lok;)V	a	write
	m	(Lpy;)Lok;	b	read
c	yd$9	net/minecraft/network/syncher/EntityDataSerializers$17
	m	(Lbnx;)Lbnx;	a	copy
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Lbnx;)V	a	write
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;)Lbnx;	b	read
c	yd$10	net/minecraft/network/syncher/EntityDataSerializers$18
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Ljava/util/OptionalInt;)Ljava/util/OptionalInt;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;Ljava/util/OptionalInt;)V	a	write
	m	(Lpy;)Ljava/util/OptionalInt;	b	read
c	yd$11	net/minecraft/network/syncher/EntityDataSerializers$19
	m	(Layk;)Layk;	a	copy
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Layk;)V	a	write
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;)Layk;	b	read
c	yd$12	net/minecraft/network/syncher/EntityDataSerializers$2
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	copy
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Ljava/lang/Integer;)V	a	write
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;)Ljava/lang/Integer;	b	read
c	yd$13	net/minecraft/network/syncher/EntityDataSerializers$3
	m	(Ljava/lang/Float;)Ljava/lang/Float;	a	copy
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Ljava/lang/Float;)V	a	write
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;)Ljava/lang/Float;	b	read
c	yd$14	net/minecraft/network/syncher/EntityDataSerializers$4
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Ljava/lang/String;)Ljava/lang/String;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;Ljava/lang/String;)V	a	write
	m	(Lpy;)Ljava/lang/String;	b	read
c	yd$15	net/minecraft/network/syncher/EntityDataSerializers$5
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;Lqk;)V	a	write
	m	(Lqk;)Lqk;	a	copy
	m	(Lpy;)Lqk;	b	read
c	yd$16	net/minecraft/network/syncher/EntityDataSerializers$6
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;Ljava/util/Optional;)V	a	write
	m	(Lpy;)Ljava/util/Optional;	b	read
c	yd$17	net/minecraft/network/syncher/EntityDataSerializers$7
	m	(Lbuw;)Lbuw;	a	copy
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Lbuw;)V	a	write
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;)Lbuw;	b	read
c	yd$18	net/minecraft/network/syncher/EntityDataSerializers$8
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;Ljava/util/Optional;)V	a	write
	m	(Lpy;)Ljava/util/Optional;	b	read
c	yd$19	net/minecraft/network/syncher/EntityDataSerializers$9
	m	(Ljava/lang/Boolean;)Ljava/lang/Boolean;	a	copy
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Lpy;)Ljava/lang/Object;	a	read
	m	(Lpy;Ljava/lang/Boolean;)V	a	write
	m	(Lpy;Ljava/lang/Object;)V	a	write
	m	(Lpy;)Ljava/lang/Boolean;	b	read
c	ye	net/minecraft/network/syncher/SynchedEntityData
	m	()Z	a	isDirty
	m	(Ljava/lang/Class;Lyc;)Lyb;	a	defineId
	m	(Ljava/util/List;)V	a	assignValues
	m	(Ljava/util/List;Lpy;)V	a	pack
	m	(Lpy;)Ljava/util/List;	a	unpack
	m	(Lpy;ILyc;)Lye$a;	a	genericHelper
	m	(Lpy;Lye$a;)V	a	writeDataItem
	m	(Lyb;)Ljava/lang/Object;	a	get
	m	(Lyb;Ljava/lang/Object;)V	a	define
	m	(Lye$a;Lye$a;)V	a	assignValue
	m	()Ljava/util/List;	b	packDirty
	m	(Lyb;)Lye$a;	b	getItem
	m	(Lyb;Ljava/lang/Object;)V	b	set
	m	()Ljava/util/List;	c	getAll
	m	(Lyb;Ljava/lang/Object;)V	c	createDataItem
	m	()Z	d	isEmpty
	m	()V	e	clearDirty
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	ENTITY_ID_POOL
	f	I	c	EOF_MARKER
	f	I	d	MAX_ID_VALUE
	f	Laxk;	e	entity
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	itemsById
	f	Ljava/util/concurrent/locks/ReadWriteLock;	g	lock
	f	Z	h	isEmpty
	f	Z	i	isDirty
c	ye$a	net/minecraft/network/syncher/SynchedEntityData$DataItem
	m	()Lyb;	a	getAccessor
	m	(Ljava/lang/Object;)V	a	setValue
	m	(Z)V	a	setDirty
	m	()Ljava/lang/Object;	b	getValue
	m	()Z	c	isDirty
	m	()Lye$a;	d	copy
	f	Lyb;	a	accessor
	f	Ljava/lang/Object;	b	value
	f	Z	c	dirty
c	yf	net/minecraft/network/syncher/package-info
c	yg	net/minecraft/obfuscate/package-info
c	yh	net/minecraft/package-info
c	yi	net/minecraft/recipebook/PlaceRecipe
	m	(IIILbxo;Ljava/util/Iterator;I)V	a	placeRecipe
	m	(Ljava/util/Iterator;IIII)V	a	addItemToSlot
c	yj	net/minecraft/recipebook/ServerPlaceRecipe
	m	()Z	a	testClearGrid
	m	(Ladx;Lbxo;Z)V	a	recipeClicked
	m	(Lbsg;Lbuw;)V	a	moveItemToGrid
	m	(Lbxo;Z)V	a	handleRecipeClicked
	m	(Ljava/util/Iterator;IIII)V	a	addItemToSlot
	m	(Z)V	a	clearGrid
	m	(ZIZ)I	a	getStackSize
	m	()I	b	getAmountOfFreeSlotsInInventory
	f	Lbol;	a	stackedContents
	f	Lboi;	b	inventory
	f	Lbry;	c	menu
	f	Lorg/slf4j/Logger;	d	LOGGER
c	yk	net/minecraft/recipebook/package-info
c	yl	net/minecraft/resources/DelegatingOps
	f	Lcom/mojang/serialization/DynamicOps;	a	delegate
c	ym	net/minecraft/resources/HolderSetCodec
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/List;	a	lambda$homogenousList$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decodeWithoutRegistry$5
	m	(Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	homogenousList
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	decodeWithoutRegistry
	m	(Lgt;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lhb;Lcom/mojang/datafixers/util/Either;)Lgt;	a	lambda$decode$3
	m	(Lhb;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$4
	m	(Ljava/util/List;)Lcom/mojang/datafixers/util/Either;	a	lambda$homogenousList$2
	m	(Lys;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	create
	m	(Lgt;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	encodeWithoutRegistry
	m	(Ljava/util/List;)Ljava/util/List;	b	lambda$homogenousList$0
	f	Lys;	a	registryKey
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
	f	Lcom/mojang/serialization/Codec;	c	homogenousListCodec
	f	Lcom/mojang/serialization/Codec;	d	registryAwareCodec
c	yn	net/minecraft/resources/RegistryFileCodec
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$4
	m	(Lcom/mojang/datafixers/util/Pair;Lgs;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$3
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$1
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lys;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$0
	m	(Lgs;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lys;Lcom/mojang/serialization/Codec;)Lyn;	a	create
	m	(Lys;Lcom/mojang/serialization/Codec;Z)Lyn;	a	create
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$decode$2
	f	Lys;	a	registryKey
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
	f	Z	c	allowInline
c	yo	net/minecraft/resources/RegistryFixedCodec
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lys;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$0
	m	(Lgs;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$1
	m	(Ljava/util/Optional;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$3
	m	(Ljava/util/Optional;Lyt;)Lgs;	a	lambda$decode$2
	m	(Lys;)Lyo;	a	create
	f	Lys;	a	registryKey
c	yp	net/minecraft/resources/RegistryLoader
	m	(Lgs;Lyr$b;)Lgs;	a	lambda$overrideElementFromResources$2
	m	(Lhc$e;)Lyp$a;	a	bind
	m	(Lhi;Lgs;)Lhi;	a	lambda$overrideRegistryFromResources$0
	m	(Lhi;Lys;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	overrideRegistryFromResources
	m	(Lhi;Lys;Lcom/mojang/serialization/Codec;Lys;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	overrideElementFromResources
	m	(Lys;)Lyp$b;	a	readCache
	m	(Lys;Lcom/mojang/serialization/Codec;Lys;Lcom/mojang/serialization/DynamicOps;Lhi;)Lcom/mojang/serialization/DataResult;	a	lambda$overrideRegistryFromResources$1
	m	(Lys;)Lyp$b;	b	lambda$readCache$3
	f	Lyr;	a	resources
	f	Ljava/util/Map;	b	readCache
c	yp$a	net/minecraft/resources/RegistryLoader$Bound
	m	()Lhc$e;	a	access
	m	(Lys;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	overrideRegistryFromResources
	m	(Lys;Lcom/mojang/serialization/Codec;Lys;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	overrideElementFromResources
	m	()Lyp;	b	loader
	f	Lhc$e;	a	access
	f	Lyp;	b	loader
c	yp$b	net/minecraft/resources/RegistryLoader$ReadCache
	f	Ljava/util/Map;	a	values
c	yq	net/minecraft/resources/RegistryOps
	m	()Ljava/util/Optional;	a	registryLoader
	m	(Lcom/mojang/serialization/DynamicOps;Lhc$e;Laga;)Lyq;	a	createAndLoad
	m	(Lcom/mojang/serialization/DynamicOps;Lhc$e;Lyr;)Lyq;	a	createAndLoad
	m	(Lcom/mojang/serialization/DynamicOps;Lhc;)Lyq;	a	create
	m	(Lhb;)Lcom/mojang/serialization/DataResult;	a	lambda$retrieveRegistry$0
	m	(Lys;)Ljava/util/Optional;	a	registry
	m	(Lys;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	lambda$retrieveRegistry$2
	m	()Lcom/mojang/serialization/DynamicOps;	b	getAsJson
	m	(Lys;)Lcom/mojang/serialization/MapCodec;	b	retrieveRegistry
	m	(Lys;)Lcom/mojang/serialization/DataResult;	c	lambda$retrieveRegistry$1
	f	Ljava/util/Optional;	b	loader
	f	Lhc;	c	registryAccess
	f	Lcom/mojang/serialization/DynamicOps;	d	asJson
c	yr	net/minecraft/resources/RegistryResourceAccess
	m	(Laga;)Lyr;	a	forResourceManager
	m	(Lcom/mojang/serialization/DynamicOps;Lys;Lys;Lcom/mojang/serialization/Decoder;)Ljava/util/Optional;	a	parseElement
	m	(Lys;)Ljava/util/Collection;	a	listResources
c	yr$1	net/minecraft/resources/RegistryResourceAccess$1
	m	(Lcom/mojang/serialization/DynamicOps;Lys;Lys;Lcom/mojang/serialization/Decoder;)Ljava/util/Optional;	a	parseElement
	m	(Ljava/lang/String;)Z	a	lambda$listResources$0
	m	(Ljava/lang/String;Ljava/util/Set;Lys;Lyt;)V	a	lambda$listResources$1
	m	(Lys;)Ljava/util/Collection;	a	listResources
	m	(Lys;Lys;)Lyt;	a	elementPath
	m	(Lys;)Ljava/lang/String;	b	registryDirPath
	f	Laga;	a	val$manager
	f	Ljava/lang/String;	b	JSON
c	yr$a	net/minecraft/resources/RegistryResourceAccess$InMemoryStorage
	m	(Lcom/mojang/serialization/DynamicOps;Lys;Lys;Lcom/mojang/serialization/Decoder;)Ljava/util/Optional;	a	parseElement
	m	(Lhc;Lys;Lcom/mojang/serialization/Encoder;ILjava/lang/Object;Lcom/mojang/serialization/Lifecycle;)V	a	add
	m	(Lyr$a$a;Ljava/lang/Object;)Lyr$b;	a	lambda$parseElement$1
	m	(Lys;)Ljava/util/Collection;	a	listResources
	m	(Lys;Lys;)Ljava/util/stream/Stream;	a	lambda$listResources$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	entries
c	yr$a$a	net/minecraft/resources/RegistryResourceAccess$InMemoryStorage$Entry
	m	()Lcom/google/gson/JsonElement;	a	data
	m	()I	b	id
	m	()Lcom/mojang/serialization/Lifecycle;	c	lifecycle
	f	Lcom/google/gson/JsonElement;	a	data
	f	I	b	id
	f	Lcom/mojang/serialization/Lifecycle;	c	lifecycle
c	yr$b	net/minecraft/resources/RegistryResourceAccess$ParsedEntry
	m	()Ljava/lang/Object;	a	value
	m	(Ljava/lang/Object;)Lyr$b;	a	createWithoutId
	m	(Ljava/lang/Object;I)Lyr$b;	a	createWithId
	m	()Ljava/util/OptionalInt;	b	fixedId
	f	Ljava/lang/Object;	a	value
	f	Ljava/util/OptionalInt;	b	fixedId
c	ys	net/minecraft/resources/ResourceKey
	m	()Lyt;	a	location
	m	(Lys;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lys;Lyt;)Lys;	a	create
	m	(Lyt;)Lys;	a	createRegistryKey
	m	(Lyt;Lyt;)Lys;	a	create
	m	(Lyt;Lyt;Ljava/lang/String;)Lys;	a	lambda$create$1
	m	()Lyt;	b	registry
	m	(Lys;)Z	b	isFor
	m	(Lys;Lyt;)Lys;	b	lambda$elementKey$2
	m	(Lys;)Ljava/util/Optional;	c	cast
	m	(Lys;Lyt;)Lys;	c	lambda$codec$0
	m	(Lys;)Ljava/util/function/Function;	d	elementKey
	f	Ljava/util/Map;	a	VALUES
	f	Lyt;	b	registryName
	f	Lyt;	c	location
c	yt	net/minecraft/resources/ResourceLocation
	m	()Ljava/lang/String;	a	getPath
	m	(C)Z	a	isAllowedInResourceLocation
	m	(Lcom/mojang/brigadier/StringReader;)Lyt;	a	read
	m	(Ljava/lang/String;)Lyt;	a	tryParse
	m	(Ljava/lang/String;C)Lyt;	a	of
	m	(Lyt;)I	a	compareTo
	m	()Ljava/lang/String;	b	getNamespace
	m	(C)Z	b	validPathChar
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	read
	m	(Ljava/lang/String;C)[Ljava/lang/String;	b	decompose
	m	()Ljava/lang/String;	c	toDebugFileName
	m	(C)Z	c	validNamespaceChar
	m	(Ljava/lang/String;)Z	c	isValidResourceLocation
	m	(Ljava/lang/String;)Z	d	isValidPath
	m	(Ljava/lang/String;)Z	e	isValidNamespace
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	C	b	NAMESPACE_SEPARATOR
	f	Ljava/lang/String;	c	DEFAULT_NAMESPACE
	f	Ljava/lang/String;	d	REALMS_NAMESPACE
	f	Ljava/lang/String;	e	namespace
	f	Ljava/lang/String;	f	path
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_INVALID
c	yt$a	net/minecraft/resources/ResourceLocation$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lyt;	a	deserialize
	m	(Lyt;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	yu	net/minecraft/resources/package-info
c	yv	net/minecraft/server/Bootstrap
	m	()V	a	bootStrap
	m	(Lcbr;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$5
	m	(Lgs;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$4
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V	a	checkTranslations
	m	(Ljava/lang/String;)V	a	realStdoutPrintln
	m	(Ljava/util/Set;)V	a	checkGameruleTranslations
	m	(Ljava/util/function/Function;Lof;Ljava/util/Set;Ljava/lang/Object;)V	a	lambda$checkTranslations$0
	m	(Ljava/util/function/Supplier;)V	a	checkBootstrapCalled
	m	(Lyt;)Ljava/lang/String;	a	lambda$getMissingTranslations$1
	m	()Ljava/util/Set;	b	getMissingTranslations
	m	(Ljava/lang/String;)V	b	lambda$validate$3
	m	(Ljava/util/function/Supplier;)Ljava/lang/RuntimeException;	b	createBootstrapException
	m	()V	c	validate
	m	()V	d	validateThatAllBiomeFeaturesHaveBiomeFilter
	m	()V	e	wrapStreams
	m	()Ljava/lang/String;	f	lambda$validate$2
	f	Ljava/io/PrintStream;	a	STDOUT
	f	Z	b	isBootstrapped
	f	Lorg/slf4j/Logger;	c	LOGGER
c	yv$1	net/minecraft/server/Bootstrap$1
	m	(Lcar$e;Lcar$f;)V	a	visit
	f	Lof;	a	val$language
	f	Ljava/util/Set;	b	val$missing
c	yw	net/minecraft/server/ChainedJsonException
	m	(Ljava/lang/Exception;)Lyw;	a	forException
	m	(Ljava/lang/String;)V	a	prependJsonKey
	m	(Ljava/lang/String;)V	b	setFilenameAndFlush
	f	Ljava/util/List;	a	entries
	f	Ljava/lang/String;	b	message
c	yw$a	net/minecraft/server/ChainedJsonException$Entry
	m	()Ljava/lang/String;	a	getFilename
	m	(Ljava/lang/String;)V	a	addJsonKey
	m	()Ljava/lang/String;	b	getJsonKeys
	f	Ljava/lang/String;	a	filename
	f	Ljava/util/List;	b	jsonKeys
c	yx	net/minecraft/server/ConsoleInput
	f	Ljava/lang/String;	a	msg
	f	Ldm;	b	source
c	yy	net/minecraft/server/DebugLoggedPrintStream
	m	(Ljava/lang/String;)V	a	logLine
	f	Lorg/slf4j/Logger;	b	LOGGER
c	yz	net/minecraft/server/Eula
	m	()Z	a	hasAgreedToEULA
	m	()Z	b	readFile
	m	()V	c	saveDefaults
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	file
	f	Z	c	agreed
c	za	net/minecraft/server/LoggedPrintStream
	m	(Ljava/lang/String;)V	a	logLine
	f	Ljava/lang/String;	a	name
	f	Lorg/slf4j/Logger;	b	LOGGER
c	zb	net/minecraft/server/PlayerAdvancements
	m	()V	a	stopListening
	m	(Ladx;)V	a	setPlayer
	m	(Laf;)V	a	setSelectedTab
	m	(Laf;Lah;)V	a	startProgress
	m	(Laf;Ljava/lang/String;)Z	a	award
	m	(Lze;)V	a	reload
	m	()V	b	save
	m	(Ladx;)V	b	flushDirty
	m	(Laf;)Lah;	b	getOrStartProgress
	m	(Laf;Ljava/lang/String;)Z	b	revoke
	m	(Lze;)V	b	registerListeners
	m	()V	c	ensureAllVisible
	m	(Laf;)V	c	registerListeners
	m	(Lze;)V	c	checkForAutomaticTriggers
	m	(Laf;)V	d	unregisterListeners
	m	(Lze;)V	d	load
	m	(Laf;)V	e	ensureVisibility
	m	(Laf;)Z	f	shouldBeVisible
	m	(Laf;)Z	g	hasCompletedChildrenOrSelf
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	VISIBILITY_DEPTH
	f	Lcom/google/gson/Gson;	c	GSON
	f	Lcom/google/gson/reflect/TypeToken;	d	TYPE_TOKEN
	f	Lcom/mojang/datafixers/DataFixer;	e	dataFixer
	f	Lagn;	f	playerList
	f	Ljava/io/File;	g	file
	f	Ljava/util/Map;	h	advancements
	f	Ljava/util/Set;	i	visible
	f	Ljava/util/Set;	j	visibilityChanged
	f	Ljava/util/Set;	k	progressChanged
	f	Ladx;	l	player
	f	Laf;	m	lastSelectedTab
	f	Z	n	isFirstPacket
c	zb$1	net/minecraft/server/PlayerAdvancements$1
c	zc	net/minecraft/server/ReloadableServerResources
	m	()Lzf;	a	getFunctionLibrary
	m	(Laga;Lhc$a;Ldn$a;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	loadResources
	m	(Lhc;)V	a	updateRegistryTags
	m	(Lhc;Laih$a;)V	a	updateRegistryTags
	m	(Ljava/util/Map$Entry;)Ljava/util/List;	a	lambda$updateRegistryTags$3
	m	(Lys;Ljava/util/Map$Entry;)Laif;	a	lambda$updateRegistryTags$2
	m	(Lzc;Ljava/lang/Object;)Lzc;	a	lambda$loadResources$0
	m	()Ldlh;	b	getPredicateManager
	m	(Lhc;Laih$a;)V	b	lambda$updateRegistryTags$1
	m	()Ldlg;	c	getLootTables
	m	()Ldlb;	d	getItemModifierManager
	m	()Lbxp;	e	getRecipeManager
	m	()Ldn;	f	getCommands
	m	()Lze;	g	getAdvancements
	m	()Ljava/util/List;	h	listeners
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/CompletableFuture;	b	DATA_RELOAD_INITIAL_TASK
	f	Ldn;	c	commands
	f	Lbxp;	d	recipes
	f	Laih;	e	tagManager
	f	Ldlh;	f	predicateManager
	f	Ldlg;	g	lootTables
	f	Ldlb;	h	itemModifierManager
	f	Lze;	i	advancements
	f	Lzf;	j	functionLibrary
c	zd	net/minecraft/server/RunningOnDifferentThreadException
	f	Lzd;	a	RUNNING_ON_DIFFERENT_THREAD
c	ze	net/minecraft/server/ServerAdvancementManager
	m	()Ljava/util/Collection;	a	getAllAdvancements
	m	(Ljava/lang/Object;Laga;Lasy;)V	a	apply
	m	(Ljava/util/Map;Laga;Lasy;)V	a	apply
	m	(Ljava/util/Map;Lyt;Lcom/google/gson/JsonElement;)V	a	lambda$apply$0
	m	(Lyt;)Laf;	a	getAdvancement
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lag;	c	advancements
	f	Ldlh;	d	predicateManager
c	zf	net/minecraft/server/ServerFunctionLibrary
	m	()Ljava/util/Map;	a	getFunctions
	m	(Lafv$a;Laga;Lasy;Lasy;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
	m	(Laga;)Ljava/util/Collection;	a	lambda$reload$2
	m	(Laga;Ljava/util/concurrent/Executor;Ljava/util/Collection;)Ljava/util/concurrent/CompletionStage;	a	lambda$reload$5
	m	(Laga;Lyt;)Ljava/util/List;	a	readLines
	m	(Laga;Lyt;Lyt;Ldm;)Ldj;	a	lambda$reload$3
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lyt;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$reload$7
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$reload$8
	m	(Ljava/lang/String;)Z	a	lambda$reload$1
	m	(Ljava/util/Map;Ljava/lang/Void;Ljava/lang/Throwable;)Ljava/util/Map;	a	lambda$reload$4
	m	(Lyt;)Ljava/util/Optional;	a	getFunction
	m	(Lyt;Lcom/google/common/collect/ImmutableMap$Builder;Ldj;Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$reload$6
	m	()Ljava/lang/Iterable;	b	getAvailableTags
	m	(Laga;)Ljava/util/Map;	b	lambda$reload$0
	m	(Lyt;)Laie;	b	getTag
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	FILE_EXTENSION
	f	I	c	PATH_PREFIX_LENGTH
	f	I	d	PATH_SUFFIX_LENGTH
	f	Ljava/util/Map;	e	functions
	f	Laig;	f	tagsLoader
	f	Ljava/util/Map;	g	tags
	f	I	h	functionCompilationLevel
	f	Lcom/mojang/brigadier/CommandDispatcher;	i	dispatcher
c	zg	net/minecraft/server/ServerFunctionManager
	m	()I	a	getCommandLimit
	m	(Ldj;Ldm;)I	a	execute
	m	(Ldj;Ldm;Lzg$c;)I	a	execute
	m	(Ljava/util/Collection;Lyt;)V	a	executeTagFunctions
	m	(Lyt;)Ljava/util/Optional;	a	get
	m	(Lzf;)V	a	replaceLibrary
	m	()Lcom/mojang/brigadier/CommandDispatcher;	b	getDispatcher
	m	(Lyt;)Laie;	b	getTag
	m	(Lzf;)V	b	postReload
	m	()V	c	tick
	m	()Ldm;	d	getGameLoopSender
	m	()Ljava/lang/Iterable;	e	getFunctionNames
	m	()Ljava/lang/Iterable;	f	getTagNames
	f	Lqk;	a	NO_RECURSIVE_TRACES
	f	Lyt;	b	TICK_FUNCTION_TAG
	f	Lyt;	c	LOAD_FUNCTION_TAG
	f	Lnet/minecraft/server/MinecraftServer;	d	server
	f	Lzg$a;	e	context
	f	Ljava/util/List;	f	ticking
	f	Z	g	postReload
	f	Lzf;	h	library
c	zg$a	net/minecraft/server/ServerFunctionManager$ExecutionContext
	m	(Ldj;Ldm;)V	a	delayFunctionCall
	m	(Ljava/lang/String;)V	a	reportError
	m	(Ldj;Ldm;)I	b	runTopCommand
	f	Lzg;	a	this$0
	f	I	b	depth
	f	Lzg$c;	c	tracer
	f	Ljava/util/Deque;	d	commandQueue
	f	Ljava/util/List;	e	nestedCalls
c	zg$b	net/minecraft/server/ServerFunctionManager$QueuedCommand
	m	(Lzg;Ljava/util/Deque;ILzg$c;)V	a	execute
	f	Ldm;	a	sender
	f	I	b	depth
	f	Ldj$c;	c	entry
c	zg$c	net/minecraft/server/ServerFunctionManager$TraceCallbacks
	m	(ILjava/lang/String;)V	a	onCommand
	m	(ILjava/lang/String;I)V	a	onReturn
	m	(ILyt;I)V	a	onCall
	m	(ILjava/lang/String;)V	b	onError
c	zh	net/minecraft/server/ServerInterface
	m	()Ljava/lang/String;	G	getServerVersion
	m	()I	H	getPlayerCount
	m	()I	I	getMaxPlayers
	m	()[Ljava/lang/String;	J	getPlayerNames
	m	()Lacy;	a	getProperties
	m	(Ljava/lang/String;)Ljava/lang/String;	a	runCommand
	m	()Ljava/lang/String;	b	getServerIp
	m	()I	d	getServerPort
	m	()Ljava/lang/String;	p	getServerName
	m	()Ljava/lang/String;	r	getLevelIdName
	m	()Ljava/lang/String;	s	getPluginNames
c	zi	net/minecraft/server/ServerScoreboard
	m	()V	a	setDirty
	m	(ILdqj;)V	a	setDisplayObjective
	m	(Ldqj;)V	a	onObjectiveAdded
	m	(Ldqk;)V	a	onTeamAdded
	m	(Ldql;)V	a	onScoreChanged
	m	(Ljava/lang/Runnable;)V	a	addDirtyListener
	m	(Ljava/lang/String;)V	a	onPlayerRemoved
	m	(Ljava/lang/String;Ldqj;)V	a	onPlayerScoreRemoved
	m	(Ljava/lang/String;Ldqk;)Z	a	addPlayerToTeam
	m	(Lok;)Ldqn;	a	createData
	m	()Ldqn;	b	createData
	m	(Ldqj;)V	b	onObjectiveChanged
	m	(Ldqk;)V	b	onTeamChanged
	m	(Ljava/lang/String;Ldqk;)V	b	removePlayerFromTeam
	m	(Ldqj;)V	c	onObjectiveRemoved
	m	(Ldqk;)V	c	onTeamRemoved
	m	(Ldqj;)Ljava/util/List;	d	getStartTrackingPackets
	m	(Ldqj;)V	e	startTrackingObjective
	m	(Ldqj;)Ljava/util/List;	f	getStopTrackingPackets
	m	(Ldqj;)V	g	stopTrackingObjective
	m	(Ldqj;)I	h	getObjectiveDisplaySlotCount
	f	Lnet/minecraft/server/MinecraftServer;	g	server
	f	Ljava/util/Set;	h	trackedObjectives
	f	Ljava/util/List;	i	dirtyListeners
c	zi$a	net/minecraft/server/ServerScoreboard$Method
	m	()[Lzi$a;	a	$values
	f	Lzi$a;	a	CHANGE
	f	Lzi$a;	b	REMOVE
	f	[Lzi$a;	c	$VALUES
c	zj	net/minecraft/server/TickTask
	m	()I	a	getTick
	f	I	a	tick
	f	Ljava/lang/Runnable;	b	runnable
c	zk	net/minecraft/server/WorldStem
	m	()V	a	updateGlobals
	m	(Lafs;Lhc$a;Ldkv;Lzc;)Lzk;	a	lambda$load$1
	m	(Lafs;Lzc;Ljava/lang/Throwable;)V	a	lambda$load$0
	m	(Lzk$b;Lzk$a;Lzk$c;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	load
	m	()Lafs;	b	resourceManager
	m	()Lzc;	c	dataPackResources
	m	()Lhc$a;	d	registryAccess
	m	()Ldkv;	e	worldData
	f	Lafs;	a	resourceManager
	f	Lzc;	b	dataPackResources
	f	Lhc$a;	c	registryAccess
	f	Ldkv;	d	worldData
c	zk$a	net/minecraft/server/WorldStem$DataPackConfigSupplier
	m	(Ldkp$a;)Lcaj;	a	lambda$loadFromWorld$0
c	zk$b	net/minecraft/server/WorldStem$InitConfig
	m	()Lafn;	a	packRepository
	m	()Ldn$a;	b	commandSelection
	m	()I	c	functionCompilationLevel
	m	()Z	d	safeMode
	f	Lafn;	a	packRepository
	f	Ldn$a;	b	commandSelection
	f	I	c	functionCompilationLevel
	f	Z	d	safeMode
c	zk$c	net/minecraft/server/WorldStem$WorldDataSupplier
	m	(Ldkp$a;Laga;Lcaj;)Lcom/mojang/datafixers/util/Pair;	a	lambda$loadFromWorld$0
c	zl	net/minecraft/server/bossevents/CustomBossEvent
	m	()Lyt;	a	getTextId
	m	(I)V	a	setValue
	m	(Ladx;)V	a	addPlayer
	m	(Ljava/util/Collection;)Z	a	setPlayers
	m	(Ljava/util/UUID;)V	a	addOfflinePlayer
	m	(Lok;Lyt;)Lzl;	a	load
	m	(Lqu;)Lqu;	a	lambda$getDisplayName$0
	m	()V	b	removeAllPlayers
	m	(I)V	b	setMax
	m	(Ladx;)V	b	removePlayer
	m	()I	c	getValue
	m	(Ladx;)V	c	onPlayerConnect
	m	()I	d	getMax
	m	(Ladx;)V	d	onPlayerDisconnect
	m	()Lqk;	e	getDisplayName
	m	()Lok;	f	save
	f	Lyt;	h	id
	f	Ljava/util/Set;	i	players
	f	I	j	value
	f	I	k	max
c	zm	net/minecraft/server/bossevents/CustomBossEvents
	m	()Ljava/util/Collection;	a	getIds
	m	(Ladx;)V	a	onPlayerConnect
	m	(Lok;)V	a	load
	m	(Lyt;)Lzl;	a	get
	m	(Lyt;Lqk;)Lzl;	a	create
	m	(Lzl;)V	a	remove
	m	()Ljava/util/Collection;	b	getEvents
	m	(Ladx;)V	b	onPlayerDisconnect
	m	()Lok;	c	save
	f	Ljava/util/Map;	a	events
c	zn	net/minecraft/server/bossevents/package-info
c	zo	net/minecraft/server/chase/ChaseClient
	m	()V	a	start
	m	(Ljava/lang/String;)V	a	handleMessage
	m	(Ljava/util/Scanner;)V	a	handleTeleport
	m	(Lzo$a;)V	a	lambda$handleTeleport$0
	m	()V	b	stop
	m	(Ljava/lang/String;)V	b	executeCommand
	m	(Ljava/util/Scanner;)Ljava/util/Optional;	b	parseTarget
	m	()V	c	run
	m	(Ljava/lang/String;)V	c	lambda$executeCommand$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	RECONNECT_INTERVAL_SECONDS
	f	Ljava/lang/String;	c	serverHost
	f	I	d	serverPort
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Z	f	wantsToRun
	f	Ljava/net/Socket;	g	socket
	f	Ljava/lang/Thread;	h	thread
c	zo$a	net/minecraft/server/chase/ChaseClient$TeleportTarget
	m	()Lys;	a	level
	m	()Ldpo;	b	pos
	m	()Ldpn;	c	rot
	f	Lys;	a	level
	f	Ldpo;	b	pos
	f	Ldpn;	c	rot
c	zp	net/minecraft/server/chase/ChaseServer
	m	()V	a	start
	m	(Ljava/net/Socket;[B)V	a	lambda$runSender$0
	m	()V	b	stop
	m	()V	c	runSender
	m	()V	d	runAcceptor
	m	()Lzp$a;	e	getPlayerPosition
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	serverBindAddress
	f	I	c	serverPort
	f	Lagn;	d	playerList
	f	I	e	broadcastIntervalMs
	f	Z	f	wantsToRun
	f	Ljava/net/ServerSocket;	g	serverSocket
	f	Ljava/util/concurrent/CopyOnWriteArrayList;	h	clientSockets
c	zp$a	net/minecraft/server/chase/ChaseServer$PlayerPosition
	m	()Ljava/lang/String;	a	dimensionName
	m	()D	b	x
	m	()D	c	y
	m	()D	d	z
	m	()F	e	yRot
	m	()F	f	xRot
	m	()Ljava/lang/String;	g	format
	f	Ljava/lang/String;	a	dimensionName
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	F	e	yRot
	f	F	f	xRot
c	zq	net/minecraft/server/chase/package-info
c	zr	net/minecraft/server/commands/AdvancementCommands
	m	(Laf;Ljava/util/List;)V	a	addChildren
	m	(Laf;Lzr$b;)Ljava/util/List;	a	getAdvancements
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$15
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$10
	m	(Ldm;)Z	a	lambda$register$1
	m	(Ldm;Ljava/util/Collection;Lzr$a;Laf;Ljava/lang/String;)I	a	performCriterion
	m	(Ldm;Ljava/util/Collection;Lzr$a;Ljava/util/Collection;)I	a	perform
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$0
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$2
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_ADVANCEMENTS
c	zr$a	net/minecraft/server/commands/AdvancementCommands$Action
	m	()Ljava/lang/String;	a	getKey
	m	(Ladx;Laf;)Z	a	perform
	m	(Ladx;Laf;Ljava/lang/String;)Z	a	performCriterion
	m	(Ladx;Ljava/lang/Iterable;)I	a	perform
	m	()[Lzr$a;	b	$values
	f	Lzr$a;	a	GRANT
	f	Lzr$a;	b	REVOKE
	f	Ljava/lang/String;	c	key
	f	[Lzr$a;	d	$VALUES
c	zr$a$1	net/minecraft/server/commands/AdvancementCommands$Action$1
	m	(Ladx;Laf;)Z	a	perform
	m	(Ladx;Laf;Ljava/lang/String;)Z	a	performCriterion
c	zr$a$2	net/minecraft/server/commands/AdvancementCommands$Action$2
	m	(Ladx;Laf;)Z	a	perform
	m	(Ladx;Laf;Ljava/lang/String;)Z	a	performCriterion
c	zr$b	net/minecraft/server/commands/AdvancementCommands$Mode
	m	()[Lzr$b;	a	$values
	f	Lzr$b;	a	ONLY
	f	Lzr$b;	b	THROUGH
	f	Lzr$b;	c	FROM
	f	Lzr$b;	d	UNTIL
	f	Lzr$b;	e	EVERYTHING
	f	Z	f	parents
	f	Z	g	children
	f	[Lzr$b;	h	$VALUES
c	zs	net/minecraft/server/commands/AttributeCommand
	m	(Laxk;)Laxy;	a	getLivingEntity
	m	(Laxk;Layu;)Layv;	a	getAttributeInstance
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$15
	m	(Ldm;)Z	a	lambda$register$4
	m	(Ldm;Laxk;Layu;D)I	a	getAttributeValue
	m	(Ldm;Laxk;Layu;Ljava/util/UUID;)I	a	removeModifier
	m	(Ldm;Laxk;Layu;Ljava/util/UUID;D)I	a	getAttributeModifier
	m	(Ldm;Laxk;Layu;Ljava/util/UUID;Ljava/lang/String;DLayx$a;)I	a	addModifier
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
	m	(Laxk;Layu;)Laxy;	b	getEntityWithAttribute
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$14
	m	(Ldm;Laxk;Layu;D)I	b	getAttributeBase
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$13
	m	(Ldm;Laxk;Layu;D)I	c	setAttributeBase
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$5
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NOT_LIVING_ENTITY
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_NO_SUCH_ATTRIBUTE
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	c	ERROR_NO_SUCH_MODIFIER
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	d	ERROR_MODIFIER_ALREADY_PRESENT
c	zt	net/minecraft/server/commands/BanIpCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Ljava/lang/String;Lqk;)I	a	banIpOrName
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	m	(Ldm;Ljava/lang/String;Lqk;)I	b	banIp
	f	Ljava/util/regex/Pattern;	a	IP_ADDRESS_PATTERN
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_IP
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_BANNED
c	zu	net/minecraft/server/commands/BanListCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Ljava/util/Collection;)I	a	showList
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
c	zv	net/minecraft/server/commands/BanPlayerCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Ljava/util/Collection;Lqk;)I	a	banPlayers
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_BANNED
c	zw	net/minecraft/server/commands/BossBarCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lzl;	a	getBossBar
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$2
	m	(Ldm;)I	a	listBars
	m	(Ldm;Lyt;Lqk;)I	a	createBar
	m	(Ldm;Lzl;)I	a	getValue
	m	(Ldm;Lzl;I)I	a	setValue
	m	(Ldm;Lzl;Lavx$a;)I	a	setColor
	m	(Ldm;Lzl;Lavx$b;)I	a	setStyle
	m	(Ldm;Lzl;Ljava/util/Collection;)I	a	setPlayers
	m	(Ldm;Lzl;Lqk;)I	a	setName
	m	(Ldm;Lzl;Z)I	a	setVisible
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$28
	m	(Ldm;)Z	b	lambda$register$3
	m	(Ldm;Lzl;)I	b	getMax
	m	(Ldm;Lzl;I)I	b	setMax
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$27
	m	(Ldm;Lzl;)I	c	getVisible
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$26
	m	(Ldm;Lzl;)I	d	getPlayers
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$25
	m	(Ldm;Lzl;)I	e	removeBar
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$24
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$23
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$22
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$21
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$20
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$19
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$18
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$17
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	x	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	y	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	z	lambda$register$4
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_BOSS_BAR
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_DOESNT_EXIST
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_NO_PLAYER_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NO_NAME_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_NO_COLOR_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_NO_STYLE_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_NO_VALUE_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_NO_MAX_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	ERROR_ALREADY_HIDDEN
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	ERROR_ALREADY_VISIBLE
c	zx	net/minecraft/server/commands/ChaseCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
	m	(Ldm;)I	a	stop
	m	(Ldm;Ljava/lang/String;I)I	a	lead
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
	m	(Ldm;)Z	b	alreadyRunning
	m	(Ldm;Ljava/lang/String;I)I	b	follow
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$0
	f	Lcom/google/common/collect/BiMap;	a	DIMENSION_NAMES
	f	Ljava/lang/String;	b	DEFAULT_CONNECT_HOST
	f	Ljava/lang/String;	c	DEFAULT_BIND_ADDRESS
	f	I	d	DEFAULT_PORT
	f	I	e	BROADCAST_INTERVAL_MS
	f	Lzp;	f	chaseServer
	f	Lzo;	g	chaseClient
c	zy	net/minecraft/server/commands/ClearInventoryCommands
	m	(Lbuw;)Z	a	lambda$register$5
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
	m	(Ldm;)Z	a	lambda$register$2
	m	(Ldm;Ljava/util/Collection;Ljava/util/function/Predicate;I)I	a	clearInventory
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Lbuw;)Z	b	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_SINGLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_MULTIPLE
c	zz	net/minecraft/server/commands/CloneCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$20
	m	(Lcoz;)Z	a	lambda$register$11
	m	(Ldm;)Z	a	lambda$register$2
	m	(Ldm;Lgj;Lgj;Lgj;Ljava/util/function/Predicate;Lzz$b;)I	a	clone
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$19
	m	(Lcoz;)Z	b	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$18
	m	(Lcoz;)Z	c	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$17
	m	(Lcoz;)Z	d	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$16
	m	(Lcoz;)Z	e	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$15
	m	(Lcoz;)Z	f	lambda$static$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$4
	f	Ljava/util/function/Predicate;	a	FILTER_AIR
	f	I	b	MAX_CLONE_AREA
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_OVERLAP
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_AREA_TOO_LARGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_FAILED
c	zz$a	net/minecraft/server/commands/CloneCommands$CloneBlockInfo
	f	Lgj;	a	pos
	f	Lcov;	b	state
	f	Lok;	c	tag
c	zz$b	net/minecraft/server/commands/CloneCommands$Mode
	m	()Z	a	canOverlap
	m	()[Lzz$b;	b	$values
	f	Lzz$b;	a	FORCE
	f	Lzz$b;	b	MOVE
	f	Lzz$b;	c	NORMAL
	f	Z	d	canOverlap
	f	[Lzz$b;	e	$VALUES
c	aaa	net/minecraft/server/commands/DataPackCommand
	m	(Lafl;)Lqk;	a	lambda$listEnabledPacks$23
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$20
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$5
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lafl;	a	getPack
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafl;)V	a	lambda$register$12
	m	(Ldm;)I	a	listPacks
	m	(Ldm;Lafl;)I	a	disablePack
	m	(Ldm;Lafl;Laaa$a;)I	a	enablePack
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
	m	(Ljava/util/Collection;Lafl;)Z	a	lambda$listAvailablePacks$21
	m	(Ljava/util/Collection;Ljava/lang/String;)Z	a	lambda$static$4
	m	(Ljava/util/List;Lafl;)V	a	lambda$register$15
	m	(Lafl;)Lqk;	b	lambda$listAvailablePacks$22
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$19
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$3
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafl;)V	b	lambda$register$10
	m	(Ldm;)I	b	listAvailablePacks
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
	m	(Ljava/util/List;Lafl;)V	b	lambda$register$8
	m	(Lafl;)Lafl;	c	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$18
	m	(Ldm;)I	c	listEnabledPacks
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$17
	m	(Ldm;)Z	d	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$9
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_PACK
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_PACK_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_PACK_ALREADY_DISABLED
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	d	SELECTED_PACKS
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	e	UNSELECTED_PACKS
c	aaa$a	net/minecraft/server/commands/DataPackCommand$Inserter
c	aab	net/minecraft/server/commands/DeOpCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$1
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Ljava/util/Collection;)I	a	deopPlayers
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_OP
c	aac	net/minecraft/server/commands/DebugCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
	m	(Ldm;)I	a	start
	m	(Ldm;Ljava/util/Collection;)I	a	traceFunction
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Ldm;)I	b	stop
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
	m	(Ldm;)Z	c	lambda$register$3
	m	(Ldm;)Z	d	lambda$register$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_RUNNING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_RUNNING
c	aac$a	net/minecraft/server/commands/DebugCommand$Tracer
	m	()Z	G_	shouldInformAdmins
	m	(I)V	a	indentAndSave
	m	(ILjava/lang/String;)V	a	onCommand
	m	(ILjava/lang/String;I)V	a	onReturn
	m	(ILyt;I)V	a	onCall
	m	(Lqk;Ljava/util/UUID;)V	a	sendMessage
	m	(I)V	b	printIndent
	m	(ILjava/lang/String;)V	b	onError
	m	()Z	d_	alwaysAccepts
	m	()V	e	newLine
	m	()Z	i_	acceptsSuccess
	m	()Z	j_	acceptsFailure
	f	I	b	INDENT_OFFSET
	f	Ljava/io/PrintWriter;	c	output
	f	I	d	lastIndent
	f	Z	e	waitingForResult
c	aad	net/minecraft/server/commands/DebugMobSpawningCommand
	m	(Layb;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Layb;Lgj;)I	a	spawnMobs
c	aae	net/minecraft/server/commands/DebugPathCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Lgj;)I	a	fillBlocks
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_MOB
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NO_PATH
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_NOT_COMPLETE
c	aaf	net/minecraft/server/commands/DefaultGameModeCommands
	m	(Lcas;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Lcas;)I	a	setMode
c	aag	net/minecraft/server/commands/DifficultyCommand
	m	(Lawe;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Ldm;)Z	a	lambda$register$2
	m	(Ldm;Lawe;)I	a	setDifficulty
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_ALREADY_DIFFICULT
c	aah	net/minecraft/server/commands/EffectCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Ljava/util/Collection;)I	a	clearEffects
	m	(Ldm;Ljava/util/Collection;Laxc;)I	a	clearEffect
	m	(Ldm;Ljava/util/Collection;Laxc;Ljava/lang/Integer;IZ)I	a	giveEffect
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$1
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_GIVE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_CLEAR_EVERYTHING_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_CLEAR_SPECIFIC_FAILED
c	aai	net/minecraft/server/commands/EmoteCommands
	m	(Ladx;Lqk;Lqk;Ladx;)Lqk;	a	lambda$register$0
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lqk;	a	createMessage
	m	(Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftServer;Ladx;Laxk;Laet$a;)V	a	lambda$register$1
c	aaj	net/minecraft/server/commands/EnchantCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
	m	(Ldm;)Z	a	lambda$register$4
	m	(Ldm;Ljava/util/Collection;Lbyq;I)I	a	enchant
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NOT_LIVING_ENTITY
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NO_ITEM
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INCOMPATIBLE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_LEVEL_TOO_HIGH
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NOTHING_HAPPENED
c	aak	net/minecraft/server/commands/ExecuteCommand
	m	(Laak$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$createNumericConditionalHandler$56
	m	(Lacq;Lec$g;)I	a	checkMatchingData
	m	(Lacq;ZLec$g;Ljava/util/function/IntFunction;Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$storeData$37
	m	(Lacr$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addConditionals$53
	m	(Lacr$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldm;	a	lambda$wrapStores$32
	m	(Ladw;Lgj;Lgj;Lgj;Z)Ljava/util/OptionalInt;	a	checkRegions
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/ResultConsumer;)Lcom/mojang/brigadier/ResultConsumer;	a	lambda$static$3
	m	(Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$static$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	a	lambda$addConditionals$51
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lpd;	a	lambda$wrapStores$31
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcj$d;)Z	a	checkScore
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$4
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z	a	checkScore
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)I	a	checkIfRegions
	m	(Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection;	a	expect
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLaak$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addConditional
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addIfBlocksConditional
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addConditionals
	m	(Lcom/mojang/brigadier/tree/CommandNode;ZLacr$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$addConditionals$54
	m	(Lcom/mojang/brigadier/tree/LiteralCommandNode;Lacr$c;ZLcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$wrapStores$33
	m	(Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrapStores
	m	(Ldm;)Z	a	lambda$register$6
	m	(Ldm;Lacq;Lec$g;Ljava/util/function/IntFunction;Z)Ldm;	a	storeData
	m	(Ldm;Ldnv;)Z	a	checkCustomPredicate
	m	(Ldm;Ljava/util/Collection;Ldqj;Z)Ldm;	a	storeValue
	m	(Ldm;Lzl;ZZ)Ldm;	a	storeValue
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Z	a	lambda$addConditionals$46
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	(Ljava/util/Collection;Ldqm;Ldqj;ZLcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$storeValue$34
	m	(Ljava/util/function/IntFunction;I)Lpd;	a	lambda$storeData$36
	m	(ZLaak$a;)Lcom/mojang/brigadier/Command;	a	createNumericConditionalHandler
	m	(ZLaak$b;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addConditional$58
	m	(ZLacr$c;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$addConditionals$52
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addIfBlocksConditional$61
	m	(ZZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$addIfBlocksConditional$59
	m	(ZZLzl;Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$storeValue$35
	m	(Laak$a;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$createNumericConditionalHandler$55
	m	(Lacr$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldm;	b	lambda$wrapStores$30
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$addConditionals$50
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lpd;	b	lambda$wrapStores$29
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)I	b	checkUnlessRegions
	m	(Ldm;)Z	b	lambda$register$5
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Z	b	lambda$addConditionals$44
	m	(ZLaak$b;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	b	lambda$addConditional$57
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	b	lambda$addIfBlocksConditional$60
	m	(Lacr$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldm;	c	lambda$wrapStores$28
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	c	lambda$addConditionals$48
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lpd;	c	lambda$wrapStores$27
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt;	c	checkRegions
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Z	c	lambda$addConditionals$42
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	c	lambda$addConditionals$49
	m	(Lacr$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldm;	d	lambda$wrapStores$26
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	d	lambda$addConditionals$47
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lpd;	d	lambda$wrapStores$25
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Z	d	lambda$addConditionals$40
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ldm;	d	lambda$wrapStores$20
	m	(Lacr$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldm;	e	lambda$wrapStores$24
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	e	lambda$addConditionals$45
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lpd;	e	lambda$wrapStores$23
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ldm;	e	lambda$wrapStores$19
	m	(Lacr$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldm;	f	lambda$wrapStores$22
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	f	lambda$addConditionals$43
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lpd;	f	lambda$wrapStores$21
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ldm;	f	lambda$wrapStores$18
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	g	lambda$addConditionals$41
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	h	lambda$addConditionals$39
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	i	lambda$addConditionals$38
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldm;	j	lambda$register$17
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldm;	k	lambda$register$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldm;	l	lambda$register$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldm;	m	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	n	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	o	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldm;	p	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	q	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldm;	r	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	s	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	t	lambda$register$7
	f	I	a	MAX_TEST_AREA
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_AREA_TOO_LARGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_CONDITIONAL_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_CONDITIONAL_FAILED_COUNT
	f	Ljava/util/function/BinaryOperator;	e	CALLBACK_CHAINER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	f	SUGGEST_PREDICATE
c	aak$a	net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate
c	aak$b	net/minecraft/server/commands/ExecuteCommand$CommandPredicate
c	aal	net/minecraft/server/commands/ExperienceCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
	m	(Ldm;)Z	a	lambda$register$9
	m	(Ldm;Ladx;Laal$a;)I	a	queryExperience
	m	(Ldm;Ljava/util/Collection;ILaal$a;)I	a	addExperience
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
	m	(Ldm;)Z	b	lambda$register$0
	m	(Ldm;Ljava/util/Collection;ILaal$a;)I	b	setExperience
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$1
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SET_POINTS_INVALID
c	aal$a	net/minecraft/server/commands/ExperienceCommand$Type
	m	()[Laal$a;	a	$values
	m	(Ladx;)I	a	lambda$static$3
	m	(Ladx;Ljava/lang/Integer;)Z	a	lambda$static$2
	m	(Ladx;)I	b	lambda$static$1
	m	(Ladx;Ljava/lang/Integer;)Z	b	lambda$static$0
	f	Laal$a;	a	POINTS
	f	Laal$a;	b	LEVELS
	f	Ljava/util/function/BiConsumer;	c	add
	f	Ljava/util/function/BiPredicate;	d	set
	f	Ljava/lang/String;	e	name
	f	Ljava/util/function/ToIntFunction;	f	query
	f	[Laal$a;	g	$VALUES
c	aam	net/minecraft/server/commands/FillCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
	m	(Lcoz;)Z	a	lambda$register$5
	m	(Ldm;)Z	a	lambda$register$1
	m	(Ldm;Ldeo;Les;Laam$a;Ljava/util/function/Predicate;)I	a	fillBlocks
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
	f	I	a	MAX_FILL_AREA
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_AREA_TOO_LARGE
	f	Les;	c	HOLLOW_CORE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_FAILED
c	aam$a	net/minecraft/server/commands/FillCommand$Mode
	m	()[Laam$a;	a	$values
	m	(Ldeo;Lgj;Les;Ladw;)Les;	a	lambda$static$3
	m	(Ldeo;Lgj;Les;Ladw;)Les;	b	lambda$static$2
	m	(Ldeo;Lgj;Les;Ladw;)Les;	c	lambda$static$1
	m	(Ldeo;Lgj;Les;Ladw;)Les;	d	lambda$static$0
	f	Laam$a;	a	REPLACE
	f	Laam$a;	b	OUTLINE
	f	Laam$a;	c	HOLLOW
	f	Laam$a;	d	DESTROY
	f	Labv$a;	e	filter
	f	[Laam$a;	f	$VALUES
c	aan	net/minecraft/server/commands/ForceLoadCommand
	m	(Ladw;J)V	a	lambda$removeAll$10
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
	m	(Ldm;)I	a	listForceLoad
	m	(Ldm;Ladn;)I	a	queryForceLoad
	m	(Ldm;Ladn;Ladn;Z)I	a	changeForceLoad
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
	m	(Ldm;)I	b	removeAll
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
	m	(Ldm;)Z	c	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$3
	f	I	a	MAX_CHUNK_LIMIT
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_TOO_MANY_CHUNKS
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_NOT_TICKING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_ALL_ADDED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NONE_REMOVED
c	aao	net/minecraft/server/commands/FunctionCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
	m	(Ldm;)Z	a	lambda$register$1
	m	(Ldm;Ljava/util/Collection;)I	a	runFunction
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_FUNCTION
c	aap	net/minecraft/server/commands/GameModeCommand
	m	(Lcas;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lcas;)I	a	setMode
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Ladx;Lcas;)V	a	logGamemodeChange
	m	(Lcas;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	f	I	a	PERMISSION_LEVEL
c	aaq	net/minecraft/server/commands/GameRuleCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcar$e;)I	a	setRule
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Lcar$e;)I	a	queryRule
c	aaq$1	net/minecraft/server/commands/GameRuleCommand$1
	m	(Lcar$e;Lcar$f;)V	a	visit
	m	(Lcar$e;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$visit$1
	m	(Lcar$e;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$visit$0
	f	Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	val$base
c	aar	net/minecraft/server/commands/GiveCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Lfk;Ljava/util/Collection;I)I	a	giveItem
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	f	I	a	MAX_ALLOWED_ITEMSTACKS
c	aas	net/minecraft/server/commands/HelpCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	aat	net/minecraft/server/commands/ItemCommands
	m	(Laxk;I)Lbuw;	a	getEntityItem
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$21
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$6
	m	(Ldm;)Z	a	lambda$register$7
	m	(Ldm;Laxk;ILgj;I)I	a	entityToBlock
	m	(Ldm;Laxk;ILgj;ILdmn;)I	a	entityToBlock
	m	(Ldm;Laxk;ILjava/util/Collection;I)I	a	entityToEntities
	m	(Ldm;Laxk;ILjava/util/Collection;ILdmn;)I	a	entityToEntities
	m	(Ldm;Ldmn;Lbuw;)Lbuw;	a	applyModifier
	m	(Ldm;Lgj;I)Lbuw;	a	getBlockItem
	m	(Ldm;Lgj;ILbuw;)I	a	setBlockItem
	m	(Ldm;Lgj;ILdmn;)I	a	modifyBlockItem
	m	(Ldm;Lgj;ILgj;I)I	a	blockToBlock
	m	(Ldm;Lgj;ILgj;ILdmn;)I	a	blockToBlock
	m	(Ldm;Lgj;ILjava/util/Collection;I)I	a	blockToEntities
	m	(Ldm;Lgj;ILjava/util/Collection;ILdmn;)I	a	blockToEntities
	m	(Ldm;Lgj;Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;)Lawa;	a	getContainer
	m	(Ldm;Ljava/util/Collection;ILbuw;)I	a	setEntityItem
	m	(Ldm;Ljava/util/Collection;ILdmn;)I	a	modifyEntityItem
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$5
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$20
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$19
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$18
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$17
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$8
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	a	ERROR_TARGET_NOT_A_CONTAINER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_TARGET_INAPPLICABLE_SLOT
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	c	ERROR_SOURCE_NOT_A_CONTAINER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_SOURCE_INAPPLICABLE_SLOT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_TARGET_NO_CHANGES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_TARGET_NO_CHANGES_KNOWN_ITEM
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	g	SUGGEST_MODIFIER
c	aau	net/minecraft/server/commands/JfrCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Ldm;)I	a	startJfr
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	(Ljava/nio/file/Path;Lqu;)Lqu;	a	lambda$stopJfr$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Ldm;)I	b	stopJfr
	m	(Ldm;)Z	c	lambda$register$1
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	START_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	DUMP_FAILED
c	aav	net/minecraft/server/commands/KickCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Ljava/util/Collection;Lqk;)I	a	kickPlayers
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
c	aaw	net/minecraft/server/commands/KillCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Ljava/util/Collection;)I	a	kill
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
c	aax	net/minecraft/server/commands/ListPlayersCommand
	m	(Ladx;)Lqk;	a	lambda$listPlayersWithUuids$2
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Ldm;)I	a	listPlayers
	m	(Ldm;Ljava/util/function/Function;)I	a	format
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
	m	(Ldm;)I	b	listPlayersWithUuids
c	aay	net/minecraft/server/commands/LocateBiomeCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Ldm;)Z	a	lambda$register$1
	m	(Ldm;Lel$b;)I	a	locateBiome
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_BIOME_NOT_FOUND
	f	I	b	MAX_SEARCH_RADIUS
	f	I	c	SEARCH_STEP
c	aaz	net/minecraft/server/commands/LocateCommand
	m	(IIII)F	a	dist
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Lcom/mojang/datafixers/util/Pair;Laif;)Ljava/lang/String;	a	lambda$showLocateResult$9
	m	(Ldm;)Z	a	lambda$register$2
	m	(Ldm;Lel$b;)I	a	locate
	m	(Ldm;Lel$b;Lgj;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;)I	a	showLocateResult
	m	(Lel$b;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$locate$6
	m	(Lgj;Lqu;)Lqu;	a	lambda$showLocateResult$10
	m	(Lgs;)Lgt$a;	a	lambda$locate$4
	m	(Lhb;Lys;)Ljava/util/Optional;	a	lambda$locate$5
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Lys;)Ljava/lang/String;	a	lambda$showLocateResult$8
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	(Lys;)Ljava/lang/String;	b	lambda$showLocateResult$7
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID
c	aba	net/minecraft/server/commands/LootCommand
	m	(Laba$b;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$13
	m	(Ladw;Ldpo;Lbuw;)V	a	lambda$dropInWorld$22
	m	(Lawa;Lbuw;)Z	a	distributeToContainer
	m	(Laxk;Ljava/util/List;IILjava/util/List;)V	a	setSlots
	m	(Lbuw;Lbuw;)Z	a	canMergeItems
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Laba$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$register$14
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Laba$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addTargets
	m	(Lcom/mojang/brigadier/context/CommandContext;Laxk;Laba$b;)I	a	dropKillLoot
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
	m	(Lcom/mojang/brigadier/context/CommandContext;Lgj;Lbuw;Laba$b;)I	a	dropBlockLoot
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Laba$a;)I	a	lambda$addTargets$21
	m	(Lcom/mojang/brigadier/context/CommandContext;Lyt;Laba$b;)I	a	dropChestLoot
	m	(Lcom/mojang/brigadier/context/CommandContext;Lyt;Ldlc;Laba$b;)I	a	drop
	m	(Lcom/mojang/brigadier/context/CommandContext;Lyt;Lgj;Lbuw;Laba$b;)I	a	dropFishingLoot
	m	(Ldm;)Z	a	lambda$register$3
	m	(Ldm;Laxp;)Lbuw;	a	getSourceHandItem
	m	(Ldm;Lcov;Ljava/util/List;)V	a	lambda$dropBlockLoot$23
	m	(Ldm;Ldpo;Ljava/util/List;Laba$a;)I	a	dropInWorld
	m	(Ldm;Lgj;)Lawa;	a	getContainer
	m	(Ldm;Lgj;IILjava/util/List;Laba$a;)I	a	blockReplace
	m	(Ldm;Lgj;Ljava/util/List;Laba$a;)I	a	blockDistribute
	m	(Ldm;Ljava/util/List;)V	a	callback
	m	(Ldm;Ljava/util/List;Lyt;)V	a	callback
	m	(Ldm;Lyt;Ljava/util/List;)V	a	lambda$dropKillLoot$24
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
	m	(Ljava/util/Collection;IILjava/util/List;Laba$a;)I	a	entityReplace
	m	(Ljava/util/Collection;Ljava/util/List;Laba$a;)I	a	playerGive
	m	(Laba$b;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Laba$a;)I	b	lambda$addTargets$20
	m	(Ldm;Ljava/util/List;)V	b	lambda$drop$25
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
	m	(Laba$b;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Laba$a;)I	c	lambda$addTargets$19
	m	(Laba$b;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Laba$a;)I	d	lambda$addTargets$18
	m	(Laba$b;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Laba$a;)I	e	lambda$addTargets$17
	m	(Laba$b;Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Laba$a;)I	f	lambda$addTargets$16
	m	(Laba$b;Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Laba$a;)I	g	lambda$addTargets$15
	m	(Laba$b;Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$6
	m	(Laba$b;Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$5
	m	(Laba$b;Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$4
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_LOOT_TABLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NO_HELD_ITEMS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_NO_LOOT_TABLE
c	aba$a	net/minecraft/server/commands/LootCommand$Callback
c	aba$b	net/minecraft/server/commands/LootCommand$DropConsumer
c	aba$c	net/minecraft/server/commands/LootCommand$TailProvider
c	abb	net/minecraft/server/commands/MsgCommand
	m	(Ladx;Lqk;Lqk;)V	a	lambda$sendMessage$1
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$0
	m	(Ldm;Ljava/util/Collection;Lqk;)I	a	sendMessage
	m	(Ldm;Lqk;Lqk;)V	a	lambda$sendMessage$2
c	abc	net/minecraft/server/commands/OpCommand
	m	(Ladx;)Ljava/lang/String;	a	lambda$register$2
	m	(Lagn;Ladx;)Z	a	lambda$register$1
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$3
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Ljava/util/Collection;)I	a	opPlayers
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_OP
c	abd	net/minecraft/server/commands/PardonCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$1
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Ljava/util/Collection;)I	a	pardonPlayers
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_BANNED
c	abe	net/minecraft/server/commands/PardonIpCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$1
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Ljava/lang/String;)I	a	unban
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_BANNED
c	abf	net/minecraft/server/commands/ParticleCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Lia;Ldpo;Ldpo;FIZLjava/util/Collection;)I	a	sendParticles
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$1
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	abg	net/minecraft/server/commands/PerfCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Ldm;)I	a	startProfilingDedicatedServer
	m	(Ldm;Lasx;)V	a	whenStopped
	m	(Ldm;Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftServer;)V	a	saveResults
	m	(Ldm;Lnet/minecraft/server/MinecraftServer;Ljava/nio/file/Path;)V	a	lambda$startProfilingDedicatedServer$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	m	(Ldm;)I	b	stopProfilingDedicatedServer
	m	(Ldm;Lasx;)V	b	lambda$startProfilingDedicatedServer$3
	m	(Ldm;)Z	c	lambda$register$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_RUNNING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_RUNNING
c	abh	net/minecraft/server/commands/PlaceFeatureCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Lgs;Lgj;)I	a	placeFeature
	m	(Lys;)Ljava/lang/String;	a	lambda$placeFeature$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	abi	net/minecraft/server/commands/PlaySoundCommand
	m	(Lahl;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	source
	m	(Lahl;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$source$5
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Ljava/util/Collection;Lyt;Lahl;Ldpo;FFF)I	a	playSound
	m	(Lahl;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$source$4
	m	(Lahl;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$source$3
	m	(Lahl;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$source$2
	m	(Lahl;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$source$1
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TOO_FAR
c	abj	net/minecraft/server/commands/PublishCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Ldm;)Z	a	lambda$register$1
	m	(Ldm;I)I	a	publish
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_ALREADY_PUBLISHED
c	abk	net/minecraft/server/commands/RaidCommand
	m	(Ladx;)Lbpo;	a	getRaid
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
	m	(Ldm;)I	a	glow
	m	(Ldm;I)I	a	setBadOmenLevel
	m	(Ldm;Lqk;)I	a	playSound
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
	m	(Ldm;)I	b	spawnLeader
	m	(Ldm;I)I	b	start
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
	m	(Ldm;)I	c	stop
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
	m	(Ldm;)I	d	check
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$3
	m	(Ldm;)Z	e	lambda$register$0
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$1
c	abl	net/minecraft/server/commands/RecipeCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Ljava/util/Collection;Ljava/util/Collection;)I	a	giveRecipes
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
	m	(Ldm;Ljava/util/Collection;Ljava/util/Collection;)I	b	takeRecipes
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_GIVE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_TAKE_FAILED
c	abm	net/minecraft/server/commands/ReloadCommand
	m	(Lafn;Ldkv;Ljava/util/Collection;)Ljava/util/Collection;	a	discoverNewPacks
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Ldm;)Z	a	lambda$register$1
	m	(Ldm;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$reloadPacks$0
	m	(Ljava/util/Collection;Ldm;)V	a	reloadPacks
	f	Lorg/slf4j/Logger;	a	LOGGER
c	abn	net/minecraft/server/commands/ResetChunksCommand
	m	()Lcom/mojang/datafixers/util/Unit;	a	lambda$resetChunks$4
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Lcqq;)V	a	lambda$resetChunks$6
	m	(Lcqt;Lavc;Ladw;Ladu;Ljava/util/List;Lcom/mojang/datafixers/util/Unit;)Ljava/util/concurrent/CompletionStage;	a	lambda$resetChunks$8
	m	(Lcqt;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Unit;	a	lambda$resetChunks$7
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;IZ)I	a	resetChunks
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Lcqq;)Ljava/util/concurrent/CompletableFuture;	b	lambda$resetChunks$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
	f	Lorg/slf4j/Logger;	a	LOGGER
c	abo	net/minecraft/server/commands/SaveAllCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Z)I	a	saveAll
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	abp	net/minecraft/server/commands/SaveOffCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Ldm;)Z	a	lambda$register$0
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_OFF
c	abq	net/minecraft/server/commands/SaveOnCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Ldm;)Z	a	lambda$register$0
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_ON
c	abr	net/minecraft/server/commands/SayCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Ldm;)Z	a	lambda$register$0
c	abs	net/minecraft/server/commands/ScheduleCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
	m	(Ldm;)Z	a	lambda$register$2
	m	(Ldm;Lcom/mojang/datafixers/util/Pair;IZ)I	a	schedule
	m	(Ldm;Ljava/lang/String;)I	a	remove
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	(Lyt;ZLdpg;JLdm;ILaie;)V	a	lambda$schedule$8
	m	(Lyt;ZLdpg;JLdm;ILdj;)V	a	lambda$schedule$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SAME_TICK
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_CANT_REMOVE
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	c	SUGGEST_SCHEDULE
c	abt	net/minecraft/server/commands/ScoreboardCommand
	m	()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	createRenderTypeModify
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$19
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$17
	m	(Ldm;)I	a	listTrackedPlayers
	m	(Ldm;I)I	a	clearDisplaySlot
	m	(Ldm;ILdqj;)I	a	setDisplaySlot
	m	(Ldm;Ldqj;)I	a	removeObjective
	m	(Ldm;Ldqj;Ldqp$a;)I	a	setRenderType
	m	(Ldm;Ldqj;Lqk;)I	a	setDisplayName
	m	(Ldm;Ljava/lang/String;)I	a	listTrackedPlayerScores
	m	(Ldm;Ljava/lang/String;Ldqj;)I	a	getScore
	m	(Ldm;Ljava/lang/String;Ldqp;Lqk;)I	a	addObjective
	m	(Ldm;Ljava/util/Collection;)I	a	resetScores
	m	(Ldm;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestTriggers
	m	(Ldm;Ljava/util/Collection;Ldqj;)I	a	enableTrigger
	m	(Ldm;Ljava/util/Collection;Ldqj;I)I	a	setScore
	m	(Ldm;Ljava/util/Collection;Ldqj;Leg$a;Ljava/util/Collection;Ldqj;)I	a	performOperation
	m	(Ldqp$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$createRenderTypeModify$20
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$18
	m	(Ldm;)I	b	listObjectives
	m	(Ldm;Ljava/util/Collection;Ldqj;)I	b	resetScore
	m	(Ldm;Ljava/util/Collection;Ldqj;I)I	b	addScore
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$16
	m	(Ldm;)Z	c	lambda$register$1
	m	(Ldm;Ljava/util/Collection;Ldqj;I)I	c	removeScore
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$2
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_OBJECTIVE_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_DISPLAY_SLOT_ALREADY_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_DISPLAY_SLOT_ALREADY_SET
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TRIGGER_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NOT_TRIGGER
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_NO_VALUE
c	abu	net/minecraft/server/commands/SeedCommand
	m	(JLqu;)Lqu;	a	lambda$register$1
	m	(Lcom/mojang/brigadier/CommandDispatcher;Z)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(ZLdm;)Z	a	lambda$register$0
c	abv	net/minecraft/server/commands/SetBlockCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
	m	(Lcoz;)Z	a	lambda$register$3
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Lgj;Les;Labv$b;Ljava/util/function/Predicate;)I	a	setBlock
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	abv$a	net/minecraft/server/commands/SetBlockCommand$Filter
c	abv$b	net/minecraft/server/commands/SetBlockCommand$Mode
	m	()[Labv$b;	a	$values
	f	Labv$b;	a	REPLACE
	f	Labv$b;	b	DESTROY
	f	[Labv$b;	c	$VALUES
c	abw	net/minecraft/server/commands/SetPlayerIdleTimeoutCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;I)I	a	setIdleTimeout
c	abx	net/minecraft/server/commands/SetSpawnCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Ljava/util/Collection;Lgj;F)I	a	setSpawn
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
c	aby	net/minecraft/server/commands/SetWorldSpawnCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Lgj;F)I	a	setSpawn
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
c	abz	net/minecraft/server/commands/SpectateCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
	m	(Ldm;)Z	a	lambda$register$1
	m	(Ldm;Laxk;Ladx;)I	a	spectate
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SELF
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NOT_SPECTATOR
c	aca	net/minecraft/server/commands/SpreadPlayersCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
	m	(Ldm;)Z	a	lambda$register$3
	m	(Ldm;Ldpn;FFIZLjava/util/Collection;)I	a	spreadPlayers
	m	(Ldpn;DLadw;Ljava/util/Random;DDDDI[Laca$a;Z)V	a	spreadPositions
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/util/Collection;)I	a	getNumberOfTeams
	m	(Ljava/util/Collection;Ladw;[Laca$a;IZ)D	a	setPlayerPositions
	m	(Ljava/util/Random;IDDDD)[Laca$a;	a	createInitialPositions
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	f	I	a	MAX_ITERATION_COUNT
	f	Lcom/mojang/brigadier/exceptions/Dynamic4CommandExceptionType;	b	ERROR_FAILED_TO_SPREAD_TEAMS
	f	Lcom/mojang/brigadier/exceptions/Dynamic4CommandExceptionType;	c	ERROR_FAILED_TO_SPREAD_ENTITIES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_INVALID_MAX_HEIGHT
c	aca$a	net/minecraft/server/commands/SpreadPlayersCommand$Position
	m	()V	a	normalize
	m	(DDDD)Z	a	clamp
	m	(Laca$a;)D	a	dist
	m	(Lcab;I)I	a	getSpawnY
	m	(Ljava/util/Random;DDDD)V	a	randomize
	m	()D	b	getLength
	m	(Laca$a;)V	b	moveAway
	m	(Lcab;I)Z	b	isSafe
	f	D	a	x
	f	D	b	z
c	acb	net/minecraft/server/commands/StopCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Ldm;)Z	a	lambda$register$0
c	acc	net/minecraft/server/commands/StopSoundCommand
	m	(Lahl;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Ldm;)Z	a	lambda$register$4
	m	(Ldm;Ljava/util/Collection;Lahl;Lyt;)I	a	stopSound
	m	(Lahl;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
c	acd	net/minecraft/server/commands/SummonCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Lyt;Ldpo;Lok;Z)I	a	spawnEntity
	m	(Ldpo;Laxk;)Laxk;	a	lambda$spawnEntity$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_DUPLICATE_UUID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	INVALID_POSITION
c	ace	net/minecraft/server/commands/TagCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$2
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Ljava/util/Collection;)I	a	listTags
	m	(Ldm;Ljava/util/Collection;Ljava/lang/String;)I	a	addTag
	m	(Ljava/util/Collection;)Ljava/util/Collection;	a	getTags
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
	m	(Ldm;Ljava/util/Collection;Ljava/lang/String;)I	b	removeTag
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ADD_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_REMOVE_FAILED
c	acf	net/minecraft/server/commands/TeamCommand
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	A	lambda$register$1
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$27
	m	(Ldm;)I	a	listTeams
	m	(Ldm;Ldqk;)I	a	emptyTeam
	m	(Ldm;Ldqk;Ldqo$a;)I	a	setCollision
	m	(Ldm;Ldqk;Ldqo$b;)I	a	setNametagVisibility
	m	(Ldm;Ldqk;Ljava/util/Collection;)I	a	joinTeam
	m	(Ldm;Ldqk;Lp;)I	a	setColor
	m	(Ldm;Ldqk;Lqk;)I	a	setDisplayName
	m	(Ldm;Ldqk;Z)I	a	setFriendlySight
	m	(Ldm;Ljava/lang/String;)I	a	createTeam
	m	(Ldm;Ljava/lang/String;Lqk;)I	a	createTeam
	m	(Ldm;Ljava/util/Collection;)I	a	leaveTeam
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$26
	m	(Ldm;)Z	b	lambda$register$0
	m	(Ldm;Ldqk;)I	b	deleteTeam
	m	(Ldm;Ldqk;Ldqo$b;)I	b	setDeathMessageVisibility
	m	(Ldm;Ldqk;Lqk;)I	b	setPrefix
	m	(Ldm;Ldqk;Z)I	b	setFriendlyFire
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$25
	m	(Ldm;Ldqk;)I	c	listMembers
	m	(Ldm;Ldqk;Lqk;)I	c	setSuffix
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$24
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$23
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$22
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$21
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$20
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$19
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$18
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$17
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	x	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	y	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	z	lambda$register$2
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TEAM_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_TEAM_ALREADY_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_TEAM_ALREADY_NAME
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TEAM_ALREADY_COLOR
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	ERROR_TEAM_COLLISION_UNCHANGED
c	acg	net/minecraft/server/commands/TeamMsgCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$0
	m	(Ldm;Lqk;)I	a	sendMessage
	f	Lqu;	a	SUGGEST_STYLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_ON_TEAM
c	ach	net/minecraft/server/commands/TeleportCommand
	m	(D)Ljava/lang/String;	a	formatDouble
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
	m	(Ldm;)Z	a	lambda$register$9
	m	(Ldm;Laxk;Ladw;DDDLjava/util/Set;FFLach$a;)V	a	performTeleport
	m	(Ldm;Ljava/util/Collection;Ladw;Lez;Lez;Lach$a;)I	a	teleportToPos
	m	(Ldm;Ljava/util/Collection;Laxk;)I	a	teleportToEntity
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
	m	(Ldm;)Z	b	lambda$register$0
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$1
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INVALID_POSITION
c	ach$a	net/minecraft/server/commands/TeleportCommand$LookAt
	m	(Ldm;Laxk;)V	a	perform
	f	Ldpo;	a	position
	f	Laxk;	b	entity
	f	Ldv$a;	c	anchor
c	aci	net/minecraft/server/commands/TellRawCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Ldm;)Z	a	lambda$register$0
c	acj	net/minecraft/server/commands/TimeCommand
	m	(Ladw;)I	a	getDayTime
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;I)I	a	setTime
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
	m	(Ldm;I)I	b	addTime
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
	m	(Ldm;I)I	c	queryTime
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$1
c	ack	net/minecraft/server/commands/TitleCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;Ljava/util/Collection;)I	a	clearTitle
	m	(Ldm;Ljava/util/Collection;III)I	a	setTimes
	m	(Ldm;Ljava/util/Collection;Lqk;Ljava/lang/String;Ljava/util/function/Function;)I	a	showTitle
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
	m	(Ldm;Ljava/util/Collection;)I	b	resetTitle
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
c	acl	net/minecraft/server/commands/TriggerCommand
	m	(Ladx;Ldqj;)Ldql;	a	getScore
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$0
	m	(Ldm;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestObjectives
	m	(Ldm;Ldql;)I	a	simpleTrigger
	m	(Ldm;Ldql;I)I	a	addValue
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Ldm;Ldql;I)I	b	setValue
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_PRIMED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_OBJECTIVE
c	acm	net/minecraft/server/commands/WeatherCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
	m	(Ldm;)Z	a	lambda$register$0
	m	(Ldm;I)I	a	setClear
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
	m	(Ldm;I)I	b	setRain
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
	m	(Ldm;I)I	c	setThunder
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
	f	I	a	DEFAULT_TIME
c	acn	net/minecraft/server/commands/WhitelistCommand
	m	(Ladx;)Ljava/lang/String;	a	lambda$register$5
	m	(Lagn;Ladx;)Z	a	lambda$register$4
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$8
	m	(Ldm;)I	a	reload
	m	(Ldm;Ljava/util/Collection;)I	a	addPlayers
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$register$6
	m	(Ldm;)I	b	enableWhitelist
	m	(Ldm;Ljava/util/Collection;)I	b	removePlayers
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
	m	(Ldm;)I	c	disableWhitelist
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
	m	(Ldm;)I	d	showList
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
	m	(Ldm;)Z	e	lambda$register$0
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_ALREADY_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_WHITELISTED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_NOT_WHITELISTED
c	aco	net/minecraft/server/commands/WorldBorderCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$10
	m	(Ldm;)I	a	getSize
	m	(Ldm;DJ)I	a	setSize
	m	(Ldm;F)I	a	setDamageBuffer
	m	(Ldm;I)I	a	setWarningTime
	m	(Ldm;Ldpn;)I	a	setCenter
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$9
	m	(Ldm;)Z	b	lambda$register$0
	m	(Ldm;F)I	b	setDamageAmount
	m	(Ldm;I)I	b	setWarningDistance
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$1
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SAME_CENTER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_SAME_SIZE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TOO_FAR_OUT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_SAME_WARNING_TIME
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_SAME_WARNING_DISTANCE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_SAME_DAMAGE_BUFFER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_SAME_DAMAGE_AMOUNT
c	acp	net/minecraft/server/commands/data/BlockDataAccessor
	m	()Lok;	a	getData
	m	(Lec$g;DI)Lqk;	a	getPrintSuccess
	m	(Ljava/lang/String;)Lacr$c;	a	lambda$static$0
	m	(Lok;)V	a	setData
	m	(Lpd;)Lqk;	a	getPrintSuccess
	m	()Lqk;	b	getModifiedSuccess
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_A_BLOCK_ENTITY
	f	Lcmr;	c	entity
	f	Lgj;	d	pos
c	acp$1	net/minecraft/server/commands/data/BlockDataAccessor$1
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lacq;	a	access
	f	Ljava/lang/String;	a	val$argPrefix
c	acq	net/minecraft/server/commands/data/DataAccessor
	m	()Lok;	a	getData
	m	(Lec$g;DI)Lqk;	a	getPrintSuccess
	m	(Lok;)V	a	setData
	m	(Lpd;)Lqk;	a	getPrintSuccess
	m	()Lqk;	b	getModifiedSuccess
c	acr	net/minecraft/server/commands/data/DataCommands
	m	(ILok;Lec$g;Ljava/util/List;)I	a	insertAtIndex
	m	(Lacr$c;Lacr$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$27
	m	(Lacr$c;Lacr$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$decorateModification$26
	m	(Lacr$c;Lacr$c;Lacr$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$25
	m	(Lacr$c;Lacr$c;Lacr$a;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$24
	m	(Lacr$c;Lacr$c;Lacr$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$decorateModification$23
	m	(Lacr$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$register$15
	m	(Lacr$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$14
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lacr$b;)V	a	lambda$register$21
	m	(Lcom/mojang/brigadier/context/CommandContext;Lacr$c;Lacr$a;Ljava/util/List;)I	a	manipulateData
	m	(Lcom/mojang/brigadier/context/CommandContext;Lok;Lec$g;Ljava/util/List;)I	a	lambda$register$20
	m	(Ldm;)Z	a	lambda$register$7
	m	(Ldm;Lacq;)I	a	getData
	m	(Ldm;Lacq;Lec$g;)I	a	removeData
	m	(Ldm;Lacq;Lec$g;D)I	a	getNumeric
	m	(Ldm;Lacq;Lok;)I	a	mergeData
	m	(Lec$g;Lacq;)Lpd;	a	getSingleTag
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
	m	(Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	decorateModification
	m	(Ljava/util/function/BiConsumer;Lacr$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$28
	m	(Ljava/util/function/Function;)Lacr$c;	a	lambda$static$6
	m	(Lacr$c;Lacr$c;Lacr$a;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$decorateModification$22
	m	(Lacr$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	b	lambda$register$13
	m	(Lacr$c;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;Lok;Lec$g;Ljava/util/List;)I	b	lambda$register$19
	m	(Ldm;Lacq;Lec$g;)I	b	getData
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
	m	(Ljava/util/function/Function;)Lacr$c;	b	lambda$static$5
	m	(Lacr$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	c	lambda$register$9
	m	(Lacr$c;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;Lok;Lec$g;Ljava/util/List;)I	c	lambda$register$18
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$2
	m	(Lacr$c;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;Lok;Lec$g;Ljava/util/List;)I	d	lambda$register$17
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$1
	m	(Lacr$c;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;Lok;Lec$g;Ljava/util/List;)I	e	lambda$register$16
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$0
	f	Ljava/util/List;	a	ALL_PROVIDERS
	f	Ljava/util/List;	b	TARGET_PROVIDERS
	f	Ljava/util/List;	c	SOURCE_PROVIDERS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_MERGE_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_GET_NOT_NUMBER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_GET_NON_EXISTENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_MULTIPLE_TAGS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_EXPECTED_LIST
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	ERROR_EXPECTED_OBJECT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	j	ERROR_INVALID_INDEX
c	acr$a	net/minecraft/server/commands/data/DataCommands$DataManipulator
c	acr$b	net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator
c	acr$c	net/minecraft/server/commands/data/DataCommands$DataProvider
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lacq;	a	access
c	acs	net/minecraft/server/commands/data/EntityDataAccessor
	m	()Lok;	a	getData
	m	(Lec$g;DI)Lqk;	a	getPrintSuccess
	m	(Ljava/lang/String;)Lacr$c;	a	lambda$static$0
	m	(Lok;)V	a	setData
	m	(Lpd;)Lqk;	a	getPrintSuccess
	m	()Lqk;	b	getModifiedSuccess
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NO_PLAYERS
	f	Laxk;	c	entity
c	acs$1	net/minecraft/server/commands/data/EntityDataAccessor$1
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lacq;	a	access
	f	Ljava/lang/String;	a	val$arg
c	act	net/minecraft/server/commands/data/StorageDataAccessor
	m	()Lok;	a	getData
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldki;	a	getGlobalTags
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
	m	(Lec$g;DI)Lqk;	a	getPrintSuccess
	m	(Ljava/lang/String;)Lacr$c;	a	lambda$static$1
	m	(Lok;)V	a	setData
	m	(Lpd;)Lqk;	a	getPrintSuccess
	m	()Lqk;	b	getModifiedSuccess
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	SUGGEST_STORAGE
	f	Ldki;	c	storage
	f	Lyt;	d	id
c	act$1	net/minecraft/server/commands/data/StorageDataAccessor$1
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lacq;	a	access
	f	Ljava/lang/String;	a	val$arg
c	acu	net/minecraft/server/commands/data/package-info
c	acv	net/minecraft/server/commands/package-info
c	acw	net/minecraft/server/dedicated/DedicatedPlayerList
	m	()V	A	loadOps
	m	()V	B	saveOps
	m	()V	C	loadWhiteList
	m	()V	D	saveWhiteList
	m	()V	a	reloadWhiteList
	m	(Lcom/mojang/authlib/GameProfile;)V	a	op
	m	(Z)V	a	setUsingWhiteList
	m	()Lacx;	b	getServer
	m	(Lcom/mojang/authlib/GameProfile;)V	b	deop
	m	()Lnet/minecraft/server/MinecraftServer;	c	getServer
	m	(Lcom/mojang/authlib/GameProfile;)Z	c	isWhiteListed
	m	(Lcom/mojang/authlib/GameProfile;)Z	d	canBypassPlayerLimit
	m	()V	w	saveIpBanList
	m	()V	x	saveUserBanList
	m	()V	y	loadIpBanList
	m	()V	z	loadUserBanList
	f	Lorg/slf4j/Logger;	a	LOGGER
c	acx	net/minecraft/server/dedicated/DedicatedServer
	m	()Z	B	isNetherEnabled
	m	()Z	G_	shouldInformAdmins
	m	()Z	Q	isSpawningMonsters
	m	()Z	W	isSpawningAnimals
	m	()Z	X	areNpcsEnabled
	m	()Lacy;	a	getProperties
	m	(ILacy;)Lacy;	a	lambda$setPlayerIdleTimeout$2
	m	(Lac;)Lac;	a	fillServerSystemReport
	m	(Lacz;)Lqk;	a	parseResourcePackPrompt
	m	(Ladw;Lgj;Lboj;)Z	a	isUnderSpawnProtection
	m	(Ladx;)Laet;	a	createTextFilterForPlayer
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
	m	(Ljava/lang/String;)Ljava/lang/String;	a	runCommand
	m	(Ljava/lang/String;Ldm;)V	a	handleConsoleInput
	m	(Ljava/nio/file/Path;)V	a	dumpServerProperties
	m	(ZLacy;)Lacy;	a	lambda$storeUsingWhiteList$4
	m	()Z	aR	forceSynchronousWrites
	m	()Z	aV	isResourcePackRequired
	m	()Lcas;	aW	getForcedGameType
	m	()Lqk;	aY	getResourcePackPrompt
	m	()Lagn;	ac	getPlayerList
	m	()Z	af	hasGui
	m	()I	ah	getSpawnProtectionRadius
	m	()Z	ai	repliesToStatus
	m	()Z	aj	hidesOnlinePlayers
	m	()I	ar	getAbsoluteMaxWorldSize
	m	()I	au	getCompressionThreshold
	m	()Ljava/lang/String;	b	getServerIp
	m	(I)I	b	getScaledTrackingDistance
	m	(Ljava/util/function/BooleanSupplier;)V	b	tickChildren
	m	()Ljava/lang/String;	bd	getPackHash
	m	()V	be	handleConsoleInputs
	m	()Lacw;	bf	getPlayerList
	m	()V	bg	showGui
	m	()Z	bh	convertOldUsers
	m	()J	bi	getMaxTickLength
	m	()V	br	waitForRetry
	m	()Ljava/lang/String;	bs	lambda$fillServerSystemReport$1
	m	()Ljava/lang/String;	bt	lambda$fillServerSystemReport$0
	m	(I)V	c	setPlayerIdleTimeout
	m	()I	d	getServerPort
	m	()Z	e	initServer
	m	()V	f	onServerExit
	m	(Ljava/lang/String;)V	f	lambda$runCommand$3
	m	()Z	g	isHardcore
	m	()I	h	getOperatorUserPermissionLevel
	m	()I	i	getFunctionCompilationLevel
	m	(Z)V	i	storeUsingWhiteList
	m	()Z	j	shouldRconBroadcast
	m	()Z	k	isDedicatedServer
	m	()I	l	getRateLimitPacketsPerSecond
	m	()Z	m	isEpollEnabled
	m	()Z	n	isCommandBlockEnabled
	m	()Z	o	isPublished
	m	()Ljava/lang/String;	p	getServerName
	m	()V	q	forceDifficulty
	m	()Ljava/lang/String;	r	getLevelIdName
	m	()Ljava/lang/String;	s	getPluginNames
	m	()V	t	stopServer
	f	Laeu;	A	textFilterClient
	f	Lqk;	B	resourcePackPrompt
	f	Lorg/slf4j/Logger;	q	LOGGER
	f	I	r	CONVERSION_RETRY_DELAY_MS
	f	I	s	CONVERSION_RETRIES
	f	Ljava/util/regex/Pattern;	t	SHA1
	f	Ljava/util/List;	u	consoleInput
	f	Lahd;	v	queryThreadGs4
	f	Laha;	w	rconConsoleSource
	f	Lahf;	x	rconThread
	f	Lacz;	y	settings
	f	Ladd;	z	gui
c	acx$1	net/minecraft/server/dedicated/DedicatedServer$1
	f	Lacx;	a	this$0
c	acy	net/minecraft/server/dedicated/DedicatedServerProperties
	m	(Lhc;)Lcut;	a	getWorldGenSettings
	m	(Lhc;Ljava/util/Properties;)Lacy;	a	reload
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$new$1
	m	(Ljava/nio/file/Path;)Lacy;	a	fromFile
	m	(Lhc;Ljava/util/Properties;)Ladb;	b	reload
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	b	lambda$new$0
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$new$3
	m	(Ljava/lang/String;)Lcom/google/gson/JsonObject;	d	lambda$new$2
	f	Z	A	allowNether
	f	Z	B	spawnMonsters
	f	Z	C	useNativeTransport
	f	Z	D	enableCommandBlock
	f	I	E	spawnProtection
	f	I	F	opPermissionLevel
	f	I	G	functionPermissionLevel
	f	J	H	maxTickTime
	f	I	I	rateLimitPacketsPerSecond
	f	I	J	viewDistance
	f	I	K	simulationDistance
	f	I	L	maxPlayers
	f	I	M	networkCompressionThreshold
	f	Z	N	broadcastRconToOps
	f	Z	O	broadcastConsoleToOps
	f	I	P	maxWorldSize
	f	Z	Q	syncChunkWrites
	f	Z	R	enableJmxMonitoring
	f	Z	S	enableStatus
	f	Z	T	hideOnlinePlayers
	f	I	U	entityBroadcastRangePercentage
	f	Ljava/lang/String;	V	textFilteringConfig
	f	Ladb$a;	W	playerIdleTimeout
	f	Ladb$a;	X	whiteList
	f	Lacy$a;	Z	worldGenProperties
	f	Z	a	onlineMode
	f	Lcut;	aa	worldGenSettings
	f	Z	b	preventProxyConnections
	f	Ljava/lang/String;	c	serverIp
	f	Z	d	spawnAnimals
	f	Z	e	spawnNpcs
	f	Z	f	pvp
	f	Z	g	allowFlight
	f	Ljava/lang/String;	h	resourcePack
	f	Z	i	requireResourcePack
	f	Ljava/lang/String;	j	resourcePackPrompt
	f	Ljava/lang/String;	k	motd
	f	Z	l	forceGameMode
	f	Z	m	enforceWhitelist
	f	Lawe;	n	difficulty
	f	Lcas;	o	gamemode
	f	Ljava/lang/String;	p	levelName
	f	I	q	serverPort
	f	Ljava/lang/Boolean;	r	announcePlayerAchievements
	f	Z	s	enableQuery
	f	I	t	queryPort
	f	Z	u	enableRcon
	f	I	v	rconPort
	f	Ljava/lang/String;	w	rconPassword
	f	Ljava/lang/String;	x	resourcePackHash
	f	Ljava/lang/String;	y	resourcePackSha1
	f	Z	z	hardcore
c	acy$a	net/minecraft/server/dedicated/DedicatedServerProperties$WorldGenProperties
	m	()Ljava/lang/String;	a	levelSeed
	m	()Lcom/google/gson/JsonObject;	b	generatorSettings
	m	()Z	c	generateStructures
	m	()Ljava/lang/String;	d	levelType
	f	Ljava/lang/String;	a	levelSeed
	f	Lcom/google/gson/JsonObject;	b	generatorSettings
	f	Z	c	generateStructures
	f	Ljava/lang/String;	d	levelType
c	acz	net/minecraft/server/dedicated/DedicatedServerSettings
	m	()Lacy;	a	getProperties
	m	(Ljava/util/function/UnaryOperator;)Lacz;	a	update
	m	()V	b	forceSave
	f	Ljava/nio/file/Path;	a	source
	f	Lacy;	b	properties
c	ada	net/minecraft/server/dedicated/ServerWatchdog
	m	()V	a	exit
	m	(Ladw;)Ljava/lang/String;	a	lambda$run$1
	m	()Ljava/lang/String;	b	lambda$run$2
	m	()Ljava/lang/String;	c	lambda$run$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	J	b	MAX_SHUTDOWN_TIME
	f	I	c	SHUTDOWN_STATUS
	f	Lacx;	d	server
	f	J	e	maxTickTime
c	ada$1	net/minecraft/server/dedicated/ServerWatchdog$1
	f	Lada;	a	this$0
c	adb	net/minecraft/server/dedicated/Settings
	m	()Ljava/util/Properties;	a	cloneProperties
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getLegacyString
	m	(Ljava/lang/String;I)I	a	get
	m	(Ljava/lang/String;J)J	a	get
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	get
	m	(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;	a	getLegacy
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
	m	(Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I	a	get
	m	(Ljava/lang/String;Z)Z	a	get
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	a	wrapNumberDeserializer
	m	(Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Number;	a	lambda$wrapNumberDeserializer$0
	m	(Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/lang/String;)Ljava/lang/Object;	a	lambda$get$2
	m	(Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function;	a	dispatchNumberOrString
	m	(Ljava/util/function/IntFunction;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Object;	a	lambda$dispatchNumberOrString$1
	m	(Lhc;Ljava/util/Properties;)Ladb;	b	reload
	m	(Ljava/lang/String;)Ljava/lang/Boolean;	b	getLegacyBoolean
	m	(Ljava/lang/String;I)Ladb$a;	b	getMutable
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ladb$a;	b	getMutable
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ladb$a;	b	getMutable
	m	(Ljava/lang/String;Z)Ladb$a;	b	getMutable
	m	(Ljava/nio/file/Path;)Ljava/util/Properties;	b	loadFromFile
	m	(Ljava/lang/String;)Ljava/lang/String;	c	getStringRaw
	m	(Ljava/nio/file/Path;)V	c	store
	f	Ljava/util/Properties;	Y	properties
	f	Lorg/slf4j/Logger;	a	LOGGER
c	adb$a	net/minecraft/server/dedicated/Settings$MutableValue
	m	(Lhc;Ljava/lang/Object;)Ladb;	a	update
	f	Ladb;	a	this$0
	f	Ljava/lang/String;	b	key
	f	Ljava/lang/Object;	c	value
	f	Ljava/util/function/Function;	d	serializer
c	adc	net/minecraft/server/dedicated/package-info
c	add	net/minecraft/server/gui/MinecraftServerGui
	m	()V	a	start
	m	(Lacx;)Ladd;	a	showFrameFor
	m	(Ljava/lang/Runnable;)V	a	addFinalizer
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;)V	a	lambda$buildChatPanel$1
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V	a	print
	m	(Ljavax/swing/JTextField;Ljava/awt/event/ActionEvent;)V	a	lambda$buildChatPanel$0
	m	()V	b	close
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V	b	lambda$print$2
	m	()Ljavax/swing/JComponent;	c	buildInfoPanel
	m	()Ljavax/swing/JComponent;	d	buildPlayerPanel
	m	()Ljavax/swing/JComponent;	e	buildChatPanel
	m	()V	f	runFinalizers
	f	Ljava/awt/Font;	a	MONOSPACED
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	TITLE
	f	Ljava/lang/String;	d	SHUTDOWN_TITLE
	f	Lacx;	e	server
	f	Ljava/lang/Thread;	f	logAppenderThread
	f	Ljava/util/Collection;	g	finalizers
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	h	isClosing
c	add$1	net/minecraft/server/gui/MinecraftServerGui$1
	f	Ladd;	a	val$gui
	f	Ljavax/swing/JFrame;	b	val$frame
	f	Lacx;	c	val$server
c	add$2	net/minecraft/server/gui/MinecraftServerGui$2
	f	Ladd;	a	this$0
c	ade	net/minecraft/server/gui/PlayerListComponent
	m	()V	a	tick
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	I	b	tickCount
c	adf	net/minecraft/server/gui/StatsComponent
	m	()V	a	close
	m	(Ljava/awt/event/ActionEvent;)V	a	lambda$new$1
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$0
	m	([J)D	a	getAverage
	m	()V	b	tick
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	[I	b	values
	f	I	c	vp
	f	[Ljava/lang/String;	d	msgs
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Ljavax/swing/Timer;	f	timer
c	adg	net/minecraft/server/gui/package-info
c	adh	net/minecraft/server/level/BlockDestructionProgress
	m	()I	a	getId
	m	(I)V	a	setProgress
	m	(Ladh;)I	a	compareTo
	m	()Lgj;	b	getPos
	m	(I)V	b	updateTick
	m	()I	c	getProgress
	m	()I	d	getUpdatedRenderTick
	f	I	a	id
	f	Lgj;	b	pos
	f	I	c	progress
	f	I	d	updatedRenderTick
c	adi	net/minecraft/server/level/ChunkHolder
	m	()Ljava/util/concurrent/CompletableFuture;	a	getTickingChunkFuture
	m	(I)V	a	setTicketLevel
	m	(Ladj;Ladi$c;)V	a	demoteFullChunk
	m	(Ladj;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Ladi$c;)V	a	scheduleFullChunkPromotion
	m	(Ladj;Ljava/util/concurrent/Executor;)V	a	updateFutures
	m	(Lcav;Lgj;)V	a	broadcastBlockEntity
	m	(Lcav;Lgj;Lcov;)V	a	broadcastBlockEntityIfNeeded
	m	(Lcbe;I)V	a	sectionLightChanged
	m	(Lcqq;)Lcqq;	a	lambda$updateChunkToSave$3
	m	(Lcqq;Ladi$a;)Lcqq;	a	lambda$updateChunkToSave$4
	m	(Lcqq;Lcom/mojang/datafixers/util/Either;)Lcqq;	a	lambda$updateChunkToSave$5
	m	(Lcqq;Ljava/lang/Object;)Lcqq;	a	lambda$addSaveDependency$2
	m	(Lcqt;)Ljava/util/concurrent/CompletableFuture;	a	getFutureIfPresentUnchecked
	m	(Lcqt;Ladj;)Ljava/util/concurrent/CompletableFuture;	a	getOrScheduleFuture
	m	(Lcqz;)V	a	replaceProtoChunk
	m	(Lcra;)V	a	broadcastChanges
	m	(Lgj;)V	a	blockChanged
	m	(Ljava/lang/String;Ljava/util/concurrent/CompletableFuture;)V	a	addSaveDependency
	m	(Ljava/util/concurrent/CompletableFuture;Lcom/mojang/datafixers/util/Either;)V	a	lambda$scheduleFullChunkPromotion$8
	m	(Ljava/util/concurrent/CompletableFuture;Lcra;)V	a	lambda$scheduleFullChunkPromotion$7
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V	a	updateChunkToSave
	m	(Lrc;Ladx;)V	a	lambda$broadcast$1
	m	(Lrc;Z)V	a	broadcast
	m	()Ljava/util/concurrent/CompletableFuture;	b	getEntityTickingChunkFuture
	m	(I)Lcqt;	b	getStatus
	m	(Ladj;Ladi$c;)V	b	lambda$scheduleFullChunkPromotion$6
	m	(Lcav;Lgj;Lcov;)V	b	lambda$broadcastChanges$0
	m	(Lcqt;)Ljava/util/concurrent/CompletableFuture;	b	getFutureIfPresent
	m	()Ljava/util/concurrent/CompletableFuture;	c	getFullChunkFuture
	m	(I)Ladi$c;	c	getFullChunkStatus
	m	()Lcra;	d	getTickingChunk
	m	(I)V	d	setQueueLevel
	m	()Lcra;	e	getFullChunk
	m	()Lcqt;	f	getLastAvailableStatus
	m	()Lcqq;	g	getLastAvailable
	m	()Ljava/util/concurrent/CompletableFuture;	h	getChunkToSave
	m	()Ladi$c;	i	getFullStatus
	m	()Lcac;	j	getPos
	m	()I	k	getTicketLevel
	m	()I	l	getQueueLevel
	m	()Z	m	wasAccessibleSinceLastSave
	m	()V	n	refreshAccessibility
	m	()Ljava/util/List;	o	getAllFutures
	f	Z	A	wasAccessibleSinceLastSave
	f	Z	B	resendLight
	f	Ljava/util/concurrent/CompletableFuture;	C	pendingFullStateConfirmation
	f	Lcom/mojang/datafixers/util/Either;	a	UNLOADED_CHUNK
	f	Ljava/util/concurrent/CompletableFuture;	b	UNLOADED_CHUNK_FUTURE
	f	Lcom/mojang/datafixers/util/Either;	c	UNLOADED_LEVEL_CHUNK
	f	Lcom/mojang/datafixers/util/Either;	d	NOT_DONE_YET
	f	Ljava/util/concurrent/CompletableFuture;	e	UNLOADED_LEVEL_CHUNK_FUTURE
	f	Ljava/util/List;	f	CHUNK_STATUSES
	f	[Ladi$c;	g	FULL_CHUNK_STATUSES
	f	I	h	BLOCKS_BEFORE_RESEND_FUDGE
	f	Ljava/util/concurrent/atomic/AtomicReferenceArray;	i	futures
	f	Lcax;	j	levelHeightAccessor
	f	Ljava/util/concurrent/CompletableFuture;	k	fullChunkFuture
	f	Ljava/util/concurrent/CompletableFuture;	l	tickingChunkFuture
	f	Ljava/util/concurrent/CompletableFuture;	m	entityTickingChunkFuture
	f	Ljava/util/concurrent/CompletableFuture;	n	chunkToSave
	f	Lais;	o	chunkToSaveHistory
	f	I	p	oldTicketLevel
	f	I	q	ticketLevel
	f	I	r	queueLevel
	f	Lcac;	s	pos
	f	Z	t	hasChangedSections
	f	[Lit/unimi/dsi/fastutil/shorts/ShortSet;	u	changedBlocksPerSection
	f	Ljava/util/BitSet;	v	blockChangedLightSectionFilter
	f	Ljava/util/BitSet;	w	skyChangedLightSectionFilter
	f	Ldio;	x	lightEngine
	f	Ladi$d;	y	onLevelChange
	f	Ladi$e;	z	playerProvider
c	adi$1	net/minecraft/server/level/ChunkHolder$1
	f	Ladi;	a	this$0
c	adi$a	net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure
	f	Ladi$a;	b	UNLOADED
c	adi$a$1	net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure$1
c	adi$b	net/minecraft/server/level/ChunkHolder$ChunkSaveDebug
	f	Ljava/lang/Thread;	a	thread
	f	Ljava/util/concurrent/CompletableFuture;	b	future
	f	Ljava/lang/String;	c	source
c	adi$c	net/minecraft/server/level/ChunkHolder$FullChunkStatus
	m	()[Ladi$c;	a	$values
	m	(Ladi$c;)Z	a	isOrAfter
	f	Ladi$c;	a	INACCESSIBLE
	f	Ladi$c;	b	BORDER
	f	Ladi$c;	c	TICKING
	f	Ladi$c;	d	ENTITY_TICKING
	f	[Ladi$c;	e	$VALUES
c	adi$d	net/minecraft/server/level/ChunkHolder$LevelChangeListener
c	adi$e	net/minecraft/server/level/ChunkHolder$PlayerProvider
	m	(Lcac;Z)Ljava/util/List;	a	getPlayers
c	adj	net/minecraft/server/level/ChunkMap
	m	()Lcqr;	a	generator
	m	(I)V	a	setViewDistance
	m	(IIIII)Z	a	isChunkInRange
	m	(IIILjava/util/List;)Lcom/mojang/datafixers/util/Either;	a	lambda$getChunkRangeFuture$3
	m	(J)Ladi;	a	getUpdatingChunkIfPresent
	m	(JILadi;I)Ladi;	a	updateChunkScheduling
	m	(JLadi;)V	a	scheduleUnload
	m	(Ladi$a;)Ljava/lang/String;	a	lambda$printFuture$51
	m	(Ladi;)Ljava/util/concurrent/CompletableFuture;	a	prepareTickingChunk
	m	(Ladi;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$protoChunkToFullChunk$30
	m	(Ladi;Lcqq;)Lcqq;	a	lambda$protoChunkToFullChunk$29
	m	(Ladi;Lcqt;)Ljava/util/concurrent/CompletableFuture;	a	schedule
	m	(Ladi;Ljava/lang/Runnable;)V	a	lambda$prepareAccessibleChunk$44
	m	(Ladi;Ljava/lang/Void;Ljava/lang/Throwable;)V	a	lambda$scheduleUnload$14
	m	(Ladi;Ljava/util/concurrent/CompletableFuture;JLcqq;)V	a	lambda$scheduleUnload$13
	m	(Ladw;Ljava/util/List;)V	a	postLoadProtoChunk
	m	(Ladx;)V	a	move
	m	(Ladx;Lcac;)Z	a	playerIsCloseEnoughForSpawning
	m	(Ladx;Lcac;Lorg/apache/commons/lang3/mutable/MutableObject;ZZ)V	a	updateChunkTracking
	m	(Ladx;Lorg/apache/commons/lang3/mutable/MutableObject;Lcra;)V	a	playerLoadedChunk
	m	(Ladx;Z)V	a	updatePlayerStatus
	m	(Laxk;)V	a	addEntity
	m	(Laxk;Lrc;)V	a	broadcast
	m	(Lcac;)Ljava/lang/String;	a	getChunkDebugData
	m	(Lcac;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture;	a	getChunkRangeFuture
	m	(Lcac;ILorg/apache/commons/lang3/mutable/MutableObject;Ladx;)V	a	lambda$setViewDistance$45
	m	(Lcac;Ladi$a;)Ljava/util/concurrent/CompletableFuture;	a	lambda$scheduleChunkGeneration$23
	m	(Lcac;Ladi$c;)V	a	onFullChunkStatusChange
	m	(Lcac;Ladi;Lcqt;Ljava/util/concurrent/Executor;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletionStage;	a	lambda$scheduleChunkGeneration$24
	m	(Lcac;Ladi;Lcqt;Ljava/util/concurrent/Executor;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	lambda$scheduleChunkGeneration$22
	m	(Lcac;Laxk;)D	a	euclideanDistanceSquared
	m	(Lcac;Lcom/mojang/datafixers/util/Either;)V	a	lambda$prepareTickingChunk$40
	m	(Lcac;Lcqt$a;)B	a	markPosition
	m	(Lcac;Lcra;)V	a	lambda$prepareTickingChunk$39
	m	(Lcac;Z)Ljava/util/List;	a	getPlayers
	m	(Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/DataResult;	a	lambda$debugReloadGenerator$0
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$prepareAccessibleChunk$43
	m	(Lcqq;)Z	a	save
	m	(Lcqr;)V	a	lambda$debugReloadGenerator$1
	m	(Lcqt;)Ljava/lang/String;	a	lambda$scheduleChunkGeneration$18
	m	(Lcqt;I)Lcqt;	a	getDependencyStatus
	m	(Lcra;)Ljava/lang/String;	a	lambda$printFuture$50
	m	(Lcri;Lcra;)V	a	lambda$protoChunkToFullChunk$27
	m	(Ljava/io/Writer;)V	a	dumpChunks
	m	(Ljava/lang/IllegalStateException;Ljava/lang/String;)Lz;	a	debugFuturesAndCreateReportedException
	m	(Ljava/lang/StringBuilder;Ladi;)V	a	lambda$debugFuturesAndCreateReportedException$5
	m	(Ljava/lang/StringBuilder;Ladi;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$debugFuturesAndCreateReportedException$4
	m	(Ljava/util/List;)Lcra;	a	lambda$prepareAccessibleChunk$42
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String;	a	printFuture
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lcqq;)V	a	lambda$saveAllChunks$11
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Lcra;Ladx;)V	a	lambda$prepareTickingChunk$38
	m	(Lq;)V	a	lambda$scheduleChunkGeneration$21
	m	(Z)V	a	saveAllChunks
	m	()V	b	debugReloadGenerator
	m	(I)Lcqt;	b	lambda$prepareTickingChunk$32
	m	(IIIII)Z	b	isChunkOnRangeBorder
	m	(J)Ladi;	b	getVisibleChunkIfPresent
	m	(Ladi;)Ljava/util/concurrent/CompletableFuture;	b	prepareAccessibleChunk
	m	(Ladi;Lcqq;)Ljava/util/concurrent/CompletableFuture;	b	lambda$scheduleChunkGeneration$20
	m	(Ladi;Lcqt;)Ljava/util/concurrent/CompletableFuture;	b	scheduleChunkGeneration
	m	(Ladi;Ljava/lang/Runnable;)V	b	lambda$prepareTickingChunk$41
	m	(Ladx;)Z	b	skipPlayer
	m	(Laxk;)V	b	removeEntity
	m	(Laxk;Lrc;)V	b	broadcastAndSend
	m	(Lcac;)Ljava/util/concurrent/CompletableFuture;	b	prepareEntityTickingChunk
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	b	lambda$prepareTickingChunk$37
	m	(Lcqq;)Ljava/util/Optional;	b	lambda$dumpChunks$46
	m	(Lcqt;I)Lcqt;	b	lambda$scheduleChunkGeneration$17
	m	(Lcra;)Ljava/lang/Integer;	b	lambda$dumpChunks$49
	m	(Ljava/util/List;)Lcra;	b	lambda$prepareTickingChunk$33
	m	(Ljava/util/function/BooleanSupplier;)V	b	processUnloads
	m	()Ladz;	c	getLightEngine
	m	(I)Lcqt;	c	lambda$prepareEntityTickingChunk$6
	m	(J)Ljava/util/function/IntSupplier;	c	getChunkQueueLevel
	m	(Ladi;)Ljava/util/concurrent/CompletableFuture;	c	protoChunkToFullChunk
	m	(Ladi;Lcqq;)Ljava/util/concurrent/CompletableFuture;	c	lambda$schedule$15
	m	(Ladi;Ljava/lang/Runnable;)V	c	lambda$prepareTickingChunk$35
	m	(Ladx;)Lhf;	c	updatePlayerPos
	m	(Lcac;)V	c	releaseLightTicket
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	c	lambda$prepareTickingChunk$34
	m	(Lcqq;)Z	c	lambda$saveAllChunks$10
	m	(Lcra;)Ljava/lang/Integer;	c	lambda$dumpChunks$48
	m	(Ljava/util/List;)Lcra;	c	lambda$prepareEntityTickingChunk$7
	m	()Z	d	hasWork
	m	(J)I	d	lambda$getChunkQueueLevel$2
	m	(Ladi;)Z	d	saveChunkIfNeeded
	m	(Ladi;Ljava/lang/Runnable;)V	d	lambda$protoChunkToFullChunk$31
	m	(Lcac;)Z	d	anyPlayerCloseEnoughForSpawning
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	d	lambda$prepareEntityTickingChunk$8
	m	(Lcra;)Ljava/lang/Integer;	d	lambda$dumpChunks$47
	m	()Z	e	promoteChunkMap
	m	(Ladi;)Ladi$c;	e	lambda$protoChunkToFullChunk$28
	m	(Ladi;Ljava/lang/Runnable;)V	e	lambda$scheduleChunkGeneration$19
	m	(Lcac;)Ljava/util/List;	e	getPlayersCloseForSpawning
	m	(Lcra;)V	e	lambda$prepareTickingChunk$36
	m	()I	f	getTickingGenerated
	m	(Ladi;)Lcqq;	f	lambda$saveAllChunks$9
	m	()I	g	size
	m	(Lcac;)Ljava/util/concurrent/CompletableFuture;	g	scheduleChunkLoad
	m	()Ladp;	h	getDistanceManager
	m	(Lcac;)V	h	markPositionReplaceable
	m	()Ljava/lang/Iterable;	i	getChunks
	m	(Lcac;)Z	i	isExistingChunkFull
	m	()V	j	tick
	m	(Lcac;)Lok;	j	readChunk
	m	()Lbhs;	k	getPoiManager
	m	(Lcac;)Ljava/lang/String;	k	lambda$releaseLightTicket$26
	m	()Ljava/lang/String;	l	getStorageName
	m	(Lcac;)V	l	lambda$releaseLightTicket$25
	m	(Lcac;)Lcom/mojang/datafixers/util/Either;	m	lambda$scheduleChunkLoad$16
	m	()Z	o	lambda$saveAllChunks$12
	f	Lavb;	A	worldgenMailbox
	f	Lavb;	B	mainThreadMailbox
	f	Laef;	C	progressListener
	f	Lcsf;	D	chunkStatusListener
	f	Ladj$a;	E	distanceManager
	f	Ljava/util/concurrent/atomic/AtomicInteger;	F	tickingGenerated
	f	Ldhr;	G	structureManager
	f	Ljava/lang/String;	H	storageName
	f	Ladq;	I	playerMap
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	J	entityMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	K	chunkTypeCache
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	L	chunkSaveCooldowns
	f	Ljava/util/Queue;	M	unloadQueue
	f	I	N	viewDistance
	f	I	a	MAX_VIEW_DISTANCE
	f	I	b	MAX_CHUNK_DISTANCE
	f	I	c	FORCED_TICKET_LEVEL
	f	B	f	CHUNK_TYPE_REPLACEABLE
	f	B	g	CHUNK_TYPE_UNKNOWN
	f	B	h	CHUNK_TYPE_FULL
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	I	j	CHUNK_SAVED_PER_TICK
	f	I	k	CHUNK_SAVED_EAGERLY_PER_TICK
	f	I	l	EAGER_CHUNK_SAVE_COOLDOWN_IN_MILLIS
	f	I	m	MIN_VIEW_DISTANCE
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	n	updatingChunkMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	o	visibleChunkMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	p	pendingUnloads
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	q	entitiesInLevel
	f	Ladw;	r	level
	f	Ladz;	s	lightEngine
	f	Lauz;	t	mainThreadExecutor
	f	Lcqr;	u	generator
	f	Ljava/util/function/Supplier;	v	overworldDataStorage
	f	Lbhs;	w	poiManager
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	x	toDrop
	f	Z	y	modified
	f	Ladl;	z	queueSorter
c	adj$1	net/minecraft/server/level/ChunkMap$1
	f	Lcac;	a	val$k
	f	Ladj;	c	this$0
c	adj$2	net/minecraft/server/level/ChunkMap$2
	f	I	a	val$startX
	f	I	c	val$finalI
	f	I	d	val$range
	f	I	e	val$startZ
	f	Lcom/mojang/datafixers/util/Either;	f	val$either
	f	Ladj;	g	this$0
c	adj$a	net/minecraft/server/level/ChunkMap$DistanceManager
	m	(J)Z	a	isChunkToRemove
	m	(JILadi;I)Ladi;	a	updateChunkScheduling
	m	(J)Ladi;	b	getChunk
	f	Ladj;	a	this$0
c	adj$b	net/minecraft/server/level/ChunkMap$TrackedEntity
	m	()V	a	broadcastRemoved
	m	(I)I	a	scaledRange
	m	(Ladx;)V	a	removePlayer
	m	(Ljava/util/List;)V	a	updatePlayers
	m	(Lrc;)V	a	broadcast
	m	()I	b	getEffectiveRange
	m	(Ladx;)V	b	updatePlayer
	m	(Lrc;)V	b	broadcastAndSend
	f	Ladj;	a	this$0
	f	Ladv;	b	serverEntity
	f	Laxk;	c	entity
	f	I	d	range
	f	Lhf;	e	lastSectionPos
	f	Ljava/util/Set;	f	seenBy
c	adk	net/minecraft/server/level/ChunkTaskPriorityQueue
	m	()Ljava/util/stream/Stream;	a	pop
	m	(I)Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	a	lambda$new$0
	m	(ILcac;I)V	a	resortChunkTasks
	m	(J)Ljava/lang/Runnable;	a	acquire
	m	(JLjava/util/Optional;)Lcom/mojang/datafixers/util/Either;	a	lambda$pop$6
	m	(JZ)V	a	release
	m	(Ljava/util/Optional;)Z	a	lambda$release$3
	m	(Ljava/util/Optional;JI)V	a	submit
	m	()Z	b	hasWork
	m	(J)Lcom/mojang/datafixers/util/Either;	b	lambda$pop$5
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	c	getAcquired
	m	(J)V	c	lambda$acquire$4
	m	(J)Ljava/util/List;	d	lambda$submit$2
	m	(J)Ljava/util/List;	e	lambda$resortChunkTasks$1
	f	I	a	PRIORITY_LEVEL_COUNT
	f	Ljava/util/List;	b	taskQueue
	f	I	c	firstQueue
	f	Ljava/lang/String;	d	name
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	acquired
	f	I	f	maxTasks
c	adl	net/minecraft/server/level/ChunkTaskPriorityQueueSorter
	m	()Z	a	hasWork
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$pollTask$15
	m	(ILavb;)Ladk;	a	lambda$new$0
	m	(ILcac;ILadk;)V	a	lambda$onLevelChange$9
	m	(Ladi;Ljava/lang/Runnable;)Ladl$a;	a	message
	m	(Ladi;Ljava/util/function/Function;)Ladl$a;	a	message
	m	(Ladk;Lavb;)V	a	pollTask
	m	(Ladk;Lavb;Ljava/lang/Void;)V	a	lambda$pollTask$16
	m	(Lavb;)Lavb;	a	getReleaseProcessor
	m	(Lavb;JLjava/lang/Runnable;Z)V	a	release
	m	(Lavb;JZLjava/lang/Runnable;)V	a	lambda$release$11
	m	(Lavb;Ladl$b;)V	a	lambda$getReleaseProcessor$6
	m	(Lavb;Lavb;)Lave$b;	a	lambda$getReleaseProcessor$8
	m	(Lavb;Lavb;Z)V	a	lambda$getProcessor$4
	m	(Lavb;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletableFuture;	a	lambda$pollTask$14
	m	(Lavb;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V	a	submit
	m	(Lavb;Ljava/util/function/IntSupplier;JLjava/util/function/Function;Z)V	a	lambda$submit$12
	m	(Lavb;Z)Lavb;	a	getProcessor
	m	(Lavb;ZLadl$a;)V	a	lambda$getProcessor$3
	m	(Lavb;ZLavb;)Lave$b;	a	lambda$getProcessor$5
	m	(Ljava/lang/Long;)Ljava/lang/String;	a	lambda$getDebugStatus$18
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	a	lambda$pollTask$13
	m	(Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Ladl$a;	a	message
	m	(Ljava/lang/Runnable;JZ)Ladl$b;	a	release
	m	(Ljava/lang/Runnable;Lavb;)Ljava/lang/Runnable;	a	lambda$message$2
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	lambda$getDebugStatus$19
	m	(Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Ladl$a;	a	message
	m	(Ljava/util/function/IntSupplier;Lcac;ILjava/util/function/IntConsumer;)V	a	lambda$onLevelChange$10
	m	()Ljava/lang/String;	b	getDebugStatus
	m	(Ladk;Lavb;)V	b	lambda$pollTask$17
	m	(Lavb;)Ladk;	b	getQueue
	m	(Lavb;Lavb;)V	b	lambda$getReleaseProcessor$7
	m	(Ljava/lang/Runnable;Lavb;)V	b	lambda$message$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	queues
	f	Ljava/util/Set;	c	sleeping
	f	Lavc;	d	mailbox
c	adl$a	net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message
	f	Ljava/util/function/Function;	a	task
	f	J	b	pos
	f	Ljava/util/function/IntSupplier;	c	level
c	adl$b	net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release
	f	Ljava/lang/Runnable;	a	task
	f	J	b	pos
	f	Z	c	clearQueue
c	adm	net/minecraft/server/level/ChunkTracker
	m	(J)Z	a	isSource
	m	(JIZ)V	a	checkNeighborsAfterUpdate
	m	(JJI)I	a	getComputedLevel
	m	(J)I	b	getLevelFromSource
	m	(JIZ)V	b	update
	m	(JJI)I	b	computeLevelFromNeighbor
c	adn	net/minecraft/server/level/ColumnPos
	m	()Lcac;	a	toChunkPos
	m	(II)J	a	asLong
	m	()J	b	toLong
	f	I	a	x
	f	I	b	z
	f	J	c	COORD_BITS
	f	J	d	COORD_MASK
	f	I	e	HASH_A
	f	I	f	HASH_C
	f	I	g	HASH_Z_XOR
c	ado	net/minecraft/server/level/DemoMode
	m	()V	a	tick
	m	(Ladx;Lcav;Lbuw;Lawg;)Lawh;	a	useItem
	m	(Ladx;Lcav;Lbuw;Lawg;Ldpk;)Lawh;	a	useItemOn
	m	(Lgj;Lwh$a;Lgo;I)V	a	handleBlockBreakAction
	m	()V	f	outputDemoReminder
	f	I	a	DEMO_DAYS
	f	I	b	TOTAL_PLAY_TICKS
	f	Z	e	displayedIntro
	f	Z	f	demoHasEnded
	f	I	g	demoEndedReminder
	f	I	h	gameModeTicks
c	adp	net/minecraft/server/level/DistanceManager
	m	()V	a	purgeStaleTickets
	m	(I)V	a	updatePlayerTickets
	m	(J)Z	a	isChunkToRemove
	m	(JILadi;I)Ladi;	a	updateChunkScheduling
	m	(JLaea;)V	a	addTicket
	m	(JLcom/mojang/datafixers/util/Either;)V	a	lambda$runAllUpdates$4
	m	(Ladj;)Z	a	runAllUpdates
	m	(Ladj;Ladi;)V	a	lambda$runAllUpdates$0
	m	(Laea;)Z	a	lambda$runAllUpdates$1
	m	(Laeb;Lcac;ILjava/lang/Object;)V	a	addTicket
	m	(Lajr;)I	a	getTicketLevelAt
	m	(Lcac;Z)V	a	updateChunkForced
	m	(Lhf;Ladx;)V	a	addPlayer
	m	(Ljava/lang/String;)V	a	dumpTickets
	m	()I	b	getNaturalSpawnChunkCount
	m	(I)V	b	updateSimulationDistance
	m	(J)Ladi;	b	getChunk
	m	(JLaea;)V	b	removeTicket
	m	(Laeb;Lcac;ILjava/lang/Object;)V	b	removeTicket
	m	(Lhf;Ladx;)V	b	removePlayer
	m	()Ljava/lang/String;	c	getDebugStatus
	m	(J)Z	c	inEntityTickingRange
	m	(Laeb;Lcac;ILjava/lang/Object;)V	c	addRegionTicket
	m	()Laec;	d	tickingTracker
	m	(J)Z	d	inBlockTickingRange
	m	(Laeb;Lcac;ILjava/lang/Object;)V	d	removeRegionTicket
	m	()V	e	removeTicketsOnClosing
	m	(J)Ljava/lang/String;	e	getTicketDebugString
	m	()Z	f	hasTickets
	m	(J)Z	f	hasPlayersNearby
	m	()I	g	getPlayerTicketLevel
	m	(J)Lajr;	g	getTickets
	m	()V	h	lambda$runAllUpdates$2
	m	(J)Lit/unimi/dsi/fastutil/objects/ObjectSet;	h	lambda$addPlayer$6
	m	(J)Lajr;	i	lambda$getTickets$5
	m	(J)V	j	lambda$runAllUpdates$3
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	ENTITY_TICKING_RANGE
	f	I	c	PLAYER_TICKET_LEVEL
	f	I	d	INITIAL_TICKET_LIST_CAPACITY
	f	I	e	ENTITY_TICKING_LEVEL_THRESHOLD
	f	I	f	BLOCK_TICKING_LEVEL_THRESHOLD
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	g	playersPerChunk
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	h	tickets
	f	Ladp$a;	i	ticketTracker
	f	Ladp$b;	j	naturalSpawnChunkCounter
	f	Laec;	k	tickingTicketsTracker
	f	Ladp$c;	l	playerTicketManager
	f	Ljava/util/Set;	m	chunksToUpdateFutures
	f	Ladl;	n	ticketThrottler
	f	Lavb;	o	ticketThrottlerInput
	f	Lavb;	p	ticketThrottlerReleaser
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	q	ticketsToRelease
	f	Ljava/util/concurrent/Executor;	r	mainThreadExecutor
	f	J	s	ticketTickCounter
	f	I	t	simulationDistance
c	adp$a	net/minecraft/server/level/DistanceManager$ChunkTicketTracker
	m	(I)I	a	runDistanceUpdates
	m	(JI)V	a	setLevel
	m	(J)I	b	getLevelFromSource
	m	(J)I	c	getLevel
	f	Ladp;	a	this$0
c	adp$b	net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker
	m	()V	a	runAllUpdates
	m	(JI)V	a	setLevel
	m	(JII)V	a	onLevelChange
	m	(Ljava/lang/String;)V	a	dumpChunks
	m	(J)I	b	getLevelFromSource
	m	(J)I	c	getLevel
	m	(J)Z	d	havePlayer
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	a	chunks
	f	I	b	maxDistance
	f	Ladp;	c	this$0
c	adp$c	net/minecraft/server/level/DistanceManager$PlayerTicketTracker
	m	()V	a	runAllUpdates
	m	(I)V	a	updateViewDistance
	m	(JII)V	a	onLevelChange
	m	(JIZZ)V	a	onLevelChange
	m	(JLaea;)V	a	lambda$onLevelChange$5
	m	(JI)V	b	lambda$runAllUpdates$7
	m	(JLaea;)V	b	lambda$onLevelChange$4
	m	(I)Z	c	haveTicketFor
	m	(JLaea;)V	c	lambda$onLevelChange$2
	m	()V	d	lambda$onLevelChange$0
	m	(I)I	d	lambda$onLevelChange$3
	m	(J)I	d	lambda$runAllUpdates$6
	m	(JLaea;)V	d	lambda$onLevelChange$1
	f	Ladp;	d	this$0
	f	I	e	viewDistance
	f	Lit/unimi/dsi/fastutil/longs/Long2IntMap;	f	queueLevels
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	g	toUpdate
c	adq	net/minecraft/server/level/PlayerMap
	m	(J)Ljava/util/Set;	a	getPlayers
	m	(JJLadx;)V	a	updatePlayer
	m	(JLadx;)V	a	removePlayer
	m	(JLadx;Z)V	a	addPlayer
	m	(Ladx;)V	a	ignorePlayer
	m	(Ladx;)V	b	unIgnorePlayer
	m	(Ladx;)Z	c	ignoredOrUnknown
	m	(Ladx;)Z	d	ignored
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	a	players
c	adr	net/minecraft/server/level/PlayerRespawnLogic
	m	(Ladw;II)Lgj;	a	getOverworldRespawnPos
	m	(Ladw;Lcac;)Lgj;	a	getSpawnPosInChunk
c	ads	net/minecraft/server/level/SectionTracker
	m	(J)Z	a	isSource
	m	(JIZ)V	a	checkNeighborsAfterUpdate
	m	(JJI)I	a	getComputedLevel
	m	(J)I	b	getLevelFromSource
	m	(JIZ)V	b	update
	m	(JJI)I	b	computeLevelFromNeighbor
c	adt	net/minecraft/server/level/ServerBossEvent
	m	(F)V	a	setProgress
	m	(Ladx;)V	a	addPlayer
	m	(Lavx$a;)V	a	setColor
	m	(Lavx$b;)V	a	setOverlay
	m	(Ljava/util/function/Function;)V	a	broadcast
	m	(Lqk;)V	a	setName
	m	(Z)Lavx;	a	setDarkenScreen
	m	()V	b	removeAllPlayers
	m	(Ladx;)V	b	removePlayer
	m	(Z)Lavx;	b	setPlayBossMusic
	m	(Z)Lavx;	c	setCreateWorldFog
	m	(Z)V	d	setVisible
	m	()Z	g	isVisible
	m	()Ljava/util/Collection;	h	getPlayers
	f	Ljava/util/Set;	h	players
	f	Ljava/util/Set;	i	unmodifiablePlayers
	f	Z	j	visible
c	adu	net/minecraft/server/level/ServerChunkCache
	m	()Ladz;	a	getLightEngine
	m	(I)V	a	setViewDistance
	m	(II)Lcra;	a	getChunkNow
	m	(IILcqt;Z)Lcqq;	a	getChunk
	m	(J)Z	a	isPositionTicking
	m	(JLcqq;Lcqt;)V	a	storeInCache
	m	(JLjava/util/function/Consumer;)V	a	getFullChunk
	m	(Ladi;I)Z	a	chunkAbsent
	m	(Ladu$a;)V	a	lambda$tickChunks$5
	m	(Ladx;)V	a	move
	m	(Laeb;Lcac;ILjava/lang/Object;)V	a	addRegionTicket
	m	(Laxk;)V	a	removeEntity
	m	(Laxk;Lrc;)V	a	broadcastAndSend
	m	(Lcac;)Ljava/lang/String;	a	getChunkDebugData
	m	(Lcac;Z)V	a	updateChunkForced
	m	(Lcbe;Lhf;)V	a	onLightUpdate
	m	(Lcqq;)Lcqq;	a	lambda$getChunk$1
	m	(Lgj;)V	a	blockChanged
	m	(Lhf;Lcbe;)V	a	lambda$onLightUpdate$6
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage;	a	lambda$getChunkFuture$4
	m	(Ljava/util/function/BooleanSupplier;Z)V	a	tick
	m	(Z)V	a	save
	m	(ZLadi$a;)Lcqq;	a	lambda$getChunk$2
	m	(ZZ)V	a	setSpawnSettings
	m	()I	b	getTickingGenerated
	m	(I)V	b	setSimulationDistance
	m	(II)Z	b	hasChunk
	m	(IILcqt;Z)Ljava/util/concurrent/CompletableFuture;	b	getChunkFuture
	m	(J)Ladi;	b	getVisibleChunkIfPresent
	m	(Laeb;Lcac;ILjava/lang/Object;)V	b	removeRegionTicket
	m	(Laxk;)V	b	addEntity
	m	(Laxk;Lrc;)V	b	broadcast
	m	()Lcav;	c	getLevel
	m	(II)Lcab;	c	getChunkForLighting
	m	(IILcqt;Z)Ljava/util/concurrent/CompletableFuture;	c	getChunkFutureMainThread
	m	()Z	d	pollTask
	m	(IILcqt;Z)Ljava/util/concurrent/CompletableFuture;	d	lambda$getChunkFuture$3
	m	()Ljava/lang/String;	e	gatherStats
	m	(IILcqt;Z)Lcqq;	e	lambda$getChunk$0
	m	()I	f	getPendingTasksCount
	m	()Lcqr;	g	getGenerator
	m	()I	h	getLoadedChunksCount
	m	()Ldkl;	i	getDataStorage
	m	()Lbhs;	j	getPoiManager
	m	()Lcrm;	k	chunkScanner
	m	()Lcbg$d;	l	getLastSpawnState
	m	()V	m	removeTicketsOnClosing
	m	()Ldio;	n	getLightEngine
	m	()Lcab;	o	getLevel
	m	()V	p	clearCache
	m	()Z	q	runDistanceManagerUpdates
	m	()V	r	tickChunks
	f	Ladj;	a	chunkMap
	f	Ljava/util/List;	b	CHUNK_STATUSES
	f	Ladp;	c	distanceManager
	f	Ladw;	d	level
	f	Ljava/lang/Thread;	e	mainThread
	f	Ladz;	f	lightEngine
	f	Ladu$b;	g	mainThreadProcessor
	f	Ldkl;	h	dataStorage
	f	J	i	lastInhabitedUpdate
	f	Z	j	spawnEnemies
	f	Z	k	spawnFriendlies
	f	I	l	CACHE_SIZE
	f	[J	m	lastChunkPos
	f	[Lcqt;	n	lastChunkStatus
	f	[Lcqq;	o	lastChunk
	f	Lcbg$d;	p	lastSpawnState
c	adu$a	net/minecraft/server/level/ServerChunkCache$ChunkAndHolder
	m	()Lcra;	a	chunk
	m	()Ladi;	b	holder
	f	Lcra;	a	chunk
	f	Ladi;	b	holder
c	adu$b	net/minecraft/server/level/ServerChunkCache$MainThreadExecutor
	m	()Z	as	scheduleExecutables
	m	()Ljava/lang/Thread;	at	getRunningThread
	m	(Ljava/lang/Runnable;)V	d	doRunTask
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
	m	()Z	y	pollTask
	f	Ladu;	a	this$0
c	adv	net/minecraft/server/level/ServerEntity
	m	()V	a	sendChanges
	m	(Ladx;)V	a	removePairing
	m	(Ljava/util/function/Consumer;)V	a	sendPairingData
	m	(Lrc;)V	a	broadcastAndSend
	m	()Ldpo;	b	sentPos
	m	(Ladx;)V	b	addPairing
	m	()V	c	sendDirtyEntityData
	m	()V	d	updateSentPos
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	TOLERANCE_LEVEL_ROTATION
	f	Ladw;	c	level
	f	Laxk;	d	entity
	f	I	e	updateInterval
	f	Z	f	trackDelta
	f	Ljava/util/function/Consumer;	g	broadcast
	f	J	h	xp
	f	J	i	yp
	f	J	j	zp
	f	I	k	yRotp
	f	I	l	xRotp
	f	I	m	yHeadRotp
	f	Ldpo;	n	ap
	f	I	o	tickCount
	f	I	p	teleportDelay
	f	Ljava/util/List;	q	lastPassengers
	f	Z	r	wasRiding
	f	Z	s	wasOnGround
c	adw	net/minecraft/server/level/ServerLevel
	m	()Lbpq;	A	getRaids
	m	()Ljava/lang/Iterable;	B	getAllEntities
	m	()Z	C	isFlat
	m	()J	D	getSeed
	m	(Lgj;)Ljava/util/Optional;	D	findLightningRod
	m	()Lcsb;	E	dragonFight
	m	(Lgj;)V	E	lambda$onBlockStateChange$13
	m	()Ladw;	F	getLevel
	m	(Lgj;)Lgj;	F	lambda$findLightningRod$7
	m	()Ljava/lang/String;	G	getWatchdogStats
	m	(Lgj;)Z	G	lambda$findLightningRod$6
	m	()Lcsp;	H	getEntities
	m	()Ljava/lang/String;	I	gatherChunkSourceStats
	m	()Ldqm;	J	getScoreboard
	m	()Lcqs;	K	getChunkSource
	m	()Ldqu;	L	getFluidTicks
	m	()Ldqu;	M	getBlockTicks
	m	()Lcbm;	a	structureFeatureManager
	m	(I)Laxk;	a	getEntity
	m	(III)Lgs;	a	getUncachedNoiseBiome
	m	(IIZ)Z	a	setChunkForced
	m	(IIZZ)V	a	setWeatherParameters
	m	(ILgj;I)V	a	destroyBlockProgress
	m	(J)Z	a	shouldTickBlocksAt
	m	(Ladw;)V	a	makeObsidianPlatform
	m	(Ladw;Lgj;)V	a	lambda$makeObsidianPlatform$21
	m	(Ladx;)V	a	addDuringCommandTeleport
	m	(Ladx;Laxk$c;)V	a	removePlayerImmediately
	m	(Ladx;Lia;ZDDDIDDDD)Z	a	sendParticles
	m	(Ladx;ZDDDLrc;)Z	a	sendParticles
	m	(Laif;Lgj;IZ)Lgj;	a	findNearestMapFeature
	m	(Lajo;ZZ)V	a	save
	m	(Lasy;Laxk;)V	a	lambda$tick$3
	m	(Laxk;)V	a	tickNonPassenger
	m	(Laxk;B)V	a	broadcastEntityEvent
	m	(Laxk;Lawu;Lcao;DDDFZLcan$a;)Lcan;	a	explode
	m	(Laxk;Laxk;)V	a	tickPassenger
	m	(Laxk;Lcsy;Lgj;)V	a	gameEvent
	m	(Laxy;)Z	a	lambda$findLightningTargetAround$8
	m	(Lbhp;Laxk;Laym;)V	a	onReputationEvent
	m	(Lbhv;)Z	a	lambda$findLightningRod$5
	m	(Lboj;DDDLahj;Lahl;FF)V	a	playSound
	m	(Lboj;ILgj;I)V	a	levelEvent
	m	(Lboj;Laxk;Lahj;Lahl;FF)V	a	playSound
	m	(Lboj;Lgj;)Z	a	mayInteract
	m	(Lcaa;)Z	a	doBlockEvent
	m	(Lcac;)Z	a	isNaturalSpawningAllowed
	m	(Lcqq;)V	a	onStructureStartsAvailable
	m	(Lcra;)V	a	unload
	m	(Lcra;I)V	a	tickChunk
	m	(Lcsn;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	(Lctg;)V	a	sendVibrationParticle
	m	(Ldeo;)V	a	clearBlockEvents
	m	(Ldeo;Lcaa;)Z	a	lambda$clearBlockEvents$17
	m	(Lgj;)Lgj;	a	findLightningTargetAround
	m	(Lgj;F)V	a	setDefaultSpawnPos
	m	(Lgj;I)Z	a	isCloseToVillage
	m	(Lgj;Lbhv;)V	a	lambda$onBlockStateChange$16
	m	(Lgj;Lcdq;)V	a	blockUpdated
	m	(Lgj;Lcdq;II)V	a	blockEvent
	m	(Lgj;Lcov;Lcov;)V	a	onBlockStateChange
	m	(Lgj;Lcov;Lcov;I)V	a	sendBlockUpdated
	m	(Lgj;Ldiw;)V	a	tickFluid
	m	(Lgj;Lrl;Ladx;)V	a	lambda$sendVibrationParticle$12
	m	(Lgo;Z)F	a	getShade
	m	(Lhf;)Z	a	isVillage
	m	(Lia;DDDIDDDD)I	a	sendParticles
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Ljava/lang/String;	a	lambda$getTypeCount$19
	m	(Ljava/io/Writer;)V	a	dumpBlockEntityTickers
	m	(Ljava/io/Writer;Ljava/lang/Iterable;)V	a	dumpEntities
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/lang/String;	a	getTypeCount
	m	(Ljava/lang/String;)Ldkf;	a	getMapData
	m	(Ljava/lang/String;Ldkf;)V	a	setMapData
	m	(Ljava/nio/file/Path;)V	a	saveDebugReport
	m	(Ljava/util/UUID;)Laxk;	a	getEntity
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
	m	(Ljava/util/function/Predicate;)Ljava/util/List;	a	getPlayers
	m	(Ljava/util/function/Predicate;Lgj;II)Lcom/mojang/datafixers/util/Pair;	a	findNearestBiome
	m	(Ljava/util/function/Predicate;Ljava/util/List;Laxk;)V	a	lambda$getEntities$11
	m	(Ljava/util/stream/Stream;)V	a	addLegacyChunkEntities
	m	(Lnet/minecraft/server/MinecraftServer;)Ldkl;	a	lambda$new$0
	m	(Lok;)Lbpq;	a	lambda$new$1
	m	(ZZ)V	a	tickCustomSpawners
	m	()V	am	wakeUpAllPlayers
	m	()V	an	announceSleepStatus
	m	()V	ao	advanceWeatherCycle
	m	()V	ap	resetWeatherCycle
	m	()V	aq	saveLevelData
	m	()V	ar	runBlockEvents
	m	()Lbpq;	as	lambda$new$2
	m	()V	b	tickTime
	m	(I)Laxk;	b	getEntityOrPart
	m	(ILgj;I)V	b	globalLevelEvent
	m	(J)V	b	setDayTime
	m	(Ladw;Lgj;)V	b	lambda$makeObsidianPlatform$20
	m	(Ladx;)V	b	addDuringPortalTeleport
	m	(Laxk;)Z	b	addFreshEntity
	m	(Lcqq;)V	b	lambda$onStructureStartsAvailable$22
	m	(Lcra;)V	b	startTickingChunk
	m	(Lgj;)Z	b	isVillage
	m	(Lgj;Lbhv;)V	b	lambda$onBlockStateChange$15
	m	(Lhf;)I	b	sectionsToVillage
	m	(Ljava/util/stream/Stream;)V	b	addWorldGenChunkEntities
	m	()Z	c	isHandlingTick
	m	(J)Z	c	areEntitiesLoaded
	m	(Ladx;)V	c	addNewPlayer
	m	(Laxk;)Z	c	addWithUUID
	m	(Lgj;)Lbpo;	c	getRaidAt
	m	(Lgj;Lbhv;)V	c	lambda$onBlockStateChange$14
	m	()Z	d	canSleepThroughNights
	m	(J)Z	d	isPositionTickingWithEntitiesLoaded
	m	(Ladx;)V	d	addRespawnedPlayer
	m	(Laxk;)V	d	addDuringTeleport
	m	(Lgj;)Z	d	isRaided
	m	(Lgj;Lcdq;)V	d	tickBlock
	m	()V	e	updateSleepingPlayerList
	m	(Ladx;)V	e	addPlayer
	m	(Laxk;)Z	e	tryAddFreshEntityWithPassengers
	m	(Lgj;)Z	e	isPositionEntityTicking
	m	()Lzi;	f	getScoreboard
	m	(Ladx;)V	f	lambda$wakeUpAllPlayers$4
	m	(Lgj;)Z	f	isNaturalSpawningAllowed
	m	()V	g	resetEmptyTime
	m	()Ljava/util/List;	h	getDragons
	m	()Ladx;	i	getRandomPlayer
	m	(Laxk;)Z	i	shouldDiscardEntity
	m	()I	j	getLogicalHeight
	m	(Laxk;)Z	j	addEntity
	m	()Ladu;	k	getChunkSource
	m	(Laxk;)Ljava/lang/String;	k	lambda$getWatchdogStats$18
	m	()Ldqv;	l	getBlockTicks
	m	(Laxk;)Ljava/lang/String;	l	lambda$tickPassenger$10
	m	()Ldqv;	m	getFluidTicks
	m	(Laxk;)Ljava/lang/String;	m	lambda$tickNonPassenger$9
	m	()Lnet/minecraft/server/MinecraftServer;	n	getServer
	m	()Ldju;	o	getPortalForcer
	m	()Ldhr;	p	getStructureManager
	m	()Lbxp;	q	getRecipeManager
	m	()Z	r	noSave
	m	()Lhc;	s	registryAccess
	m	()Ldkl;	t	getDataStorage
	m	()I	u	getFreeMapId
	m	()Lgj;	v	getSharedSpawnPos
	m	()F	w	getSharedSpawnAngle
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	x	getForcedChunks
	m	()Ljava/util/List;	y	players
	m	()Lbhs;	z	getPoiManager
	f	I	A	MIN_RAIN_TIME
	f	I	B	MAX_RAIN_TIME
	f	I	C	MIN_THUNDER_DELAY_TIME
	f	I	D	MAX_THUNDER_DELAY_TIME
	f	I	E	MIN_THUNDER_TIME
	f	I	F	MAX_THUNDER_TIME
	f	Lorg/slf4j/Logger;	G	LOGGER
	f	I	H	EMPTY_TIME_NO_TICK
	f	I	I	MAX_SCHEDULED_TICKS_PER_TICK
	f	Ljava/util/List;	J	players
	f	Ladu;	K	chunkSource
	f	Lnet/minecraft/server/MinecraftServer;	L	server
	f	Ldku;	M	serverLevelData
	f	Lcsm;	N	entityTickList
	f	Lcsr;	O	entityManager
	f	Lagq;	P	sleepStatus
	f	I	Q	emptyTime
	f	Ldju;	R	portalForcer
	f	Ldqv;	S	blockTicks
	f	Ldqv;	T	fluidTicks
	f	Ljava/util/Set;	U	navigatingMobs
	f	Z	V	isUpdatingNavigations
	f	Lit/unimi/dsi/fastutil/objects/ObjectLinkedOpenHashSet;	W	blockEvents
	f	Ljava/util/List;	X	blockEventsToReschedule
	f	Z	Y	handlingTick
	f	Ljava/util/List;	Z	customSpawners
	f	Lgj;	a	END_SPAWN_POINT
	f	Lcsb;	aa	dragonFight
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	ab	dragonParts
	f	Lcbm;	ac	structureFeatureManager
	f	Ldfk;	ad	structureCheck
	f	Z	ae	tickTime
	f	Z	b	noSave
	f	Lbpq;	c	raids
	f	I	y	MIN_RAIN_DELAY_TIME
	f	I	z	MAX_RAIN_DELAY_TIME
c	adw$a	net/minecraft/server/level/ServerLevel$EntityCallbacks
	m	(Laxk;)V	a	onCreated
	m	(Ljava/lang/Object;)V	a	onTrackingEnd
	m	(Laxk;)V	b	onDestroyed
	m	(Ljava/lang/Object;)V	b	onTrackingStart
	m	(Laxk;)V	c	onTickingStart
	m	(Ljava/lang/Object;)V	c	onTickingEnd
	m	(Laxk;)V	d	onTickingEnd
	m	(Ljava/lang/Object;)V	d	onTickingStart
	m	(Laxk;)V	e	onTrackingStart
	m	(Ljava/lang/Object;)V	e	onDestroyed
	m	(Laxk;)V	f	onTrackingEnd
	m	(Ljava/lang/Object;)V	f	onCreated
	f	Ladw;	a	this$0
c	adx	net/minecraft/server/level/ServerPlayer
	m	()Lboh;	A	getChatVisibility
	m	()I	B	getPermissionLevel
	m	()Z	B_	isSpectator
	m	()V	C	resetLastActionTime
	m	()Lahq;	D	getStats
	m	()Lahp;	E	getRecipeBook
	m	()V	F	updateInvisibilityStatus
	m	()Laxk;	G	getCamera
	m	()V	H	processPortalCooldown
	m	()J	I	getLastActionTime
	m	()Lqk;	J	getTabListDisplayName
	m	()Z	K	isChangingDimension
	m	()V	L	hasChangedDimension
	m	()Lzb;	M	getAdvancements
	m	()Lgj;	N	getRespawnPosition
	m	()F	O	getRespawnAngle
	m	()Lys;	P	getRespawnDimension
	m	()Z	Q	isRespawnForced
	m	()Lhf;	R	getLastSectionPos
	m	()Lrc;	S	getAddEntityPacket
	m	()Laet;	T	getTextFilter
	m	()Z	U	isTextFilteringEnabled
	m	()Z	V	allowsListing
	m	()Lcav;	W	getLevel
	m	(DDD)V	a	dismountTo
	m	(DZ)V	a	doCheckFallDamage
	m	(DZLcov;Lgj;)V	a	checkFallDamage
	m	(FFZZ)V	a	setPlayerInput
	m	(I)V	a	setExperiencePoints
	m	(ILbzu;IIZZ)V	a	sendMerchantOffers
	m	(ILdql;)V	a	lambda$awardStat$8
	m	(Ladw;)Ldjv;	a	findDimensionEntryPoint
	m	(Ladw;DDDFF)V	a	teleportTo
	m	(Ladw;Lgj;)V	a	createEndPlatform
	m	(Ladw;Lgj;ZLcql;)Ljava/util/Optional;	a	getExitPortal
	m	(Ladx;)Z	a	broadcastToPlayer
	m	(Ladx;Z)V	a	restoreFrom
	m	(Lahj;Lahl;FF)V	a	playNotifySound
	m	(Lahr;)V	a	resetStat
	m	(Lahr;I)V	a	awardStat
	m	(Laka;)V	a	lambda$startSleepInBed$7
	m	(Lawg;)V	a	swing
	m	(Lawk;)Ljava/util/OptionalInt;	a	openMenu
	m	(Lawu;)V	a	die
	m	(Lawu;F)Z	a	hurt
	m	(Laxe;)V	a	onEffectRemoved
	m	(Laxe;Laxk;)V	a	onEffectAdded
	m	(Laxe;ZLaxk;)V	a	onEffectUpdated
	m	(Laxk;)V	a	crit
	m	(Laxk;I)V	a	take
	m	(Laxk;ILawu;)V	a	awardKillScore
	m	(Laxk;Z)Z	a	startRiding
	m	(Laya;)V	a	lambda$tellNeutralMobsThatIDied$5
	m	(Lbjo;Lawa;)V	a	openHorseInventory
	m	(Lbmd;)Z	a	lambda$startSleepInBed$6
	m	(Lboi;I)V	a	lambda$drop$10
	m	(Lboj;)Z	a	canHarmPlayer
	m	(Lbqp;)V	a	initMenu
	m	(Lbuw;)V	a	updateUsingItem
	m	(Lbuw;I)V	a	onEnchantmentPerformed
	m	(Lbuw;Lawg;)V	a	openItemGui
	m	(Lbuw;ZZ)Lbli;	a	drop
	m	(Lcac;)V	a	untrackChunk
	m	(Lcac;Lrc;)V	a	trackChunk
	m	(Lcas;)Z	a	setGameMode
	m	(Lcav;Lgj;)Z	a	mayInteract
	m	(Lcmy;)V	a	openCommandBlock
	m	(Lcnr;)V	a	openTextEdit
	m	(Lcov;)V	a	onInsideBlock
	m	(Ldqp;I)V	a	updateScoreForCriteria
	m	(Ldv$a;Laxk;Ldv$a;)V	a	lookAt
	m	(Ldv$a;Ldpo;)V	a	lookAt
	m	(Lgj;)Lcom/mojang/datafixers/util/Either;	a	startSleepInBed
	m	(Lgj;Lgo;)Z	a	bedInRange
	m	(Lhf;)V	a	setLastSectionPos
	m	(Ljava/lang/String;Ljava/lang/String;ZLqk;)V	a	sendTexturePack
	m	(Ljava/lang/String;Ljava/lang/String;[Ldqp;)V	a	handleTeamKill
	m	(Ljava/util/Collection;)I	a	awardRecipes
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lok;Ljava/lang/String;)Lcas;	a	readPlayerMode
	m	(Lok;Lpd;)V	a	lambda$addAdditionalSaveData$0
	m	(Lqh;)Z	a	acceptsChat
	m	(Lqh;Lqk;Ljava/util/UUID;Lio/netty/util/concurrent/Future;)V	a	lambda$sendMessage$9
	m	(Lqk;Lio/netty/util/concurrent/Future;)V	a	lambda$die$3
	m	(Lqk;Ljava/util/UUID;)V	a	sendMessage
	m	(Lqk;Lqh;Ljava/util/UUID;)V	a	sendMessage
	m	(Lqk;Lqu;)Lqu;	a	lambda$die$2
	m	(Lqk;Z)V	a	displayClientMessage
	m	(Lvp;)V	a	updateOptions
	m	(Lys;Lgj;FZZ)V	a	setRespawnPosition
	m	(Z)Z	a	drop
	m	(ZZ)V	a	stopSleepInBed
	m	([Lyt;)V	a	awardRecipesByKey
	m	(DDD)V	b	teleportTo
	m	(I)V	b	setExperienceLevels
	m	(ILdql;)V	b	lambda$updateScoreForCriteria$1
	m	(Ladw;)Laxk;	b	changeDimension
	m	(Ladx;)Z	b	shouldFilterMessageTo
	m	(Lawu;)Z	b	isInvulnerableTo
	m	(Laxk;)V	b	magicCrit
	m	(Laya;)Z	b	lambda$tellNeutralMobsThatIDied$4
	m	(Lcas;)Lcas;	b	calculateGameModeForNewPlayer
	m	(Lgj;)V	b	startSleeping
	m	(Lgj;Lgo;)Z	b	bedBlocked
	m	(Ljava/util/Collection;)I	b	resetRecipes
	m	(Lok;)V	b	addAdditionalSaveData
	m	(DDD)V	c	moveTo
	m	(I)V	c	giveExperienceLevels
	m	(Ladw;)V	c	setLevel
	m	(Laxk;)V	c	setCamera
	m	(Lgj;)V	c	onChangedBlock
	m	(Lok;)V	c	loadGameTypes
	m	(I)V	d	giveExperiencePoints
	m	(Ladw;)V	d	fudgeSpawnLocation
	m	(Laxk;)V	d	attack
	m	(Ladw;)V	e	triggerDimensionChangeTriggers
	m	()Z	f	isCreative
	m	()V	fP	tellNeutralMobsThatIDied
	m	()Z	fQ	isPvpAllowed
	m	()V	fR	nextContainerCounter
	m	()V	g	initInventoryMenu
	m	(Lgj;)Z	g	isReachableBedBlock
	m	()V	h	onEnterCombat
	m	()V	i	onLeaveCombat
	m	()Lbut;	j	createItemCooldowns
	m	()V	k	tick
	m	(Lok;)V	k	storeGameTypes
	m	()V	l	doTick
	m	()V	m	resetFallDistance
	m	()V	n	trackStartFallingPosition
	m	()V	o	trackEnteredOrExitedLavaOnVehicle
	m	()V	p	stopRiding
	m	()V	q	closeContainer
	m	()V	r	doCloseContainer
	m	()V	s	disconnect
	m	()Z	t	hasDisconnected
	m	()V	u	resetSentInfo
	m	(I)I	u	getCoprime
	m	()V	v	completeUsingItem
	m	()V	w	onUpdateAbilities
	m	()Ladw;	x	getLevel
	m	()Ljava/lang/String;	y	getIpAddress
	m	()Z	z	canChatInColor
	f	Laeo;	b	connection
	f	I	cA	lastSentFood
	f	Z	cB	lastFoodSaturationZero
	f	I	cC	lastSentExp
	f	I	cD	spawnInvulnerableTime
	f	Lboh;	cE	chatVisibility
	f	Z	cF	canChatColor
	f	J	cG	lastActionTime
	f	Laxk;	cH	camera
	f	Z	cI	isChangingDimension
	f	Z	cJ	seenCredits
	f	Lahp;	cK	recipeBook
	f	Ldpo;	cL	levitationStartPos
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	f	I	cM	levitationStartTime
	f	Z	cN	disconnected
	f	Ldpo;	cO	startingToFallPosition
	f	Ldpo;	cP	enteredNetherPosition
	f	Ldpo;	cQ	enteredLavaOnVehiclePosition
	f	Lhf;	cR	lastSectionPos
	f	Lys;	cS	respawnDimension
	f	Lgj;	cT	respawnPosition
	f	Z	cU	respawnForced
	f	F	cV	respawnAngle
	f	Laet;	cW	textFilter
	f	Z	cX	textFilteringEnabled
	f	Z	cY	allowsListing
	f	Lbrc;	cZ	containerSynchronizer
	f	Lorg/slf4j/Logger;	co	LOGGER
	f	I	cp	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ
	f	I	cq	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y
	f	Lzb;	cr	advancements
	f	Lahq;	cs	stats
	f	F	ct	lastRecordedHealthAndAbsorption
	f	I	cu	lastRecordedFoodLevel
	f	I	cv	lastRecordedAirLevel
	f	I	cw	lastRecordedArmor
	f	I	cx	lastRecordedLevel
	f	I	cy	lastRecordedExperience
	f	F	cz	lastSentHealth
	f	Lady;	d	gameMode
	f	Lbrb;	da	containerListener
	f	I	db	containerCounter
	f	I	e	latency
	f	Z	f	wonGame
c	adx$1	net/minecraft/server/level/ServerPlayer$1
	m	(Lbqp;II)V	a	sendDataChange
	m	(Lbqp;ILbuw;)V	a	sendSlotChange
	m	(Lbqp;Lbuw;)V	a	sendCarriedChange
	m	(Lbqp;Lgx;Lbuw;[I)V	a	sendInitialData
	m	(Lbqp;II)V	b	broadcastDataValue
	f	Ladx;	a	this$0
c	adx$2	net/minecraft/server/level/ServerPlayer$2
	m	(Lbqp;II)V	a	dataChanged
	m	(Lbqp;ILbuw;)V	a	slotChanged
	f	Ladx;	a	this$0
c	adx$3	net/minecraft/server/level/ServerPlayer$3
	f	[I	a	$SwitchMap$net$minecraft$world$entity$player$ChatVisiblity
c	ady	net/minecraft/server/level/ServerPlayerGameMode
	m	()V	a	tick
	m	(Ladw;)V	a	setLevel
	m	(Ladx;Lcav;Lbuw;Lawg;)Lawh;	a	useItem
	m	(Ladx;Lcav;Lbuw;Lawg;Ldpk;)Lawh;	a	useItemOn
	m	(Lcas;)Z	a	changeGameModeForPlayer
	m	(Lcas;Lcas;)V	a	setGameModeForPlayer
	m	(Lcov;Lgj;I)F	a	incrementDestroyProgress
	m	(Lgj;)Z	a	destroyBlock
	m	(Lgj;Lwh$a;Lgo;I)V	a	handleBlockBreakAction
	m	(Lgj;Lwh$a;Ljava/lang/String;)V	a	destroyAndAck
	m	()Lcas;	b	getGameModeForPlayer
	m	()Lcas;	c	getPreviousGameModeForPlayer
	m	()Z	d	isSurvival
	m	()Z	e	isCreative
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcas;	b	gameModeForPlayer
	f	Ladw;	c	level
	f	Ladx;	d	player
	f	Lcas;	e	previousGameModeForPlayer
	f	Z	f	isDestroyingBlock
	f	I	g	destroyProgressStart
	f	Lgj;	h	destroyPos
	f	I	i	gameTicks
	f	Z	j	hasDelayedDestroy
	f	Lgj;	k	delayedDestroyPos
	f	I	l	delayedTickStart
	f	I	m	lastSentState
c	adz	net/minecraft/server/level/ThreadedLevelLightEngine
	m	()V	a	tryScheduleUpdate
	m	(I)V	a	setTaskPerBatch
	m	(IILadz$a;Ljava/lang/Runnable;)V	a	addTask
	m	(IILjava/util/function/IntSupplier;Ladz$a;Ljava/lang/Runnable;)V	a	addTask
	m	(IZZ)I	a	runUpdates
	m	(Ladz$a;Ljava/lang/Runnable;)V	a	lambda$addTask$13
	m	(Lcac;)V	a	updateChunkStatus
	m	(Lcac;Ljava/lang/Runnable;)V	a	lambda$lightChunk$21
	m	(Lcac;Z)V	a	enableLightSources
	m	(Lcbe;Lhf;Lcqu;Z)V	a	queueSectionData
	m	(Lcqq;Lcac;)Lcqq;	a	lambda$lightChunk$20
	m	(Lcqq;Lcac;Z)V	a	lambda$lightChunk$18
	m	(Lcqq;Lgj;)V	a	lambda$lightChunk$17
	m	(Lcqq;Z)Ljava/util/concurrent/CompletableFuture;	a	lightChunk
	m	(Lgj;)V	a	checkBlock
	m	(Lgj;I)V	a	onBlockEmissionIncrease
	m	(Lhf;)Ljava/lang/String;	a	lambda$queueSectionData$12
	m	(Lhf;Z)V	a	updateSectionStatus
	m	(Lcac;)Ljava/lang/String;	b	lambda$retainData$16
	m	(Lcac;Z)V	b	retainData
	m	(Lcbe;Lhf;Lcqu;Z)V	b	lambda$queueSectionData$11
	m	(Lgj;)Ljava/lang/String;	b	lambda$checkBlock$1
	m	(Lhf;Z)Ljava/lang/String;	b	lambda$updateSectionStatus$7
	m	(Lcac;)Ljava/lang/String;	c	lambda$updateChunkStatus$4
	m	(Lcac;Z)Ljava/lang/String;	c	lambda$lightChunk$19
	m	(Lgj;)V	c	lambda$checkBlock$0
	m	(Lhf;Z)V	c	lambda$updateSectionStatus$6
	m	(Lcac;)V	d	lambda$updateChunkStatus$3
	m	(Lcac;Z)V	d	lambda$retainData$15
	m	()V	e	runUpdate
	m	(Lcac;Z)Ljava/lang/String;	e	lambda$enableLightSources$9
	m	()V	f	lambda$tryScheduleUpdate$22
	m	(Lcac;Z)V	f	lambda$enableLightSources$8
	m	()I	g	lambda$retainData$14
	m	()I	h	lambda$queueSectionData$10
	m	()I	i	lambda$updateSectionStatus$5
	m	()I	j	lambda$updateChunkStatus$2
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lavc;	e	taskMailbox
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	f	lightTasks
	f	Ladj;	g	chunkMap
	f	Lavb;	h	sorterMailbox
	f	I	i	taskPerBatch
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	j	scheduled
c	adz$a	net/minecraft/server/level/ThreadedLevelLightEngine$TaskType
	m	()[Ladz$a;	a	$values
	f	Ladz$a;	a	PRE_UPDATE
	f	Ladz$a;	b	POST_UPDATE
	f	[Ladz$a;	c	$VALUES
c	aea	net/minecraft/server/level/Ticket
	m	()Laeb;	a	getType
	m	(J)V	a	setCreatedTick
	m	(Laea;)I	a	compareTo
	m	()I	b	getTicketLevel
	m	(J)Z	b	timedOut
	f	Laeb;	a	type
	f	I	b	ticketLevel
	f	Ljava/lang/Object;	c	key
	f	J	d	createdTick
c	aeb	net/minecraft/server/level/TicketType
	m	()Ljava/util/Comparator;	a	getComparator
	m	(Laka;Laka;)I	a	lambda$static$1
	m	(Ljava/lang/String;Ljava/util/Comparator;)Laeb;	a	create
	m	(Ljava/lang/String;Ljava/util/Comparator;I)Laeb;	a	create
	m	()J	b	timeout
	m	(Laka;Laka;)I	b	lambda$static$0
	f	Laeb;	a	START
	f	Laeb;	b	DRAGON
	f	Laeb;	c	PLAYER
	f	Laeb;	d	FORCED
	f	Laeb;	e	LIGHT
	f	Laeb;	f	PORTAL
	f	Laeb;	g	POST_TELEPORT
	f	Laeb;	h	UNKNOWN
	f	Ljava/lang/String;	i	name
	f	Ljava/util/Comparator;	j	comparator
	f	J	k	timeout
c	aec	net/minecraft/server/level/TickingTracker
	m	()V	a	runAllUpdates
	m	(I)V	a	replacePlayerTicketsLevel
	m	(JI)V	a	setLevel
	m	(JLaea;)V	a	addTicket
	m	(Laeb;Lcac;ILjava/lang/Object;)V	a	addTicket
	m	(Lajr;)I	a	getTicketLevelAt
	m	(Lcac;)I	a	getLevel
	m	(J)I	b	getLevelFromSource
	m	(JLaea;)V	b	removeTicket
	m	(Laeb;Lcac;ILjava/lang/Object;)V	b	removeTicket
	m	(J)I	c	getLevel
	m	(J)Ljava/lang/String;	d	getTicketDebugString
	m	(J)Lajr;	g	getTickets
	m	(J)Lajr;	h	lambda$getTickets$0
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	a	chunks
	f	I	b	INITIAL_TICKET_LIST_CAPACITY
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	c	tickets
c	aed	net/minecraft/server/level/WorldGenRegion
	m	()J	D	getSeed
	m	()Ladw;	F	getLevel
	m	()Lcqs;	K	getChunkSource
	m	()Ldqu;	L	getFluidTicks
	m	()Ldqu;	M	getBlockTicks
	m	()Lcac;	a	getCenter
	m	(DDDDLjava/util/function/Predicate;)Lboj;	a	getNearestPlayer
	m	(II)Lcqq;	a	getChunk
	m	(III)Lgs;	a	getUncachedNoiseBiome
	m	(IILcqt;Z)Lcqq;	a	getChunk
	m	(Laxk;Lcsy;Lgj;)V	a	gameEvent
	m	(Laxk;Ldpj;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	(Lboj;ILgj;I)V	a	levelEvent
	m	(Lboj;Lgj;Lahj;Lahl;FF)V	a	playSound
	m	(Lcsn;Ldpj;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	(Lctw$a;II)I	a	getHeight
	m	(Lgj;Lcov;II)Z	a	setBlock
	m	(Lgj;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
	m	(Lgj;Z)Z	a	removeBlock
	m	(Lgj;ZLaxk;I)Z	a	destroyBlock
	m	(Lgo;Z)F	a	getShade
	m	(Lia;DDDDDD)V	a	addParticle
	m	(Ljava/util/function/Supplier;)V	a	setCurrentlyGenerating
	m	(Lgj;)Lcov;	a_	getBlockState
	m	(II)Z	b	hasChunk
	m	(Laxk;)Z	b	addFreshEntity
	m	(Lgj;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
	m	(Lgj;)Ldix;	b_	getFluidState
	m	(Lgj;)Lcmr;	c_	getBlockEntity
	m	(Lgj;)Lawf;	d_	getCurrentDifficultyAt
	m	(Lgj;)Z	e_	ensureCanWrite
	m	(Lgj;)V	f	markPosForPostprocessing
	m	(Lgj;)Ldrb;	j	lambda$new$1
	m	(Lgj;)Ldrb;	k	lambda$new$0
	m	()Z	k_	isClientSide
	m	()Ldio;	l_	getLightEngine
	m	()I	m_	getSeaLevel
	m	()Lnet/minecraft/server/MinecraftServer;	n	getServer
	m	()Ldkm;	n_	getLevelData
	m	()I	o_	getSkyDarken
	m	()Lcql;	p_	getWorldBorder
	m	()Lcry;	q_	dimensionType
	m	()Ljava/util/Random;	r_	getRandom
	m	()Lhc;	s	registryAccess
	m	()Lcbt;	s_	getBiomeManager
	m	()J	t_	nextSubTickCount
	m	()I	u_	getMinBuildHeight
	m	()I	v_	getHeight
	m	()Ljava/util/List;	y	players
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/List;	b	cache
	f	Lcqq;	c	center
	f	I	d	size
	f	Ladw;	e	level
	f	J	f	seed
	f	Ldkm;	g	levelData
	f	Ljava/util/Random;	h	random
	f	Lcry;	i	dimensionType
	f	Ldrd;	j	blockTicks
	f	Ldrd;	k	fluidTicks
	f	Lcbt;	l	biomeManager
	f	Lcac;	m	firstPos
	f	Lcac;	n	lastPos
	f	Lcbm;	o	structureFeatureManager
	f	Lcqt;	p	generatingStatus
	f	I	q	writeRadiusCutoff
	f	Ljava/util/function/Supplier;	r	currentlyGenerating
	f	Ljava/util/concurrent/atomic/AtomicLong;	s	subTickCount
c	aee	net/minecraft/server/level/package-info
c	aef	net/minecraft/server/level/progress/ChunkProgressListener
	m	()V	a	start
	m	(Lcac;)V	a	updateSpawnPos
	m	(Lcac;Lcqt;)V	a	onStatusChange
	m	()V	b	stop
c	aeg	net/minecraft/server/level/progress/ChunkProgressListenerFactory
c	aeh	net/minecraft/server/level/progress/LoggerChunkProgressListener
	m	()V	a	start
	m	(Lcac;)V	a	updateSpawnPos
	m	(Lcac;Lcqt;)V	a	onStatusChange
	m	()V	b	stop
	m	()I	c	getProgress
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	maxCount
	f	I	c	count
	f	J	d	startTime
	f	J	e	nextTickTime
c	aei	net/minecraft/server/level/progress/ProcessorChunkProgressListener
	m	()V	a	start
	m	(Laef;Ljava/util/concurrent/Executor;)Laei;	a	createStarted
	m	(Lcac;)V	a	updateSpawnPos
	m	(Lcac;Lcqt;)V	a	onStatusChange
	m	()V	b	stop
	m	(Lcac;)V	b	lambda$updateSpawnPos$0
	m	(Lcac;Lcqt;)V	b	lambda$onStatusChange$1
	f	Laef;	a	delegate
	f	Lavc;	b	mailbox
c	aej	net/minecraft/server/level/progress/StoringChunkProgressListener
	m	()V	a	start
	m	(II)Lcqt;	a	getStatus
	m	(Lcac;)V	a	updateSpawnPos
	m	(Lcac;Lcqt;)V	a	onStatusChange
	m	()V	b	stop
	m	()I	c	getFullDiameter
	m	()I	d	getDiameter
	m	()I	e	getProgress
	f	Laeh;	a	delegate
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	b	statuses
	f	Lcac;	c	spawnPos
	f	I	d	fullDiameter
	f	I	e	radius
	f	I	f	diameter
	f	Z	g	started
c	aek	net/minecraft/server/level/progress/package-info
c	ael	net/minecraft/server/network/LegacyQueryHandler
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V	a	sendFlushAndClose
	m	(Ljava/lang/String;)Lio/netty/buffer/ByteBuf;	a	createReply
	f	I	a	FAKE_PROTOCOL_VERSION
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Laen;	c	serverConnectionListener
c	aem	net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl
	m	()Lpw;	a	getConnection
	m	(Lqk;)V	a	onDisconnect
	m	(Lxe;)V	a	handleIntention
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	Lpw;	b	connection
c	aen	net/minecraft/server/network/ServerConnectionListener
	m	()Ljava/net/SocketAddress;	a	startMemoryChannel
	m	(Ljava/net/InetAddress;I)V	a	startTcpServerListener
	m	(Lpw;Lqk;Lio/netty/util/concurrent/Future;)V	a	lambda$tick$2
	m	()V	b	stop
	m	()V	c	tick
	m	()Lnet/minecraft/server/MinecraftServer;	d	getServer
	m	()Ljava/util/List;	e	getConnections
	m	()Lio/netty/channel/epoll/EpollEventLoopGroup;	f	lambda$static$1
	m	()Lio/netty/channel/nio/NioEventLoopGroup;	g	lambda$static$0
	f	Lajg;	a	SERVER_EVENT_GROUP
	f	Lajg;	b	SERVER_EPOLL_EVENT_GROUP
	f	Z	c	running
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Ljava/util/List;	f	channels
	f	Ljava/util/List;	g	connections
c	aen$1	net/minecraft/server/network/ServerConnectionListener$1
	f	Laen;	a	this$0
c	aen$2	net/minecraft/server/network/ServerConnectionListener$2
	f	Laen;	a	this$0
c	aen$a	net/minecraft/server/network/ServerConnectionListener$LatencySimulator
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	a	delayDownstream
	m	(Lio/netty/util/Timeout;)V	a	onTimeout
	f	Lio/netty/util/Timer;	a	TIMER
	f	I	b	delay
	f	I	c	jitter
	f	Ljava/util/List;	d	queuedMessages
c	aen$a$a	net/minecraft/server/network/ServerConnectionListener$LatencySimulator$DelayedMessage
	f	Lio/netty/channel/ChannelHandlerContext;	a	ctx
	f	Ljava/lang/Object;	b	msg
c	aeo	net/minecraft/server/network/ServerGamePacketListenerImpl
	m	()Lpw;	a	getConnection
	m	(D)D	a	clampHorizontal
	m	(DDDFF)V	a	dismount
	m	(DDDFFLjava/util/Set;)V	a	teleport
	m	(DDDFFLjava/util/Set;Z)V	a	teleport
	m	(ILjava/util/List;)V	a	lambda$handleEditBook$4
	m	(Ladx;Lbuw;)Z	a	wasBlockPlacementAttempt
	m	(Laet$a;)V	a	handleChat
	m	(Laet$a;Ljava/util/List;I)V	a	signBook
	m	(Laxk;)Z	a	noBlocksAround
	m	(Lcay;Ldpj;)Z	a	isPlayerCollidingWithAnythingNew
	m	(Ljava/lang/Object;Ljava/util/function/Consumer;Ljava/util/function/BiFunction;)V	a	filterTextPacket
	m	(Ljava/lang/String;)V	a	handleCommand
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)V	a	filterTextPacket
	m	(Ljava/util/List;I)V	a	updateBookContents
	m	(Ljava/util/List;Ljava/util/function/Consumer;)V	a	filterTextPacket
	m	(Ljava/util/List;Ljava/util/function/UnaryOperator;Lbuw;)V	a	updateBookPages
	m	(Ljava/util/function/Consumer;Ljava/lang/Object;Ljava/lang/Object;)V	a	lambda$filterTextPacket$1
	m	(Ljava/util/function/UnaryOperator;Laet$a;)Lpb;	a	lambda$updateBookPages$6
	m	(Lqk;)V	a	onDisconnect
	m	(Lqk;Lio/netty/util/concurrent/Future;)V	a	lambda$disconnect$0
	m	(Lqk;Lqk;Ladx;)Lqk;	a	lambda$handleChat$8
	m	(Lrc;)V	a	send
	m	(Lrc;Lio/netty/util/concurrent/GenericFutureListener;)V	a	send
	m	(Lvk;)V	a	handleAcceptTeleportPacket
	m	(Lvl;)V	a	handleBlockEntityTagQuery
	m	(Lvm;)V	a	handleChangeDifficulty
	m	(Lvn;)V	a	handleChat
	m	(Lvo;)V	a	handleClientCommand
	m	(Lvp;)V	a	handleClientInformation
	m	(Lvq;)V	a	handleCustomCommandSuggestions
	m	(Lvq;Lcom/mojang/brigadier/suggestion/Suggestions;)V	a	lambda$handleCustomCommandSuggestions$2
	m	(Lvr;)V	a	handleContainerButtonClick
	m	(Lvs;)V	a	handleContainerClick
	m	(Lvt;)V	a	handleContainerClose
	m	(Lvu;)V	a	handleCustomPayload
	m	(Lvv;)V	a	handleEditBook
	m	(Lvw;)V	a	handleEntityTagQuery
	m	(Lvx;)V	a	handleInteract
	m	(Lvy;)V	a	handleJigsawGenerate
	m	(Lvz;)V	a	handleKeepAlive
	m	(Lwa;)V	a	handleLockDifficulty
	m	(Lwb;)V	a	handleMovePlayer
	m	(Lwc;)V	a	handleMoveVehicle
	m	(Lwd;)V	a	handlePaddleBoat
	m	(Lwe;)V	a	handlePickItem
	m	(Lwf;)V	a	handlePlaceRecipe
	m	(Lwf;Lbxo;)V	a	lambda$handlePlaceRecipe$9
	m	(Lwg;)V	a	handlePlayerAbilities
	m	(Lwh;)V	a	handlePlayerAction
	m	(Lwi;)V	a	handlePlayerCommand
	m	(Lwj;)V	a	handlePlayerInput
	m	(Lwk;)V	a	handlePong
	m	(Lwl;)V	a	handleRecipeBookChangeSettingsPacket
	m	(Lwm;)V	a	handleRecipeBookSeenRecipePacket
	m	(Lwn;)V	a	handleRenameItem
	m	(Lwo;)V	a	handleResourcePackResponse
	m	(Lwp;)V	a	handleSeenAdvancements
	m	(Lwq;)V	a	handleSelectTrade
	m	(Lwr;)V	a	handleSetBeaconPacket
	m	(Lws;)V	a	handleSetCarriedItem
	m	(Lwt;)V	a	handleSetCommandBlock
	m	(Lwu;)V	a	handleSetCommandMinecart
	m	(Lwv;)V	a	handleSetCreativeModeSlot
	m	(Lww;)V	a	handleSetJigsawBlock
	m	(Lwx;)V	a	handleSetStructureBlock
	m	(Lwy;)V	a	handleSignUpdate
	m	(Lwy;Ljava/util/List;)V	a	updateSignText
	m	(Lwz;)V	a	handleAnimate
	m	(Lxa;)V	a	handleTeleportToEntityPacket
	m	(Lxb;)V	a	handleUseItemOn
	m	(Lxc;)V	a	handleUseItem
	m	(D)D	b	clampVertical
	m	(DDDFF)V	b	teleport
	m	(ILjava/util/List;)V	b	lambda$handleEditBook$3
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$signBook$5
	m	(Lqk;)V	b	disconnect
	m	(Lrc;)Ljava/lang/String;	b	lambda$send$7
	m	(Lwy;Ljava/util/List;)V	b	lambda$handleSignUpdate$10
	m	()V	c	tick
	m	(DDDFF)Z	c	containsInvalidValues
	m	()V	d	resetPosition
	m	()Ladx;	e	getPlayer
	m	()Z	f	isSingleplayerOwner
	f	I	A	awaitingTeleportTime
	f	Z	B	clientIsFloating
	f	I	C	aboveGroundTickCount
	f	Z	D	clientVehicleIsFloating
	f	I	E	aboveGroundVehicleTickCount
	f	I	F	receivedMovePacketCount
	f	I	G	knownMovePacketCount
	f	Lpw;	a	connection
	f	Ladx;	b	player
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	LATENCY_CHECK_INTERVAL
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	I	f	tickCount
	f	J	g	keepAliveTime
	f	Z	h	keepAlivePending
	f	J	i	keepAliveChallenge
	f	I	j	chatSpamTickCount
	f	I	k	dropSpamTickCount
	f	D	l	firstGoodX
	f	D	m	firstGoodY
	f	D	n	firstGoodZ
	f	D	o	lastGoodX
	f	D	p	lastGoodY
	f	D	q	lastGoodZ
	f	Laxk;	r	lastVehicle
	f	D	s	vehicleFirstGoodX
	f	D	t	vehicleFirstGoodY
	f	D	u	vehicleFirstGoodZ
	f	D	v	vehicleLastGoodX
	f	D	w	vehicleLastGoodY
	f	D	x	vehicleLastGoodZ
	f	Ldpo;	y	awaitingPositionFromClient
	f	I	z	awaitingTeleport
c	aeo$1	net/minecraft/server/network/ServerGamePacketListenerImpl$1
	m	()V	a	onAttack
	m	(Lawg;)V	a	onInteraction
	m	(Lawg;Laeo$a;)V	a	performInteraction
	m	(Lawg;Ldpo;)V	a	onInteraction
	m	(Ldpo;Ladx;Laxk;Lawg;)Lawh;	a	lambda$onInteraction$0
	f	Laxk;	a	val$target
	f	Laeo;	b	this$0
c	aeo$2	net/minecraft/server/network/ServerGamePacketListenerImpl$2
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$entity$CommandBlockEntity$Mode
	f	[I	b	$SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerActionPacket$Action
	f	[I	c	$SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerCommandPacket$Action
	f	[I	d	$SwitchMap$net$minecraft$network$protocol$game$ServerboundClientCommandPacket$Action
c	aeo$a	net/minecraft/server/network/ServerGamePacketListenerImpl$EntityInteraction
c	aep	net/minecraft/server/network/ServerHandshakePacketListenerImpl
	m	()Lpw;	a	getConnection
	m	(Lqk;)V	a	onDisconnect
	m	(Lxe;)V	a	handleIntention
	f	Lqk;	a	IGNORE_STATUS_REASON
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Lpw;	c	connection
c	aep$1	net/minecraft/server/network/ServerHandshakePacketListenerImpl$1
	f	[I	a	$SwitchMap$net$minecraft$network$ConnectionProtocol
c	aeq	net/minecraft/server/network/ServerLoginPacketListenerImpl
	m	()Lpw;	a	getConnection
	m	(I)Z	a	lambda$isValidUsername$1
	m	(Ladx;)V	a	placeNewPlayer
	m	(Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile;	a	createFakeProfile
	m	(Lio/netty/channel/ChannelFuture;)V	a	lambda$handleAcceptedLogin$0
	m	(Ljava/lang/String;)Z	a	isValidUsername
	m	(Lqk;)V	a	onDisconnect
	m	(Lxo;)V	a	handleCustomQueryPacket
	m	(Lxp;)V	a	handleHello
	m	(Lxq;)V	a	handleKey
	m	(Lqk;)V	b	disconnect
	m	()V	c	tick
	m	()V	d	handleAcceptedLogin
	m	()Ljava/lang/String;	e	getUserName
	f	Lpw;	a	connection
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	UNIQUE_THREAD_ID
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	MAX_TICKS_BEFORE_LOGIN
	f	Ljava/util/Random;	e	RANDOM
	f	[B	f	nonce
	f	Lnet/minecraft/server/MinecraftServer;	g	server
	f	Laeq$a;	h	state
	f	I	i	tick
	f	Lcom/mojang/authlib/GameProfile;	j	gameProfile
	f	Ljava/lang/String;	k	serverId
	f	Ladx;	l	delayedAcceptPlayer
c	aeq$1	net/minecraft/server/network/ServerLoginPacketListenerImpl$1
	m	()Ljava/net/InetAddress;	a	getAddress
	f	Ljava/lang/String;	a	val$digest
	f	Laeq;	b	this$0
c	aeq$a	net/minecraft/server/network/ServerLoginPacketListenerImpl$State
	m	()[Laeq$a;	a	$values
	f	Laeq$a;	a	HELLO
	f	Laeq$a;	b	KEY
	f	Laeq$a;	c	AUTHENTICATING
	f	Laeq$a;	d	NEGOTIATING
	f	Laeq$a;	e	READY_TO_ACCEPT
	f	Laeq$a;	f	DELAY_ACCEPT
	f	Laeq$a;	g	ACCEPTED
	f	[Laeq$a;	h	$VALUES
c	aer	net/minecraft/server/network/ServerPlayerConnection
	m	(Lrc;)V	a	send
	m	()Ladx;	e	getPlayer
c	aes	net/minecraft/server/network/ServerStatusPacketListenerImpl
	m	()Lpw;	a	getConnection
	m	(Lqk;)V	a	onDisconnect
	m	(Lxy;)V	a	handlePingRequest
	m	(Lxz;)V	a	handleStatusRequest
	f	Lqk;	a	DISCONNECT_REASON
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Lpw;	c	connection
	f	Z	d	hasRequestedStatus
c	aet	net/minecraft/server/network/TextFilter
	m	()V	a	join
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
	m	()V	b	leave
	f	Laet;	a	DUMMY
c	aet$1	net/minecraft/server/network/TextFilter$1
	m	()V	a	join
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
	m	()V	b	leave
c	aet$a	net/minecraft/server/network/TextFilter$FilteredText
	m	()Ljava/lang/String;	a	getRaw
	m	(Ljava/lang/String;)Laet$a;	a	passThrough
	m	()Ljava/lang/String;	b	getFiltered
	m	(Ljava/lang/String;)Laet$a;	b	fullyFiltered
	f	Laet$a;	a	EMPTY
	f	Ljava/lang/String;	b	raw
	f	Ljava/lang/String;	c	filtered
c	aeu	net/minecraft/server/network/TextFilterClient
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Laeu$a;)Laet$a;	a	lambda$requestMessageProcessing$2
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)Lcom/google/gson/JsonObject;	a	processRequestResponse
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;Lcom/mojang/authlib/GameProfile;)V	a	lambda$processJoinOrLeave$1
	m	(Lcom/mojang/authlib/GameProfile;)Laet;	a	createContext
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Laeu$a;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	requestMessageProcessing
	m	(Lcom/mojang/authlib/GameProfile;Ljava/net/URL;Ljava/util/concurrent/Executor;)V	a	processJoinOrLeave
	m	(Ljava/io/InputStream;)V	a	drainStream
	m	(Ljava/lang/Runnable;)Ljava/lang/Thread;	a	lambda$static$0
	m	(Ljava/lang/String;)Laeu;	a	createFromConfig
	m	(Ljava/net/URI;Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL;	a	getEndpoint
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)V	b	processRequest
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)Ljava/net/HttpURLConnection;	c	makeRequest
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	WORKER_COUNT
	f	Ljava/util/concurrent/ThreadFactory;	c	THREAD_FACTORY
	f	Ljava/net/URL;	d	chatEndpoint
	f	Ljava/net/URL;	e	joinEndpoint
	f	Ljava/net/URL;	f	leaveEndpoint
	f	Ljava/lang/String;	g	authKey
	f	I	h	ruleId
	f	Ljava/lang/String;	i	serverId
	f	Ljava/lang/String;	j	roomId
	f	Laeu$a;	k	chatIgnoreStrategy
	f	Ljava/util/concurrent/ExecutorService;	l	workerPool
c	aeu$a	net/minecraft/server/network/TextFilterClient$IgnoreStrategy
	m	(ILjava/lang/String;I)Z	a	lambda$ignoreOverThreshold$2
	m	(Ljava/lang/String;I)Z	a	lambda$static$1
	m	(Ljava/lang/String;I)Z	b	lambda$static$0
	f	Laeu$a;	a	NEVER_IGNORE
	f	Laeu$a;	b	IGNORE_FULLY_FILTERED
c	aeu$b	net/minecraft/server/network/TextFilterClient$PlayerContext
	m	()V	a	join
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
	m	(Ljava/lang/Throwable;)Ljava/util/List;	a	lambda$processMessageBundle$1
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
	m	()V	b	leave
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	b	lambda$processMessageBundle$0
	f	Laeu;	b	this$0
	f	Lcom/mojang/authlib/GameProfile;	c	profile
	f	Ljava/util/concurrent/Executor;	d	streamExecutor
c	aeu$c	net/minecraft/server/network/TextFilterClient$RequestFailedException
c	aev	net/minecraft/server/network/package-info
c	aew	net/minecraft/server/package-info
c	aex	net/minecraft/server/packs/AbstractPackResources
	m	()Ljava/lang/String;	a	getName
	m	(Lafb;Lyt;)Ljava/io/InputStream;	a	getResource
	m	(Lafe;)Ljava/lang/Object;	a	getMetadataSection
	m	(Lafe;Ljava/io/InputStream;)Ljava/lang/Object;	a	getMetadataFromStream
	m	(Ljava/io/File;Ljava/io/File;)Ljava/lang/String;	a	getRelativePath
	m	(Ljava/lang/String;)Ljava/io/InputStream;	a	getResource
	m	(Lafb;Lyt;)Z	b	hasResource
	m	(Ljava/lang/String;)Ljava/io/InputStream;	b	getRootResource
	m	(Lafb;Lyt;)Ljava/lang/String;	c	getPathFromLocation
	m	(Ljava/lang/String;)Z	c	hasResource
	m	(Ljava/lang/String;)V	d	logWarning
	f	Ljava/io/File;	a	file
	f	Lorg/slf4j/Logger;	b	LOGGER
c	aey	net/minecraft/server/packs/FilePackResources
	m	(Lafb;)Ljava/util/Set;	a	getNamespaces
	m	(Lafb;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection;	a	getResources
	m	(Ljava/lang/String;)Ljava/io/InputStream;	a	getResource
	m	()Ljava/util/zip/ZipFile;	b	getOrCreateZipFile
	m	(Ljava/lang/String;)Z	c	hasResource
	f	Lcom/google/common/base/Splitter;	b	SPLITTER
	f	Ljava/util/zip/ZipFile;	e	zipFile
c	aez	net/minecraft/server/packs/FolderPackResources
	m	(Lafb;)Ljava/util/Set;	a	getNamespaces
	m	(Lafb;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection;	a	getResources
	m	(Ljava/io/File;ILjava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/util/function/Predicate;)V	a	listResources
	m	(Ljava/io/File;Ljava/lang/String;)Z	a	validatePath
	m	(Ljava/lang/String;)Ljava/io/InputStream;	a	getResource
	m	(Ljava/lang/String;)Z	c	hasResource
	m	(Ljava/lang/String;)Ljava/io/File;	e	getFile
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Z	e	ON_WINDOWS
	f	Lcom/google/common/base/CharMatcher;	f	BACKSLASH_MATCHER
c	afa	net/minecraft/server/packs/PackResources
	m	()Ljava/lang/String;	a	getName
	m	(Lafb;)Ljava/util/Set;	a	getNamespaces
	m	(Lafb;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection;	a	getResources
	m	(Lafb;Lyt;)Ljava/io/InputStream;	a	getResource
	m	(Lafe;)Ljava/lang/Object;	a	getMetadataSection
	m	(Lafb;Lyt;)Z	b	hasResource
	m	(Ljava/lang/String;)Ljava/io/InputStream;	b	getRootResource
	f	Ljava/lang/String;	c	METADATA_EXTENSION
	f	Ljava/lang/String;	d	PACK_META
c	afb	net/minecraft/server/packs/PackType
	m	()Ljava/lang/String;	a	getDirectory
	m	(Lcom/mojang/bridge/game/GameVersion;)I	a	getVersion
	m	()[Lafb;	b	$values
	f	Lafb;	a	CLIENT_RESOURCES
	f	Lafb;	b	SERVER_DATA
	f	Ljava/lang/String;	c	directory
	f	Lcom/mojang/bridge/game/PackType;	d	bridgeType
	f	[Lafb;	e	$VALUES
c	afc	net/minecraft/server/packs/ResourcePackFileNotFoundException
c	afd	net/minecraft/server/packs/VanillaPackResources
	m	()Ljava/lang/String;	a	getName
	m	(Lafb;)Ljava/util/Set;	a	getNamespaces
	m	(Lafb;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection;	a	getResources
	m	(Lafb;Lyt;)Ljava/io/InputStream;	a	getResource
	m	(Lafe;)Ljava/lang/Object;	a	getMetadataSection
	m	(Ljava/lang/String;)Ljava/io/InputStream;	a	getResourceAsStream
	m	(Ljava/lang/String;Ljava/net/URL;)Z	a	isResourceUrlValid
	m	(Ljava/lang/String;Ljava/nio/file/Path;Ljava/nio/file/Path;)Lyt;	a	lambda$getResources$2
	m	(Ljava/net/URI;)Ljava/nio/file/Path;	a	safeGetPath
	m	(Ljava/util/Collection;ILjava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/function/Predicate;)V	a	getResources
	m	(Ljava/util/function/Predicate;Ljava/nio/file/Path;)Z	a	lambda$getResources$1
	m	()Lcom/google/common/collect/ImmutableMap;	b	lambda$static$0
	m	(Lafb;Lyt;)Z	b	hasResource
	m	(Ljava/lang/String;)Ljava/io/InputStream;	b	getRootResource
	m	(Lafb;Lyt;)Ljava/io/InputStream;	c	getResourceAsStream
	m	(Lafb;Lyt;)Ljava/lang/String;	d	createPath
	f	Ljava/nio/file/Path;	a	generatedDir
	f	Ljava/lang/Class;	b	clientObject
	f	Laff;	e	packMetadata
	f	Ljava/util/Set;	f	namespaces
	f	Lorg/slf4j/Logger;	g	LOGGER
	f	Ljava/util/Map;	h	ROOT_DIR_BY_TYPE
c	afd$1	net/minecraft/server/packs/VanillaPackResources$1
	m	()Lyt;	a	getLocation
	m	(Lafe;)Ljava/lang/Object;	a	getMetadata
	m	()Ljava/io/InputStream;	b	getInputStream
	m	()Z	c	hasMetadata
	m	()Ljava/lang/String;	d	getSourceName
	f	Ljava/io/InputStream;	a	inputStream
	f	Lyt;	b	val$location
	f	Lafd;	c	this$0
c	afe	net/minecraft/server/packs/metadata/MetadataSectionSerializer
	m	()Ljava/lang/String;	a	getMetadataSectionName
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/Object;	a	fromJson
c	aff	net/minecraft/server/packs/metadata/pack/PackMetadataSection
	m	()Lqk;	a	getDescription
	m	()I	b	getPackFormat
	f	Lafg;	a	SERIALIZER
	f	Lqk;	b	description
	f	I	c	packFormat
c	afg	net/minecraft/server/packs/metadata/pack/PackMetadataSectionSerializer
	m	()Ljava/lang/String;	a	getMetadataSectionName
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/Object;	a	fromJson
	m	(Lcom/google/gson/JsonObject;)Laff;	b	fromJson
c	afh	net/minecraft/server/packs/metadata/pack/package-info
c	afi	net/minecraft/server/packs/metadata/package-info
c	afj	net/minecraft/server/packs/package-info
c	afk	net/minecraft/server/packs/repository/FolderRepositorySource
	m	(Ljava/io/File;)Ljava/util/function/Supplier;	a	createSupplier
	m	(Ljava/util/function/Consumer;Lafl$a;)V	a	loadPacks
	m	(Ljava/io/File;)Lafa;	b	lambda$createSupplier$2
	m	(Ljava/io/File;)Lafa;	c	lambda$createSupplier$1
	m	(Ljava/io/File;)Z	d	lambda$static$0
	f	Ljava/io/FileFilter;	a	RESOURCEPACK_FILTER
	f	Ljava/io/File;	b	folder
	f	Lafo;	c	packSource
c	afl	net/minecraft/server/packs/repository/Pack
	m	()Lqk;	a	getTitle
	m	(Ljava/lang/String;ZLjava/util/function/Supplier;Lafl$a;Lafl$b;Lafo;)Lafl;	a	create
	m	(Z)Lqk;	a	getChatLink
	m	(ZLqu;)Lqu;	a	lambda$getChatLink$0
	m	()Lqk;	b	getDescription
	m	()Lafm;	c	getCompatibility
	m	()Lafa;	d	open
	m	()Ljava/lang/String;	e	getId
	m	()Z	f	isRequired
	m	()Z	g	isFixedPosition
	m	()Lafl$b;	h	getDefaultPosition
	m	()Lafo;	i	getPackSource
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	id
	f	Ljava/util/function/Supplier;	c	supplier
	f	Lqk;	d	title
	f	Lqk;	e	description
	f	Lafm;	f	compatibility
	f	Lafl$b;	g	defaultPosition
	f	Z	h	required
	f	Z	i	fixedPosition
	f	Lafo;	j	packSource
c	afl$a	net/minecraft/server/packs/repository/Pack$PackConstructor
c	afl$b	net/minecraft/server/packs/repository/Pack$Position
	m	()Lafl$b;	a	opposite
	m	(Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I	a	insert
	m	()[Lafl$b;	b	$values
	f	Lafl$b;	a	TOP
	f	Lafl$b;	b	BOTTOM
	f	[Lafl$b;	c	$VALUES
c	afm	net/minecraft/server/packs/repository/PackCompatibility
	m	()Z	a	isCompatible
	m	(ILafb;)Lafm;	a	forFormat
	m	(Laff;Lafb;)Lafm;	a	forMetadata
	m	()Lqk;	b	getDescription
	m	()Lqk;	c	getConfirmation
	m	()[Lafm;	d	$values
	f	Lafm;	a	TOO_OLD
	f	Lafm;	b	TOO_NEW
	f	Lafm;	c	COMPATIBLE
	f	Lqk;	d	description
	f	Lqk;	e	confirmation
	f	[Lafm;	f	$VALUES
c	afn	net/minecraft/server/packs/repository/PackRepository
	m	()V	a	reload
	m	(Lafb;Ljava/lang/String;Lqk;ZLjava/util/function/Supplier;Laff;Lafl$b;Lafo;)Lafl;	a	lambda$new$0
	m	(Ljava/lang/String;)Lafl;	a	getPack
	m	(Ljava/util/Collection;)V	a	setSelected
	m	(Ljava/util/Map;Lafl;)V	a	lambda$discoverAvailable$1
	m	()Ljava/util/Collection;	b	getAvailableIds
	m	(Ljava/lang/String;)Z	b	isAvailable
	m	(Ljava/util/Collection;)Ljava/util/List;	b	rebuildSelected
	m	()Ljava/util/Collection;	c	getAvailablePacks
	m	(Ljava/util/Collection;)Ljava/util/stream/Stream;	c	getAvailablePacks
	m	()Ljava/util/Collection;	d	getSelectedIds
	m	()Ljava/util/Collection;	e	getSelectedPacks
	m	()Ljava/util/List;	f	openAllSelected
	m	()Ljava/util/Map;	g	discoverAvailable
	f	Ljava/util/Set;	a	sources
	f	Ljava/util/Map;	b	available
	f	Ljava/util/List;	c	selected
	f	Lafl$a;	d	constructor
c	afo	net/minecraft/server/packs/repository/PackSource
	m	()Lafo;	a	passThrough
	m	(Ljava/lang/String;)Lafo;	a	decorating
	m	(Lqk;)Lqk;	a	lambda$passThrough$0
	m	(Lqk;Lqk;)Lqk;	a	lambda$decorating$1
	f	Lafo;	a	DEFAULT
	f	Lafo;	b	BUILT_IN
	f	Lafo;	c	WORLD
	f	Lafo;	d	SERVER
c	afp	net/minecraft/server/packs/repository/RepositorySource
	m	(Ljava/util/function/Consumer;Lafl$a;)V	a	loadPacks
c	afq	net/minecraft/server/packs/repository/ServerPacksSource
	m	()Lafa;	a	lambda$loadPacks$0
	m	(Ljava/util/function/Consumer;Lafl$a;)V	a	loadPacks
	f	Laff;	a	BUILT_IN_METADATA
	f	Ljava/lang/String;	b	VANILLA_ID
	f	Lafd;	c	vanillaPack
c	afr	net/minecraft/server/packs/repository/package-info
c	afs	net/minecraft/server/packs/resources/CloseableResourceManager
c	aft	net/minecraft/server/packs/resources/FallbackResourceManager
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Lafa;)V	a	add
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection;	a	listResources
	m	(Lyt;)Z	a	hasResource
	m	(Lyt;Lafa;)Ljava/io/InputStream;	a	getWrappedResource
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Lyt;)Ljava/util/List;	b	getResources
	m	(Lyt;)Lyt;	c	getMetadataLocation
	m	(Lyt;)V	d	validateLocation
	m	(Lyt;)Z	e	isValidLocation
	f	Ljava/util/List;	a	fallbacks
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lafb;	c	type
	f	Ljava/lang/String;	d	namespace
c	aft$a	net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream
	f	Ljava/lang/String;	a	message
	f	Z	b	closed
c	afu	net/minecraft/server/packs/resources/MultiPackResourceManager
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Lafb;Ljava/lang/String;)Laft;	a	lambda$new$0
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection;	a	listResources
	m	(Lyt;)Z	a	hasResource
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Lyt;)Ljava/util/List;	b	getResources
	f	Ljava/util/Map;	a	namespacedManagers
	f	Ljava/util/List;	b	packs
c	afv	net/minecraft/server/packs/resources/PreparableReloadListener
	m	(Lafv$a;Laga;Lasy;Lasy;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
	m	()Ljava/lang/String;	c	getName
c	afv$a	net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier
	m	(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	wait
c	afw	net/minecraft/server/packs/resources/ProfiledReloadInstance
	m	(Lafv;Lasr;Lasr;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Void;)Lafw$a;	a	lambda$new$6
	m	(Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V	a	lambda$new$4
	m	(Ljava/util/List;)V	a	finish
	m	(Ljava/util/concurrent/Executor;Lafv$a;Laga;Lafv;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$new$7
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V	a	lambda$new$5
	m	(Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V	b	lambda$new$2
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V	b	lambda$new$3
	m	()I	e	lambda$new$1
	m	()I	f	lambda$new$0
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lcom/google/common/base/Stopwatch;	d	total
c	afw$a	net/minecraft/server/packs/resources/ProfiledReloadInstance$State
	f	Ljava/lang/String;	a	name
	f	Lasx;	b	preparationResult
	f	Lasx;	c	reloadResult
	f	Ljava/util/concurrent/atomic/AtomicLong;	d	preparationNanos
	f	Ljava/util/concurrent/atomic/AtomicLong;	e	reloadNanos
c	afx	net/minecraft/server/packs/resources/ReloadInstance
	m	()Ljava/util/concurrent/CompletableFuture;	a	done
	m	()F	b	getActualProgress
	m	()Z	c	isDone
	m	()V	d	checkExceptions
c	afy	net/minecraft/server/packs/resources/ReloadableResourceManager
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Lafv;)V	a	registerReloadListener
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection;	a	listResources
	m	(Ljava/util/List;)Ljava/lang/Object;	a	lambda$createReload$0
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lafx;	a	createReload
	m	(Lyt;)Z	a	hasResource
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Lyt;)Ljava/util/List;	b	getResources
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lafs;	b	resources
	f	Ljava/util/List;	c	listeners
	f	Lafb;	d	type
c	afz	net/minecraft/server/packs/resources/Resource
	m	()Lyt;	a	getLocation
	m	(Lafe;)Ljava/lang/Object;	a	getMetadata
	m	()Ljava/io/InputStream;	b	getInputStream
	m	()Z	c	hasMetadata
	m	()Ljava/lang/String;	d	getSourceName
c	aga	net/minecraft/server/packs/resources/ResourceManager
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection;	a	listResources
	m	(Lyt;)Z	a	hasResource
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Lyt;)Ljava/util/List;	b	getResources
c	aga$a	net/minecraft/server/packs/resources/ResourceManager$Empty
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection;	a	listResources
	m	(Lyt;)Z	a	hasResource
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Lyt;)Ljava/util/List;	b	getResources
	m	()[Laga$a;	c	$values
	f	Laga$a;	a	INSTANCE
	f	[Laga$a;	b	$VALUES
c	agb	net/minecraft/server/packs/resources/ResourceManagerReloadListener
	m	(Lafv$a;Laga;Lasy;Lasy;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
	m	(Laga;)V	a	onResourceManagerReload
	m	(Lasy;Laga;)V	a	lambda$reload$0
c	agc	net/minecraft/server/packs/resources/ResourceProvider
c	agd	net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener
	m	(Laga;Lasy;)Ljava/util/Map;	a	prepare
	m	(Ljava/lang/String;)Z	a	lambda$prepare$0
	m	(Laga;Lasy;)Ljava/lang/Object;	b	prepare
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	PATH_SUFFIX
	f	I	c	PATH_SUFFIX_LENGTH
	f	Lcom/google/gson/Gson;	d	gson
	f	Ljava/lang/String;	e	directory
c	age	net/minecraft/server/packs/resources/SimplePreparableReloadListener
	m	(Lafv$a;Laga;Lasy;Lasy;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
	m	(Laga;Lasy;)Ljava/lang/Object;	a	lambda$reload$0
	m	(Laga;Lasy;Ljava/lang/Object;)V	a	lambda$reload$1
	m	(Ljava/lang/Object;Laga;Lasy;)V	a	apply
	m	(Laga;Lasy;)Ljava/lang/Object;	b	prepare
c	agf	net/minecraft/server/packs/resources/SimpleReloadInstance
	m	()Ljava/util/concurrent/CompletableFuture;	a	done
	m	(Laga;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lagf;	a	of
	m	(Laga;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Z)Lafx;	a	create
	m	(Ljava/lang/Runnable;)V	a	lambda$new$3
	m	(Ljava/util/concurrent/Executor;Lafv$a;Laga;Lafv;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$of$0
	m	(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V	a	lambda$new$4
	m	()F	b	getActualProgress
	m	(Ljava/lang/Runnable;)V	b	lambda$new$1
	m	(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V	b	lambda$new$2
	f	Ljava/util/concurrent/CompletableFuture;	a	allPreparations
	f	Ljava/util/concurrent/CompletableFuture;	b	allDone
	f	I	c	PREPARATION_PROGRESS_WEIGHT
	f	I	d	EXTRA_RELOAD_PROGRESS_WEIGHT
	f	I	e	LISTENER_PROGRESS_WEIGHT
	f	Ljava/util/Set;	f	preparingListeners
	f	I	g	listenerCount
	f	I	h	startedReloads
	f	I	i	finishedReloads
	f	Ljava/util/concurrent/atomic/AtomicInteger;	j	startedTaskCounter
	f	Ljava/util/concurrent/atomic/AtomicInteger;	k	doneTaskCounter
c	agf$1	net/minecraft/server/packs/resources/SimpleReloadInstance$1
	m	(Lafv;)V	a	lambda$wait$0
	m	(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	wait
	m	(Ljava/lang/Object;Laka;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$wait$1
	f	Ljava/util/concurrent/Executor;	a	val$mainThreadExecutor
	f	Lafv;	b	val$listener
	f	Ljava/util/concurrent/CompletableFuture;	c	val$previousTask
	f	Lagf;	d	this$0
c	agf$a	net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory
c	agg	net/minecraft/server/packs/resources/SimpleResource
	m	()Lyt;	a	getLocation
	m	(Lafe;)Ljava/lang/Object;	a	getMetadata
	m	()Ljava/io/InputStream;	b	getInputStream
	m	()Z	c	hasMetadata
	m	()Ljava/lang/String;	d	getSourceName
	f	Ljava/lang/String;	a	sourceName
	f	Lyt;	b	location
	f	Ljava/io/InputStream;	c	resourceStream
	f	Ljava/io/InputStream;	d	metadataStream
	f	Z	e	triedMetadata
	f	Lcom/google/gson/JsonObject;	f	metadata
c	agh	net/minecraft/server/packs/resources/package-info
c	agi	net/minecraft/server/players/BanListEntry
	m	()Ljava/util/Date;	a	getCreated
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
	m	()Ljava/lang/String;	b	getSource
	m	()Ljava/util/Date;	c	getExpires
	m	()Ljava/lang/String;	d	getReason
	m	()Lqk;	e	getDisplayName
	m	()Z	f	hasExpired
	f	Ljava/text/SimpleDateFormat;	a	DATE_FORMAT
	f	Ljava/lang/String;	b	EXPIRES_NEVER
	f	Ljava/util/Date;	c	created
	f	Ljava/lang/String;	d	source
	f	Ljava/util/Date;	e	expires
	f	Ljava/lang/String;	f	reason
c	agj	net/minecraft/server/players/GameProfileCache
	m	()V	a	clearExecutor
	m	(I)Ljava/util/stream/Stream;	a	getTopMRUProfiles
	m	(Lagj$a;)V	a	safeAdd
	m	(Lagj$a;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement;	a	writeGameProfile
	m	(Lcom/google/gson/JsonArray;Ljava/text/DateFormat;Lagj$a;)V	a	lambda$save$5
	m	(Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Ljava/util/Optional;	a	readGameProfile
	m	(Lcom/mojang/authlib/GameProfile;)V	a	add
	m	(Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Ljava/util/Optional;	a	lookupGameProfile
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	get
	m	(Ljava/lang/String;Ljava/util/Optional;Ljava/lang/Throwable;)V	a	lambda$getAsync$2
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)V	a	getAsync
	m	(Ljava/text/DateFormat;Ljava/util/List;Lcom/google/gson/JsonElement;)V	a	lambda$load$4
	m	(Ljava/util/UUID;)Ljava/util/Optional;	a	get
	m	(Ljava/util/concurrent/Executor;)V	a	setExecutor
	m	(Ljava/util/function/Consumer;Ljava/util/Optional;Ljava/lang/Throwable;)V	a	lambda$getAsync$3
	m	(Z)V	a	setUsesAuthentication
	m	()Ljava/util/List;	b	load
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	lambda$getAsync$1
	m	(Ljava/util/function/Consumer;Ljava/util/Optional;Ljava/lang/Throwable;)V	b	lambda$getAsync$0
	m	()V	c	save
	m	()Z	d	usesAuthentication
	m	()J	e	getNextOperation
	m	()Ljava/text/DateFormat;	f	createDateFormat
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	GAMEPROFILES_MRU_LIMIT
	f	I	c	GAMEPROFILES_EXPIRATION_MONTHS
	f	Z	d	usesAuthentication
	f	Ljava/util/Map;	e	profilesByName
	f	Ljava/util/Map;	f	profilesByUUID
	f	Ljava/util/Map;	g	requests
	f	Lcom/mojang/authlib/GameProfileRepository;	h	profileRepository
	f	Lcom/google/gson/Gson;	i	gson
	f	Ljava/io/File;	j	file
	f	Ljava/util/concurrent/atomic/AtomicLong;	k	operationCount
	f	Ljava/util/concurrent/Executor;	l	executor
c	agj$1	net/minecraft/server/players/GameProfileCache$1
	f	Ljava/util/concurrent/atomic/AtomicReference;	a	val$result
c	agj$a	net/minecraft/server/players/GameProfileCache$GameProfileInfo
	m	()Lcom/mojang/authlib/GameProfile;	a	getProfile
	m	(J)V	a	setLastAccess
	m	()Ljava/util/Date;	b	getExpirationDate
	m	()J	c	getLastAccess
	f	Lcom/mojang/authlib/GameProfile;	a	profile
	f	Ljava/util/Date;	b	expirationDate
	f	J	c	lastAccess
c	agk	net/minecraft/server/players/IpBanList
	m	(Lcom/google/gson/JsonObject;)Lagr;	a	createEntry
	m	(Ljava/lang/String;)Z	a	isBanned
	m	(Ljava/net/SocketAddress;)Z	a	isBanned
	m	(Ljava/net/SocketAddress;)Lagl;	b	get
	m	(Ljava/net/SocketAddress;)Ljava/lang/String;	c	getIpFromAddress
c	agl	net/minecraft/server/players/IpBanListEntry
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	b	createIpInfo
	m	()Lqk;	e	getDisplayName
c	agm	net/minecraft/server/players/OldUsersConverter
	m	()Z	a	areOldUserlistsRemoved
	m	(I)[Ljava/lang/String;	a	lambda$lookupPlayers$1
	m	(Lacx;)Z	a	convertPlayers
	m	(Ljava/io/File;)V	a	ensureDirectoryExists
	m	(Ljava/io/File;Ljava/util/Map;)Ljava/util/List;	a	readOldListFormat
	m	(Ljava/lang/String;)Z	a	lambda$lookupPlayers$0
	m	(Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date;	a	parseDate
	m	(Lnet/minecraft/server/MinecraftServer;)Z	a	convertUserBanlist
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID;	a	convertMobOwnerIfNecessary
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V	a	lookupPlayers
	m	(Ljava/io/File;)V	b	renameOldFile
	m	(Lnet/minecraft/server/MinecraftServer;)Z	b	convertIpBanlist
	m	(Lnet/minecraft/server/MinecraftServer;)Z	c	convertOpsList
	m	(Lnet/minecraft/server/MinecraftServer;)Z	d	convertWhiteList
	m	(Lnet/minecraft/server/MinecraftServer;)Z	e	serverReadyAfterUserconversion
	m	(Lnet/minecraft/server/MinecraftServer;)Z	f	areOldPlayersConverted
	m	(Lnet/minecraft/server/MinecraftServer;)Ljava/io/File;	g	getWorldPlayersDirectory
	f	Ljava/io/File;	a	OLD_IPBANLIST
	f	Ljava/io/File;	b	OLD_USERBANLIST
	f	Ljava/io/File;	c	OLD_OPLIST
	f	Ljava/io/File;	d	OLD_WHITELIST
	f	Lorg/slf4j/Logger;	e	LOGGER
c	agm$1	net/minecraft/server/players/OldUsersConverter$1
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Ljava/util/Map;	b	val$userMap
	f	Lagt;	c	val$bans
c	agm$2	net/minecraft/server/players/OldUsersConverter$2
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Lago;	b	val$opsList
c	agm$3	net/minecraft/server/players/OldUsersConverter$3
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Lagv;	b	val$whitelist
c	agm$4	net/minecraft/server/players/OldUsersConverter$4
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Ljava/util/List;	b	val$profiles
c	agm$5	net/minecraft/server/players/OldUsersConverter$5
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	a	getFileNameForProfile
	m	(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V	a	movePlayerFile
	f	Lacx;	a	val$server
	f	Ljava/io/File;	b	val$worldNewPlayerDirectory
	f	Ljava/io/File;	c	val$unknownPlayerDirectory
	f	Ljava/io/File;	d	val$worldPlayerDirectory
	f	[Ljava/lang/String;	e	val$names
c	agm$a	net/minecraft/server/players/OldUsersConverter$ConversionError
c	agn	net/minecraft/server/players/PlayerList
	m	()V	a	reloadWhiteList
	m	(I)V	a	setViewDistance
	m	(Ladw;)V	a	addWorldborderListener
	m	(Ladw;Laxk;)Laxk;	a	lambda$placeNewPlayer$0
	m	(Ladx;)Lok;	a	load
	m	(Ladx;I)V	a	sendPlayerPermissionLevel
	m	(Ladx;Ladw;)V	a	sendLevelInfo
	m	(Ladx;Z)Ladx;	a	respawn
	m	(Laxk;)V	a	lambda$remove$1
	m	(Lboj;)Lahq;	a	getPlayerStats
	m	(Lboj;DDDDLys;Lrc;)V	a	broadcast
	m	(Lboj;Lqk;)V	a	broadcastToTeam
	m	(Lcom/mojang/authlib/GameProfile;)V	a	op
	m	(Ljava/lang/String;)Ladx;	a	getPlayerByName
	m	(Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lqk;	a	canPlayerLogin
	m	(Ljava/util/UUID;)Ladx;	a	getPlayer
	m	(Lpw;Ladx;)V	a	placeNewPlayer
	m	(Lqk;Ljava/util/function/Function;Lqh;Ljava/util/UUID;)V	a	broadcastMessage
	m	(Lqk;Lqh;Ljava/util/UUID;)V	a	broadcastMessage
	m	(Lrc;)V	a	broadcastAll
	m	(Lrc;Lys;)V	a	broadcastAll
	m	(Lzi;Ladx;)V	a	updateEntireScoreboard
	m	(Z)V	a	setUsingWhiteList
	m	(I)V	b	setSimulationDistance
	m	(Ladx;)V	b	save
	m	(Lboj;Lqk;)V	b	broadcastToAllExceptTeam
	m	(Lcom/mojang/authlib/GameProfile;)V	b	deop
	m	(Ljava/lang/String;)Ljava/util/List;	b	getPlayersWithAddress
	m	(Z)V	b	setAllowCheatsForAllPlayers
	m	()Lnet/minecraft/server/MinecraftServer;	c	getServer
	m	(Ladx;)V	c	remove
	m	(Lcom/mojang/authlib/GameProfile;)Z	c	isWhiteListed
	m	()V	d	tick
	m	(Ladx;)V	d	sendPlayerPermissionLevel
	m	(Lcom/mojang/authlib/GameProfile;)Z	d	canBypassPlayerLimit
	m	()[Ljava/lang/String;	e	getPlayerNamesArray
	m	(Ladx;)V	e	sendAllPlayerInfo
	m	(Lcom/mojang/authlib/GameProfile;)Ladx;	e	getPlayerForLogin
	m	()Lagt;	f	getBans
	m	(Ladx;)Lzb;	f	getPlayerAdvancements
	m	(Lcom/mojang/authlib/GameProfile;)Z	f	isOp
	m	()Lagk;	g	getIpBans
	m	()V	h	saveAll
	m	()Lagv;	i	getWhiteList
	m	()[Ljava/lang/String;	j	getWhiteListNames
	m	()Lago;	k	getOps
	m	()[Ljava/lang/String;	l	getOpNames
	m	()I	m	getPlayerCount
	m	()I	n	getMaxPlayers
	m	()Z	o	isUsingWhitelist
	m	()I	p	getViewDistance
	m	()I	q	getSimulationDistance
	m	()Lok;	r	getSingleplayerData
	m	()V	s	removeAll
	m	()Ljava/util/List;	t	getPlayers
	m	()V	u	reloadResources
	m	()Z	v	isAllowCheatsForAllPlayers
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/io/File;	b	USERBANLIST_FILE
	f	Ljava/io/File;	c	IPBANLIST_FILE
	f	Ljava/io/File;	d	OPLIST_FILE
	f	Ljava/io/File;	e	WHITELIST_FILE
	f	I	f	maxPlayers
	f	I	g	SEND_PLAYER_INFO_INTERVAL
	f	Ljava/text/SimpleDateFormat;	h	BAN_DATE_FORMAT
	f	Lnet/minecraft/server/MinecraftServer;	i	server
	f	Ljava/util/List;	j	players
	f	Ljava/util/Map;	k	playersByUUID
	f	Lagt;	l	bans
	f	Lagk;	m	ipBans
	f	Lago;	n	ops
	f	Lagv;	o	whitelist
	f	Ljava/util/Map;	p	stats
	f	Ljava/util/Map;	q	advancements
	f	Ldks;	r	playerIo
	f	Z	s	doWhiteList
	f	Lhc$a;	t	registryHolder
	f	I	u	viewDistance
	f	I	v	simulationDistance
	f	Z	w	allowCheatsForAllPlayers
	f	Z	x	ALLOW_LOGOUTIVATOR
	f	I	y	sendAllPlayerInfoIn
c	agn$1	net/minecraft/server/players/PlayerList$1
	m	(Lcql;D)V	a	onBorderSizeSet
	m	(Lcql;DD)V	a	onBorderCenterSet
	m	(Lcql;DDJ)V	a	onBorderSizeLerping
	m	(Lcql;I)V	a	onBorderSetWarningTime
	m	(Lcql;D)V	b	onBorderSetDamagePerBlock
	m	(Lcql;I)V	b	onBorderSetWarningBlocks
	m	(Lcql;D)V	c	onBorderSetDamageSafeZOne
	f	Lagn;	a	this$0
c	ago	net/minecraft/server/players/ServerOpList
	m	()[Ljava/lang/String;	a	getUserList
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
	m	(Lcom/google/gson/JsonObject;)Lagr;	a	createEntry
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	canBypassPlayerLimit
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
c	agp	net/minecraft/server/players/ServerOpListEntry
	m	()I	a	getLevel
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
	m	()Z	b	getBypassesPlayerLimit
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
	f	I	a	level
	f	Z	b	bypassesPlayerLimit
c	agq	net/minecraft/server/players/SleepStatus
	m	()V	a	removeAllSleepers
	m	(I)Z	a	areEnoughSleeping
	m	(ILjava/util/List;)Z	a	areEnoughDeepSleeping
	m	(Ljava/util/List;)Z	a	update
	m	()I	b	amountSleeping
	m	(I)I	b	sleepersNeeded
	f	I	a	activePlayers
	f	I	b	sleepingPlayers
c	agr	net/minecraft/server/players/StoredUserEntry
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
	m	()Z	f	hasExpired
	m	()Ljava/lang/Object;	g	getUser
	f	Ljava/lang/Object;	a	user
c	ags	net/minecraft/server/players/StoredUserList
	m	()[Ljava/lang/String;	a	getUserList
	m	(Lagr;)V	a	add
	m	(Lcom/google/gson/JsonObject;)Lagr;	a	createEntry
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
	m	()Ljava/io/File;	b	getFile
	m	(Lagr;)V	b	remove
	m	(Ljava/lang/Object;)Lagr;	b	get
	m	()Z	c	isEmpty
	m	(Lagr;)Lcom/google/gson/JsonObject;	c	lambda$save$0
	m	(Ljava/lang/Object;)V	c	remove
	m	()Ljava/util/Collection;	d	getEntries
	m	(Ljava/lang/Object;)Z	d	contains
	m	()V	e	save
	m	()V	f	load
	m	()V	g	removeExpired
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/io/File;	c	file
	f	Ljava/util/Map;	d	map
c	agt	net/minecraft/server/players/UserBanList
	m	()[Ljava/lang/String;	a	getUserList
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
	m	(Lcom/google/gson/JsonObject;)Lagr;	a	createEntry
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isBanned
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
c	agu	net/minecraft/server/players/UserBanListEntry
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
	m	()Lqk;	e	getDisplayName
c	agv	net/minecraft/server/players/UserWhiteList
	m	()[Ljava/lang/String;	a	getUserList
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
	m	(Lcom/google/gson/JsonObject;)Lagr;	a	createEntry
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isWhiteListed
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
c	agw	net/minecraft/server/players/UserWhiteListEntry
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
c	agx	net/minecraft/server/players/package-info
c	agy	net/minecraft/server/rcon/NetworkDataOutputStream
	m	()[B	a	toByteArray
	m	(F)V	a	writeFloat
	m	(I)V	a	write
	m	(Ljava/lang/String;)V	a	writeString
	m	(S)V	a	writeShort
	m	([B)V	a	writeBytes
	m	()V	b	reset
	m	(I)V	b	writeInt
	f	Ljava/io/ByteArrayOutputStream;	a	outputStream
	f	Ljava/io/DataOutputStream;	b	dataOutputStream
c	agz	net/minecraft/server/rcon/PktUtils
	m	(B)Ljava/lang/String;	a	toHexString
	m	([BI)I	a	intFromByteArray
	m	([BII)Ljava/lang/String;	a	stringFromByteArray
	m	([BII)I	b	intFromByteArray
	m	([BII)I	c	intFromNetworkByteArray
	f	I	a	MAX_PACKET_SIZE
	f	[C	b	HEX_CHAR
c	aha	net/minecraft/server/rcon/RconConsoleSource
	m	()Z	G_	shouldInformAdmins
	m	(Lqk;Ljava/util/UUID;)V	a	sendMessage
	m	()V	e	prepareForCommand
	m	()Ljava/lang/String;	f	getCommandResponse
	m	()Ldm;	g	createCommandSourceStack
	m	()Z	i_	acceptsSuccess
	m	()Z	j_	acceptsFailure
	f	Ljava/lang/String;	b	RCON
	f	Lqk;	c	RCON_COMPONENT
	f	Ljava/lang/StringBuffer;	d	buffer
	f	Lnet/minecraft/server/MinecraftServer;	e	server
c	ahb	net/minecraft/server/rcon/package-info
c	ahc	net/minecraft/server/rcon/thread/GenericThread
	m	()Z	a	start
	m	()V	b	stop
	m	()Z	c	isRunning
	f	Z	a	running
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/Thread;	c	thread
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	e	UNIQUE_THREAD_ID
	f	I	f	MAX_STOP_WAIT
c	ahd	net/minecraft/server/rcon/thread/QueryThreadGs4
	m	()Z	a	start
	m	(JLahd$a;)Z	a	lambda$pruneChallenges$0
	m	(Ljava/lang/Exception;)V	a	recoverSocketError
	m	(Ljava/net/DatagramPacket;)Z	a	processPacket
	m	(Ljava/net/SocketAddress;)[B	a	getIdentBytes
	m	(Lzh;)Lahd;	a	create
	m	([BLjava/net/DatagramPacket;)V	a	sendTo
	m	(Ljava/net/DatagramPacket;)[B	b	buildRuleResponse
	m	(Ljava/net/DatagramPacket;)Ljava/lang/Boolean;	c	validChallenge
	m	()V	d	pruneChallenges
	m	(Ljava/net/DatagramPacket;)V	d	sendChallenge
	m	()Z	e	initSocket
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/lang/String;	e	GAME_TYPE
	f	Ljava/lang/String;	f	GAME_ID
	f	J	g	CHALLENGE_CHECK_INTERVAL
	f	J	h	RESPONSE_CACHE_TIME
	f	J	i	lastChallengeCheck
	f	I	j	port
	f	I	k	serverPort
	f	I	l	maxPlayers
	f	Ljava/lang/String;	m	serverName
	f	Ljava/lang/String;	n	worldName
	f	Ljava/net/DatagramSocket;	o	socket
	f	[B	p	buffer
	f	Ljava/lang/String;	q	hostIp
	f	Ljava/lang/String;	r	serverIp
	f	Ljava/util/Map;	s	validChallenges
	f	Lagy;	t	rulesResponse
	f	J	u	lastRulesResponse
	f	Lzh;	v	serverInterface
c	ahd$a	net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge
	m	()I	a	getChallenge
	m	(J)Ljava/lang/Boolean;	a	before
	m	()[B	b	getChallengeBytes
	m	()[B	c	getIdentBytes
	m	()Ljava/lang/String;	d	getIdent
	f	J	a	time
	f	I	b	challenge
	f	[B	c	identBytes
	f	[B	d	challengeBytes
	f	Ljava/lang/String;	e	ident
c	ahe	net/minecraft/server/rcon/thread/RconClient
	m	(IILjava/lang/String;)V	a	send
	m	(ILjava/lang/String;)V	a	sendCmdResponse
	m	()V	b	stop
	m	()V	d	sendAuthFailure
	m	()V	e	closeSocket
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	SERVERDATA_AUTH
	f	I	f	SERVERDATA_EXECCOMMAND
	f	I	g	SERVERDATA_RESPONSE_VALUE
	f	I	h	SERVERDATA_AUTH_RESPONSE
	f	I	i	SERVERDATA_AUTH_FAILURE
	f	Z	j	authed
	f	Ljava/net/Socket;	k	client
	f	[B	l	buf
	f	Ljava/lang/String;	m	rconPassword
	f	Lzh;	n	serverInterface
c	ahf	net/minecraft/server/rcon/thread/RconThread
	m	(Lahe;)Z	a	lambda$clearClients$0
	m	(Ljava/net/ServerSocket;)V	a	closeSocket
	m	(Lzh;)Lahf;	a	create
	m	()V	b	stop
	m	()V	d	clearClients
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/net/ServerSocket;	e	socket
	f	Ljava/lang/String;	f	rconPassword
	f	Ljava/util/List;	g	clients
	f	Lzh;	h	serverInterface
c	ahg	net/minecraft/server/rcon/thread/package-info
c	ahh	net/minecraft/sounds/Music
	m	()Lahj;	a	getEvent
	m	(Lahh;)Ljava/lang/Boolean;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	()I	b	getMinDelay
	m	(Lahh;)Ljava/lang/Integer;	b	lambda$static$2
	m	()I	c	getMaxDelay
	m	(Lahh;)Ljava/lang/Integer;	c	lambda$static$1
	m	()Z	d	replaceCurrentMusic
	m	(Lahh;)Lahj;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lahj;	b	event
	f	I	c	minDelay
	f	I	d	maxDelay
	f	Z	e	replaceCurrentMusic
c	ahi	net/minecraft/sounds/Musics
	m	(Lahj;)Lahh;	a	createGameMusic
	f	Lahh;	a	MENU
	f	Lahh;	b	CREATIVE
	f	Lahh;	c	CREDITS
	f	Lahh;	d	END_BOSS
	f	Lahh;	e	END
	f	Lahh;	f	UNDER_WATER
	f	Lahh;	g	GAME
	f	I	h	ONE_SECOND
	f	I	i	THIRTY_SECONDS
	f	I	j	TEN_MINUTES
	f	I	k	TWENTY_MINUTES
	f	I	l	FIVE_MINUTES
c	ahj	net/minecraft/sounds/SoundEvent
	m	()Lyt;	a	getLocation
	m	(Lahj;)Lyt;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyt;	b	location
c	ahk	net/minecraft/sounds/SoundEvents
	m	(Ljava/lang/String;)Lahj;	a	register
	f	Lahj;	A	AMETHYST_BLOCK_PLACE
	f	Lahj;	B	AMETHYST_BLOCK_STEP
	f	Lahj;	C	AMETHYST_CLUSTER_BREAK
	f	Lahj;	D	AMETHYST_CLUSTER_FALL
	f	Lahj;	E	AMETHYST_CLUSTER_HIT
	f	Lahj;	F	AMETHYST_CLUSTER_PLACE
	f	Lahj;	G	AMETHYST_CLUSTER_STEP
	f	Lahj;	H	ANCIENT_DEBRIS_BREAK
	f	Lahj;	I	ANCIENT_DEBRIS_STEP
	f	Lahj;	J	ANCIENT_DEBRIS_PLACE
	f	Lahj;	K	ANCIENT_DEBRIS_HIT
	f	Lahj;	L	ANCIENT_DEBRIS_FALL
	f	Lahj;	M	ANVIL_BREAK
	f	Lahj;	N	ANVIL_DESTROY
	f	Lahj;	O	ANVIL_FALL
	f	Lahj;	P	ANVIL_HIT
	f	Lahj;	Q	ANVIL_LAND
	f	Lahj;	R	ANVIL_PLACE
	f	Lahj;	S	ANVIL_STEP
	f	Lahj;	T	ANVIL_USE
	f	Lahj;	U	ARMOR_EQUIP_CHAIN
	f	Lahj;	V	ARMOR_EQUIP_DIAMOND
	f	Lahj;	W	ARMOR_EQUIP_ELYTRA
	f	Lahj;	X	ARMOR_EQUIP_GENERIC
	f	Lahj;	Y	ARMOR_EQUIP_GOLD
	f	Lahj;	Z	ARMOR_EQUIP_IRON
	f	Lahj;	aA	AZALEA_LEAVES_FALL
	f	Lahj;	aB	AZALEA_LEAVES_HIT
	f	Lahj;	aC	AZALEA_LEAVES_PLACE
	f	Lahj;	aD	AZALEA_LEAVES_STEP
	f	Lahj;	aE	BAMBOO_BREAK
	f	Lahj;	aF	BAMBOO_FALL
	f	Lahj;	aG	BAMBOO_HIT
	f	Lahj;	aH	BAMBOO_PLACE
	f	Lahj;	aI	BAMBOO_STEP
	f	Lahj;	aJ	BAMBOO_SAPLING_BREAK
	f	Lahj;	aK	BAMBOO_SAPLING_HIT
	f	Lahj;	aL	BAMBOO_SAPLING_PLACE
	f	Lahj;	a	AMBIENT_CAVE
	f	Lahj;	aM	BARREL_CLOSE
	f	Lahj;	aN	BARREL_OPEN
	f	Lahj;	aO	BASALT_BREAK
	f	Lahj;	aP	BASALT_STEP
	f	Lahj;	aQ	BASALT_PLACE
	f	Lahj;	aR	BASALT_HIT
	f	Lahj;	aS	BASALT_FALL
	f	Lahj;	aT	BAT_AMBIENT
	f	Lahj;	aU	BAT_DEATH
	f	Lahj;	aV	BAT_HURT
	f	Lahj;	aW	BAT_LOOP
	f	Lahj;	aX	BAT_TAKEOFF
	f	Lahj;	aY	BEACON_ACTIVATE
	f	Lahj;	aZ	BEACON_AMBIENT
	f	Lahj;	aa	ARMOR_EQUIP_LEATHER
	f	Lahj;	ab	ARMOR_EQUIP_NETHERITE
	f	Lahj;	ac	ARMOR_EQUIP_TURTLE
	f	Lahj;	ad	ARMOR_STAND_BREAK
	f	Lahj;	ae	ARMOR_STAND_FALL
	f	Lahj;	af	ARMOR_STAND_HIT
	f	Lahj;	ag	ARMOR_STAND_PLACE
	f	Lahj;	ah	ARROW_HIT
	f	Lahj;	ai	ARROW_HIT_PLAYER
	f	Lahj;	aj	ARROW_SHOOT
	f	Lahj;	ak	AXE_STRIP
	f	Lahj;	al	AXE_SCRAPE
	f	Lahj;	am	AXE_WAX_OFF
	f	Lahj;	an	AXOLOTL_ATTACK
	f	Lahj;	ao	AXOLOTL_DEATH
	f	Lahj;	ap	AXOLOTL_HURT
	f	Lahj;	aq	AXOLOTL_IDLE_AIR
	f	Lahj;	ar	AXOLOTL_IDLE_WATER
	f	Lahj;	as	AXOLOTL_SPLASH
	f	Lahj;	at	AXOLOTL_SWIM
	f	Lahj;	au	AZALEA_BREAK
	f	Lahj;	av	AZALEA_FALL
	f	Lahj;	aw	AZALEA_HIT
	f	Lahj;	ax	AZALEA_PLACE
	f	Lahj;	ay	AZALEA_STEP
	f	Lahj;	az	AZALEA_LEAVES_BREAK
	f	Lahj;	bA	BOAT_PADDLE_WATER
	f	Lahj;	bB	BONE_BLOCK_BREAK
	f	Lahj;	bC	BONE_BLOCK_FALL
	f	Lahj;	bD	BONE_BLOCK_HIT
	f	Lahj;	bE	BONE_BLOCK_PLACE
	f	Lahj;	bF	BONE_BLOCK_STEP
	f	Lahj;	bG	BONE_MEAL_USE
	f	Lahj;	bH	BOOK_PAGE_TURN
	f	Lahj;	bI	BOOK_PUT
	f	Lahj;	bJ	BLASTFURNACE_FIRE_CRACKLE
	f	Lahj;	bK	BOTTLE_EMPTY
	f	Lahj;	bL	BOTTLE_FILL
	f	Lahj;	b	AMBIENT_BASALT_DELTAS_ADDITIONS
	f	Lahj;	bM	BOTTLE_FILL_DRAGONBREATH
	f	Lahj;	bN	BREWING_STAND_BREW
	f	Lahj;	bO	BUBBLE_COLUMN_BUBBLE_POP
	f	Lahj;	bP	BUBBLE_COLUMN_UPWARDS_AMBIENT
	f	Lahj;	bQ	BUBBLE_COLUMN_UPWARDS_INSIDE
	f	Lahj;	bR	BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
	f	Lahj;	bS	BUBBLE_COLUMN_WHIRLPOOL_INSIDE
	f	Lahj;	bT	BUCKET_EMPTY
	f	Lahj;	bU	BUCKET_EMPTY_AXOLOTL
	f	Lahj;	bV	BUCKET_EMPTY_FISH
	f	Lahj;	bW	BUCKET_EMPTY_LAVA
	f	Lahj;	bX	BUCKET_EMPTY_POWDER_SNOW
	f	Lahj;	bY	BUCKET_FILL
	f	Lahj;	bZ	BUCKET_FILL_AXOLOTL
	f	Lahj;	ba	BEACON_DEACTIVATE
	f	Lahj;	bb	BEACON_POWER_SELECT
	f	Lahj;	bc	BEE_DEATH
	f	Lahj;	bd	BEE_HURT
	f	Lahj;	be	BEE_LOOP_AGGRESSIVE
	f	Lahj;	bf	BEE_LOOP
	f	Lahj;	bg	BEE_STING
	f	Lahj;	bh	BEE_POLLINATE
	f	Lahj;	bi	BEEHIVE_DRIP
	f	Lahj;	bj	BEEHIVE_ENTER
	f	Lahj;	bk	BEEHIVE_EXIT
	f	Lahj;	bl	BEEHIVE_SHEAR
	f	Lahj;	bm	BEEHIVE_WORK
	f	Lahj;	bn	BELL_BLOCK
	f	Lahj;	bo	BELL_RESONATE
	f	Lahj;	bp	BIG_DRIPLEAF_BREAK
	f	Lahj;	bq	BIG_DRIPLEAF_FALL
	f	Lahj;	br	BIG_DRIPLEAF_HIT
	f	Lahj;	bs	BIG_DRIPLEAF_PLACE
	f	Lahj;	bt	BIG_DRIPLEAF_STEP
	f	Lahj;	bu	BLAZE_AMBIENT
	f	Lahj;	bv	BLAZE_BURN
	f	Lahj;	bw	BLAZE_DEATH
	f	Lahj;	bx	BLAZE_HURT
	f	Lahj;	by	BLAZE_SHOOT
	f	Lahj;	bz	BOAT_PADDLE_LAND
	f	Lahj;	cA	CAT_HURT
	f	Lahj;	cB	CAT_PURR
	f	Lahj;	cC	CAT_PURREOW
	f	Lahj;	cD	CAVE_VINES_BREAK
	f	Lahj;	cE	CAVE_VINES_FALL
	f	Lahj;	cF	CAVE_VINES_HIT
	f	Lahj;	cG	CAVE_VINES_PLACE
	f	Lahj;	cH	CAVE_VINES_STEP
	f	Lahj;	cI	CAVE_VINES_PICK_BERRIES
	f	Lahj;	cJ	CHAIN_BREAK
	f	Lahj;	cK	CHAIN_FALL
	f	Lahj;	cL	CHAIN_HIT
	f	Lahj;	c	AMBIENT_BASALT_DELTAS_LOOP
	f	Lahj;	cM	CHAIN_PLACE
	f	Lahj;	cN	CHAIN_STEP
	f	Lahj;	cO	CHEST_CLOSE
	f	Lahj;	cP	CHEST_LOCKED
	f	Lahj;	cQ	CHEST_OPEN
	f	Lahj;	cR	CHICKEN_AMBIENT
	f	Lahj;	cS	CHICKEN_DEATH
	f	Lahj;	cT	CHICKEN_EGG
	f	Lahj;	cU	CHICKEN_HURT
	f	Lahj;	cV	CHICKEN_STEP
	f	Lahj;	cW	CHORUS_FLOWER_DEATH
	f	Lahj;	cX	CHORUS_FLOWER_GROW
	f	Lahj;	cY	CHORUS_FRUIT_TELEPORT
	f	Lahj;	cZ	COD_AMBIENT
	f	Lahj;	ca	BUCKET_FILL_FISH
	f	Lahj;	cb	BUCKET_FILL_LAVA
	f	Lahj;	cc	BUCKET_FILL_POWDER_SNOW
	f	Lahj;	cd	BUNDLE_DROP_CONTENTS
	f	Lahj;	ce	BUNDLE_INSERT
	f	Lahj;	cf	BUNDLE_REMOVE_ONE
	f	Lahj;	cg	CAKE_ADD_CANDLE
	f	Lahj;	ch	CALCITE_BREAK
	f	Lahj;	ci	CALCITE_STEP
	f	Lahj;	cj	CALCITE_PLACE
	f	Lahj;	ck	CALCITE_HIT
	f	Lahj;	cl	CALCITE_FALL
	f	Lahj;	cm	CAMPFIRE_CRACKLE
	f	Lahj;	cn	CANDLE_AMBIENT
	f	Lahj;	co	CANDLE_BREAK
	f	Lahj;	cp	CANDLE_EXTINGUISH
	f	Lahj;	cq	CANDLE_FALL
	f	Lahj;	cr	CANDLE_HIT
	f	Lahj;	cs	CANDLE_PLACE
	f	Lahj;	ct	CANDLE_STEP
	f	Lahj;	cu	CAT_AMBIENT
	f	Lahj;	cv	CAT_STRAY_AMBIENT
	f	Lahj;	cw	CAT_DEATH
	f	Lahj;	cx	CAT_EAT
	f	Lahj;	cy	CAT_HISS
	f	Lahj;	cz	CAT_BEG_FOR_FOOD
	f	Lahj;	dA	COW_MILK
	f	Lahj;	dB	COW_STEP
	f	Lahj;	dC	CREEPER_DEATH
	f	Lahj;	dD	CREEPER_HURT
	f	Lahj;	dE	CREEPER_PRIMED
	f	Lahj;	dF	CROP_BREAK
	f	Lahj;	dG	CROP_PLANTED
	f	Lahj;	dH	CROSSBOW_HIT
	f	Lahj;	dI	CROSSBOW_LOADING_END
	f	Lahj;	dJ	CROSSBOW_LOADING_MIDDLE
	f	Lahj;	dK	CROSSBOW_LOADING_START
	f	Lahj;	dL	CROSSBOW_QUICK_CHARGE_1
	f	Lahj;	d	AMBIENT_BASALT_DELTAS_MOOD
	f	Lahj;	dM	CROSSBOW_QUICK_CHARGE_2
	f	Lahj;	dN	CROSSBOW_QUICK_CHARGE_3
	f	Lahj;	dO	CROSSBOW_SHOOT
	f	Lahj;	dP	DEEPSLATE_BRICKS_BREAK
	f	Lahj;	dQ	DEEPSLATE_BRICKS_FALL
	f	Lahj;	dR	DEEPSLATE_BRICKS_HIT
	f	Lahj;	dS	DEEPSLATE_BRICKS_PLACE
	f	Lahj;	dT	DEEPSLATE_BRICKS_STEP
	f	Lahj;	dU	DEEPSLATE_BREAK
	f	Lahj;	dV	DEEPSLATE_FALL
	f	Lahj;	dW	DEEPSLATE_HIT
	f	Lahj;	dX	DEEPSLATE_PLACE
	f	Lahj;	dY	DEEPSLATE_STEP
	f	Lahj;	dZ	DEEPSLATE_TILES_BREAK
	f	Lahj;	da	COD_DEATH
	f	Lahj;	db	COD_FLOP
	f	Lahj;	dc	COD_HURT
	f	Lahj;	dd	COMPARATOR_CLICK
	f	Lahj;	de	COMPOSTER_EMPTY
	f	Lahj;	df	COMPOSTER_FILL
	f	Lahj;	dg	COMPOSTER_FILL_SUCCESS
	f	Lahj;	dh	COMPOSTER_READY
	f	Lahj;	di	CONDUIT_ACTIVATE
	f	Lahj;	dj	CONDUIT_AMBIENT
	f	Lahj;	dk	CONDUIT_AMBIENT_SHORT
	f	Lahj;	dl	CONDUIT_ATTACK_TARGET
	f	Lahj;	dm	CONDUIT_DEACTIVATE
	f	Lahj;	dn	COPPER_BREAK
	f	Lahj;	do	COPPER_STEP
	f	Lahj;	dp	COPPER_PLACE
	f	Lahj;	dq	COPPER_HIT
	f	Lahj;	dr	COPPER_FALL
	f	Lahj;	ds	CORAL_BLOCK_BREAK
	f	Lahj;	dt	CORAL_BLOCK_FALL
	f	Lahj;	du	CORAL_BLOCK_HIT
	f	Lahj;	dv	CORAL_BLOCK_PLACE
	f	Lahj;	dw	CORAL_BLOCK_STEP
	f	Lahj;	dx	COW_AMBIENT
	f	Lahj;	dy	COW_DEATH
	f	Lahj;	dz	COW_HURT
	f	Lahj;	eA	DRIPSTONE_BLOCK_HIT
	f	Lahj;	eB	DRIPSTONE_BLOCK_FALL
	f	Lahj;	eC	POINTED_DRIPSTONE_BREAK
	f	Lahj;	eD	POINTED_DRIPSTONE_STEP
	f	Lahj;	eE	POINTED_DRIPSTONE_PLACE
	f	Lahj;	eF	POINTED_DRIPSTONE_HIT
	f	Lahj;	eG	POINTED_DRIPSTONE_FALL
	f	Lahj;	eH	POINTED_DRIPSTONE_LAND
	f	Lahj;	eI	POINTED_DRIPSTONE_DRIP_LAVA
	f	Lahj;	eJ	POINTED_DRIPSTONE_DRIP_WATER
	f	Lahj;	eK	POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON
	f	Lahj;	eL	POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON
	f	Lahj;	e	AMBIENT_CRIMSON_FOREST_ADDITIONS
	f	Lahj;	eM	BIG_DRIPLEAF_TILT_DOWN
	f	Lahj;	eN	BIG_DRIPLEAF_TILT_UP
	f	Lahj;	eO	DROWNED_AMBIENT
	f	Lahj;	eP	DROWNED_AMBIENT_WATER
	f	Lahj;	eQ	DROWNED_DEATH
	f	Lahj;	eR	DROWNED_DEATH_WATER
	f	Lahj;	eS	DROWNED_HURT
	f	Lahj;	eT	DROWNED_HURT_WATER
	f	Lahj;	eU	DROWNED_SHOOT
	f	Lahj;	eV	DROWNED_STEP
	f	Lahj;	eW	DROWNED_SWIM
	f	Lahj;	eX	DYE_USE
	f	Lahj;	eY	EGG_THROW
	f	Lahj;	eZ	ELDER_GUARDIAN_AMBIENT
	f	Lahj;	ea	DEEPSLATE_TILES_FALL
	f	Lahj;	eb	DEEPSLATE_TILES_HIT
	f	Lahj;	ec	DEEPSLATE_TILES_PLACE
	f	Lahj;	ed	DEEPSLATE_TILES_STEP
	f	Lahj;	ee	DISPENSER_DISPENSE
	f	Lahj;	ef	DISPENSER_FAIL
	f	Lahj;	eg	DISPENSER_LAUNCH
	f	Lahj;	eh	DOLPHIN_AMBIENT
	f	Lahj;	ei	DOLPHIN_AMBIENT_WATER
	f	Lahj;	ej	DOLPHIN_ATTACK
	f	Lahj;	ek	DOLPHIN_DEATH
	f	Lahj;	el	DOLPHIN_EAT
	f	Lahj;	em	DOLPHIN_HURT
	f	Lahj;	en	DOLPHIN_JUMP
	f	Lahj;	eo	DOLPHIN_PLAY
	f	Lahj;	ep	DOLPHIN_SPLASH
	f	Lahj;	eq	DOLPHIN_SWIM
	f	Lahj;	er	DONKEY_AMBIENT
	f	Lahj;	es	DONKEY_ANGRY
	f	Lahj;	et	DONKEY_CHEST
	f	Lahj;	eu	DONKEY_DEATH
	f	Lahj;	ev	DONKEY_EAT
	f	Lahj;	ew	DONKEY_HURT
	f	Lahj;	ex	DRIPSTONE_BLOCK_BREAK
	f	Lahj;	ey	DRIPSTONE_BLOCK_STEP
	f	Lahj;	ez	DRIPSTONE_BLOCK_PLACE
	f	Lahj;	fA	ENDERMITE_AMBIENT
	f	Lahj;	fB	ENDERMITE_DEATH
	f	Lahj;	fC	ENDERMITE_HURT
	f	Lahj;	fD	ENDERMITE_STEP
	f	Lahj;	fE	ENDER_PEARL_THROW
	f	Lahj;	fF	END_GATEWAY_SPAWN
	f	Lahj;	fG	END_PORTAL_FRAME_FILL
	f	Lahj;	fH	END_PORTAL_SPAWN
	f	Lahj;	fI	EVOKER_AMBIENT
	f	Lahj;	fJ	EVOKER_CAST_SPELL
	f	Lahj;	fK	EVOKER_CELEBRATE
	f	Lahj;	fL	EVOKER_DEATH
	f	Lahj;	f	AMBIENT_CRIMSON_FOREST_LOOP
	f	Lahj;	fM	EVOKER_FANGS_ATTACK
	f	Lahj;	fN	EVOKER_HURT
	f	Lahj;	fO	EVOKER_PREPARE_ATTACK
	f	Lahj;	fP	EVOKER_PREPARE_SUMMON
	f	Lahj;	fQ	EVOKER_PREPARE_WOLOLO
	f	Lahj;	fR	EXPERIENCE_BOTTLE_THROW
	f	Lahj;	fS	EXPERIENCE_ORB_PICKUP
	f	Lahj;	fT	FENCE_GATE_CLOSE
	f	Lahj;	fU	FENCE_GATE_OPEN
	f	Lahj;	fV	FIRECHARGE_USE
	f	Lahj;	fW	FIREWORK_ROCKET_BLAST
	f	Lahj;	fX	FIREWORK_ROCKET_BLAST_FAR
	f	Lahj;	fY	FIREWORK_ROCKET_LARGE_BLAST
	f	Lahj;	fZ	FIREWORK_ROCKET_LARGE_BLAST_FAR
	f	Lahj;	fa	ELDER_GUARDIAN_AMBIENT_LAND
	f	Lahj;	fb	ELDER_GUARDIAN_CURSE
	f	Lahj;	fc	ELDER_GUARDIAN_DEATH
	f	Lahj;	fd	ELDER_GUARDIAN_DEATH_LAND
	f	Lahj;	fe	ELDER_GUARDIAN_FLOP
	f	Lahj;	ff	ELDER_GUARDIAN_HURT
	f	Lahj;	fg	ELDER_GUARDIAN_HURT_LAND
	f	Lahj;	fh	ELYTRA_FLYING
	f	Lahj;	fi	ENCHANTMENT_TABLE_USE
	f	Lahj;	fj	ENDER_CHEST_CLOSE
	f	Lahj;	fk	ENDER_CHEST_OPEN
	f	Lahj;	fl	ENDER_DRAGON_AMBIENT
	f	Lahj;	fm	ENDER_DRAGON_DEATH
	f	Lahj;	fn	DRAGON_FIREBALL_EXPLODE
	f	Lahj;	fo	ENDER_DRAGON_FLAP
	f	Lahj;	fp	ENDER_DRAGON_GROWL
	f	Lahj;	fq	ENDER_DRAGON_HURT
	f	Lahj;	fr	ENDER_DRAGON_SHOOT
	f	Lahj;	fs	ENDER_EYE_DEATH
	f	Lahj;	ft	ENDER_EYE_LAUNCH
	f	Lahj;	fu	ENDERMAN_AMBIENT
	f	Lahj;	fv	ENDERMAN_DEATH
	f	Lahj;	fw	ENDERMAN_HURT
	f	Lahj;	fx	ENDERMAN_SCREAM
	f	Lahj;	fy	ENDERMAN_STARE
	f	Lahj;	fz	ENDERMAN_TELEPORT
	f	Lahj;	gA	FOX_TELEPORT
	f	Lahj;	gB	ROOTS_BREAK
	f	Lahj;	gC	ROOTS_STEP
	f	Lahj;	gD	ROOTS_PLACE
	f	Lahj;	gE	ROOTS_HIT
	f	Lahj;	gF	ROOTS_FALL
	f	Lahj;	gG	FURNACE_FIRE_CRACKLE
	f	Lahj;	gH	GENERIC_BIG_FALL
	f	Lahj;	gI	GENERIC_BURN
	f	Lahj;	gJ	GENERIC_DEATH
	f	Lahj;	gK	GENERIC_DRINK
	f	Lahj;	gL	GENERIC_EAT
	f	Lahj;	g	AMBIENT_CRIMSON_FOREST_MOOD
	f	Lahj;	gM	GENERIC_EXPLODE
	f	Lahj;	gN	GENERIC_EXTINGUISH_FIRE
	f	Lahj;	gO	GENERIC_HURT
	f	Lahj;	gP	GENERIC_SMALL_FALL
	f	Lahj;	gQ	GENERIC_SPLASH
	f	Lahj;	gR	GENERIC_SWIM
	f	Lahj;	gS	GHAST_AMBIENT
	f	Lahj;	gT	GHAST_DEATH
	f	Lahj;	gU	GHAST_HURT
	f	Lahj;	gV	GHAST_SCREAM
	f	Lahj;	gW	GHAST_SHOOT
	f	Lahj;	gX	GHAST_WARN
	f	Lahj;	gY	GILDED_BLACKSTONE_BREAK
	f	Lahj;	gZ	GILDED_BLACKSTONE_FALL
	f	Lahj;	ga	FIREWORK_ROCKET_LAUNCH
	f	Lahj;	gb	FIREWORK_ROCKET_SHOOT
	f	Lahj;	gc	FIREWORK_ROCKET_TWINKLE
	f	Lahj;	gd	FIREWORK_ROCKET_TWINKLE_FAR
	f	Lahj;	ge	FIRE_AMBIENT
	f	Lahj;	gf	FIRE_EXTINGUISH
	f	Lahj;	gg	FISH_SWIM
	f	Lahj;	gh	FISHING_BOBBER_RETRIEVE
	f	Lahj;	gi	FISHING_BOBBER_SPLASH
	f	Lahj;	gj	FISHING_BOBBER_THROW
	f	Lahj;	gk	FLINTANDSTEEL_USE
	f	Lahj;	gl	FLOWERING_AZALEA_BREAK
	f	Lahj;	gm	FLOWERING_AZALEA_FALL
	f	Lahj;	gn	FLOWERING_AZALEA_HIT
	f	Lahj;	go	FLOWERING_AZALEA_PLACE
	f	Lahj;	gp	FLOWERING_AZALEA_STEP
	f	Lahj;	gq	FOX_AGGRO
	f	Lahj;	gr	FOX_AMBIENT
	f	Lahj;	gs	FOX_BITE
	f	Lahj;	gt	FOX_DEATH
	f	Lahj;	gu	FOX_EAT
	f	Lahj;	gv	FOX_HURT
	f	Lahj;	gw	FOX_SCREECH
	f	Lahj;	gx	FOX_SLEEP
	f	Lahj;	gy	FOX_SNIFF
	f	Lahj;	gz	FOX_SPIT
	f	Lahj;	hA	GOAT_SCREAMING_AMBIENT
	f	Lahj;	hB	GOAT_SCREAMING_DEATH
	f	Lahj;	hC	GOAT_SCREAMING_EAT
	f	Lahj;	hD	GOAT_SCREAMING_HURT
	f	Lahj;	hE	GOAT_SCREAMING_LONG_JUMP
	f	Lahj;	hF	GOAT_SCREAMING_MILK
	f	Lahj;	hG	GOAT_SCREAMING_PREPARE_RAM
	f	Lahj;	hH	GOAT_SCREAMING_RAM_IMPACT
	f	Lahj;	hI	GOAT_STEP
	f	Lahj;	hJ	GRASS_BREAK
	f	Lahj;	hK	GRASS_FALL
	f	Lahj;	hL	GRASS_HIT
	f	Lahj;	h	AMBIENT_NETHER_WASTES_ADDITIONS
	f	Lahj;	hM	GRASS_PLACE
	f	Lahj;	hN	GRASS_STEP
	f	Lahj;	hO	GRAVEL_BREAK
	f	Lahj;	hP	GRAVEL_FALL
	f	Lahj;	hQ	GRAVEL_HIT
	f	Lahj;	hR	GRAVEL_PLACE
	f	Lahj;	hS	GRAVEL_STEP
	f	Lahj;	hT	GRINDSTONE_USE
	f	Lahj;	hU	GROWING_PLANT_CROP
	f	Lahj;	hV	GUARDIAN_AMBIENT
	f	Lahj;	hW	GUARDIAN_AMBIENT_LAND
	f	Lahj;	hX	GUARDIAN_ATTACK
	f	Lahj;	hY	GUARDIAN_DEATH
	f	Lahj;	hZ	GUARDIAN_DEATH_LAND
	f	Lahj;	ha	GILDED_BLACKSTONE_HIT
	f	Lahj;	hb	GILDED_BLACKSTONE_PLACE
	f	Lahj;	hc	GILDED_BLACKSTONE_STEP
	f	Lahj;	hd	GLASS_BREAK
	f	Lahj;	he	GLASS_FALL
	f	Lahj;	hf	GLASS_HIT
	f	Lahj;	hg	GLASS_PLACE
	f	Lahj;	hh	GLASS_STEP
	f	Lahj;	hi	GLOW_INK_SAC_USE
	f	Lahj;	hj	GLOW_ITEM_FRAME_ADD_ITEM
	f	Lahj;	hk	GLOW_ITEM_FRAME_BREAK
	f	Lahj;	hl	GLOW_ITEM_FRAME_PLACE
	f	Lahj;	hm	GLOW_ITEM_FRAME_REMOVE_ITEM
	f	Lahj;	hn	GLOW_ITEM_FRAME_ROTATE_ITEM
	f	Lahj;	ho	GLOW_SQUID_AMBIENT
	f	Lahj;	hp	GLOW_SQUID_DEATH
	f	Lahj;	hq	GLOW_SQUID_HURT
	f	Lahj;	hr	GLOW_SQUID_SQUIRT
	f	Lahj;	hs	GOAT_AMBIENT
	f	Lahj;	ht	GOAT_DEATH
	f	Lahj;	hu	GOAT_EAT
	f	Lahj;	hv	GOAT_HURT
	f	Lahj;	hw	GOAT_LONG_JUMP
	f	Lahj;	hx	GOAT_MILK
	f	Lahj;	hy	GOAT_PREPARE_RAM
	f	Lahj;	hz	GOAT_RAM_IMPACT
	f	Lahj;	iA	HORSE_ANGRY
	f	Lahj;	iB	HORSE_ARMOR
	f	Lahj;	iC	HORSE_BREATHE
	f	Lahj;	iD	HORSE_DEATH
	f	Lahj;	iE	HORSE_EAT
	f	Lahj;	iF	HORSE_GALLOP
	f	Lahj;	iG	HORSE_HURT
	f	Lahj;	iH	HORSE_JUMP
	f	Lahj;	iI	HORSE_LAND
	f	Lahj;	iJ	HORSE_SADDLE
	f	Lahj;	iK	HORSE_STEP
	f	Lahj;	iL	HORSE_STEP_WOOD
	f	Lahj;	i	AMBIENT_NETHER_WASTES_LOOP
	f	Lahj;	iM	HOSTILE_BIG_FALL
	f	Lahj;	iN	HOSTILE_DEATH
	f	Lahj;	iO	HOSTILE_HURT
	f	Lahj;	iP	HOSTILE_SMALL_FALL
	f	Lahj;	iQ	HOSTILE_SPLASH
	f	Lahj;	iR	HOSTILE_SWIM
	f	Lahj;	iS	HUSK_AMBIENT
	f	Lahj;	iT	HUSK_CONVERTED_TO_ZOMBIE
	f	Lahj;	iU	HUSK_DEATH
	f	Lahj;	iV	HUSK_HURT
	f	Lahj;	iW	HUSK_STEP
	f	Lahj;	iX	ILLUSIONER_AMBIENT
	f	Lahj;	iY	ILLUSIONER_CAST_SPELL
	f	Lahj;	iZ	ILLUSIONER_DEATH
	f	Lahj;	ia	GUARDIAN_FLOP
	f	Lahj;	ib	GUARDIAN_HURT
	f	Lahj;	ic	GUARDIAN_HURT_LAND
	f	Lahj;	id	HANGING_ROOTS_BREAK
	f	Lahj;	ie	HANGING_ROOTS_FALL
	f	Lahj;	if	HANGING_ROOTS_HIT
	f	Lahj;	ig	HANGING_ROOTS_PLACE
	f	Lahj;	ih	HANGING_ROOTS_STEP
	f	Lahj;	ii	HOE_TILL
	f	Lahj;	ij	HOGLIN_AMBIENT
	f	Lahj;	ik	HOGLIN_ANGRY
	f	Lahj;	il	HOGLIN_ATTACK
	f	Lahj;	im	HOGLIN_CONVERTED_TO_ZOMBIFIED
	f	Lahj;	in	HOGLIN_DEATH
	f	Lahj;	io	HOGLIN_HURT
	f	Lahj;	ip	HOGLIN_RETREAT
	f	Lahj;	iq	HOGLIN_STEP
	f	Lahj;	ir	HONEY_BLOCK_BREAK
	f	Lahj;	is	HONEY_BLOCK_FALL
	f	Lahj;	it	HONEY_BLOCK_HIT
	f	Lahj;	iu	HONEY_BLOCK_PLACE
	f	Lahj;	iv	HONEY_BLOCK_SLIDE
	f	Lahj;	iw	HONEY_BLOCK_STEP
	f	Lahj;	ix	HONEYCOMB_WAX_ON
	f	Lahj;	iy	HONEY_DRINK
	f	Lahj;	iz	HORSE_AMBIENT
	f	Lahj;	jA	LADDER_STEP
	f	Lahj;	jB	LANTERN_BREAK
	f	Lahj;	jC	LANTERN_FALL
	f	Lahj;	jD	LANTERN_HIT
	f	Lahj;	jE	LANTERN_PLACE
	f	Lahj;	jF	LANTERN_STEP
	f	Lahj;	jG	LARGE_AMETHYST_BUD_BREAK
	f	Lahj;	jH	LARGE_AMETHYST_BUD_PLACE
	f	Lahj;	jI	LAVA_AMBIENT
	f	Lahj;	jJ	LAVA_EXTINGUISH
	f	Lahj;	jK	LAVA_POP
	f	Lahj;	jL	LEASH_KNOT_BREAK
	f	Lahj;	j	AMBIENT_NETHER_WASTES_MOOD
	f	Lahj;	jM	LEASH_KNOT_PLACE
	f	Lahj;	jN	LEVER_CLICK
	f	Lahj;	jO	LIGHTNING_BOLT_IMPACT
	f	Lahj;	jP	LIGHTNING_BOLT_THUNDER
	f	Lahj;	jQ	LINGERING_POTION_THROW
	f	Lahj;	jR	LLAMA_AMBIENT
	f	Lahj;	jS	LLAMA_ANGRY
	f	Lahj;	jT	LLAMA_CHEST
	f	Lahj;	jU	LLAMA_DEATH
	f	Lahj;	jV	LLAMA_EAT
	f	Lahj;	jW	LLAMA_HURT
	f	Lahj;	jX	LLAMA_SPIT
	f	Lahj;	jY	LLAMA_STEP
	f	Lahj;	jZ	LLAMA_SWAG
	f	Lahj;	ja	ILLUSIONER_HURT
	f	Lahj;	jb	ILLUSIONER_MIRROR_MOVE
	f	Lahj;	jc	ILLUSIONER_PREPARE_BLINDNESS
	f	Lahj;	jd	ILLUSIONER_PREPARE_MIRROR
	f	Lahj;	je	INK_SAC_USE
	f	Lahj;	jf	IRON_DOOR_CLOSE
	f	Lahj;	jg	IRON_DOOR_OPEN
	f	Lahj;	jh	IRON_GOLEM_ATTACK
	f	Lahj;	ji	IRON_GOLEM_DAMAGE
	f	Lahj;	jj	IRON_GOLEM_DEATH
	f	Lahj;	jk	IRON_GOLEM_HURT
	f	Lahj;	jl	IRON_GOLEM_REPAIR
	f	Lahj;	jm	IRON_GOLEM_STEP
	f	Lahj;	jn	IRON_TRAPDOOR_CLOSE
	f	Lahj;	jo	IRON_TRAPDOOR_OPEN
	f	Lahj;	jp	ITEM_FRAME_ADD_ITEM
	f	Lahj;	jq	ITEM_FRAME_BREAK
	f	Lahj;	jr	ITEM_FRAME_PLACE
	f	Lahj;	js	ITEM_FRAME_REMOVE_ITEM
	f	Lahj;	jt	ITEM_FRAME_ROTATE_ITEM
	f	Lahj;	ju	ITEM_BREAK
	f	Lahj;	jv	ITEM_PICKUP
	f	Lahj;	jw	LADDER_BREAK
	f	Lahj;	jx	LADDER_FALL
	f	Lahj;	jy	LADDER_HIT
	f	Lahj;	jz	LADDER_PLACE
	f	Lahj;	kA	MOOSHROOM_EAT
	f	Lahj;	kB	MOOSHROOM_MILK
	f	Lahj;	kC	MOOSHROOM_MILK_SUSPICIOUSLY
	f	Lahj;	kD	MOOSHROOM_SHEAR
	f	Lahj;	kE	MOSS_CARPET_BREAK
	f	Lahj;	kF	MOSS_CARPET_FALL
	f	Lahj;	kG	MOSS_CARPET_HIT
	f	Lahj;	kH	MOSS_CARPET_PLACE
	f	Lahj;	kI	MOSS_CARPET_STEP
	f	Lahj;	kJ	MOSS_BREAK
	f	Lahj;	kK	MOSS_FALL
	f	Lahj;	kL	MOSS_HIT
	f	Lahj;	k	AMBIENT_SOUL_SAND_VALLEY_ADDITIONS
	f	Lahj;	kM	MOSS_PLACE
	f	Lahj;	kN	MOSS_STEP
	f	Lahj;	kO	MULE_AMBIENT
	f	Lahj;	kP	MULE_ANGRY
	f	Lahj;	kQ	MULE_CHEST
	f	Lahj;	kR	MULE_DEATH
	f	Lahj;	kS	MULE_EAT
	f	Lahj;	kT	MULE_HURT
	f	Lahj;	kU	MUSIC_CREATIVE
	f	Lahj;	kV	MUSIC_CREDITS
	f	Lahj;	kW	MUSIC_DISC_11
	f	Lahj;	kX	MUSIC_DISC_13
	f	Lahj;	kY	MUSIC_DISC_BLOCKS
	f	Lahj;	kZ	MUSIC_DISC_CAT
	f	Lahj;	ka	MAGMA_CUBE_DEATH_SMALL
	f	Lahj;	kb	LODESTONE_BREAK
	f	Lahj;	kc	LODESTONE_STEP
	f	Lahj;	kd	LODESTONE_PLACE
	f	Lahj;	ke	LODESTONE_HIT
	f	Lahj;	kf	LODESTONE_FALL
	f	Lahj;	kg	LODESTONE_COMPASS_LOCK
	f	Lahj;	kh	MAGMA_CUBE_DEATH
	f	Lahj;	ki	MAGMA_CUBE_HURT
	f	Lahj;	kj	MAGMA_CUBE_HURT_SMALL
	f	Lahj;	kk	MAGMA_CUBE_JUMP
	f	Lahj;	kl	MAGMA_CUBE_SQUISH
	f	Lahj;	km	MAGMA_CUBE_SQUISH_SMALL
	f	Lahj;	kn	MEDIUM_AMETHYST_BUD_BREAK
	f	Lahj;	ko	MEDIUM_AMETHYST_BUD_PLACE
	f	Lahj;	kp	METAL_BREAK
	f	Lahj;	kq	METAL_FALL
	f	Lahj;	kr	METAL_HIT
	f	Lahj;	ks	METAL_PLACE
	f	Lahj;	kt	METAL_PRESSURE_PLATE_CLICK_OFF
	f	Lahj;	ku	METAL_PRESSURE_PLATE_CLICK_ON
	f	Lahj;	kv	METAL_STEP
	f	Lahj;	kw	MINECART_INSIDE_UNDERWATER
	f	Lahj;	kx	MINECART_INSIDE
	f	Lahj;	ky	MINECART_RIDING
	f	Lahj;	kz	MOOSHROOM_CONVERT
	f	Lahj;	lA	MUSIC_BIOME_WARPED_FOREST
	f	Lahj;	lB	MUSIC_UNDER_WATER
	f	Lahj;	lC	NETHER_BRICKS_BREAK
	f	Lahj;	lD	NETHER_BRICKS_STEP
	f	Lahj;	lE	NETHER_BRICKS_PLACE
	f	Lahj;	lF	NETHER_BRICKS_HIT
	f	Lahj;	lG	NETHER_BRICKS_FALL
	f	Lahj;	lH	NETHER_WART_BREAK
	f	Lahj;	lI	NETHER_WART_PLANTED
	f	Lahj;	lJ	STEM_BREAK
	f	Lahj;	lK	STEM_STEP
	f	Lahj;	lL	STEM_PLACE
	f	Lahj;	l	AMBIENT_SOUL_SAND_VALLEY_LOOP
	f	Lahj;	lM	STEM_HIT
	f	Lahj;	lN	STEM_FALL
	f	Lahj;	lO	NYLIUM_BREAK
	f	Lahj;	lP	NYLIUM_STEP
	f	Lahj;	lQ	NYLIUM_PLACE
	f	Lahj;	lR	NYLIUM_HIT
	f	Lahj;	lS	NYLIUM_FALL
	f	Lahj;	lT	NETHER_SPROUTS_BREAK
	f	Lahj;	lU	NETHER_SPROUTS_STEP
	f	Lahj;	lV	NETHER_SPROUTS_PLACE
	f	Lahj;	lW	NETHER_SPROUTS_HIT
	f	Lahj;	lX	NETHER_SPROUTS_FALL
	f	Lahj;	lY	FUNGUS_BREAK
	f	Lahj;	lZ	FUNGUS_STEP
	f	Lahj;	la	MUSIC_DISC_CHIRP
	f	Lahj;	lb	MUSIC_DISC_FAR
	f	Lahj;	lc	MUSIC_DISC_MALL
	f	Lahj;	ld	MUSIC_DISC_MELLOHI
	f	Lahj;	le	MUSIC_DISC_PIGSTEP
	f	Lahj;	lf	MUSIC_DISC_STAL
	f	Lahj;	lg	MUSIC_DISC_STRAD
	f	Lahj;	lh	MUSIC_DISC_WAIT
	f	Lahj;	li	MUSIC_DISC_WARD
	f	Lahj;	lj	MUSIC_DISC_OTHERSIDE
	f	Lahj;	lk	MUSIC_DRAGON
	f	Lahj;	ll	MUSIC_END
	f	Lahj;	lm	MUSIC_GAME
	f	Lahj;	ln	MUSIC_MENU
	f	Lahj;	lo	MUSIC_BIOME_BASALT_DELTAS
	f	Lahj;	lp	MUSIC_BIOME_CRIMSON_FOREST
	f	Lahj;	lq	MUSIC_BIOME_DRIPSTONE_CAVES
	f	Lahj;	lr	MUSIC_BIOME_GROVE
	f	Lahj;	ls	MUSIC_BIOME_JAGGED_PEAKS
	f	Lahj;	lt	MUSIC_BIOME_LUSH_CAVES
	f	Lahj;	lu	MUSIC_BIOME_MEADOW
	f	Lahj;	lv	MUSIC_BIOME_NETHER_WASTES
	f	Lahj;	lw	MUSIC_BIOME_FROZEN_PEAKS
	f	Lahj;	lx	MUSIC_BIOME_SNOWY_SLOPES
	f	Lahj;	ly	MUSIC_BIOME_SOUL_SAND_VALLEY
	f	Lahj;	lz	MUSIC_BIOME_STONY_PEAKS
	f	Lahj;	mA	NOTE_BLOCK_CHIME
	f	Lahj;	mB	NOTE_BLOCK_FLUTE
	f	Lahj;	mC	NOTE_BLOCK_GUITAR
	f	Lahj;	mD	NOTE_BLOCK_HARP
	f	Lahj;	mE	NOTE_BLOCK_HAT
	f	Lahj;	mF	NOTE_BLOCK_PLING
	f	Lahj;	mG	NOTE_BLOCK_SNARE
	f	Lahj;	mH	NOTE_BLOCK_XYLOPHONE
	f	Lahj;	mI	NOTE_BLOCK_IRON_XYLOPHONE
	f	Lahj;	mJ	NOTE_BLOCK_COW_BELL
	f	Lahj;	mK	NOTE_BLOCK_DIDGERIDOO
	f	Lahj;	mL	NOTE_BLOCK_BIT
	f	Lahj;	m	AMBIENT_SOUL_SAND_VALLEY_MOOD
	f	Lahj;	mM	NOTE_BLOCK_BANJO
	f	Lahj;	mN	OCELOT_HURT
	f	Lahj;	mO	OCELOT_AMBIENT
	f	Lahj;	mP	OCELOT_DEATH
	f	Lahj;	mQ	PAINTING_BREAK
	f	Lahj;	mR	PAINTING_PLACE
	f	Lahj;	mS	PANDA_PRE_SNEEZE
	f	Lahj;	mT	PANDA_SNEEZE
	f	Lahj;	mU	PANDA_AMBIENT
	f	Lahj;	mV	PANDA_DEATH
	f	Lahj;	mW	PANDA_EAT
	f	Lahj;	mX	PANDA_STEP
	f	Lahj;	mY	PANDA_CANT_BREED
	f	Lahj;	mZ	PANDA_AGGRESSIVE_AMBIENT
	f	Lahj;	ma	FUNGUS_PLACE
	f	Lahj;	mb	FUNGUS_HIT
	f	Lahj;	mc	FUNGUS_FALL
	f	Lahj;	md	WEEPING_VINES_BREAK
	f	Lahj;	me	WEEPING_VINES_STEP
	f	Lahj;	mf	WEEPING_VINES_PLACE
	f	Lahj;	mg	WEEPING_VINES_HIT
	f	Lahj;	mh	WEEPING_VINES_FALL
	f	Lahj;	mi	WART_BLOCK_BREAK
	f	Lahj;	mj	WART_BLOCK_STEP
	f	Lahj;	mk	WART_BLOCK_PLACE
	f	Lahj;	ml	WART_BLOCK_HIT
	f	Lahj;	mm	WART_BLOCK_FALL
	f	Lahj;	mn	NETHERITE_BLOCK_BREAK
	f	Lahj;	mo	NETHERITE_BLOCK_STEP
	f	Lahj;	mp	NETHERITE_BLOCK_PLACE
	f	Lahj;	mq	NETHERITE_BLOCK_HIT
	f	Lahj;	mr	NETHERITE_BLOCK_FALL
	f	Lahj;	ms	NETHERRACK_BREAK
	f	Lahj;	mt	NETHERRACK_STEP
	f	Lahj;	mu	NETHERRACK_PLACE
	f	Lahj;	mv	NETHERRACK_HIT
	f	Lahj;	mw	NETHERRACK_FALL
	f	Lahj;	mx	NOTE_BLOCK_BASEDRUM
	f	Lahj;	my	NOTE_BLOCK_BASS
	f	Lahj;	mz	NOTE_BLOCK_BELL
	f	Lahj;	nA	PARROT_IMITATE_SHULKER
	f	Lahj;	nB	PARROT_IMITATE_SILVERFISH
	f	Lahj;	nC	PARROT_IMITATE_SKELETON
	f	Lahj;	nD	PARROT_IMITATE_SLIME
	f	Lahj;	nE	PARROT_IMITATE_SPIDER
	f	Lahj;	nF	PARROT_IMITATE_STRAY
	f	Lahj;	nG	PARROT_IMITATE_VEX
	f	Lahj;	nH	PARROT_IMITATE_VINDICATOR
	f	Lahj;	nI	PARROT_IMITATE_WITCH
	f	Lahj;	nJ	PARROT_IMITATE_WITHER
	f	Lahj;	nK	PARROT_IMITATE_WITHER_SKELETON
	f	Lahj;	nL	PARROT_IMITATE_ZOGLIN
	f	Lahj;	n	AMBIENT_WARPED_FOREST_ADDITIONS
	f	Lahj;	nM	PARROT_IMITATE_ZOMBIE
	f	Lahj;	nN	PARROT_IMITATE_ZOMBIE_VILLAGER
	f	Lahj;	nO	PARROT_STEP
	f	Lahj;	nP	PHANTOM_AMBIENT
	f	Lahj;	nQ	PHANTOM_BITE
	f	Lahj;	nR	PHANTOM_DEATH
	f	Lahj;	nS	PHANTOM_FLAP
	f	Lahj;	nT	PHANTOM_HURT
	f	Lahj;	nU	PHANTOM_SWOOP
	f	Lahj;	nV	PIG_AMBIENT
	f	Lahj;	nW	PIG_DEATH
	f	Lahj;	nX	PIG_HURT
	f	Lahj;	nY	PIG_SADDLE
	f	Lahj;	nZ	PIG_STEP
	f	Lahj;	na	PANDA_WORRIED_AMBIENT
	f	Lahj;	nb	PANDA_HURT
	f	Lahj;	nc	PANDA_BITE
	f	Lahj;	nd	PARROT_AMBIENT
	f	Lahj;	ne	PARROT_DEATH
	f	Lahj;	nf	PARROT_EAT
	f	Lahj;	ng	PARROT_FLY
	f	Lahj;	nh	PARROT_HURT
	f	Lahj;	ni	PARROT_IMITATE_BLAZE
	f	Lahj;	nj	PARROT_IMITATE_CREEPER
	f	Lahj;	nk	PARROT_IMITATE_DROWNED
	f	Lahj;	nl	PARROT_IMITATE_ELDER_GUARDIAN
	f	Lahj;	nm	PARROT_IMITATE_ENDER_DRAGON
	f	Lahj;	nn	PARROT_IMITATE_ENDERMITE
	f	Lahj;	no	PARROT_IMITATE_EVOKER
	f	Lahj;	np	PARROT_IMITATE_GHAST
	f	Lahj;	nq	PARROT_IMITATE_GUARDIAN
	f	Lahj;	nr	PARROT_IMITATE_HOGLIN
	f	Lahj;	ns	PARROT_IMITATE_HUSK
	f	Lahj;	nt	PARROT_IMITATE_ILLUSIONER
	f	Lahj;	nu	PARROT_IMITATE_MAGMA_CUBE
	f	Lahj;	nv	PARROT_IMITATE_PHANTOM
	f	Lahj;	nw	PARROT_IMITATE_PIGLIN
	f	Lahj;	nx	PARROT_IMITATE_PIGLIN_BRUTE
	f	Lahj;	ny	PARROT_IMITATE_PILLAGER
	f	Lahj;	nz	PARROT_IMITATE_RAVAGER
	f	Lahj;	oA	PLAYER_ATTACK_SWEEP
	f	Lahj;	oB	PLAYER_ATTACK_WEAK
	f	Lahj;	oC	PLAYER_BIG_FALL
	f	Lahj;	oD	PLAYER_BREATH
	f	Lahj;	oE	PLAYER_BURP
	f	Lahj;	oF	PLAYER_DEATH
	f	Lahj;	oG	PLAYER_HURT
	f	Lahj;	oH	PLAYER_HURT_DROWN
	f	Lahj;	oI	PLAYER_HURT_FREEZE
	f	Lahj;	oJ	PLAYER_HURT_ON_FIRE
	f	Lahj;	oK	PLAYER_HURT_SWEET_BERRY_BUSH
	f	Lahj;	oL	PLAYER_LEVELUP
	f	Lahj;	o	AMBIENT_WARPED_FOREST_LOOP
	f	Lahj;	oM	PLAYER_SMALL_FALL
	f	Lahj;	oN	PLAYER_SPLASH
	f	Lahj;	oO	PLAYER_SPLASH_HIGH_SPEED
	f	Lahj;	oP	PLAYER_SWIM
	f	Lahj;	oQ	POLAR_BEAR_AMBIENT
	f	Lahj;	oR	POLAR_BEAR_AMBIENT_BABY
	f	Lahj;	oS	POLAR_BEAR_DEATH
	f	Lahj;	oT	POLAR_BEAR_HURT
	f	Lahj;	oU	POLAR_BEAR_STEP
	f	Lahj;	oV	POLAR_BEAR_WARNING
	f	Lahj;	oW	POLISHED_DEEPSLATE_BREAK
	f	Lahj;	oX	POLISHED_DEEPSLATE_FALL
	f	Lahj;	oY	POLISHED_DEEPSLATE_HIT
	f	Lahj;	oZ	POLISHED_DEEPSLATE_PLACE
	f	Lahj;	oa	PIGLIN_ADMIRING_ITEM
	f	Lahj;	ob	PIGLIN_AMBIENT
	f	Lahj;	oc	PIGLIN_ANGRY
	f	Lahj;	od	PIGLIN_CELEBRATE
	f	Lahj;	oe	PIGLIN_DEATH
	f	Lahj;	of	PIGLIN_JEALOUS
	f	Lahj;	og	PIGLIN_HURT
	f	Lahj;	oh	PIGLIN_RETREAT
	f	Lahj;	oi	PIGLIN_STEP
	f	Lahj;	oj	PIGLIN_CONVERTED_TO_ZOMBIFIED
	f	Lahj;	ok	PIGLIN_BRUTE_AMBIENT
	f	Lahj;	ol	PIGLIN_BRUTE_ANGRY
	f	Lahj;	om	PIGLIN_BRUTE_DEATH
	f	Lahj;	on	PIGLIN_BRUTE_HURT
	f	Lahj;	oo	PIGLIN_BRUTE_STEP
	f	Lahj;	op	PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED
	f	Lahj;	oq	PILLAGER_AMBIENT
	f	Lahj;	or	PILLAGER_CELEBRATE
	f	Lahj;	os	PILLAGER_DEATH
	f	Lahj;	ot	PILLAGER_HURT
	f	Lahj;	ou	PISTON_CONTRACT
	f	Lahj;	ov	PISTON_EXTEND
	f	Lahj;	ow	PLAYER_ATTACK_CRIT
	f	Lahj;	ox	PLAYER_ATTACK_KNOCKBACK
	f	Lahj;	oy	PLAYER_ATTACK_NODAMAGE
	f	Lahj;	oz	PLAYER_ATTACK_STRONG
	f	Lahj;	pA	RAVAGER_DEATH
	f	Lahj;	pB	RAVAGER_HURT
	f	Lahj;	pC	RAVAGER_STEP
	f	Lahj;	pD	RAVAGER_STUNNED
	f	Lahj;	pE	RAVAGER_ROAR
	f	Lahj;	pF	NETHER_GOLD_ORE_BREAK
	f	Lahj;	pG	NETHER_GOLD_ORE_FALL
	f	Lahj;	pH	NETHER_GOLD_ORE_HIT
	f	Lahj;	pI	NETHER_GOLD_ORE_PLACE
	f	Lahj;	pJ	NETHER_GOLD_ORE_STEP
	f	Lahj;	pK	NETHER_ORE_BREAK
	f	Lahj;	pL	NETHER_ORE_FALL
	f	Lahj;	p	AMBIENT_WARPED_FOREST_MOOD
	f	Lahj;	pM	NETHER_ORE_HIT
	f	Lahj;	pN	NETHER_ORE_PLACE
	f	Lahj;	pO	NETHER_ORE_STEP
	f	Lahj;	pP	REDSTONE_TORCH_BURNOUT
	f	Lahj;	pQ	RESPAWN_ANCHOR_AMBIENT
	f	Lahj;	pR	RESPAWN_ANCHOR_CHARGE
	f	Lahj;	pS	RESPAWN_ANCHOR_DEPLETE
	f	Lahj;	pT	RESPAWN_ANCHOR_SET_SPAWN
	f	Lahj;	pU	ROOTED_DIRT_BREAK
	f	Lahj;	pV	ROOTED_DIRT_FALL
	f	Lahj;	pW	ROOTED_DIRT_HIT
	f	Lahj;	pX	ROOTED_DIRT_PLACE
	f	Lahj;	pY	ROOTED_DIRT_STEP
	f	Lahj;	pZ	SALMON_AMBIENT
	f	Lahj;	pa	POLISHED_DEEPSLATE_STEP
	f	Lahj;	pb	PORTAL_AMBIENT
	f	Lahj;	pc	PORTAL_TRAVEL
	f	Lahj;	pd	PORTAL_TRIGGER
	f	Lahj;	pe	POWDER_SNOW_BREAK
	f	Lahj;	pf	POWDER_SNOW_FALL
	f	Lahj;	pg	POWDER_SNOW_HIT
	f	Lahj;	ph	POWDER_SNOW_PLACE
	f	Lahj;	pi	POWDER_SNOW_STEP
	f	Lahj;	pj	PUFFER_FISH_AMBIENT
	f	Lahj;	pk	PUFFER_FISH_BLOW_OUT
	f	Lahj;	pl	PUFFER_FISH_BLOW_UP
	f	Lahj;	pm	PUFFER_FISH_DEATH
	f	Lahj;	pn	PUFFER_FISH_FLOP
	f	Lahj;	po	PUFFER_FISH_HURT
	f	Lahj;	pp	PUFFER_FISH_STING
	f	Lahj;	pq	PUMPKIN_CARVE
	f	Lahj;	pr	RABBIT_AMBIENT
	f	Lahj;	ps	RABBIT_ATTACK
	f	Lahj;	pt	RABBIT_DEATH
	f	Lahj;	pu	RABBIT_HURT
	f	Lahj;	pv	RABBIT_JUMP
	f	Lahj;	pw	RAID_HORN
	f	Lahj;	px	RAVAGER_AMBIENT
	f	Lahj;	py	RAVAGER_ATTACK
	f	Lahj;	pz	RAVAGER_CELEBRATE
	f	Lahj;	qA	SHIELD_BREAK
	f	Lahj;	qB	SHROOMLIGHT_BREAK
	f	Lahj;	qC	SHROOMLIGHT_STEP
	f	Lahj;	qD	SHROOMLIGHT_PLACE
	f	Lahj;	qE	SHROOMLIGHT_HIT
	f	Lahj;	qF	SHROOMLIGHT_FALL
	f	Lahj;	qG	SHOVEL_FLATTEN
	f	Lahj;	qH	SHULKER_AMBIENT
	f	Lahj;	qI	SHULKER_BOX_CLOSE
	f	Lahj;	qJ	SHULKER_BOX_OPEN
	f	Lahj;	qK	SHULKER_BULLET_HIT
	f	Lahj;	qL	SHULKER_BULLET_HURT
	f	Lahj;	q	AMBIENT_UNDERWATER_ENTER
	f	Lahj;	qM	SHULKER_CLOSE
	f	Lahj;	qN	SHULKER_DEATH
	f	Lahj;	qO	SHULKER_HURT
	f	Lahj;	qP	SHULKER_HURT_CLOSED
	f	Lahj;	qQ	SHULKER_OPEN
	f	Lahj;	qR	SHULKER_SHOOT
	f	Lahj;	qS	SHULKER_TELEPORT
	f	Lahj;	qT	SILVERFISH_AMBIENT
	f	Lahj;	qU	SILVERFISH_DEATH
	f	Lahj;	qV	SILVERFISH_HURT
	f	Lahj;	qW	SILVERFISH_STEP
	f	Lahj;	qX	SKELETON_AMBIENT
	f	Lahj;	qY	SKELETON_CONVERTED_TO_STRAY
	f	Lahj;	qZ	SKELETON_DEATH
	f	Lahj;	qa	SALMON_DEATH
	f	Lahj;	qb	SALMON_FLOP
	f	Lahj;	qc	SALMON_HURT
	f	Lahj;	qd	SAND_BREAK
	f	Lahj;	qe	SAND_FALL
	f	Lahj;	qf	SAND_HIT
	f	Lahj;	qg	SAND_PLACE
	f	Lahj;	qh	SAND_STEP
	f	Lahj;	qi	SCAFFOLDING_BREAK
	f	Lahj;	qj	SCAFFOLDING_FALL
	f	Lahj;	qk	SCAFFOLDING_HIT
	f	Lahj;	ql	SCAFFOLDING_PLACE
	f	Lahj;	qm	SCAFFOLDING_STEP
	f	Lahj;	qn	SCULK_CLICKING
	f	Lahj;	qo	SCULK_CLICKING_STOP
	f	Lahj;	qp	SCULK_SENSOR_BREAK
	f	Lahj;	qq	SCULK_SENSOR_FALL
	f	Lahj;	qr	SCULK_SENSOR_HIT
	f	Lahj;	qs	SCULK_SENSOR_PLACE
	f	Lahj;	qt	SCULK_SENSOR_STEP
	f	Lahj;	qu	SHEEP_AMBIENT
	f	Lahj;	qv	SHEEP_DEATH
	f	Lahj;	qw	SHEEP_HURT
	f	Lahj;	qx	SHEEP_SHEAR
	f	Lahj;	qy	SHEEP_STEP
	f	Lahj;	qz	SHIELD_BLOCK
	f	Lahj;	rA	SMALL_DRIPLEAF_PLACE
	f	Lahj;	rB	SMALL_DRIPLEAF_STEP
	f	Lahj;	rC	SOUL_SAND_BREAK
	f	Lahj;	rD	SOUL_SAND_STEP
	f	Lahj;	rE	SOUL_SAND_PLACE
	f	Lahj;	rF	SOUL_SAND_HIT
	f	Lahj;	rG	SOUL_SAND_FALL
	f	Lahj;	rH	SOUL_SOIL_BREAK
	f	Lahj;	rI	SOUL_SOIL_STEP
	f	Lahj;	rJ	SOUL_SOIL_PLACE
	f	Lahj;	rK	SOUL_SOIL_HIT
	f	Lahj;	rL	SOUL_SOIL_FALL
	f	Lahj;	r	AMBIENT_UNDERWATER_EXIT
	f	Lahj;	rM	SOUL_ESCAPE
	f	Lahj;	rN	SPORE_BLOSSOM_BREAK
	f	Lahj;	rO	SPORE_BLOSSOM_FALL
	f	Lahj;	rP	SPORE_BLOSSOM_HIT
	f	Lahj;	rQ	SPORE_BLOSSOM_PLACE
	f	Lahj;	rR	SPORE_BLOSSOM_STEP
	f	Lahj;	rS	STRIDER_AMBIENT
	f	Lahj;	rT	STRIDER_HAPPY
	f	Lahj;	rU	STRIDER_RETREAT
	f	Lahj;	rV	STRIDER_DEATH
	f	Lahj;	rW	STRIDER_HURT
	f	Lahj;	rX	STRIDER_STEP
	f	Lahj;	rY	STRIDER_STEP_LAVA
	f	Lahj;	rZ	STRIDER_EAT
	f	Lahj;	ra	SKELETON_HORSE_AMBIENT
	f	Lahj;	rb	SKELETON_HORSE_DEATH
	f	Lahj;	rc	SKELETON_HORSE_HURT
	f	Lahj;	rd	SKELETON_HORSE_SWIM
	f	Lahj;	re	SKELETON_HORSE_AMBIENT_WATER
	f	Lahj;	rf	SKELETON_HORSE_GALLOP_WATER
	f	Lahj;	rg	SKELETON_HORSE_JUMP_WATER
	f	Lahj;	rh	SKELETON_HORSE_STEP_WATER
	f	Lahj;	ri	SKELETON_HURT
	f	Lahj;	rj	SKELETON_SHOOT
	f	Lahj;	rk	SKELETON_STEP
	f	Lahj;	rl	SLIME_ATTACK
	f	Lahj;	rm	SLIME_DEATH
	f	Lahj;	rn	SLIME_HURT
	f	Lahj;	ro	SLIME_JUMP
	f	Lahj;	rp	SLIME_SQUISH
	f	Lahj;	rq	SLIME_BLOCK_BREAK
	f	Lahj;	rr	SLIME_BLOCK_FALL
	f	Lahj;	rs	SLIME_BLOCK_HIT
	f	Lahj;	rt	SLIME_BLOCK_PLACE
	f	Lahj;	ru	SLIME_BLOCK_STEP
	f	Lahj;	rv	SMALL_AMETHYST_BUD_BREAK
	f	Lahj;	rw	SMALL_AMETHYST_BUD_PLACE
	f	Lahj;	rx	SMALL_DRIPLEAF_BREAK
	f	Lahj;	ry	SMALL_DRIPLEAF_FALL
	f	Lahj;	rz	SMALL_DRIPLEAF_HIT
	f	Lahj;	sA	SQUID_AMBIENT
	f	Lahj;	sB	SQUID_DEATH
	f	Lahj;	sC	SQUID_HURT
	f	Lahj;	sD	SQUID_SQUIRT
	f	Lahj;	sE	STONE_BREAK
	f	Lahj;	sF	STONE_BUTTON_CLICK_OFF
	f	Lahj;	sG	STONE_BUTTON_CLICK_ON
	f	Lahj;	sH	STONE_FALL
	f	Lahj;	sI	STONE_HIT
	f	Lahj;	sJ	STONE_PLACE
	f	Lahj;	sK	STONE_PRESSURE_PLATE_CLICK_OFF
	f	Lahj;	sL	STONE_PRESSURE_PLATE_CLICK_ON
	f	Lahj;	s	AMBIENT_UNDERWATER_LOOP
	f	Lahj;	sM	STONE_STEP
	f	Lahj;	sN	STRAY_AMBIENT
	f	Lahj;	sO	STRAY_DEATH
	f	Lahj;	sP	STRAY_HURT
	f	Lahj;	sQ	STRAY_STEP
	f	Lahj;	sR	SWEET_BERRY_BUSH_BREAK
	f	Lahj;	sS	SWEET_BERRY_BUSH_PLACE
	f	Lahj;	sT	SWEET_BERRY_BUSH_PICK_BERRIES
	f	Lahj;	sU	THORNS_HIT
	f	Lahj;	sV	TNT_PRIMED
	f	Lahj;	sW	TOTEM_USE
	f	Lahj;	sX	TRIDENT_HIT
	f	Lahj;	sY	TRIDENT_HIT_GROUND
	f	Lahj;	sZ	TRIDENT_RETURN
	f	Lahj;	sa	STRIDER_SADDLE
	f	Lahj;	sb	SLIME_DEATH_SMALL
	f	Lahj;	sc	SLIME_HURT_SMALL
	f	Lahj;	sd	SLIME_JUMP_SMALL
	f	Lahj;	se	SLIME_SQUISH_SMALL
	f	Lahj;	sf	SMITHING_TABLE_USE
	f	Lahj;	sg	SMOKER_SMOKE
	f	Lahj;	sh	SNOWBALL_THROW
	f	Lahj;	si	SNOW_BREAK
	f	Lahj;	sj	SNOW_FALL
	f	Lahj;	sk	SNOW_GOLEM_AMBIENT
	f	Lahj;	sl	SNOW_GOLEM_DEATH
	f	Lahj;	sm	SNOW_GOLEM_HURT
	f	Lahj;	sn	SNOW_GOLEM_SHOOT
	f	Lahj;	so	SNOW_GOLEM_SHEAR
	f	Lahj;	sp	SNOW_HIT
	f	Lahj;	sq	SNOW_PLACE
	f	Lahj;	sr	SNOW_STEP
	f	Lahj;	ss	SPIDER_AMBIENT
	f	Lahj;	st	SPIDER_DEATH
	f	Lahj;	su	SPIDER_HURT
	f	Lahj;	sv	SPIDER_STEP
	f	Lahj;	sw	SPLASH_POTION_BREAK
	f	Lahj;	sx	SPLASH_POTION_THROW
	f	Lahj;	sy	SPYGLASS_USE
	f	Lahj;	sz	SPYGLASS_STOP_USING
	f	Lahj;	tA	TURTLE_LAY_EGG
	f	Lahj;	tB	TURTLE_SHAMBLE
	f	Lahj;	tC	TURTLE_SHAMBLE_BABY
	f	Lahj;	tD	TURTLE_SWIM
	f	Lahj;	tE	UI_BUTTON_CLICK
	f	Lahj;	tF	UI_LOOM_SELECT_PATTERN
	f	Lahj;	tG	UI_LOOM_TAKE_RESULT
	f	Lahj;	tH	UI_CARTOGRAPHY_TABLE_TAKE_RESULT
	f	Lahj;	tI	UI_STONECUTTER_TAKE_RESULT
	f	Lahj;	tJ	UI_STONECUTTER_SELECT_RECIPE
	f	Lahj;	tK	UI_TOAST_CHALLENGE_COMPLETE
	f	Lahj;	tL	UI_TOAST_IN
	f	Lahj;	t	AMBIENT_UNDERWATER_LOOP_ADDITIONS
	f	Lahj;	tM	UI_TOAST_OUT
	f	Lahj;	tN	VEX_AMBIENT
	f	Lahj;	tO	VEX_CHARGE
	f	Lahj;	tP	VEX_DEATH
	f	Lahj;	tQ	VEX_HURT
	f	Lahj;	tR	VILLAGER_AMBIENT
	f	Lahj;	tS	VILLAGER_CELEBRATE
	f	Lahj;	tT	VILLAGER_DEATH
	f	Lahj;	tU	VILLAGER_HURT
	f	Lahj;	tV	VILLAGER_NO
	f	Lahj;	tW	VILLAGER_TRADE
	f	Lahj;	tX	VILLAGER_YES
	f	Lahj;	tY	VILLAGER_WORK_ARMORER
	f	Lahj;	tZ	VILLAGER_WORK_BUTCHER
	f	Lahj;	ta	TRIDENT_RIPTIDE_1
	f	Lahj;	tb	TRIDENT_RIPTIDE_2
	f	Lahj;	tc	TRIDENT_RIPTIDE_3
	f	Lahj;	td	TRIDENT_THROW
	f	Lahj;	te	TRIDENT_THUNDER
	f	Lahj;	tf	TRIPWIRE_ATTACH
	f	Lahj;	tg	TRIPWIRE_CLICK_OFF
	f	Lahj;	th	TRIPWIRE_CLICK_ON
	f	Lahj;	ti	TRIPWIRE_DETACH
	f	Lahj;	tj	TROPICAL_FISH_AMBIENT
	f	Lahj;	tk	TROPICAL_FISH_DEATH
	f	Lahj;	tl	TROPICAL_FISH_FLOP
	f	Lahj;	tm	TROPICAL_FISH_HURT
	f	Lahj;	tn	TUFF_BREAK
	f	Lahj;	to	TUFF_STEP
	f	Lahj;	tp	TUFF_PLACE
	f	Lahj;	tq	TUFF_HIT
	f	Lahj;	tr	TUFF_FALL
	f	Lahj;	ts	TURTLE_AMBIENT_LAND
	f	Lahj;	tt	TURTLE_DEATH
	f	Lahj;	tu	TURTLE_DEATH_BABY
	f	Lahj;	tv	TURTLE_EGG_BREAK
	f	Lahj;	tw	TURTLE_EGG_CRACK
	f	Lahj;	tx	TURTLE_EGG_HATCH
	f	Lahj;	ty	TURTLE_HURT
	f	Lahj;	tz	TURTLE_HURT_BABY
	f	Lahj;	uA	WANDERING_TRADER_HURT
	f	Lahj;	uB	WANDERING_TRADER_NO
	f	Lahj;	uC	WANDERING_TRADER_REAPPEARED
	f	Lahj;	uD	WANDERING_TRADER_TRADE
	f	Lahj;	uE	WANDERING_TRADER_YES
	f	Lahj;	uF	WATER_AMBIENT
	f	Lahj;	uG	WEATHER_RAIN
	f	Lahj;	uH	WEATHER_RAIN_ABOVE
	f	Lahj;	uI	WET_GRASS_BREAK
	f	Lahj;	uJ	WET_GRASS_FALL
	f	Lahj;	uK	WET_GRASS_HIT
	f	Lahj;	uL	WET_GRASS_PLACE
	f	Lahj;	u	AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE
	f	Lahj;	uM	WET_GRASS_STEP
	f	Lahj;	uN	WITCH_AMBIENT
	f	Lahj;	uO	WITCH_CELEBRATE
	f	Lahj;	uP	WITCH_DEATH
	f	Lahj;	uQ	WITCH_DRINK
	f	Lahj;	uR	WITCH_HURT
	f	Lahj;	uS	WITCH_THROW
	f	Lahj;	uT	WITHER_AMBIENT
	f	Lahj;	uU	WITHER_BREAK_BLOCK
	f	Lahj;	uV	WITHER_DEATH
	f	Lahj;	uW	WITHER_HURT
	f	Lahj;	uX	WITHER_SHOOT
	f	Lahj;	uY	WITHER_SKELETON_AMBIENT
	f	Lahj;	uZ	WITHER_SKELETON_DEATH
	f	Lahj;	ua	VILLAGER_WORK_CARTOGRAPHER
	f	Lahj;	ub	VILLAGER_WORK_CLERIC
	f	Lahj;	uc	VILLAGER_WORK_FARMER
	f	Lahj;	ud	VILLAGER_WORK_FISHERMAN
	f	Lahj;	ue	VILLAGER_WORK_FLETCHER
	f	Lahj;	uf	VILLAGER_WORK_LEATHERWORKER
	f	Lahj;	ug	VILLAGER_WORK_LIBRARIAN
	f	Lahj;	uh	VILLAGER_WORK_MASON
	f	Lahj;	ui	VILLAGER_WORK_SHEPHERD
	f	Lahj;	uj	VILLAGER_WORK_TOOLSMITH
	f	Lahj;	uk	VILLAGER_WORK_WEAPONSMITH
	f	Lahj;	ul	VINDICATOR_AMBIENT
	f	Lahj;	um	VINDICATOR_CELEBRATE
	f	Lahj;	un	VINDICATOR_DEATH
	f	Lahj;	uo	VINDICATOR_HURT
	f	Lahj;	up	VINE_BREAK
	f	Lahj;	uq	VINE_FALL
	f	Lahj;	ur	VINE_HIT
	f	Lahj;	us	VINE_PLACE
	f	Lahj;	ut	VINE_STEP
	f	Lahj;	uu	LILY_PAD_PLACE
	f	Lahj;	uv	WANDERING_TRADER_AMBIENT
	f	Lahj;	uw	WANDERING_TRADER_DEATH
	f	Lahj;	ux	WANDERING_TRADER_DISAPPEARED
	f	Lahj;	uy	WANDERING_TRADER_DRINK_MILK
	f	Lahj;	uz	WANDERING_TRADER_DRINK_POTION
	f	Lahj;	vA	WOOL_FALL
	f	Lahj;	vB	WOOL_HIT
	f	Lahj;	vC	WOOL_PLACE
	f	Lahj;	vD	WOOL_STEP
	f	Lahj;	vE	ZOGLIN_AMBIENT
	f	Lahj;	vF	ZOGLIN_ANGRY
	f	Lahj;	vG	ZOGLIN_ATTACK
	f	Lahj;	vH	ZOGLIN_DEATH
	f	Lahj;	vI	ZOGLIN_HURT
	f	Lahj;	vJ	ZOGLIN_STEP
	f	Lahj;	vK	ZOMBIE_AMBIENT
	f	Lahj;	vL	ZOMBIE_ATTACK_WOODEN_DOOR
	f	Lahj;	v	AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE
	f	Lahj;	vM	ZOMBIE_ATTACK_IRON_DOOR
	f	Lahj;	vN	ZOMBIE_BREAK_WOODEN_DOOR
	f	Lahj;	vO	ZOMBIE_CONVERTED_TO_DROWNED
	f	Lahj;	vP	ZOMBIE_DEATH
	f	Lahj;	vQ	ZOMBIE_DESTROY_EGG
	f	Lahj;	vR	ZOMBIE_HORSE_AMBIENT
	f	Lahj;	vS	ZOMBIE_HORSE_DEATH
	f	Lahj;	vT	ZOMBIE_HORSE_HURT
	f	Lahj;	vU	ZOMBIE_HURT
	f	Lahj;	vV	ZOMBIE_INFECT
	f	Lahj;	vW	ZOMBIFIED_PIGLIN_AMBIENT
	f	Lahj;	vX	ZOMBIFIED_PIGLIN_ANGRY
	f	Lahj;	vY	ZOMBIFIED_PIGLIN_DEATH
	f	Lahj;	vZ	ZOMBIFIED_PIGLIN_HURT
	f	Lahj;	va	WITHER_SKELETON_HURT
	f	Lahj;	vb	WITHER_SKELETON_STEP
	f	Lahj;	vc	WITHER_SPAWN
	f	Lahj;	vd	WOLF_AMBIENT
	f	Lahj;	ve	WOLF_DEATH
	f	Lahj;	vf	WOLF_GROWL
	f	Lahj;	vg	WOLF_HOWL
	f	Lahj;	vh	WOLF_HURT
	f	Lahj;	vi	WOLF_PANT
	f	Lahj;	vj	WOLF_SHAKE
	f	Lahj;	vk	WOLF_STEP
	f	Lahj;	vl	WOLF_WHINE
	f	Lahj;	vm	WOODEN_DOOR_CLOSE
	f	Lahj;	vn	WOODEN_DOOR_OPEN
	f	Lahj;	vo	WOODEN_TRAPDOOR_CLOSE
	f	Lahj;	vp	WOODEN_TRAPDOOR_OPEN
	f	Lahj;	vq	WOOD_BREAK
	f	Lahj;	vr	WOODEN_BUTTON_CLICK_OFF
	f	Lahj;	vs	WOODEN_BUTTON_CLICK_ON
	f	Lahj;	vt	WOOD_FALL
	f	Lahj;	vu	WOOD_HIT
	f	Lahj;	vv	WOOD_PLACE
	f	Lahj;	vw	WOODEN_PRESSURE_PLATE_CLICK_OFF
	f	Lahj;	vx	WOODEN_PRESSURE_PLATE_CLICK_ON
	f	Lahj;	vy	WOOD_STEP
	f	Lahj;	vz	WOOL_BREAK
	f	Lahj;	w	AMETHYST_BLOCK_BREAK
	f	Lahj;	wa	ZOMBIE_STEP
	f	Lahj;	wb	ZOMBIE_VILLAGER_AMBIENT
	f	Lahj;	wc	ZOMBIE_VILLAGER_CONVERTED
	f	Lahj;	wd	ZOMBIE_VILLAGER_CURE
	f	Lahj;	we	ZOMBIE_VILLAGER_DEATH
	f	Lahj;	wf	ZOMBIE_VILLAGER_HURT
	f	Lahj;	wg	ZOMBIE_VILLAGER_STEP
	f	Lahj;	x	AMETHYST_BLOCK_CHIME
	f	Lahj;	y	AMETHYST_BLOCK_FALL
	f	Lahj;	z	AMETHYST_BLOCK_HIT
c	ahl	net/minecraft/sounds/SoundSource
	m	()Ljava/lang/String;	a	getName
	m	()[Lahl;	b	$values
	f	Lahl;	a	MASTER
	f	Lahl;	b	MUSIC
	f	Lahl;	c	RECORDS
	f	Lahl;	d	WEATHER
	f	Lahl;	e	BLOCKS
	f	Lahl;	f	HOSTILE
	f	Lahl;	g	NEUTRAL
	f	Lahl;	h	PLAYERS
	f	Lahl;	i	AMBIENT
	f	Lahl;	j	VOICE
	f	Ljava/lang/String;	k	name
	f	[Lahl;	l	$VALUES
c	ahm	net/minecraft/sounds/package-info
c	ahn	net/minecraft/stats/RecipeBook
	m	()Laho;	a	getBookSettings
	m	(Lahn;)V	a	copyOverData
	m	(Laho;)V	a	setBookSettings
	m	(Lbry;)Z	a	isFiltering
	m	(Lbrz;)Z	a	isOpen
	m	(Lbrz;Z)V	a	setOpen
	m	(Lbrz;ZZ)V	a	setBookSetting
	m	(Lbxo;)V	a	add
	m	(Lyt;)V	a	add
	m	(Lbrz;)Z	b	isFiltering
	m	(Lbrz;Z)V	b	setFiltering
	m	(Lbxo;)Z	b	contains
	m	(Lyt;)Z	b	contains
	m	(Lbxo;)V	c	remove
	m	(Lyt;)V	c	remove
	m	(Lbxo;)Z	d	willHighlight
	m	(Lyt;)V	d	addHighlight
	m	(Lbxo;)V	e	removeHighlight
	m	(Lbxo;)V	f	addHighlight
	f	Ljava/util/Set;	a	known
	f	Ljava/util/Set;	b	highlight
	f	Laho;	c	bookSettings
c	aho	net/minecraft/stats/RecipeBookSettings
	m	()Laho;	a	copy
	m	(Laho;)V	a	replaceFrom
	m	(Lbrz;)Z	a	isOpen
	m	(Lbrz;Z)V	a	setOpen
	m	(Ljava/util/EnumMap;)V	a	lambda$new$0
	m	(Lok;)Laho;	a	read
	m	(Lok;Lbrz;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$write$2
	m	(Lok;Ljava/util/Map;Lbrz;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$read$1
	m	(Lpy;)Laho;	a	read
	m	(Lbrz;)Z	b	isFiltering
	m	(Lbrz;Z)V	b	setFiltering
	m	(Lok;)V	b	write
	m	(Lpy;)V	b	write
	f	Ljava/util/Map;	a	TAG_FIELDS
	f	Ljava/util/Map;	b	states
c	aho$a	net/minecraft/stats/RecipeBookSettings$TypeSettings
	m	()Laho$a;	a	copy
	f	Z	a	open
	f	Z	b	filtering
c	ahp	net/minecraft/stats/ServerRecipeBook
	m	(Ladx;)V	a	sendInitialRecipeBook
	m	(Ljava/util/Collection;Ladx;)I	a	addRecipes
	m	(Lok;Lbxp;)V	a	fromNbt
	m	(Loq;Ljava/util/function/Consumer;Lbxp;)V	a	loadRecipes
	m	(Ltl$a;Ladx;Ljava/util/List;)V	a	sendRecipes
	m	()Lok;	b	toNbt
	m	(Ljava/util/Collection;Ladx;)I	b	removeRecipes
	f	Ljava/lang/String;	c	RECIPE_BOOK_TAG
	f	Lorg/slf4j/Logger;	d	LOGGER
c	ahq	net/minecraft/stats/ServerStatsCounter
	m	()V	a	save
	m	(Ladx;)V	a	sendStats
	m	(Laht;)Lcom/google/gson/JsonObject;	a	lambda$toJson$4
	m	(Laht;Ljava/lang/String;)Ljava/util/Optional;	a	getStat
	m	(Lboj;Lahr;I)V	a	setValue
	m	(Lcom/google/gson/JsonObject;)Lok;	a	fromJson
	m	(Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V	a	parseLocal
	m	(Ljava/lang/String;)V	a	lambda$parseLocal$3
	m	(Lok;Ljava/lang/String;Lahr;)V	a	lambda$parseLocal$0
	m	(Lok;Ljava/lang/String;Laht;)V	a	lambda$parseLocal$2
	m	()Ljava/lang/String;	b	toJson
	m	(Lahr;)Lyt;	b	getKey
	m	(Ljava/lang/String;)V	b	lambda$parseLocal$1
	m	()V	c	markAllDirty
	m	()Ljava/util/Set;	d	getDirty
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	f	Ljava/io/File;	d	file
	f	Ljava/util/Set;	e	dirty
c	ahr	net/minecraft/stats/Stat
	m	()Laht;	a	getType
	m	(I)Ljava/lang/String;	a	format
	m	(Laht;Ljava/lang/Object;)Ljava/lang/String;	a	buildName
	m	(Lyt;)Ljava/lang/String;	a	locationToKey
	m	()Ljava/lang/Object;	b	getValue
	f	Lahs;	n	formatter
	f	Ljava/lang/Object;	o	value
	f	Laht;	p	type
c	ahs	net/minecraft/stats/StatFormatter
	m	(I)Ljava/lang/String;	a	lambda$static$3
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$0
	m	(I)Ljava/lang/String;	b	lambda$static$2
	m	(I)Ljava/lang/String;	c	lambda$static$1
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	Lahs;	b	DEFAULT
	f	Lahs;	c	DIVIDE_BY_TEN
	f	Lahs;	d	DISTANCE
	f	Lahs;	e	TIME
c	aht	net/minecraft/stats/StatType
	m	()Lhb;	a	getRegistry
	m	(Lahs;Ljava/lang/Object;)Lahr;	a	lambda$get$0
	m	(Ljava/lang/Object;)Z	a	contains
	m	(Ljava/lang/Object;Lahs;)Lahr;	a	get
	m	()Ljava/lang/String;	b	getTranslationKey
	m	(Ljava/lang/Object;)Lahr;	b	get
	m	()Lqk;	c	getDisplayName
	f	Lhb;	a	registry
	f	Ljava/util/Map;	b	map
	f	Lqk;	c	displayName
c	ahu	net/minecraft/stats/Stats
	m	(Ljava/lang/String;Lahs;)Lyt;	a	makeCustomStat
	m	(Ljava/lang/String;Lhb;)Laht;	a	makeRegistryStatType
	f	Lyt;	A	HORSE_ONE_CM
	f	Lyt;	B	AVIATE_ONE_CM
	f	Lyt;	C	SWIM_ONE_CM
	f	Lyt;	D	STRIDER_ONE_CM
	f	Lyt;	E	JUMP
	f	Lyt;	F	DROP
	f	Lyt;	G	DAMAGE_DEALT
	f	Lyt;	H	DAMAGE_DEALT_ABSORBED
	f	Lyt;	I	DAMAGE_DEALT_RESISTED
	f	Lyt;	J	DAMAGE_TAKEN
	f	Lyt;	K	DAMAGE_BLOCKED_BY_SHIELD
	f	Lyt;	L	DAMAGE_ABSORBED
	f	Lyt;	M	DAMAGE_RESISTED
	f	Lyt;	N	DEATHS
	f	Lyt;	O	MOB_KILLS
	f	Lyt;	P	ANIMALS_BRED
	f	Lyt;	Q	PLAYER_KILLS
	f	Lyt;	R	FISH_CAUGHT
	f	Lyt;	S	TALKED_TO_VILLAGER
	f	Lyt;	T	TRADED_WITH_VILLAGER
	f	Lyt;	U	EAT_CAKE_SLICE
	f	Lyt;	V	FILL_CAULDRON
	f	Lyt;	W	USE_CAULDRON
	f	Lyt;	X	CLEAN_ARMOR
	f	Lyt;	Y	CLEAN_BANNER
	f	Lyt;	Z	CLEAN_SHULKER_BOX
	f	Lyt;	aA	RAID_TRIGGER
	f	Lyt;	aB	RAID_WIN
	f	Lyt;	aC	INTERACT_WITH_ANVIL
	f	Lyt;	aD	INTERACT_WITH_GRINDSTONE
	f	Lyt;	aE	TARGET_HIT
	f	Lyt;	aF	INTERACT_WITH_SMITHING_TABLE
	f	Laht;	a	BLOCK_MINED
	f	Lyt;	aa	INTERACT_WITH_BREWINGSTAND
	f	Lyt;	ab	INTERACT_WITH_BEACON
	f	Lyt;	ac	INSPECT_DROPPER
	f	Lyt;	ad	INSPECT_HOPPER
	f	Lyt;	ae	INSPECT_DISPENSER
	f	Lyt;	af	PLAY_NOTEBLOCK
	f	Lyt;	ag	TUNE_NOTEBLOCK
	f	Lyt;	ah	POT_FLOWER
	f	Lyt;	ai	TRIGGER_TRAPPED_CHEST
	f	Lyt;	aj	OPEN_ENDERCHEST
	f	Lyt;	ak	ENCHANT_ITEM
	f	Lyt;	al	PLAY_RECORD
	f	Lyt;	am	INTERACT_WITH_FURNACE
	f	Lyt;	an	INTERACT_WITH_CRAFTING_TABLE
	f	Lyt;	ao	OPEN_CHEST
	f	Lyt;	ap	SLEEP_IN_BED
	f	Lyt;	aq	OPEN_SHULKER_BOX
	f	Lyt;	ar	OPEN_BARREL
	f	Lyt;	as	INTERACT_WITH_BLAST_FURNACE
	f	Lyt;	at	INTERACT_WITH_SMOKER
	f	Lyt;	au	INTERACT_WITH_LECTERN
	f	Lyt;	av	INTERACT_WITH_CAMPFIRE
	f	Lyt;	aw	INTERACT_WITH_CARTOGRAPHY_TABLE
	f	Lyt;	ax	INTERACT_WITH_LOOM
	f	Lyt;	ay	INTERACT_WITH_STONECUTTER
	f	Lyt;	az	BELL_RING
	f	Laht;	b	ITEM_CRAFTED
	f	Laht;	c	ITEM_USED
	f	Laht;	d	ITEM_BROKEN
	f	Laht;	e	ITEM_PICKED_UP
	f	Laht;	f	ITEM_DROPPED
	f	Laht;	g	ENTITY_KILLED
	f	Laht;	h	ENTITY_KILLED_BY
	f	Laht;	i	CUSTOM
	f	Lyt;	j	LEAVE_GAME
	f	Lyt;	k	PLAY_TIME
	f	Lyt;	l	TOTAL_WORLD_TIME
	f	Lyt;	m	TIME_SINCE_DEATH
	f	Lyt;	n	TIME_SINCE_REST
	f	Lyt;	o	CROUCH_TIME
	f	Lyt;	p	WALK_ONE_CM
	f	Lyt;	q	CROUCH_ONE_CM
	f	Lyt;	r	SPRINT_ONE_CM
	f	Lyt;	s	WALK_ON_WATER_ONE_CM
	f	Lyt;	t	FALL_ONE_CM
	f	Lyt;	u	CLIMB_ONE_CM
	f	Lyt;	v	FLY_ONE_CM
	f	Lyt;	w	WALK_UNDER_WATER_ONE_CM
	f	Lyt;	x	MINECART_ONE_CM
	f	Lyt;	y	BOAT_ONE_CM
	f	Lyt;	z	PIG_ONE_CM
c	ahv	net/minecraft/stats/StatsCounter
	m	(Lahr;)I	a	getValue
	m	(Laht;Ljava/lang/Object;)I	a	getValue
	m	(Lboj;Lahr;I)V	a	setValue
	m	(Lboj;Lahr;I)V	b	increment
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	stats
c	ahw	net/minecraft/stats/package-info
c	ahx	net/minecraft/tags/BiomeTags
	m	(Ljava/lang/String;)Laif;	a	create
	f	Laif;	A	HAS_RUINED_PORTAL_STANDARD
	f	Laif;	B	HAS_SHIPWRECK_BEACHED
	f	Laif;	C	HAS_SHIPWRECK
	f	Laif;	D	HAS_SWAMP_HUT
	f	Laif;	E	HAS_VILLAGE_DESERT
	f	Laif;	F	HAS_VILLAGE_PLAINS
	f	Laif;	G	HAS_VILLAGE_SAVANNA
	f	Laif;	H	HAS_VILLAGE_SNOWY
	f	Laif;	I	HAS_VILLAGE_TAIGA
	f	Laif;	J	HAS_WOODLAND_MANSION
	f	Laif;	K	HAS_STRONGHOLD
	f	Laif;	L	HAS_NETHER_FORTRESS
	f	Laif;	M	HAS_NETHER_FOSSIL
	f	Laif;	N	HAS_BASTION_REMNANT
	f	Laif;	O	HAS_RUINED_PORTAL_NETHER
	f	Laif;	P	HAS_END_CITY
	f	Laif;	a	IS_DEEP_OCEAN
	f	Laif;	b	IS_OCEAN
	f	Laif;	c	IS_BEACH
	f	Laif;	d	IS_RIVER
	f	Laif;	e	IS_MOUNTAIN
	f	Laif;	f	IS_BADLANDS
	f	Laif;	g	IS_HILL
	f	Laif;	h	IS_TAIGA
	f	Laif;	i	IS_JUNGLE
	f	Laif;	j	IS_FOREST
	f	Laif;	k	IS_NETHER
	f	Laif;	l	HAS_BURIED_TREASURE
	f	Laif;	m	HAS_DESERT_PYRAMID
	f	Laif;	n	HAS_IGLOO
	f	Laif;	o	HAS_JUNGLE_TEMPLE
	f	Laif;	p	HAS_MINESHAFT
	f	Laif;	q	HAS_MINESHAFT_MESA
	f	Laif;	r	HAS_OCEAN_MONUMENT
	f	Laif;	s	HAS_OCEAN_RUIN_COLD
	f	Laif;	t	HAS_OCEAN_RUIN_WARM
	f	Laif;	u	HAS_PILLAGER_OUTPOST
	f	Laif;	v	HAS_RUINED_PORTAL_DESERT
	f	Laif;	w	HAS_RUINED_PORTAL_JUNGLE
	f	Laif;	x	HAS_RUINED_PORTAL_OCEAN
	f	Laif;	y	HAS_RUINED_PORTAL_SWAMP
	f	Laif;	z	HAS_RUINED_PORTAL_MOUNTAIN
c	ahy	net/minecraft/tags/BlockTags
	m	(Ljava/lang/String;)Laif;	a	create
	f	Laif;	A	BANNERS
	f	Laif;	B	SAND
	f	Laif;	C	STAIRS
	f	Laif;	D	SLABS
	f	Laif;	E	WALLS
	f	Laif;	F	ANVIL
	f	Laif;	G	RAILS
	f	Laif;	H	LEAVES
	f	Laif;	I	TRAPDOORS
	f	Laif;	J	SMALL_FLOWERS
	f	Laif;	K	BEDS
	f	Laif;	L	FENCES
	f	Laif;	M	TALL_FLOWERS
	f	Laif;	N	FLOWERS
	f	Laif;	O	PIGLIN_REPELLENTS
	f	Laif;	P	GOLD_ORES
	f	Laif;	Q	IRON_ORES
	f	Laif;	R	DIAMOND_ORES
	f	Laif;	S	REDSTONE_ORES
	f	Laif;	T	LAPIS_ORES
	f	Laif;	U	COAL_ORES
	f	Laif;	V	EMERALD_ORES
	f	Laif;	W	COPPER_ORES
	f	Laif;	X	NON_FLAMMABLE_WOOD
	f	Laif;	Y	CANDLES
	f	Laif;	Z	DIRT
	f	Laif;	aA	SOUL_SPEED_BLOCKS
	f	Laif;	aB	WALL_POST_OVERRIDE
	f	Laif;	aC	CLIMBABLE
	f	Laif;	aD	FALL_DAMAGE_RESETTING
	f	Laif;	aE	SHULKER_BOXES
	f	Laif;	aF	HOGLIN_REPELLENTS
	f	Laif;	aG	SOUL_FIRE_BASE_BLOCKS
	f	Laif;	aH	STRIDER_WARM_BLOCKS
	f	Laif;	aI	CAMPFIRES
	f	Laif;	aJ	GUARDED_BY_PIGLINS
	f	Laif;	aK	PREVENT_MOB_SPAWNING_INSIDE
	f	Laif;	aL	FENCE_GATES
	f	Laif;	a	WOOL
	f	Laif;	aM	UNSTABLE_BOTTOM_CENTER
	f	Laif;	aN	MUSHROOM_GROW_BLOCK
	f	Laif;	aO	INFINIBURN_OVERWORLD
	f	Laif;	aP	INFINIBURN_NETHER
	f	Laif;	aQ	INFINIBURN_END
	f	Laif;	aR	BASE_STONE_OVERWORLD
	f	Laif;	aS	STONE_ORE_REPLACEABLES
	f	Laif;	aT	DEEPSLATE_ORE_REPLACEABLES
	f	Laif;	aU	BASE_STONE_NETHER
	f	Laif;	aV	CANDLE_CAKES
	f	Laif;	aW	CAULDRONS
	f	Laif;	aX	CRYSTAL_SOUND_BLOCKS
	f	Laif;	aY	INSIDE_STEP_SOUND_BLOCKS
	f	Laif;	aZ	OCCLUDES_VIBRATION_SIGNALS
	f	Laif;	aa	TERRACOTTA
	f	Laif;	ab	FLOWER_POTS
	f	Laif;	ac	ENDERMAN_HOLDABLE
	f	Laif;	ad	ICE
	f	Laif;	ae	VALID_SPAWN
	f	Laif;	af	IMPERMEABLE
	f	Laif;	ag	UNDERWATER_BONEMEALS
	f	Laif;	ah	CORAL_BLOCKS
	f	Laif;	ai	WALL_CORALS
	f	Laif;	aj	CORAL_PLANTS
	f	Laif;	ak	CORALS
	f	Laif;	al	BAMBOO_PLANTABLE_ON
	f	Laif;	am	STANDING_SIGNS
	f	Laif;	an	WALL_SIGNS
	f	Laif;	ao	SIGNS
	f	Laif;	ap	DRAGON_IMMUNE
	f	Laif;	aq	WITHER_IMMUNE
	f	Laif;	ar	WITHER_SUMMON_BASE_BLOCKS
	f	Laif;	as	BEEHIVES
	f	Laif;	at	CROPS
	f	Laif;	au	BEE_GROWABLES
	f	Laif;	av	PORTALS
	f	Laif;	aw	FIRE
	f	Laif;	ax	NYLIUM
	f	Laif;	ay	WART_BLOCKS
	f	Laif;	az	BEACON_BASE_BLOCKS
	f	Laif;	bA	WOLVES_SPAWNABLE_ON
	f	Laif;	bB	AZALEA_GROWS_ON
	f	Laif;	bC	REPLACEABLE_PLANTS
	f	Laif;	b	PLANKS
	f	Laif;	ba	DRIPSTONE_REPLACEABLE
	f	Laif;	bb	CAVE_VINES
	f	Laif;	bc	MOSS_REPLACEABLE
	f	Laif;	bd	LUSH_GROUND_REPLACEABLE
	f	Laif;	be	AZALEA_ROOT_REPLACEABLE
	f	Laif;	bf	SMALL_DRIPLEAF_PLACEABLE
	f	Laif;	bg	BIG_DRIPLEAF_PLACEABLE
	f	Laif;	bh	SNOW
	f	Laif;	bi	MINEABLE_WITH_AXE
	f	Laif;	bj	MINEABLE_WITH_HOE
	f	Laif;	bk	MINEABLE_WITH_PICKAXE
	f	Laif;	bl	MINEABLE_WITH_SHOVEL
	f	Laif;	bm	NEEDS_DIAMOND_TOOL
	f	Laif;	bn	NEEDS_IRON_TOOL
	f	Laif;	bo	NEEDS_STONE_TOOL
	f	Laif;	bp	FEATURES_CANNOT_REPLACE
	f	Laif;	bq	LAVA_POOL_STONE_CANNOT_REPLACE
	f	Laif;	br	GEODE_INVALID_BLOCKS
	f	Laif;	bs	ANIMALS_SPAWNABLE_ON
	f	Laif;	bt	AXOLOTLS_SPAWNABLE_ON
	f	Laif;	bu	GOATS_SPAWNABLE_ON
	f	Laif;	bv	MOOSHROOMS_SPAWNABLE_ON
	f	Laif;	bw	PARROTS_SPAWNABLE_ON
	f	Laif;	bx	POLAR_BEARS_SPAWNABLE_ON_IN_FROZEN_OCEAN
	f	Laif;	by	RABBITS_SPAWNABLE_ON
	f	Laif;	bz	FOXES_SPAWNABLE_ON
	f	Laif;	c	STONE_BRICKS
	f	Laif;	d	WOODEN_BUTTONS
	f	Laif;	e	BUTTONS
	f	Laif;	f	CARPETS
	f	Laif;	g	WOODEN_DOORS
	f	Laif;	h	WOODEN_STAIRS
	f	Laif;	i	WOODEN_SLABS
	f	Laif;	j	WOODEN_FENCES
	f	Laif;	k	PRESSURE_PLATES
	f	Laif;	l	WOODEN_PRESSURE_PLATES
	f	Laif;	m	STONE_PRESSURE_PLATES
	f	Laif;	n	WOODEN_TRAPDOORS
	f	Laif;	o	DOORS
	f	Laif;	p	SAPLINGS
	f	Laif;	q	LOGS_THAT_BURN
	f	Laif;	r	LOGS
	f	Laif;	s	DARK_OAK_LOGS
	f	Laif;	t	OAK_LOGS
	f	Laif;	u	BIRCH_LOGS
	f	Laif;	v	ACACIA_LOGS
	f	Laif;	w	JUNGLE_LOGS
	f	Laif;	x	SPRUCE_LOGS
	f	Laif;	y	CRIMSON_STEMS
	f	Laif;	z	WARPED_STEMS
c	ahz	net/minecraft/tags/ConfiguredStructureTags
	m	(Ljava/lang/String;)Laif;	a	create
	f	Laif;	a	EYE_OF_ENDER_LOCATED
	f	Laif;	b	DOLPHIN_LOCATED
	f	Laif;	c	ON_WOODLAND_EXPLORER_MAPS
	f	Laif;	d	ON_OCEAN_EXPLORER_MAPS
	f	Laif;	e	ON_TREASURE_MAPS
	f	Laif;	f	VILLAGE
	f	Laif;	g	MINESHAFT
	f	Laif;	h	SHIPWRECK
	f	Laif;	i	RUINED_PORTAL
	f	Laif;	j	OCEAN_RUIN
c	aia	net/minecraft/tags/EntityTypeTags
	m	(Ljava/lang/String;)Laif;	a	create
	f	Laif;	a	SKELETONS
	f	Laif;	b	RAIDERS
	f	Laif;	c	BEEHIVE_INHABITORS
	f	Laif;	d	ARROWS
	f	Laif;	e	IMPACT_PROJECTILES
	f	Laif;	f	POWDER_SNOW_WALKABLE_MOBS
	f	Laif;	g	AXOLOTL_ALWAYS_HOSTILES
	f	Laif;	h	AXOLOTL_HUNT_TARGETS
	f	Laif;	i	FREEZE_IMMUNE_ENTITY_TYPES
	f	Laif;	j	FREEZE_HURTS_EXTRA_TYPES
c	aib	net/minecraft/tags/FluidTags
	m	(Ljava/lang/String;)Laif;	a	create
	f	Laif;	a	WATER
	f	Laif;	b	LAVA
c	aic	net/minecraft/tags/GameEventTags
	m	(Ljava/lang/String;)Laif;	a	create
	f	Laif;	a	VIBRATIONS
	f	Laif;	b	IGNORE_VIBRATIONS_SNEAKING
c	aid	net/minecraft/tags/ItemTags
	m	(Ljava/lang/String;)Laif;	a	bind
	f	Laif;	A	STAIRS
	f	Laif;	B	SLABS
	f	Laif;	C	WALLS
	f	Laif;	D	ANVIL
	f	Laif;	E	RAILS
	f	Laif;	F	LEAVES
	f	Laif;	G	TRAPDOORS
	f	Laif;	H	SMALL_FLOWERS
	f	Laif;	I	BEDS
	f	Laif;	J	FENCES
	f	Laif;	K	TALL_FLOWERS
	f	Laif;	L	FLOWERS
	f	Laif;	M	PIGLIN_REPELLENTS
	f	Laif;	N	PIGLIN_LOVED
	f	Laif;	O	IGNORED_BY_PIGLIN_BABIES
	f	Laif;	P	PIGLIN_FOOD
	f	Laif;	Q	FOX_FOOD
	f	Laif;	R	GOLD_ORES
	f	Laif;	S	IRON_ORES
	f	Laif;	T	DIAMOND_ORES
	f	Laif;	U	REDSTONE_ORES
	f	Laif;	V	LAPIS_ORES
	f	Laif;	W	COAL_ORES
	f	Laif;	X	EMERALD_ORES
	f	Laif;	Y	COPPER_ORES
	f	Laif;	Z	NON_FLAMMABLE_WOOD
	f	Laif;	a	WOOL
	f	Laif;	aa	SOUL_FIRE_BASE_BLOCKS
	f	Laif;	ab	CANDLES
	f	Laif;	ac	DIRT
	f	Laif;	ad	TERRACOTTA
	f	Laif;	ae	BOATS
	f	Laif;	af	FISHES
	f	Laif;	ag	SIGNS
	f	Laif;	ah	MUSIC_DISCS
	f	Laif;	ai	CREEPER_DROP_MUSIC_DISCS
	f	Laif;	aj	COALS
	f	Laif;	ak	ARROWS
	f	Laif;	al	LECTERN_BOOKS
	f	Laif;	am	BEACON_PAYMENT_ITEMS
	f	Laif;	an	STONE_TOOL_MATERIALS
	f	Laif;	ao	STONE_CRAFTING_MATERIALS
	f	Laif;	ap	FREEZE_IMMUNE_WEARABLES
	f	Laif;	aq	AXOLOTL_TEMPT_ITEMS
	f	Laif;	ar	OCCLUDES_VIBRATION_SIGNALS
	f	Laif;	as	CLUSTER_MAX_HARVESTABLES
	f	Laif;	b	PLANKS
	f	Laif;	c	STONE_BRICKS
	f	Laif;	d	WOODEN_BUTTONS
	f	Laif;	e	BUTTONS
	f	Laif;	f	CARPETS
	f	Laif;	g	WOODEN_DOORS
	f	Laif;	h	WOODEN_STAIRS
	f	Laif;	i	WOODEN_SLABS
	f	Laif;	j	WOODEN_FENCES
	f	Laif;	k	WOODEN_PRESSURE_PLATES
	f	Laif;	l	WOODEN_TRAPDOORS
	f	Laif;	m	DOORS
	f	Laif;	n	SAPLINGS
	f	Laif;	o	LOGS_THAT_BURN
	f	Laif;	p	LOGS
	f	Laif;	q	DARK_OAK_LOGS
	f	Laif;	r	OAK_LOGS
	f	Laif;	s	BIRCH_LOGS
	f	Laif;	t	ACACIA_LOGS
	f	Laif;	u	JUNGLE_LOGS
	f	Laif;	v	SPRUCE_LOGS
	f	Laif;	w	CRIMSON_STEMS
	f	Laif;	x	WARPED_STEMS
	f	Laif;	y	BANNERS
	f	Laif;	z	SAND
c	aie	net/minecraft/tags/Tag
	m	()Ljava/util/List;	a	getValues
	m	()Laie;	b	empty
	f	Laie;	a	EMPTY
	f	Ljava/util/List;	b	elements
c	aie$a	net/minecraft/tags/Tag$Builder
	m	()Laie$a;	a	tag
	m	(Laie$b;)Laie$a;	a	add
	m	(Laie$d;Ljava/lang/String;)Laie$a;	a	add
	m	(Lcom/google/gson/JsonElement;)Laie$d;	a	parseEntry
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Laie$a;	a	addFromJson
	m	(Ljava/lang/String;Laie$d;)V	a	lambda$addFromJson$2
	m	(Ljava/util/function/Consumer;)V	a	visitRequiredDependencies
	m	(Ljava/util/function/Consumer;Laie$b;)V	a	lambda$visitOptionalDependencies$1
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/datafixers/util/Either;	a	build
	m	(Lyt;Ljava/lang/String;)Laie$a;	a	addElement
	m	()Ljava/util/stream/Stream;	b	getEntries
	m	(Ljava/util/function/Consumer;)V	b	visitOptionalDependencies
	m	(Ljava/util/function/Consumer;Laie$b;)V	b	lambda$visitRequiredDependencies$0
	m	(Lyt;Ljava/lang/String;)Laie$a;	b	addOptionalElement
	m	()Lcom/google/gson/JsonObject;	c	serializeToJson
	m	(Lyt;Ljava/lang/String;)Laie$a;	c	addTag
	m	(Lyt;Ljava/lang/String;)Laie$a;	d	addOptionalTag
	f	Ljava/util/List;	a	entries
c	aie$b	net/minecraft/tags/Tag$BuilderEntry
	m	()Laie$d;	a	entry
	m	()Ljava/lang/String;	b	source
	f	Laie$d;	a	entry
	f	Ljava/lang/String;	b	source
c	aie$c	net/minecraft/tags/Tag$ElementEntry
	m	(Lcom/google/gson/JsonArray;)V	a	serializeTo
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z	a	build
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z	a	verifyIfPresent
	f	Lyt;	a	id
c	aie$d	net/minecraft/tags/Tag$Entry
	m	(Lcom/google/gson/JsonArray;)V	a	serializeTo
	m	(Ljava/util/function/Consumer;)V	a	visitRequiredDependencies
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z	a	build
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z	a	verifyIfPresent
	m	(Ljava/util/function/Consumer;)V	b	visitOptionalDependencies
c	aie$e	net/minecraft/tags/Tag$OptionalElementEntry
	m	(Lcom/google/gson/JsonArray;)V	a	serializeTo
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z	a	build
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z	a	verifyIfPresent
	f	Lyt;	a	id
c	aie$f	net/minecraft/tags/Tag$OptionalTagEntry
	m	(Lcom/google/gson/JsonArray;)V	a	serializeTo
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z	a	build
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z	a	verifyIfPresent
	m	(Ljava/util/function/Consumer;)V	b	visitOptionalDependencies
	f	Lyt;	a	id
c	aie$g	net/minecraft/tags/Tag$TagEntry
	m	(Lcom/google/gson/JsonArray;)V	a	serializeTo
	m	(Ljava/util/function/Consumer;)V	a	visitRequiredDependencies
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z	a	build
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z	a	verifyIfPresent
	f	Lyt;	a	id
c	aif	net/minecraft/tags/TagKey
	m	()Lys;	a	registry
	m	(Laif;)Ljava/lang/String;	a	lambda$hashedCodec$3
	m	(Lys;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lys;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$hashedCodec$2
	m	(Lys;Lyt;)Laif;	a	create
	m	()Lyt;	b	location
	m	(Lys;)Lcom/mojang/serialization/Codec;	b	hashedCodec
	m	(Lys;Lyt;)Laif;	b	lambda$hashedCodec$1
	m	(Lys;)Z	c	isFor
	m	(Lys;Lyt;)Laif;	c	lambda$codec$0
	m	(Lys;)Ljava/util/Optional;	d	cast
	f	Lys;	a	registry
	f	Lyt;	b	location
	f	Lcom/google/common/collect/Interner;	c	VALUES
c	aig	net/minecraft/tags/TagLoader
	m	(Laga;)Ljava/util/Map;	a	load
	m	(Lcom/google/common/collect/Multimap;Lyt;Laie$a;)V	a	lambda$build$8
	m	(Lcom/google/common/collect/Multimap;Lyt;Lyt;)Z	a	isCyclic
	m	(Ljava/lang/String;)Z	a	lambda$load$0
	m	(Ljava/util/Map;)Ljava/util/Map;	a	build
	m	(Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/util/function/BiConsumer;Lyt;)V	a	lambda$visitDependenciesAndElement$2
	m	(Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/Map;Lyt;)V	a	lambda$build$12
	m	(Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/Set;Lyt;Ljava/util/function/BiConsumer;)V	a	visitDependenciesAndElement
	m	(Ljava/util/Map;Lyt;Laie;)V	a	lambda$build$10
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/Map;Lyt;Laie$a;)V	a	lambda$build$11
	m	(Lyt;)Ljava/lang/Object;	a	lambda$build$4
	m	(Lyt;Ljava/util/Collection;)V	a	lambda$build$9
	m	(Laga;)Ljava/util/Map;	b	loadAndBuild
	m	(Lcom/google/common/collect/Multimap;Lyt;Laie$a;)V	b	lambda$build$6
	m	(Lcom/google/common/collect/Multimap;Lyt;Lyt;)V	b	addDependencyIfNotCyclic
	m	(Lyt;)Laie$a;	b	lambda$load$1
	m	(Lcom/google/common/collect/Multimap;Lyt;Lyt;)V	c	lambda$build$7
	m	(Lcom/google/common/collect/Multimap;Lyt;Lyt;)V	d	lambda$build$5
	m	(Lcom/google/common/collect/Multimap;Lyt;Lyt;)Z	e	lambda$isCyclic$3
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/lang/String;	c	PATH_SUFFIX
	f	I	d	PATH_SUFFIX_LENGTH
	f	Ljava/util/function/Function;	e	idToValue
	f	Ljava/lang/String;	f	directory
c	aih	net/minecraft/tags/TagManager
	m	()Ljava/util/List;	a	getResult
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$reload$1
	m	(Lafv$a;Laga;Lasy;Lasy;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
	m	(Laga;Ljava/util/concurrent/Executor;Lhc$d;)Ljava/util/concurrent/CompletableFuture;	a	createLoader
	m	(Lhb;Lys;Lyt;)Ljava/util/Optional;	a	lambda$createLoader$3
	m	(Ljava/util/List;Ljava/lang/Void;)V	a	lambda$reload$2
	m	(Lys;)Ljava/lang/String;	a	getTagDir
	m	(Lys;Laig;Laga;)Laih$a;	a	lambda$createLoader$4
	m	(Laga;Ljava/util/concurrent/Executor;Lhc$d;)Ljava/util/concurrent/CompletableFuture;	b	lambda$reload$0
	f	Ljava/util/Map;	a	CUSTOM_REGISTRY_DIRECTORIES
	f	Lhc;	b	registryAccess
	f	Ljava/util/List;	c	results
c	aih$a	net/minecraft/tags/TagManager$LoadResult
	m	()Lys;	a	key
	m	()Ljava/util/Map;	b	tags
	f	Lys;	a	key
	f	Ljava/util/Map;	b	tags
c	aii	net/minecraft/tags/TagNetworkSerialization
	m	(Lcom/mojang/datafixers/util/Pair;)Z	a	lambda$serializeTagsToNetwork$1
	m	(Lhb;)Laii$a;	a	serializeToNetwork
	m	(Lhb;Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$serializeToNetwork$2
	m	(Lhc$d;)Lcom/mojang/datafixers/util/Pair;	a	lambda$serializeTagsToNetwork$0
	m	(Lhc;)Ljava/util/Map;	a	serializeTagsToNetwork
	m	(Lys;Lhb;Laii$a;Laii$b;)V	a	deserializeTagsFromNetwork
	m	(Lys;Lhb;Laii$b;Lyt;Lit/unimi/dsi/fastutil/ints/IntList;)V	a	lambda$deserializeTagsFromNetwork$3
c	aii$a	net/minecraft/tags/TagNetworkSerialization$NetworkPayload
	m	()Z	a	isEmpty
	m	(Lpy;)V	a	write
	m	(Lpy;)Laii$a;	b	read
	f	Ljava/util/Map;	a	tags
c	aii$b	net/minecraft/tags/TagNetworkSerialization$TagOutput
c	aij	net/minecraft/tags/package-info
c	aik	net/minecraft/util/BitStorage
	m	()[J	a	getRaw
	m	(I)I	a	get
	m	(II)I	a	getAndSet
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
	m	([I)V	a	unpack
	m	()I	b	getSize
	m	(II)V	b	set
	m	()I	c	getBits
	m	()Laik;	d	copy
c	ail	net/minecraft/util/ClassInstanceMultiMap
	m	()Ljava/util/List;	a	getAllInstances
	m	(Ljava/lang/Class;)Ljava/util/Collection;	a	find
	m	(Ljava/lang/Class;)Ljava/util/List;	b	lambda$find$0
	f	Ljava/util/Map;	a	byClass
	f	Ljava/lang/Class;	b	baseClass
	f	Ljava/util/List;	c	allInstances
c	aim	net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap
	m	()V	a	clear
	m	(I)Ljava/lang/Object;	a	byId
	m	(Ljava/lang/Object;)I	a	getId
	m	(Ljava/lang/Object;I)V	a	addMapping
	m	()I	b	size
	m	(Ljava/lang/Object;)Z	b	contains
	m	(Ljava/lang/Object;I)I	b	indexOf
	m	()Laim;	c	copy
	m	(I)Laim;	c	create
	m	(Ljava/lang/Object;)I	c	add
	m	()I	d	nextId
	m	(I)Z	d	contains
	m	(Ljava/lang/Object;)I	d	hash
	m	(I)I	e	getValue
	m	(I)V	f	grow
	m	(I)I	g	findEmpty
	f	I	b	NOT_FOUND
	f	Ljava/lang/Object;	c	EMPTY_SLOT
	f	F	d	LOADFACTOR
	f	[Ljava/lang/Object;	e	keys
	f	[I	f	values
	f	[Ljava/lang/Object;	g	byId
	f	I	h	nextId
	f	I	i	size
c	ain	net/minecraft/util/Crypt
	m	()Ljavax/crypto/SecretKey;	a	generateSecretKey
	m	(ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher;	a	setupCipher
	m	(ILjava/security/Key;)Ljavax/crypto/Cipher;	a	getCipher
	m	(ILjava/security/Key;[B)[B	a	cipherData
	m	(Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B	a	digestData
	m	(Ljava/security/Key;[B)[B	a	encryptUsingKey
	m	(Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey;	a	decryptByteToSecretKey
	m	([B)Ljava/security/PublicKey;	a	byteToPublicKey
	m	([[B)[B	a	digestData
	m	()Ljava/security/KeyPair;	b	generateKeyPair
	m	(Ljava/security/Key;[B)[B	b	decryptUsingKey
	f	Ljava/lang/String;	a	SYMMETRIC_ALGORITHM
	f	I	b	SYMMETRIC_BITS
	f	Ljava/lang/String;	c	ASYMMETRIC_ALGORITHM
	f	I	d	ASYMMETRIC_BITS
	f	Ljava/lang/String;	e	BYTE_ENCODING
	f	Ljava/lang/String;	f	HASH_ALGORITHM
c	aio	net/minecraft/util/CryptException
c	aip	net/minecraft/util/CsvOutput
	m	()Laip$a;	a	builder
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getStringValue
	m	(Ljava/util/stream/Stream;)V	a	writeLine
	m	([Ljava/lang/Object;)V	a	writeRow
	f	Ljava/lang/String;	a	LINE_SEPARATOR
	f	Ljava/lang/String;	b	FIELD_SEPARATOR
	f	Ljava/io/Writer;	c	output
	f	I	d	columnCount
c	aip$a	net/minecraft/util/CsvOutput$Builder
	m	(Ljava/io/Writer;)Laip;	a	build
	m	(Ljava/lang/String;)Laip$a;	a	addColumn
	f	Ljava/util/List;	a	headers
c	aiq	net/minecraft/util/CubicSampler
	m	(Ldpo;Laiq$a;)Ldpo;	a	gaussianSampleVec3
	f	I	a	GAUSSIAN_SAMPLE_RADIUS
	f	I	b	GAUSSIAN_SAMPLE_BREADTH
	f	[D	c	GAUSSIAN_SAMPLE_KERNEL
c	aiq$a	net/minecraft/util/CubicSampler$Vec3Fetcher
c	air	net/minecraft/util/CubicSpline
	m	()Ljava/lang/String;	a	parityString
	m	(F)Lair;	a	constant
	m	(FLair;F)Lair$a;	a	lambda$codec$0
	m	(Lair$d;)Lair;	a	mapAll
	m	(Lair$e;)Ljava/lang/Record;	a	lambda$codec$6
	m	(Lair$e;I)Lair$a;	a	lambda$codec$2
	m	(Lair;)Lcom/mojang/datafixers/util/Either;	a	lambda$codec$8
	m	(Lajy;)Lair$b;	a	builder
	m	(Lajy;Lajy;)Lair$b;	a	builder
	m	(Lajy;Ljava/util/List;)Lair$e;	a	lambda$codec$4
	m	(Lcom/mojang/datafixers/util/Either;)Lair;	a	lambda$codec$7
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$5
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$1
	m	()F	b	min
	m	(Lair$e;)Ljava/util/List;	b	lambda$codec$3
	m	()F	c	max
c	air$a	net/minecraft/util/CubicSpline$1Point
	m	()F	a	location
	m	()Lair;	b	value
	m	()F	c	derivative
	f	F	a	location
	f	Lair;	b	value
	f	F	c	derivative
c	air$b	net/minecraft/util/CubicSpline$Builder
	m	()Lair;	a	build
	m	(FFF)Lair$b;	a	addPoint
	m	(FLair;F)Lair$b;	a	addPoint
	m	(Ljava/lang/Float;)F	a	lambda$new$0
	f	Lajy;	a	coordinate
	f	Lajy;	b	valueTransformer
	f	Lit/unimi/dsi/fastutil/floats/FloatList;	c	locations
	f	Ljava/util/List;	d	values
	f	Lit/unimi/dsi/fastutil/floats/FloatList;	e	derivatives
c	air$c	net/minecraft/util/CubicSpline$Constant
	m	()Ljava/lang/String;	a	parityString
	m	(Lair$d;)Lair;	a	mapAll
	m	()F	b	min
	m	()F	c	max
	m	()F	d	value
	f	F	a	value
c	air$d	net/minecraft/util/CubicSpline$CoordinateVisitor
c	air$e	net/minecraft/util/CubicSpline$Multipoint
	m	()Ljava/lang/String;	a	parityString
	m	(D)Ljava/lang/String;	a	lambda$toString$2
	m	(FI)Z	a	lambda$apply$0
	m	(Lair$d;)Lair;	a	mapAll
	m	(Lair$d;Lair;)Lair;	a	lambda$mapAll$3
	m	([F)Ljava/lang/String;	a	toString
	m	([FI)D	a	lambda$toString$1
	m	()F	b	min
	m	()F	c	max
	m	()Lajy;	d	coordinate
	m	()[F	e	locations
	m	()Ljava/util/List;	f	values
	m	()[F	g	derivatives
	f	Lajy;	a	coordinate
	f	[F	b	locations
	f	Ljava/util/List;	c	values
	f	[F	d	derivatives
c	ais	net/minecraft/util/DebugBuffer
	m	()Ljava/util/List;	a	dump
	m	(Ljava/lang/Object;)V	a	push
	f	Ljava/util/concurrent/atomic/AtomicReferenceArray;	a	data
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	index
c	ait	net/minecraft/util/DirectoryLock
	m	()Z	a	isValid
	m	(Ljava/nio/file/Path;)Lait;	a	create
	m	(Ljava/nio/file/Path;)Z	b	isLocked
	f	Ljava/lang/String;	a	LOCK_FILE
	f	Ljava/nio/channels/FileChannel;	b	lockFile
	f	Ljava/nio/channels/FileLock;	c	lock
	f	Ljava/nio/ByteBuffer;	d	DUMMY
c	ait$a	net/minecraft/util/DirectoryLock$LockException
	m	(Ljava/nio/file/Path;)Lait$a;	a	alreadyLocked
c	aiu	net/minecraft/util/ExceptionCollector
	m	()V	a	throwIfPresent
	m	(Ljava/lang/Throwable;)V	a	add
	f	Ljava/lang/Throwable;	a	result
c	aiv	net/minecraft/util/ExtraCodecs
	m	()Ljava/util/function/Function;	a	nonEmptyListCheck
	m	(FFLjava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	floatRangeMinExclusiveWithMessage
	m	(IILjava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	intRangeWithMessage
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/Object;	a	lambda$intervalCodec$8
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	nonEmptyList
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	xor
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$intervalCodec$3
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	intervalCodec
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	overrideLifecycle
	m	(Lgt;)Lcom/mojang/serialization/DataResult;	a	lambda$nonEmptyHolderSetCheck$25
	m	(Ljava/lang/Float;)Ljava/lang/String;	a	lambda$static$23
	m	(Ljava/lang/Integer;)Ljava/lang/String;	a	lambda$static$21
	m	(Ljava/lang/Number;Ljava/lang/Number;Ljava/util/function/Function;)Ljava/util/function/Function;	a	checkRangeWithMessage
	m	(Ljava/lang/Number;Ljava/lang/Number;Ljava/util/function/Function;Ljava/lang/Number;)Lcom/mojang/serialization/DataResult;	a	lambda$checkRangeMinExclusiveWithMessage$22
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/Codec$ResultFunction;	a	orElsePartial
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$stringResolverCodec$15
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$nonEmptyListCheck$24
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$10
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$4
	m	(Ljava/util/function/BiFunction;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$9
	m	(Ljava/util/function/BiFunction;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$1
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	a	retrieveContext
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$stringResolverCodec$18
	m	(Ljava/util/function/Function;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$stringResolverCodec$16
	m	(Ljava/util/function/Function;Ljava/util/Collection;)Lcom/mojang/serialization/DataResult;	a	lambda$ensureHomogenous$26
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	stringResolverCodec
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Either;	a	lambda$intervalCodec$11
	m	(Ljava/util/function/IntFunction;Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	a	lambda$idResolverCodec$13
	m	(Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec;	a	lazyInitializedCodec
	m	(Ljava/util/function/ToIntFunction;ILjava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$idResolverCodec$14
	m	(Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;I)Lcom/mojang/serialization/Codec;	a	idResolverCodec
	m	()Ljava/util/function/Function;	b	nonEmptyHolderSetCheck
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	nonEmptyHolderSet
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	orCompressed
	m	(Ljava/lang/Integer;)Ljava/lang/String;	b	lambda$static$20
	m	(Ljava/lang/Number;Ljava/lang/Number;Ljava/util/function/Function;)Ljava/util/function/Function;	b	checkRangeMinExclusiveWithMessage
	m	(Ljava/lang/Number;Ljava/lang/Number;Ljava/util/function/Function;Ljava/lang/Number;)Lcom/mojang/serialization/DataResult;	b	lambda$checkRangeWithMessage$19
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	lambda$stringResolverCodec$17
	m	(Ljava/util/function/BiFunction;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	b	lambda$intervalCodec$0
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	b	ensureHomogenous
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair;	b	lambda$intervalCodec$5
	m	(Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	c	lambda$idResolverCodec$12
	m	(Ljava/lang/Object;)Ljava/lang/Object;	c	lambda$intervalCodec$7
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/util/List;	c	lambda$intervalCodec$2
	m	(Ljava/lang/Object;)Ljava/lang/Object;	d	lambda$intervalCodec$6
	f	Lcom/mojang/serialization/Codec;	a	NON_NEGATIVE_INT
	f	Lcom/mojang/serialization/Codec;	b	POSITIVE_INT
	f	Lcom/mojang/serialization/Codec;	c	POSITIVE_FLOAT
c	aiv$1	net/minecraft/util/ExtraCodecs$1
	f	Ljava/lang/Object;	a	val$value
c	aiv$2	net/minecraft/util/ExtraCodecs$2
	f	Lcom/mojang/serialization/Codec;	a	val$compressed
	f	Lcom/mojang/serialization/Codec;	b	val$normal
c	aiv$3	net/minecraft/util/ExtraCodecs$3
	m	(Lcom/mojang/serialization/DataResult;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$apply$0
	f	Ljava/util/function/Function;	a	val$decodeLifecycle
	f	Ljava/util/function/Function;	b	val$encodeLifecycle
c	aiv$a	net/minecraft/util/ExtraCodecs$1ContextRetrievalCodec
	f	Ljava/util/function/Function;	a	val$getter
c	aiv$b	net/minecraft/util/ExtraCodecs$EitherCodec
	m	(Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$1
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$2
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$4
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$decode$0
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	lambda$encode$3
	f	Lcom/mojang/serialization/Codec;	a	first
	f	Lcom/mojang/serialization/Codec;	b	second
c	aiv$c	net/minecraft/util/ExtraCodecs$LazyInitializedCodec
	m	()Ljava/util/function/Supplier;	a	delegate
	f	Ljava/util/function/Supplier;	a	delegate
c	aiv$d	net/minecraft/util/ExtraCodecs$XorCodec
	m	(Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$1
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$decode$0
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	lambda$encode$2
	f	Lcom/mojang/serialization/Codec;	a	first
	f	Lcom/mojang/serialization/Codec;	b	second
c	aiw	net/minecraft/util/FastBufferedInputStream
	m	()I	a	bytesInBuffer
	m	()V	b	fill
	f	I	a	DEFAULT_BUFFER_SIZE
	f	Ljava/io/InputStream;	b	in
	f	[B	c	buffer
	f	I	d	limit
	f	I	e	position
c	aix	net/minecraft/util/FastColor
c	aix$a	net/minecraft/util/FastColor$ARGB32
	m	(I)I	a	alpha
	m	(II)I	a	multiply
	m	(IIII)I	a	color
	m	(I)I	b	red
	m	(I)I	c	green
	m	(I)I	d	blue
c	aiy	net/minecraft/util/FileZipper
	m	(Ljava/nio/file/Path;)V	a	add
	m	(Ljava/nio/file/Path;Ljava/io/File;)V	a	add
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	add
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z	a	lambda$add$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	outputFile
	f	Ljava/nio/file/Path;	c	tempFile
	f	Ljava/nio/file/FileSystem;	d	fs
c	aiz	net/minecraft/util/FormattedCharSequence
	m	(Laiz;Laiz;Laja;)Z	a	lambda$fromPair$7
	m	(Laja;)Z	a	lambda$static$0
	m	(Laja;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;ILqu;I)Z	a	lambda$decorateOutput$6
	m	(Ljava/lang/String;Lqu;Laja;)Z	a	lambda$backward$4
	m	(Ljava/lang/String;Lqu;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Laja;)Z	a	lambda$backward$5
	m	(Ljava/util/List;Laja;)Z	a	lambda$fromList$8
	m	(Lqu;ILaja;)Z	a	lambda$codepoint$1
	m	(Ljava/lang/String;Lqu;Laja;)Z	b	lambda$forward$2
	m	(Ljava/lang/String;Lqu;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Laja;)Z	b	lambda$forward$3
	f	Laiz;	a	EMPTY
c	aja	net/minecraft/util/FormattedCharSink
c	ajb	net/minecraft/util/FrameTimer
	m	()I	a	getLogStart
	m	(I)J	a	getAverageDuration
	m	(II)I	a	scaleAverageDurationTo
	m	(J)V	a	logFrameDuration
	m	(JII)I	a	scaleSampleTo
	m	()I	b	getLogEnd
	m	(I)I	b	wrapIndex
	m	()[J	c	getLog
	f	I	a	LOGGING_LENGTH
	f	[J	b	loggedTimes
	f	I	c	logStart
	f	I	d	logLength
	f	I	e	logEnd
c	ajc	net/minecraft/util/Graph
	m	(Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Ljava/util/function/Consumer;Ljava/lang/Object;)Z	a	depthFirstSearch
c	ajd	net/minecraft/util/GsonHelper
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object;	a	fromJson
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object;	a	fromJson
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;	a	fromJson
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object;	a	fromJson
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object;	a	fromJson
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object;	a	fromJson
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;	a	fromJson
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object;	a	fromJson
	m	(Lcom/google/gson/JsonElement;)Z	a	isStringValue
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String;	a	convertToString
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	convertToObject
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	a	isStringValue
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;B)B	a	getAsByte
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;C)C	a	getAsCharacter
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;D)D	a	getAsDouble
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;F)F	a	getAsFloat
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;I)I	a	getAsInt
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;J)J	a	getAsLong
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lbus;)Lbus;	a	getAsItem
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray;	a	getAsJsonArray
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	getAsObject
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject;	a	getAsJsonObject
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	getAsObject
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getAsString
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;	a	getAsBigDecimal
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger;	a	getAsBigInteger
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;S)S	a	getAsShort
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z	a	getAsBoolean
	m	(Ljava/io/Reader;)Lcom/google/gson/JsonObject;	a	parse
	m	(Ljava/io/Reader;Z)Lcom/google/gson/JsonObject;	a	parse
	m	(Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	parse
	m	(Ljava/lang/String;Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$convertToItem$0
	m	(Ljava/lang/String;Z)Lcom/google/gson/JsonObject;	a	parse
	m	(Lcom/google/gson/JsonElement;)Z	b	isNumberValue
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lbus;	b	convertToItem
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	b	isNumberValue
	m	(Ljava/io/Reader;)Lcom/google/gson/JsonArray;	b	parseArray
	m	(Lcom/google/gson/JsonElement;)Z	c	isBooleanValue
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Z	c	convertToBoolean
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	c	isBooleanValue
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	d	getType
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)D	d	convertToDouble
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	d	isArrayNode
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)F	e	convertToFloat
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	e	isObjectNode
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)J	f	convertToLong
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	f	isValidPrimitive
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)I	g	convertToInt
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	g	isValidNode
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)B	h	convertToByte
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String;	h	getAsString
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)C	i	convertToCharacter
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lbus;	i	getAsItem
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal;	j	convertToBigDecimal
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	j	getAsBoolean
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger;	k	convertToBigInteger
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)D	k	getAsDouble
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)S	l	convertToShort
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)F	l	getAsFloat
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject;	m	convertToJsonObject
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)J	m	getAsLong
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray;	n	convertToJsonArray
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)I	n	getAsInt
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)B	o	getAsByte
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)C	p	getAsCharacter
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal;	q	getAsBigDecimal
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger;	r	getAsBigInteger
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)S	s	getAsShort
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject;	t	getAsJsonObject
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray;	u	getAsJsonArray
	f	Lcom/google/gson/Gson;	a	GSON
c	aje	net/minecraft/util/HttpUtil
	m	()I	a	getAvailablePort
	m	(Lajo;Ljava/lang/String;Ljava/net/Proxy;Ljava/util/Map;Ljava/io/File;I)Ljava/lang/Object;	a	lambda$downloadTo$0
	m	(Ljava/io/File;Ljava/lang/String;Ljava/util/Map;ILajo;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture;	a	downloadTo
	m	(Ljava/net/URL;Ljava/lang/String;ZLjava/net/Proxy;)Ljava/lang/String;	a	performPost
	m	(Ljava/net/URL;Ljava/util/Map;ZLjava/net/Proxy;)Ljava/lang/String;	a	performPost
	m	(Ljava/util/Map;)Ljava/lang/String;	a	buildQuery
	f	Lcom/google/common/util/concurrent/ListeningExecutorService;	a	DOWNLOAD_EXECUTOR
	f	Lorg/slf4j/Logger;	b	LOGGER
c	ajf	net/minecraft/util/InclusiveRange
	m	()Ljava/lang/Comparable;	a	minInclusive
	m	(Lajf;)Z	a	contains
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/Comparable;)Z	a	isValueInRange
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/DataResult;	a	create
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lajf;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$0
	m	()Ljava/lang/Comparable;	b	maxInclusive
	f	Lcom/mojang/serialization/Codec;	a	INT
	f	Ljava/lang/Comparable;	b	minInclusive
	f	Ljava/lang/Comparable;	c	maxInclusive
c	ajg	net/minecraft/util/LazyLoadedValue
	m	()Ljava/lang/Object;	a	get
	f	Ljava/util/function/Supplier;	a	factory
c	ajh	net/minecraft/util/LinearCongruentialGenerator
	m	(JJ)J	a	next
	f	J	a	MULTIPLIER
	f	J	b	INCREMENT
c	aji	net/minecraft/util/LowerCaseEnumTypeAdapterFactory
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	toLowercase
c	aji$1	net/minecraft/util/LowerCaseEnumTypeAdapterFactory$1
	f	Ljava/util/Map;	a	val$lowercaseToConstant
	f	Laji;	b	this$0
c	ajj	net/minecraft/util/MemoryReserve
	m	()V	a	allocate
	m	()V	b	release
	f	[B	a	reserve
c	ajk	net/minecraft/util/ModCheck
	m	()Z	a	shouldReportAsModified
	m	(Lajk;)Lajk;	a	merge
	m	(Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)Lajk;	a	identify
	m	()Ljava/lang/String;	b	fullDescription
	m	()Lajk$a;	c	confidence
	m	()Ljava/lang/String;	d	description
	f	Lajk$a;	a	confidence
	f	Ljava/lang/String;	b	description
c	ajk$a	net/minecraft/util/ModCheck$Confidence
	m	()[Lajk$a;	a	$values
	f	Lajk$a;	a	PROBABLY_NOT
	f	Lajk$a;	b	VERY_LIKELY
	f	Lajk$a;	c	DEFINITELY
	f	Ljava/lang/String;	d	description
	f	Z	e	shouldReportAsModified
	f	[Lajk$a;	f	$VALUES
c	ajl	net/minecraft/util/Mth
	m	()Ljava/util/UUID;	a	createInsecureUUID
	m	(BBB)B	a	clamp
	m	(D)I	a	fastFloor
	m	(DD)D	a	absMax
	m	(DDD)D	a	clamp
	m	(DDDDD)D	a	clampedMap
	m	(DDDDDD)D	a	lerp2
	m	(DDDDDDDDDDD)D	a	lerp3
	m	(DDDDDDII)[D	a	binBiModalNormalDistribution
	m	(DDDII)[D	a	binNormalDistribution
	m	(DDII)[D	a	binLogDistribution
	m	(DI)I	a	quantize
	m	(F)F	a	sin
	m	(FF)Z	a	equal
	m	(FFF)F	a	clamp
	m	(FFFFF)F	a	clampedMap
	m	(I)I	a	abs
	m	(IFFF)I	a	colorMultiply
	m	(II)I	a	intFloorDiv
	m	(III)I	a	clamp
	m	(IILjava/util/function/IntPredicate;)I	a	binarySearch
	m	(J)J	a	murmurHash3Mixer
	m	(JJJ)J	a	clamp
	m	(Ldpo;Ldpo;Ldpj;)Z	a	rayIntersectsAABB
	m	(Ldpo;Ldpo;Ldpo;Ldpo;D)Ldpo;	a	catmullRomSplinePos
	m	(Lhh;)J	a	getSeed
	m	(Ljava/lang/String;D)D	a	getDouble
	m	(Ljava/lang/String;DD)D	a	getDouble
	m	(Ljava/lang/String;I)I	a	getInt
	m	(Ljava/lang/String;II)I	a	getInt
	m	(Ljava/util/Random;)Ljava/util/UUID;	a	createInsecureUUID
	m	(Ljava/util/Random;DD)D	a	nextDouble
	m	(Ljava/util/Random;FF)F	a	nextFloat
	m	(Ljava/util/Random;II)I	a	nextInt
	m	(Ljava/util/Random;[D)I	a	getRandomForDistributionIntegral
	m	([D)[D	a	cumulativeSum
	m	([F)V	a	lambda$static$0
	m	([J)D	a	average
	m	(D)I	b	floor
	m	(DD)Z	b	equal
	m	(DDD)D	b	clampedLerp
	m	(DDDDD)D	b	map
	m	(F)F	b	cos
	m	(FF)F	b	positiveModulo
	m	(FFF)F	b	clampedLerp
	m	(FFFFF)F	b	map
	m	(I)I	b	wrapDegrees
	m	(II)I	b	positiveModulo
	m	(III)I	b	color
	m	(J)J	b	square
	m	(Ljava/util/Random;FF)F	b	randomBetween
	m	(Ljava/util/Random;II)I	b	randomBetweenInclusive
	m	(D)J	c	lfloor
	m	(DD)D	c	positiveModulo
	m	(DDD)D	c	inverseLerp
	m	(F)F	c	sqrt
	m	(FF)F	c	degreesDifference
	m	(FFF)F	c	rotateIfNecessary
	m	(I)I	c	smallestEncompassingPowerOfTwo
	m	(II)I	c	colorMultiply
	m	(III)J	c	getSeed
	m	(Ljava/util/Random;FF)F	c	normal
	m	(D)I	d	absFloor
	m	(DD)D	d	atan2
	m	(DDD)D	d	lerp
	m	(F)I	d	floor
	m	(FF)F	d	degreesDifferenceAbs
	m	(FFF)F	d	approach
	m	(I)Z	d	isPowerOfTwo
	m	(II)I	d	roundToward
	m	(D)I	e	ceil
	m	(DD)D	e	lengthSquared
	m	(DDD)D	e	lengthSquared
	m	(F)F	e	abs
	m	(FF)F	e	triangleWave
	m	(FFF)F	e	approachDegrees
	m	(I)I	e	ceillog2
	m	(II)I	e	positiveCeilDiv
	m	(D)D	f	wrapDegrees
	m	(DD)D	f	length
	m	(DDD)D	f	length
	m	(F)I	f	ceil
	m	(FFF)I	f	color
	m	(I)I	f	log2
	m	(D)D	g	frac
	m	(F)F	g	wrapDegrees
	m	(FFF)F	g	inverseLerp
	m	(I)I	g	murmurHash3Mixer
	m	(D)D	h	fastInvSqrt
	m	(F)F	h	frac
	m	(FFF)I	h	hsvToRgb
	m	(I)I	h	square
	m	(D)D	i	smoothstep
	m	(F)F	i	fastInvSqrt
	m	(FFF)F	i	lerp
	m	(D)D	j	smoothstepDerivative
	m	(F)F	j	fastInvCubeRoot
	m	(FFF)F	j	rotLerp
	m	(D)I	k	sign
	m	(F)F	k	square
	m	(FFF)F	k	diffuseLight
	m	(D)F	l	rotWrap
	m	(FFF)F	l	rotlerp
	m	(D)D	m	square
	m	(D)D	n	wobble
	f	F	a	PI
	f	F	b	HALF_PI
	f	F	c	TWO_PI
	f	F	d	DEG_TO_RAD
	f	F	e	RAD_TO_DEG
	f	F	f	EPSILON
	f	F	g	SQRT_OF_TWO
	f	I	h	BIG_ENOUGH_INT
	f	F	i	BIG_ENOUGH_FLOAT
	f	J	j	UUID_VERSION
	f	J	k	UUID_VERSION_TYPE_4
	f	J	l	UUID_VARIANT
	f	J	m	UUID_VARIANT_2
	f	F	n	SIN_SCALE
	f	[F	o	SIN
	f	Ljava/util/Random;	p	RANDOM
	f	[I	q	MULTIPLY_DE_BRUIJN_BIT_POSITION
	f	D	r	ONE_SIXTH
	f	I	s	FRAC_EXP
	f	I	t	LUT_SIZE
	f	D	u	FRAC_BIAS
	f	[D	v	ASIN_TAB
	f	[D	w	COS_TAB
c	ajm	net/minecraft/util/NativeModuleLister
	m	()Ljava/util/List;	a	listModules
	m	(Lajm$a;)Ljava/lang/String;	a	lambda$addCrashSection$1
	m	(Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Lcom/sun/jna/Pointer;	a	queryVersionValue
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	tryGetVersion
	m	(Ljava/lang/String;II)Ljava/lang/String;	a	langTableKey
	m	(Lr;)V	a	addCrashSection
	m	([I)Ljava/util/OptionalInt;	a	findLangAndCodepage
	m	()Ljava/lang/String;	b	lambda$addCrashSection$2
	m	(Lajm$a;)Ljava/lang/String;	b	lambda$addCrashSection$0
	m	(Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Ljava/lang/String;	b	queryVersionString
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	LANG_MASK
	f	I	c	DEFAULT_LANG
	f	I	d	CODEPAGE_MASK
	f	I	e	DEFAULT_CODEPAGE
c	ajm$a	net/minecraft/util/NativeModuleLister$NativeModuleInfo
	m	(Lajm$b;)Ljava/lang/String;	a	lambda$toString$0
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Optional;	b	version
c	ajm$b	net/minecraft/util/NativeModuleLister$NativeModuleVersion
	f	Ljava/lang/String;	a	description
	f	Ljava/lang/String;	b	version
	f	Ljava/lang/String;	c	company
c	ajn	net/minecraft/util/ParticleUtils
	m	(Lcav;Lgj;Lgo;Lia;)V	a	spawnParticleOnFace
	m	(Lcav;Lgj;Lia;Lavs;)V	a	spawnParticlesOnBlockFaces
	m	(Lgo$a;Lcav;Lgj;DLia;Lavs;)V	a	spawnParticlesAlongAxis
c	ajo	net/minecraft/util/ProgressListener
	m	()V	a	stop
	m	(I)V	a	progressStagePercentage
	m	(Lqk;)V	a	progressStartNoAbort
	m	(Lqk;)V	b	progressStart
	m	(Lqk;)V	c	progressStage
c	ajp	net/minecraft/util/SimpleBitStorage
	m	()[J	a	getRaw
	m	(I)I	a	get
	m	(II)I	a	getAndSet
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
	m	([I)V	a	unpack
	m	()I	b	getSize
	m	(I)I	b	cellIndex
	m	(II)V	b	set
	m	()I	c	getBits
	m	()Laik;	d	copy
	f	[I	a	MAGIC
	f	[J	b	data
	f	I	c	bits
	f	J	d	mask
	f	I	e	size
	f	I	f	valuesPerLong
	f	I	g	divideMul
	f	I	h	divideAdd
	f	I	i	divideShift
c	ajp$a	net/minecraft/util/SimpleBitStorage$InitializationException
c	ajq	net/minecraft/util/SmoothDouble
	m	()V	a	reset
	m	(DD)D	a	getNewDeltaValue
	f	D	a	targetValue
	f	D	b	remainingValue
	f	D	c	lastAmount
c	ajr	net/minecraft/util/SortedArraySet
	m	()Lajr;	a	create
	m	(I)Lajr;	a	create
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	addOrGet
	m	(Ljava/lang/Object;I)V	a	addInternal
	m	(Ljava/util/Comparator;)Lajr;	a	create
	m	(Ljava/util/Comparator;I)Lajr;	a	create
	m	([Ljava/lang/Object;)[Ljava/lang/Object;	a	castRawArray
	m	()Ljava/lang/Object;	b	first
	m	(I)I	b	getInsertionPosition
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	get
	m	()Ljava/lang/Object;	c	last
	m	(I)V	c	grow
	m	(Ljava/lang/Object;)I	c	findIndex
	m	(I)V	d	removeInternal
	m	(I)Ljava/lang/Object;	e	getInternal
	f	I	a	DEFAULT_INITIAL_CAPACITY
	f	Ljava/util/Comparator;	b	comparator
	f	[Ljava/lang/Object;	c	contents
	f	I	d	size
c	ajr$a	net/minecraft/util/SortedArraySet$ArrayIterator
	f	Lajr;	a	this$0
	f	I	b	index
	f	I	c	last
c	ajs	net/minecraft/util/StringDecomposer
	m	(Laja;Lqu;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$iterateFormatted$0
	m	(Ljava/lang/String;)Ljava/lang/String;	a	filterBrokenSurrogates
	m	(Ljava/lang/String;ILqu;Laja;)Z	a	iterateFormatted
	m	(Ljava/lang/String;ILqu;Lqu;Laja;)Z	a	iterateFormatted
	m	(Ljava/lang/String;Lqu;Laja;)Z	a	iterate
	m	(Ljava/lang/StringBuilder;ILqu;I)Z	a	lambda$getPlainText$2
	m	(Lqn;)Ljava/lang/String;	a	getPlainText
	m	(Lqn;Lqu;Laja;)Z	a	iterateFormatted
	m	(Lqu;Laja;IC)Z	a	feedChar
	m	(Ljava/lang/String;Lqu;Laja;)Z	b	iterateBackwards
	m	(Ljava/lang/StringBuilder;ILqu;I)Z	b	lambda$filterBrokenSurrogates$1
	m	(Ljava/lang/String;Lqu;Laja;)Z	c	iterateFormatted
	f	C	a	REPLACEMENT_CHAR
	f	Ljava/util/Optional;	b	STOP_ITERATION
c	ajt	net/minecraft/util/StringRepresentable
	m	(Ljava/lang/Object;)I	a	lambda$fromEnum$1
	m	(Ljava/util/function/Supplier;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	fromEnum
	m	([Lajt;)Lcom/mojang/serialization/Keyable;	a	keys
	m	([Ljava/lang/Enum;I)Ljava/lang/Enum;	a	lambda$fromEnum$2
	m	(Ljava/lang/Object;)Ljava/lang/String;	b	lambda$fromEnum$0
	m	()Ljava/lang/String;	c	getSerializedName
c	ajt$1	net/minecraft/util/StringRepresentable$1
	f	[Lajt;	a	val$values
c	aju	net/minecraft/util/StringUtil
	m	(I)Ljava/lang/String;	a	formatTickDuration
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripColor
	m	(Ljava/lang/String;IZ)Ljava/lang/String;	a	truncateStringIfNecessary
	m	(Ljava/lang/String;)Z	b	isNullOrEmpty
	m	(Ljava/lang/String;)I	c	lineCount
	m	(Ljava/lang/String;)Z	d	endsWithNewLine
	f	Ljava/util/regex/Pattern;	a	STRIP_COLOR_PATTERN
	f	Ljava/util/regex/Pattern;	b	LINE_PATTERN
	f	Ljava/util/regex/Pattern;	c	LINE_END_PATTERN
c	ajv	net/minecraft/util/TelemetryConstants
	f	Ljava/time/format/DateTimeFormatter;	a	TIMESTAMP_FORMATTER
	f	Ljava/lang/String;	b	EVENT_WORLD_LOADED
	f	Ljava/lang/String;	c	SERVER_MODDED
	f	Ljava/lang/String;	d	USER_ID
	f	Ljava/lang/String;	e	CLIENT_ID
	f	Ljava/lang/String;	f	DEVICE_SESSION_ID
	f	Ljava/lang/String;	g	WORLD_SESSION_ID
	f	Ljava/lang/String;	h	EVENT_TIMESTAMP_UTC
	f	Ljava/lang/String;	i	BUILD_DISPLAY_NAME
	f	Ljava/lang/String;	j	CLIENT_MODDED
	f	Ljava/lang/String;	k	SERVER_TYPE
	f	Ljava/lang/String;	l	BUILD_PLATFORM
	f	Ljava/lang/String;	m	PLATFORM
	f	Ljava/lang/String;	n	JAVA_VERSION
	f	Ljava/lang/String;	o	PLAYER_GAME_MODE
	f	I	p	GAME_MODE_SURVIVAL
	f	I	q	GAME_MODE_CREATIVE
	f	I	r	GAME_MODE_ADVENTURE
	f	I	s	GAME_MODE_SPECTATOR
	f	I	t	GAME_MODE_HARDCORE
	f	Ljava/lang/String;	u	SERVER_TYPE_REALM
	f	Ljava/lang/String;	v	SERVER_TYPE_LOCAL
	f	Ljava/lang/String;	w	SERVER_TYPE_OTHER
c	ajw	net/minecraft/util/ThreadingDetector
	m	()V	a	checkAndLock
	m	(Ljava/lang/String;Ljava/lang/Thread;)Lz;	a	makeThreadingException
	m	(Ljava/lang/Thread;)Ljava/lang/String;	a	stackTrace
	m	()V	b	checkAndUnlock
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	name
	f	Ljava/util/concurrent/Semaphore;	c	lock
	f	Ljava/util/concurrent/locks/Lock;	d	stackTraceLock
	f	Ljava/lang/Thread;	e	threadThatFailedToAcquire
	f	Lz;	f	fullException
c	ajx	net/minecraft/util/TimeUtil
	m	(II)Lavs;	a	rangeOfSeconds
	f	J	a	NANOSECONDS_PER_SECOND
	f	J	b	NANOSECONDS_PER_MILLISECOND
c	ajy	net/minecraft/util/ToFloatFunction
c	ajz	net/minecraft/util/Tuple
	m	()Ljava/lang/Object;	a	getA
	m	(Ljava/lang/Object;)V	a	setA
	m	()Ljava/lang/Object;	b	getB
	m	(Ljava/lang/Object;)V	b	setB
c	aka	net/minecraft/util/Unit
	m	()[Laka;	a	$values
	f	Laka;	a	INSTANCE
	f	[Laka;	b	$VALUES
c	akb	net/minecraft/util/VisibleForDebug
c	akc	net/minecraft/util/ZeroBitStorage
	m	()[J	a	getRaw
	m	(I)I	a	get
	m	(II)I	a	getAndSet
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
	m	([I)V	a	unpack
	m	()I	b	getSize
	m	(II)V	b	set
	m	()I	c	getBits
	m	()Laik;	d	copy
	f	[J	a	RAW
	f	I	b	size
c	akd	net/minecraft/util/datafix/DataFixTypes
	m	()Lcom/mojang/datafixers/DSL$TypeReference;	a	getType
	m	()[Lakd;	b	$values
	f	Lakd;	a	LEVEL
	f	Lakd;	b	PLAYER
	f	Lakd;	c	CHUNK
	f	Lakd;	d	HOTBAR
	f	Lakd;	e	OPTIONS
	f	Lakd;	f	STRUCTURE
	f	Lakd;	g	STATS
	f	Lakd;	h	SAVED_DATA
	f	Lakd;	i	ADVANCEMENTS
	f	Lakd;	j	POI_CHUNK
	f	Lakd;	k	WORLD_GEN_SETTINGS
	f	Lakd;	l	ENTITY_CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	m	type
	f	[Lakd;	n	$VALUES
c	ake	net/minecraft/util/datafix/DataFixers
	m	()Lcom/mojang/datafixers/DataFixer;	a	getDataFixer
	m	(Lcom/mojang/datafixers/DataFixerBuilder;)V	a	addFixers
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$addFixers$2
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator;	a	createRenamer
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$createRenamer$4
	m	(Ljava/util/Map;)Ljava/util/function/UnaryOperator;	a	createRenamer
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;	a	lambda$createRenamer$3
	m	()Lcom/mojang/datafixers/DataFixer;	b	createFixerUpper
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$addFixers$1
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$addFixers$0
	f	Ljava/util/function/BiFunction;	a	SAME
	f	Ljava/util/function/BiFunction;	b	SAME_NAMESPACED
	f	Lcom/mojang/datafixers/DataFixer;	c	DATA_FIXER
c	ake$1	net/minecraft/util/datafix/DataFixers$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	ake$2	net/minecraft/util/datafix/DataFixers$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	akf	net/minecraft/util/datafix/PackedBitStorage
	m	()[J	a	getRaw
	m	(I)I	a	get
	m	(II)V	a	set
	m	()I	b	getBits
	f	I	a	BIT_TO_LONG_SHIFT
	f	[J	b	data
	f	I	c	bits
	f	J	d	mask
	f	I	e	size
c	akg	net/minecraft/util/datafix/fixes/AbstractArrowPickupFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateProjectiles
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updatePickup
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateEntity$0
c	akh	net/minecraft/util/datafix/fixes/AbstractUUIDFix
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateNamedChoice
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	createUUIDFromML
	m	(Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional;	a	createUUIDTag
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$createUUIDFromString$4
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional;	a	createUUIDFromString
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	a	replaceUUIDString
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$replaceUUIDMLTag$2
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$replaceUUIDLeastMost$3
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateNamedChoice$0
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	b	replaceUUIDMLTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$replaceUUIDString$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	c	replaceUUIDLeastMost
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	d	createUUIDFromLongs
	f	Lcom/mojang/datafixers/DSL$TypeReference;	a	typeReference
c	aki	net/minecraft/util/datafix/fixes/AddFlagIfNotPresentFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
	f	Z	b	flagValue
	f	Ljava/lang/String;	c	flagKey
	f	Lcom/mojang/datafixers/DSL$TypeReference;	d	typeReference
c	akj	net/minecraft/util/datafix/fixes/AddNewChoices
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$0
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$1
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
c	akk	net/minecraft/util/datafix/fixes/AdvancementsFix
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
	f	Ljava/util/Map;	a	RENAMES
c	akl	net/minecraft/util/datafix/fixes/AdvancementsRenameFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Function;	b	renamer
c	akm	net/minecraft/util/datafix/fixes/AttributesRename
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixItemStackTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixName
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fixName$1
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixEntity$7
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	fixEntity
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixEntity$9
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	b	lambda$fixItemStackTag$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixEntity$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixEntity$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixItemStackTag$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$fixItemStackTag$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$fixItemStackTag$2
	f	Ljava/util/Map;	a	RENAMES
c	akn	net/minecraft/util/datafix/fixes/BedItemColorFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	ako	net/minecraft/util/datafix/fixes/BeehivePoiRenameFix
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
c	akp	net/minecraft/util/datafix/fixes/BiomeFix
	f	Ljava/util/Map;	a	BIOMES
c	akq	net/minecraft/util/datafix/fixes/BitStorageAlignFix
	m	(II[J)[J	a	addPadding
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSections$8
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateSections
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateSections$10
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateSections$9
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateHeightmaps
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateHeightmaps$5
	m	(Lcom/mojang/serialization/Dynamic;ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSections$7
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateHeightmaps$3
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateHeightmaps$4
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateBitStorage
	m	(Ljava/util/List;)Ljava/lang/Integer;	a	lambda$updateSections$6
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateHeightmaps$2
	f	I	a	BIT_TO_LONG_SHIFT
	f	I	b	SECTION_WIDTH
	f	I	c	SECTION_HEIGHT
	f	I	d	SECTION_SIZE
	f	I	e	HEIGHTMAP_BITS
	f	I	f	HEIGHTMAP_SIZE
c	akr	net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixTag$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixTag$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixTag$0
c	aks	net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$fix$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	()Ljava/lang/IllegalStateException;	b	lambda$fix$0
c	akt	net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	aku	net/minecraft/util/datafix/fixes/BlockEntityIdFix
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	f	Ljava/util/Map;	a	ID_MAP
c	akv	net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$fix$0
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	akw	net/minecraft/util/datafix/fixes/BlockEntityKeepPacked
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	akx	net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	aky	net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	updateLine
	f	Lcom/google/gson/Gson;	a	GSON
c	aky$1	net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix$1
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lqq;	a	deserialize
c	akz	net/minecraft/util/datafix/fixes/BlockEntityUUIDFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSkull$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateSkull
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateConduit
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateSkull$1
c	ala	net/minecraft/util/datafix/fixes/BlockNameFlatteningFix
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
c	alb	net/minecraft/util/datafix/fixes/BlockRenameFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	a	create
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixBlock
	f	Ljava/lang/String;	a	name
c	alb$1	net/minecraft/util/datafix/fixes/BlockRenameFix$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixBlock
	f	Ljava/util/function/Function;	a	val$fixBlock
c	alc	net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/DSL$TypeReference;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	b	create
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
c	alc$1	net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixBlock
	f	Ljava/util/function/Function;	a	val$fixBlock
c	ald	net/minecraft/util/datafix/fixes/BlockStateData
	m	()V	a	bootstrap0
	m	(I)Ljava/lang/String;	a	upgradeBlock
	m	(ILjava/lang/String;[Ljava/lang/String;)V	a	register
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	upgradeBlockStateTag
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	upgradeBlock
	m	()V	b	bootstrap1
	m	(I)Lcom/mojang/serialization/Dynamic;	b	getTag
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	b	lambda$static$0
	m	(Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	parse
	m	()V	c	bootstrap2
	m	()V	d	bootstrap3
	m	()V	e	bootstrap4
	m	()V	f	bootstrap5
	m	()V	g	bootstrap6
	m	()V	h	bootstrap7
	m	()V	i	bootstrap8
	m	()V	j	bootstrap9
	m	()V	k	bootstrap10
	m	()V	l	bootstrap11
	m	()V	m	bootstrap12
	m	()V	n	bootstrap13
	m	()V	o	bootstrap14
	m	()V	p	bootstrap15
	m	()V	q	finalizeMaps
	f	Ljava/lang/String;	a	FILTER_ME
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	[Lcom/mojang/serialization/Dynamic;	c	MAP
	f	[Lcom/mojang/serialization/Dynamic;	d	BLOCK_DEFAULTS
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	ID_BY_OLD
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	f	ID_BY_OLD_NAME
c	ale	net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	alf	net/minecraft/util/datafix/fixes/CatTypeFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	alg	net/minecraft/util/datafix/fixes/CauldronRenameFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
c	alh	net/minecraft/util/datafix/fixes/CavesAndCliffsRenames
	f	Lcom/google/common/collect/ImmutableMap;	a	RENAMES
c	ali	net/minecraft/util/datafix/fixes/ChunkBedBlockEntityInjecterFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$4
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$0
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Integer;	a	lambda$cap$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$1
c	alj	net/minecraft/util/datafix/fixes/ChunkBiomeFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	alk	net/minecraft/util/datafix/fixes/ChunkHeightAndBiomeFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$7
	m	(I)I	a	ceillog2
	m	(IILcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateCarvingMasks$21
	m	(J)J	a	lambda$getFixedHeightmap$23
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$11
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$10
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	shiftUpgradeData
	m	(Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateCarvingMasks
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	makePalettedContainer
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/util/List;)Lcom/mojang/serialization/Dynamic;	a	padPaletteEntries
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lcom/mojang/serialization/Dynamic;	a	makeBiomeContainer
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Integer;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeBiomeContainer$24
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	addPaddingEntries
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Set;)Lcom/mojang/serialization/Dynamic;	a	predictChunkStatusBeforeSurface
	m	(Lcom/mojang/serialization/Dynamic;ZILorg/apache/commons/lang3/mutable/MutableBoolean;)[Lcom/mojang/serialization/Dynamic;	a	getBiomeContainers
	m	(Lcom/mojang/serialization/Dynamic;ZZZLjava/util/function/Supplier;)Lcom/mojang/serialization/Dynamic;	a	updateChunkTag
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$shiftUpgradeData$18
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/lang/Integer;)V	a	lambda$shiftUpgradeData$17
	m	(Ljava/util/Map;Ljava/util/Map;)V	a	lambda$shiftUpgradeData$19
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$predictChunkStatusBeforeSurface$12
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;I[Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/IntSet;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$6
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;I[Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$8
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$makeRule$4
	m	(ZLjava/util/Set;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$9
	m	([II)I	a	getOldBiome
	m	([III)I	a	lambda$getBiomeContainers$14
	m	()Ljava/lang/IllegalStateException;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateHeightmaps
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	makeOptimizedPalettedContainer
	m	([II)I	b	lambda$getBiomeContainers$16
	m	([III)I	b	lambda$getBiomeContainers$13
	m	()Laln$a;	c	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	getFixedHeightmap
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$3
	m	([II)I	c	lambda$getBiomeContainers$15
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	makePalettedContainer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateHeightmaps$22
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$shiftUpgradeData$20
	m	(Lcom/mojang/serialization/Dynamic;)Laln$a;	g	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	h	lambda$makeRule$2
	f	Ljava/lang/String;	a	DATAFIXER_CONTEXT_TAG
	f	I	b	BLOCKS_PER_SECTION
	f	Ljava/lang/String;	c	DEFAULT_BIOME
	f	Ljava/lang/String;	d	NAME
	f	I	e	OLD_SECTION_COUNT
	f	I	f	NEW_SECTION_COUNT
	f	I	g	NEW_MIN_SECTION_Y
	f	I	h	LONGS_PER_SECTION
	f	I	i	HEIGHTMAP_BITS
	f	J	j	HEIGHTMAP_MASK
	f	I	k	HEIGHTMAP_OFFSET
	f	[Ljava/lang/String;	l	HEIGHTMAP_TYPES
	f	Ljava/util/Set;	m	STATUS_IS_OR_AFTER_SURFACE
	f	Ljava/util/Set;	n	STATUS_IS_OR_AFTER_NOISE
	f	Ljava/util/Set;	o	BLOCKS_BEFORE_FEATURE_STATUS
	f	I	p	BIOME_CONTAINER_LAYER_SIZE
	f	I	q	BIOME_CONTAINER_SIZE
	f	I	r	BIOME_CONTAINER_TOP_LAYER_OFFSET
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	s	BIOMES_BY_ID
c	all	net/minecraft/util/datafix/fixes/ChunkLightRemoveFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	alm	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix
	m	(Laim;Lcom/mojang/serialization/Dynamic;)I	a	idFor
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	a	getName
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String;	a	getProperty
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$4
	m	(Ljava/util/HashMap;)V	a	lambda$static$6
	m	(Ljava/util/Map;ILjava/lang/String;)V	a	addBeds
	m	(Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V	a	mapSkull
	m	(Ljava/util/Map;Ljava/lang/String;I)V	a	mapDoor
	m	(ZZZZ)I	a	getSideMask
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fix
	m	(Ljava/util/HashMap;)V	b	lambda$static$5
	m	(Ljava/util/Map;ILjava/lang/String;)V	b	addBanners
	m	(Ljava/util/HashMap;)V	c	lambda$static$3
	m	(Ljava/util/HashMap;)V	d	lambda$static$2
	m	(Ljava/util/HashMap;)V	e	lambda$static$1
	m	(Ljava/util/HashMap;)V	f	lambda$static$0
	f	Ljava/util/Map;	A	BED_BLOCK_MAP
	f	Ljava/util/Map;	B	BANNER_BLOCK_MAP
	f	Lcom/mojang/serialization/Dynamic;	C	AIR
	f	I	D	SIZE
	f	I	a	NORTH_WEST_MASK
	f	I	b	WEST_MASK
	f	I	c	SOUTH_WEST_MASK
	f	I	d	SOUTH_MASK
	f	I	e	SOUTH_EAST_MASK
	f	I	f	EAST_MASK
	f	I	g	NORTH_EAST_MASK
	f	I	h	NORTH_MASK
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	Ljava/util/BitSet;	j	VIRTUAL
	f	Ljava/util/BitSet;	k	FIX
	f	Lcom/mojang/serialization/Dynamic;	l	PUMPKIN
	f	Lcom/mojang/serialization/Dynamic;	m	SNOWY_PODZOL
	f	Lcom/mojang/serialization/Dynamic;	n	SNOWY_GRASS
	f	Lcom/mojang/serialization/Dynamic;	o	SNOWY_MYCELIUM
	f	Lcom/mojang/serialization/Dynamic;	p	UPPER_SUNFLOWER
	f	Lcom/mojang/serialization/Dynamic;	q	UPPER_LILAC
	f	Lcom/mojang/serialization/Dynamic;	r	UPPER_TALL_GRASS
	f	Lcom/mojang/serialization/Dynamic;	s	UPPER_LARGE_FERN
	f	Lcom/mojang/serialization/Dynamic;	t	UPPER_ROSE_BUSH
	f	Lcom/mojang/serialization/Dynamic;	u	UPPER_PEONY
	f	Ljava/util/Map;	v	FLOWER_POT_MAP
	f	Ljava/util/Map;	w	SKULL_MAP
	f	Ljava/util/Map;	x	DOOR_MAP
	f	Ljava/util/Map;	y	NOTE_BLOCK_MAP
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	z	DYE_COLOR_MAP
c	alm$1	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$1
	f	[I	a	$SwitchMap$net$minecraft$util$datafix$fixes$ChunkPalettedStorageFix$Direction$Axis
c	alm$a	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer
	m	(I)Z	a	isFirst
	m	(III)I	a	get
	m	(I)I	b	getPosition
	f	I	a	SIZE
	f	I	b	NIBBLE_SIZE
	f	[B	c	data
c	alm$b	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction
	m	()Lalm$b$b;	a	getAxisDirection
	m	()Lalm$b$a;	b	getAxis
	m	()[Lalm$b;	c	$values
	f	Lalm$b;	a	DOWN
	f	Lalm$b;	b	UP
	f	Lalm$b;	c	NORTH
	f	Lalm$b;	d	SOUTH
	f	Lalm$b;	e	WEST
	f	Lalm$b;	f	EAST
	f	Lalm$b$a;	g	axis
	f	Lalm$b$b;	h	axisDirection
	f	[Lalm$b;	i	$VALUES
c	alm$b$a	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis
	m	()[Lalm$b$a;	a	$values
	f	Lalm$b$a;	a	X
	f	Lalm$b$a;	b	Y
	f	Lalm$b$a;	c	Z
	f	[Lalm$b$a;	d	$VALUES
c	alm$b$b	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection
	m	()I	a	getStep
	m	()[Lalm$b$b;	b	$values
	f	Lalm$b$b;	a	POSITIVE
	f	Lalm$b$b;	b	NEGATIVE
	f	I	c	step
	f	[Lalm$b$b;	d	$VALUES
c	alm$c	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section
	m	()Lcom/mojang/serialization/Dynamic;	a	write
	m	(I)Lcom/mojang/serialization/Dynamic;	a	getBlock
	m	(II)V	a	addFix
	m	(ILcom/mojang/serialization/Dynamic;)V	a	setBlock
	m	(Ljava/nio/ByteBuffer;)Lalm$a;	a	lambda$upgrade$1
	m	(I)I	b	upgrade
	m	(Ljava/nio/ByteBuffer;)Lalm$a;	b	lambda$upgrade$0
	f	I	a	y
	f	Laim;	b	palette
	f	Ljava/util/List;	c	listTag
	f	Lcom/mojang/serialization/Dynamic;	d	section
	f	Z	e	hasData
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	toFix
	f	Lit/unimi/dsi/fastutil/ints/IntList;	g	update
	f	Ljava/util/Set;	h	seen
	f	[I	i	buffer
c	alm$d	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk
	m	()Lcom/mojang/serialization/Dynamic;	a	write
	m	(I)Lcom/mojang/serialization/Dynamic;	a	getBlock
	m	(ILalm$b;)I	a	relative
	m	(ILcom/mojang/serialization/Dynamic;)V	a	setBlock
	m	(Lcom/mojang/serialization/Dynamic;)V	a	lambda$new$2
	m	(Ljava/util/stream/Stream;)V	a	lambda$new$3
	m	(I)Lcom/mojang/serialization/Dynamic;	b	getBlockEntity
	m	(Lcom/mojang/serialization/Dynamic;)V	b	lambda$new$0
	m	(Ljava/util/stream/Stream;)V	b	lambda$new$1
	m	(I)Lcom/mojang/serialization/Dynamic;	c	removeBlockEntity
	m	(I)Lalm$c;	d	getSection
	f	I	a	sides
	f	[Lalm$c;	b	sections
	f	Lcom/mojang/serialization/Dynamic;	c	level
	f	I	d	x
	f	I	e	z
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	blockEntities
c	aln	net/minecraft/util/datafix/fixes/ChunkProtoTickListFix
	m	(BLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$9
	m	(I)Z	a	lambda$makeTickList$14
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$12
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$11
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lorg/apache/commons/lang3/mutable/MutableInt;Lcom/mojang/datafixers/OpticFinder;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lorg/apache/commons/lang3/mutable/MutableInt;Lcom/mojang/datafixers/OpticFinder;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$6
	m	(Lcom/mojang/datafixers/Typed;)Ljava/util/List;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;)Laln$a;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	a	getBlock
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$10
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;BIILjava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	makeTickList
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIIILjava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	createTick
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIILjava/util/function/Function;I)Lcom/mojang/serialization/Dynamic;	a	lambda$makeTickList$15
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;ILcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$5
	m	(BLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$8
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	b	getLiquid
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)I	c	lambda$makeTickList$13
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/List;	d	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$makeRule$1
	f	I	a	SECTION_WIDTH
	f	Lcom/google/common/collect/ImmutableSet;	b	ALWAYS_WATERLOGGED
c	aln$a	net/minecraft/util/datafix/fixes/ChunkProtoTickListFix$PoorMansPalettedContainer
	m	()Ljava/util/List;	a	palette
	m	(III)Lcom/mojang/serialization/Dynamic;	a	get
	m	()[J	b	data
	m	(III)I	b	getIndex
	f	J	a	SIZE_BITS
	f	Ljava/util/List;	b	palette
	f	[J	c	data
	f	I	d	bits
	f	J	e	mask
	f	I	f	valuesPerLong
c	alo	net/minecraft/util/datafix/fixes/ChunkRenamesFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	appendChunkName
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	mergeRemainders
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed;	a	renameField
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	renameFieldHelper
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	lambda$mergeRemainders$4
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/Dynamic;	a	lambda$mergeRemainders$5
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$renameField$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
c	alp	net/minecraft/util/datafix/fixes/ChunkStatusFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	alq	net/minecraft/util/datafix/fixes/ChunkStatusFix2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	f	Ljava/util/Map;	a	RENAMES_AND_DOWNGRADES
c	alr	net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	f	Lcom/google/common/collect/ImmutableMap;	a	RENAMES
c	als	net/minecraft/util/datafix/fixes/ChunkToProtochunkFix
	m	(I)Lit/unimi/dsi/fastutil/shorts/ShortArrayList;	a	lambda$repackTicks$3
	m	(III)S	a	packOffsetCoordinates
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixChunkData
	m	(Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$5
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackBiomes$2
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/shorts/ShortList;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$6
	m	(Lcom/mojang/serialization/Dynamic;Ljava/nio/ByteBuffer;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackBiomes$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$7
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;)V	a	lambda$repackTicks$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	repackBiomes
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	repackTicks
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
	f	I	a	NUM_SECTIONS
c	alt	net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	alu	net/minecraft/util/datafix/fixes/DyeItemRenameFix
	f	Ljava/util/Map;	a	RENAMED_IDS
c	alv	net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	alw	net/minecraft/util/datafix/fixes/EntityBlockStateFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateFallingBlock
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed;	a	updateBlockToBlockState
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$7
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$8
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$updateFallingBlock$10
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Unit;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$9
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateBlockToBlockState$12
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$updateBlockToBlockState$11
	m	(Ljava/lang/String;)I	a	getBlockId
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$4
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	b	lambda$updateFallingBlock$6
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$makeRule$1
	f	Ljava/util/Map;	a	MAP
c	alx	net/minecraft/util/datafix/fixes/EntityCatSplitFix
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
c	aly	net/minecraft/util/datafix/fixes/EntityCodSalmonFix
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
	f	Ljava/util/Map;	a	RENAMED_IDS
	f	Ljava/util/Map;	b	RENAMED_EGG_IDS
c	alz	net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTagCustomName
c	ama	net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
c	amb	net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$0
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$2
	m	(Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$1
c	amc	net/minecraft/util/datafix/fixes/EntityHealthFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	f	Ljava/util/Set;	a	ENTITIES
c	amd	net/minecraft/util/datafix/fixes/EntityHorseSaddleFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	ame	net/minecraft/util/datafix/fixes/EntityHorseSplitFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$fix$0
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
c	amf	net/minecraft/util/datafix/fixes/EntityIdFix
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	f	Ljava/util/Map;	a	ID_MAP
c	amg	net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix
	m	(B)B	a	direction2dTo3d
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	amh	net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$0
	f	Ljava/util/List;	a	MINECART_BY_ID
c	ami	net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic;	a	doFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
	f	[[I	a	DIRECTIONS
c	amj	net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	f	Ljava/util/Map;	a	MAP
c	amk	net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix
	m	(JJ)[I	a	createUUIDArray
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateProjectiles
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateOwnerArrow
	m	(Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic;	a	setUUID
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateEntity$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateOwnerLlamaSpit
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateItemPotion
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updateOwnerThrowable
c	aml	net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
	f	Ljava/util/Map;	a	RENAMED_IDS
c	amm	net/minecraft/util/datafix/fixes/EntityRavagerRenameFix
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
	f	Ljava/util/Map;	a	RENAMED_IDS
c	amn	net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix
	m	(ILjava/util/List;)Ljava/lang/Boolean;	a	lambda$isZeroList$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/OptionalDynamic;I)Z	a	isZeroList
	m	(Ljava/lang/Float;)Z	a	lambda$isZeroList$2
	f	Lcom/mojang/serialization/Codec;	a	FLOAT_LIST_CODEC
c	amo	net/minecraft/util/datafix/fixes/EntityRenameFix
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	getEntity
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
	f	Ljava/lang/String;	a	name
c	amp	net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$6
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$5
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Either;	a	lambda$cap$2
	m	()Ljava/lang/IllegalStateException;	b	lambda$cap$3
	m	()Ljava/lang/IllegalStateException;	c	lambda$cap$1
	m	()Ljava/lang/IllegalStateException;	d	lambda$cap$0
c	amq	net/minecraft/util/datafix/fixes/EntityShulkerColorFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	amr	net/minecraft/util/datafix/fixes/EntityShulkerRotationFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Double;	b	lambda$fixTag$0
c	ams	net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
c	amt	net/minecraft/util/datafix/fixes/EntityStringUuidFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	amu	net/minecraft/util/datafix/fixes/EntityTheRenameningFix
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
	f	Ljava/util/Map;	a	RENAMED_IDS
	f	Ljava/util/Map;	b	RENAMED_BLOCKS
	f	Ljava/util/Map;	c	RENAMED_ITEMS
	f	Ljava/lang/String;	d	MINECRAFT_BRED
c	amv	net/minecraft/util/datafix/fixes/EntityTippedArrowFix
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
c	amw	net/minecraft/util/datafix/fixes/EntityUUIDFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateProjectile$14
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateLivingEntity
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateLivingEntity$13
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateEntityUUID
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$updateLivingEntity$11
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updatePiglin
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateFox$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	updateEvokerFangs
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateFox$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	updateZombieVillager
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	updateAreaEffectCloud
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	updateShulkerBullet
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	updateItem
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	j	updateFox
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	k	updateHurtBy
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	l	updateAnimalOwner
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	m	updateAnimal
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	n	updateMob
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	o	updateProjectile
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	p	lambda$updateLivingEntity$12
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	q	lambda$updateLivingEntity$10
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	r	lambda$updateMob$9
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	s	lambda$updateFox$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	t	lambda$updateFox$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	u	lambda$updatePiglin$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	v	lambda$updatePiglin$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	w	lambda$updatePiglin$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	x	lambda$updatePiglin$1
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Set;	c	ABSTRACT_HORSES
	f	Ljava/util/Set;	d	TAMEABLE_ANIMALS
	f	Ljava/util/Set;	e	ANIMALS
	f	Ljava/util/Set;	f	MOBS
	f	Ljava/util/Set;	g	LIVING_ENTITIES
	f	Ljava/util/Set;	h	PROJECTILES
c	amx	net/minecraft/util/datafix/fixes/EntityWolfColorFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$0
c	amy	net/minecraft/util/datafix/fixes/EntityZombieSplitFix
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
c	amz	net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix
	m	(I)I	a	getVillagerProfession
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	f	I	a	PROFESSION_MAX
	f	Ljava/util/Random;	b	RANDOM
c	ana	net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
	f	Ljava/util/Map;	a	RENAMED_IDS
c	anb	net/minecraft/util/datafix/fixes/ForcePoiRebuild
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$cap$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$cap$2
c	anc	net/minecraft/util/datafix/fixes/FurnaceRecipeFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateFurnaceContents
	m	(Lcom/mojang/datafixers/types/Type;Ljava/util/List;ILcom/mojang/serialization/Dynamic;)V	a	lambda$updateFurnaceContents$5
	m	(Ljava/util/List;ILcom/mojang/datafixers/util/Pair;)V	a	lambda$updateFurnaceContents$4
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$cap$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$cap$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$cap$0
c	and	net/minecraft/util/datafix/fixes/GossipUUIDFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$3
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fix$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$0
c	ane	net/minecraft/util/datafix/fixes/HeightmapRenamingFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
c	anf	net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$removeIglooPieces$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	removeIglooPieces
	m	(Ljava/util/stream/Stream;)Ljava/lang/Boolean;	b	lambda$fixTag$0
	m	(Lcom/mojang/serialization/Dynamic;)Z	c	isIglooPiece
	m	(Lcom/mojang/serialization/Dynamic;)Z	d	lambda$removeIglooPieces$1
c	ang	net/minecraft/util/datafix/fixes/ItemBannerColorFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	anh	net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	ani	net/minecraft/util/datafix/fixes/ItemIdFix
	m	(I)Ljava/lang/String;	a	getItem
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
	m	(Ljava/lang/Integer;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	ITEM_NAMES
c	anj	net/minecraft/util/datafix/fixes/ItemLoreFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixLoreList$5
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixLoreEntry
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	fixLoreList
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
c	ank	net/minecraft/util/datafix/fixes/ItemPotionFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	([Ljava/lang/String;)V	a	lambda$static$0
	f	Ljava/lang/String;	a	DEFAULT
	f	I	b	SPLASH
	f	[Ljava/lang/String;	c	POTIONS
c	anl	net/minecraft/util/datafix/fixes/ItemRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	a	create
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixItem
	f	Ljava/lang/String;	a	name
c	anl$1	net/minecraft/util/datafix/fixes/ItemRenameFix$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixItem
	f	Ljava/util/function/Function;	a	val$fixItem
c	anm	net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	f	[Ljava/lang/String;	a	NAMES_BY_COLOR
c	ann	net/minecraft/util/datafix/fixes/ItemSpawnEggFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$6
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$4
	m	([Ljava/lang/String;)V	a	lambda$static$0
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	b	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	c	lambda$makeRule$1
	f	[Ljava/lang/String;	a	ID_TO_ENTITY
c	ano	net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$7
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	b	lambda$fixTag$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixTag$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixTag$3
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	MAP
c	anp	net/minecraft/util/datafix/fixes/ItemStackMapIdFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	anq	net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	f	Ljava/util/Map;	a	MAP
c	anr	net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$static$1
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	updateItem
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	f	Ljava/util/Map;	a	MAP
	f	Ljava/util/Set;	b	IDS
	f	Ljava/util/Set;	c	DAMAGE_IDS
c	ans	net/minecraft/util/datafix/fixes/ItemStackUUIDFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Boolean;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateAttributeModifiers$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateAttributeModifiers
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateSkullOwner
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateSkullOwner$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateAttributeModifiers$4
c	ant	net/minecraft/util/datafix/fixes/ItemWaterPotionFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	anu	net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixTag$2
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$0
c	anv	net/minecraft/util/datafix/fixes/JigsawPropertiesFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	anw	net/minecraft/util/datafix/fixes/JigsawRotationFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$0
	f	Ljava/util/Map;	a	RENAMES
c	anx	net/minecraft/util/datafix/fixes/LeavesFix
	m	(I)I	a	getX
	m	(III)I	a	getIndex
	m	(Lanx$a;)Lanx$a;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$6
	m	(Lcom/mojang/datafixers/OpticFinder;[ILcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lanx$a;	a	lambda$makeRule$1
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$0
	m	(ZZZZ)I	a	getSideMask
	m	([ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$5
	m	(I)I	b	getY
	m	(I)I	c	getZ
	f	I	a	NORTH_WEST_MASK
	f	I	b	WEST_MASK
	f	I	c	SOUTH_WEST_MASK
	f	I	d	SOUTH_MASK
	f	I	e	SOUTH_EAST_MASK
	f	I	f	EAST_MASK
	f	I	g	NORTH_EAST_MASK
	f	I	h	NORTH_MASK
	f	[[I	i	DIRECTIONS
	f	I	j	DECAY_DISTANCE
	f	I	k	SIZE_BITS
	f	I	l	SIZE
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	m	LEAVES
	f	Ljava/util/Set;	n	LOGS
c	anx$a	net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection
	m	()Z	a	skippable
	m	(I)Z	a	isLog
	m	(III)V	a	setDistance
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic;	a	makeLeafTag
	m	(I)Z	b	isLeaf
	m	(I)I	d	getDistance
	f	Ljava/lang/String;	h	PERSISTENT
	f	Ljava/lang/String;	i	DECAYABLE
	f	Ljava/lang/String;	j	DISTANCE
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	k	leaveIds
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	l	logIds
	f	Lit/unimi/dsi/fastutil/ints/Int2IntMap;	m	stateToIdMap
c	anx$b	net/minecraft/util/datafix/fixes/LeavesFix$Section
	m	()Z	a	skippable
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	write
	m	(Lcom/mojang/serialization/Dynamic;)V	a	readStorage
	m	(Ljava/lang/String;ZI)I	a	getStateId
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$new$0
	m	()Z	b	isSkippable
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	b	lambda$write$2
	m	()I	c	getIndex
	m	(I)I	c	getBlock
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$write$1
	f	Ljava/lang/String;	a	BLOCK_STATES_TAG
	f	Ljava/lang/String;	b	NAME_TAG
	f	Ljava/lang/String;	c	PROPERTIES_TAG
	f	Lcom/mojang/datafixers/OpticFinder;	d	paletteFinder
	f	Ljava/util/List;	e	palette
	f	I	f	index
	f	Lakf;	g	storage
	f	Lcom/mojang/datafixers/types/Type;	h	blockStateType
c	any	net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object;	a	lambda$convert$4
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$convert$6
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	getLayerInfoFromString
	m	(Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	convert
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	b	lambda$convert$5
	m	(Ljava/lang/String;)Ljava/util/List;	b	getLayersInfoFromString
	f	Ljava/util/Map;	a	MAP
	f	Ljava/lang/String;	b	GENERATOR_OPTIONS
c	anz	net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix
	m	(Lcom/google/common/base/Splitter;ILjava/lang/String;)Ljava/lang/String;	a	lambda$fixString$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixString
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$1
	f	Ljava/lang/String;	a	DEFAULT
	f	Ljava/lang/String;	b	GENERATOR_OPTIONS
	f	Lcom/google/common/base/Splitter;	c	SPLITTER
	f	Lcom/google/common/base/Splitter;	d	LAYER_SPLITTER
	f	Lcom/google/common/base/Splitter;	e	OLD_AMOUNT_SPLITTER
	f	Lcom/google/common/base/Splitter;	f	AMOUNT_SPLITTER
	f	Lcom/google/common/base/Splitter;	g	BLOCK_SPLITTER
c	aoa	net/minecraft/util/datafix/fixes/LevelUUIDFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateCustomBossEvents$11
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateCustomBossEvents$9
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$updateDragonFight$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateWanderingTrader
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateDragonFight
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updateCustomBossEvents
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateCustomBossEvents$12
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$updateCustomBossEvents$10
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$updateCustomBossEvents$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$updateCustomBossEvents$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	lambda$updateDragonFight$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	j	lambda$updateDragonFight$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	k	lambda$updateDragonFight$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	l	lambda$makeRule$0
	f	Lorg/slf4j/Logger;	b	LOGGER
c	aob	net/minecraft/util/datafix/fixes/MapIdFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	aoc	net/minecraft/util/datafix/fixes/MemoryExpiryDataFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	updateMemoryEntry
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateBrain
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateMemories
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	wrapMemoryValue
c	aod	net/minecraft/util/datafix/fixes/MissingDimensionFix
	m	(Lcom/mojang/datafixers/FieldFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/Type;	a	flatType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	recreateSettings
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	a	fields
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	a	optionalFields
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	b	optionalFields
c	aoe	net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$0
c	aof	net/minecraft/util/datafix/fixes/NamedEntityFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	entityName
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	type
c	aog	net/minecraft/util/datafix/fixes/NewVillageFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$10
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$9
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$8
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$13
	m	(Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$12
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$5
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$cap$1
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/util/Pair;)Z	b	lambda$cap$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$cap$11
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$cap$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$cap$6
c	aoh	net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
c	aoi	net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Ljava/lang/String;)Ldqp$a;	a	getRenderType
c	aoj	net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	aok	net/minecraft/util/datafix/fixes/OminousBannerRenameFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	aol	net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Ljava/lang/String;)D	a	calculateBackground
c	aom	net/minecraft/util/datafix/fixes/OptionsForceVBOFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	aon	net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	f	Ljava/lang/String;	a	KEY_UNKNOWN
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	MAP
c	aoo	net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
c	aop	net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	aoq	net/minecraft/util/datafix/fixes/OptionsRenameFieldFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	f	Ljava/lang/String;	a	fixName
	f	Ljava/lang/String;	b	fieldFrom
	f	Ljava/lang/String;	c	fieldTo
c	aor	net/minecraft/util/datafix/fixes/OverreachingTickFix
	m	(IILcom/mojang/serialization/Dynamic;)Z	a	lambda$extractOverreachingTicks$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;IILjava/util/Optional;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	extractOverreachingTicks
	m	(Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	aos	net/minecraft/util/datafix/fixes/PlayerUUIDFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$0
c	aot	net/minecraft/util/datafix/fixes/PoiTypeRename
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	a	lambda$renameRecords$8
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	b	renameRecords
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$renameRecords$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$renameRecords$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$cap$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$cap$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$cap$2
c	aou	net/minecraft/util/datafix/fixes/RecipesFix
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
	f	Ljava/util/Map;	a	RECIPES
c	aov	net/minecraft/util/datafix/fixes/RecipesRenameFix
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Function;	b	renamer
c	aow	net/minecraft/util/datafix/fixes/RecipesRenameningFix
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
	f	Ljava/util/Map;	a	RECIPES
c	aox	net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateRedstoneConnections
	m	(Ljava/lang/String;)Z	a	isConnected
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateRedstoneConnections$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateRedstoneConnections$5
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateRedstoneConnections$3
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$updateRedstoneConnections$2
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateRedstoneConnections$1
c	aoy	net/minecraft/util/datafix/fixes/References
	m	()Ljava/lang/String;	a	lambda$static$25
	m	()Ljava/lang/String;	b	lambda$static$24
	m	()Ljava/lang/String;	c	lambda$static$23
	m	()Ljava/lang/String;	d	lambda$static$22
	m	()Ljava/lang/String;	e	lambda$static$21
	m	()Ljava/lang/String;	f	lambda$static$20
	m	()Ljava/lang/String;	g	lambda$static$19
	m	()Ljava/lang/String;	h	lambda$static$18
	m	()Ljava/lang/String;	i	lambda$static$17
	m	()Ljava/lang/String;	j	lambda$static$16
	m	()Ljava/lang/String;	k	lambda$static$15
	m	()Ljava/lang/String;	l	lambda$static$14
	m	()Ljava/lang/String;	m	lambda$static$13
	m	()Ljava/lang/String;	n	lambda$static$12
	m	()Ljava/lang/String;	o	lambda$static$11
	m	()Ljava/lang/String;	p	lambda$static$10
	m	()Ljava/lang/String;	q	lambda$static$9
	m	()Ljava/lang/String;	r	lambda$static$8
	m	()Ljava/lang/String;	s	lambda$static$7
	m	()Ljava/lang/String;	t	lambda$static$6
	m	()Ljava/lang/String;	u	lambda$static$5
	m	()Ljava/lang/String;	v	lambda$static$4
	m	()Ljava/lang/String;	w	lambda$static$3
	m	()Ljava/lang/String;	x	lambda$static$2
	m	()Ljava/lang/String;	y	lambda$static$1
	m	()Ljava/lang/String;	z	lambda$static$0
	f	Lcom/mojang/datafixers/DSL$TypeReference;	a	LEVEL
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	PLAYER
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	d	HOTBAR
	f	Lcom/mojang/datafixers/DSL$TypeReference;	e	OPTIONS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	f	STRUCTURE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	g	STATS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	h	SAVED_DATA
	f	Lcom/mojang/datafixers/DSL$TypeReference;	i	ADVANCEMENTS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	j	POI_CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	k	ENTITY_CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	l	BLOCK_ENTITY
	f	Lcom/mojang/datafixers/DSL$TypeReference;	m	ITEM_STACK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	n	BLOCK_STATE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	o	ENTITY_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	p	ENTITY_TREE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	q	ENTITY
	f	Lcom/mojang/datafixers/DSL$TypeReference;	r	BLOCK_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	s	ITEM_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	t	UNTAGGED_SPAWNER
	f	Lcom/mojang/datafixers/DSL$TypeReference;	u	STRUCTURE_FEATURE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	v	OBJECTIVE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	w	TEAM
	f	Lcom/mojang/datafixers/DSL$TypeReference;	x	RECIPE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	y	BIOME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	z	WORLD_GEN_SETTINGS
c	aoz	net/minecraft/util/datafix/fixes/RemoveGolemGossipFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixValue
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixValue$1
	m	(Lcom/mojang/serialization/Dynamic;)Z	b	lambda$fixValue$0
c	apa	net/minecraft/util/datafix/fixes/RenameBiomesFix
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Map;	b	biomes
c	apb	net/minecraft/util/datafix/fixes/RenamedCoralFansFix
	f	Ljava/util/Map;	a	RENAMED_IDS
c	apc	net/minecraft/util/datafix/fixes/RenamedCoralFix
	f	Ljava/util/Map;	a	RENAMED_IDS
c	apd	net/minecraft/util/datafix/fixes/ReorganizePoi
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
c	ape	net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixFeature
	m	(Lcom/mojang/serialization/Dynamic;[Ljava/lang/String;)Lcom/mojang/serialization/OptionalDynamic;	a	get
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	a	getReplacement
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	updateChildren
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateChildren
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateChildren$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateChildren$0
	f	Ljava/util/regex/Pattern;	a	INDEX_PATTERN
	f	Ljava/util/Set;	b	PIECE_TYPE
	f	Ljava/util/Set;	c	FEATURES
c	apf	net/minecraft/util/datafix/fixes/SavedDataUUIDFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$makeRule$0
	f	Lorg/slf4j/Logger;	b	LOGGER
c	apg	net/minecraft/util/datafix/fixes/SavedDataVillageCropFix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	updateCrop
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	updateChildren
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateChildren
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateSingleField
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updateDoubleField
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateChildren$0
c	aph	net/minecraft/util/datafix/fixes/SimpleEntityRenameFix
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
c	api	net/minecraft/util/datafix/fixes/SimplestEntityRenameFix
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$4
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
	f	Ljava/lang/String;	a	name
c	apj	net/minecraft/util/datafix/fixes/SpawnerDataFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	wrapEntityToSpawnData
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair;	a	lambda$wrapSpawnPotentialsToWeightedEntries$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	wrapSpawnPotentialsToWeightedEntries
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$makeRule$0
c	apk	net/minecraft/util/datafix/fixes/StatsCounterFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Ljava/lang/String;)Ljava/lang/String;	a	upgradeItem
	m	(Ljava/lang/String;)Ljava/lang/String;	b	upgradeBlock
	f	Ljava/util/Set;	a	SKIP
	f	Ljava/util/Map;	b	CUSTOM_MAP
	f	Ljava/lang/String;	c	BLOCK_KEY
	f	Ljava/lang/String;	d	NEW_BLOCK_KEY
	f	Ljava/util/Map;	e	ITEM_KEYS
	f	Ljava/util/Map;	f	ENTITY_KEYS
	f	Ljava/util/Map;	g	ENTITIES
	f	Ljava/lang/String;	h	NEW_CUSTOM_KEY
c	apl	net/minecraft/util/datafix/fixes/StatsRenameFix
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	a	createCriteriaRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$8
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$6
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$createStatRule$5
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	b	createStatRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$createCriteriaRule$1
	m	()Ljava/lang/IllegalStateException;	c	lambda$createCriteriaRule$0
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Map;	b	renames
c	apm	net/minecraft/util/datafix/fixes/StriderGravityFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	apn	net/minecraft/util/datafix/fixes/StructureReferenceCountFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	setCountToAtLeastOne
	m	(Ljava/lang/Integer;)Z	a	lambda$setCountToAtLeastOne$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$setCountToAtLeastOne$2
c	apo	net/minecraft/util/datafix/fixes/StructureSettingsFlattenFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	fixDimension
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixStructures
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$fixStructures$5
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixStructures$4
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixStructures$6
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixDimension$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixDimension$2
c	app	net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix
	m	(Lapp$a;Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;Lcom/mojang/serialization/Dynamic;)V	a	lambda$guessConfiguration$9
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	updateStart
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateReference$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;Lapp$a;)Ljava/util/Optional;	a	guessConfiguration
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateReferences$6
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateStarts
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$updateReferences$5
	m	(Lapp$a;Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;Lcom/mojang/serialization/Dynamic;)V	b	lambda$guessConfiguration$8
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	b	updateReference
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$updateStarts$4
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateReferences
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	b	lambda$updateStarts$3
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	findUpdatedStructureType
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fix$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fix$0
	f	Ljava/util/Map;	a	CONVERSION_MAP
c	app$a	net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion
	m	()Ljava/util/Map;	a	biomeMapping
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ljava/util/Map$Entry;Ljava/lang/String;)V	a	lambda$unpack$0
	m	(Ljava/lang/String;)Lapp$a;	a	trivial
	m	(Ljava/util/Map;)Ljava/util/Map;	a	unpack
	m	(Ljava/util/Map;Ljava/lang/String;)Lapp$a;	a	biomeMapped
	m	()Ljava/lang/String;	b	fallback
	f	Ljava/util/Map;	a	biomeMapping
	f	Ljava/lang/String;	b	fallback
c	apq	net/minecraft/util/datafix/fixes/TeamDisplayNameFix
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$4
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
c	apr	net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix
	m	(IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	SIZE
	f	S	c	SIZE_BITS
c	apr$a	net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection
	m	()Z	a	skippable
	m	(I)Z	a	isTrappedChest
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	h	chestIds
c	aps	net/minecraft/util/datafix/fixes/VillagerDataFix
	m	(II)Ljava/lang/String;	a	upgradeData
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	apt	net/minecraft/util/datafix/fixes/VillagerFollowRangeFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixValue
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixValue$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixValue$0
	f	D	a	ORIGINAL_VALUE
	f	D	b	NEW_BASE_VALUE
c	apu	net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix
	m	(I)I	a	getMinXpPerLevel
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addXpFromLevel$6
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/lang/Integer;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed;	a	addLevel
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$addLevel$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	b	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed;	b	addXpFromLevel
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$addLevel$4
	f	I	a	TRADES_PER_LEVEL
	f	[I	b	LEVEL_XP_THRESHOLDS
c	apv	net/minecraft/util/datafix/fixes/VillagerTradeFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateItemStack
	m	(Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateItemStack$5
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$updateItemStack$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$fix$0
c	apw	net/minecraft/util/datafix/fixes/WallPropertyFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	upgradeBlockStateTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	fixWallProperty
	m	(Ljava/lang/String;)Ljava/lang/String;	a	mapProperty
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$upgradeBlockStateTag$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixWallProperty$1
	f	Ljava/util/Set;	a	WALL_BLOCKS
c	apx	net/minecraft/util/datafix/fixes/WeaponSmithChestLootTableFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	apy	net/minecraft/util/datafix/fixes/WorldGenSettingsDisallowOldCustomWorldsFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$makeRule$0
	m	(Ljava/util/Map;)Ljava/util/Map;	a	lambda$makeRule$1
c	apz	net/minecraft/util/datafix/fixes/WorldGenSettingsFix
	m	(JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	noise
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)V	a	lambda$fix$6
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic;	a	defaultOverworld
	m	(Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object;	a	vanillaLevels
	m	(Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic;	a	vanillaBiomeSource
	m	(Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$fixFlatStructures$7
	m	(Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V	a	lambda$fixFlatStructures$8
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map;	a	fixFlatStructures
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFlatStructures$12
	m	(Lcom/mojang/serialization/OptionalDynamic;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFlatStructures$11
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fix$1
	m	(Ljava/lang/String;I)I	a	getInt
	m	(Ljava/lang/String;II)I	a	getInt
	m	(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V	a	setSpacing
	m	(Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$fix$2
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$fixFlatStructures$9
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V	a	lambda$fixFlatStructures$10
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	b	lambda$fix$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fix$3
	f	Ljava/lang/String;	a	VILLAGE
	f	Ljava/lang/String;	b	DESERT_PYRAMID
	f	Ljava/lang/String;	c	IGLOO
	f	Ljava/lang/String;	d	JUNGLE_TEMPLE
	f	Ljava/lang/String;	e	SWAMP_HUT
	f	Ljava/lang/String;	f	PILLAGER_OUTPOST
	f	Ljava/lang/String;	g	END_CITY
	f	Ljava/lang/String;	h	WOODLAND_MANSION
	f	Ljava/lang/String;	i	OCEAN_MONUMENT
	f	Lcom/google/common/collect/ImmutableMap;	j	DEFAULTS
c	apz$a	net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration
	m	(Lapz$a;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	serialize
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lapz$a;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Lapz$a;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	spacing
	f	I	c	separation
	f	I	d	salt
c	aqa	net/minecraft/util/datafix/fixes/WorldGenSettingsHeightAndBiomeFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$9
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateLayers
	m	(ZLorg/apache/commons/lang3/mutable/MutableBoolean;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(ZZLcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$8
	m	(ZZLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$6
	m	()Ljava/lang/IllegalStateException;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$4
	m	(ZZLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
	f	Ljava/lang/String;	a	WAS_PREVIOUSLY_INCREASED_KEY
	f	Ljava/lang/String;	b	NAME
c	aqb	net/minecraft/util/datafix/fixes/WriteAndReadFix
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
c	aqc	net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	aqd	net/minecraft/util/datafix/fixes/package-info
c	aqe	net/minecraft/util/datafix/package-info
c	aqf	net/minecraft/util/datafix/schemas/NamespacedSchema
	m	()Lcom/mojang/datafixers/types/Type;	a	namespacedString
	m	(Ljava/lang/String;)Ljava/lang/String;	a	ensureNamespaced
	f	Lcom/mojang/serialization/codecs/PrimitiveCodec;	a	NAMESPACED_STRING_CODEC
	f	Lcom/mojang/datafixers/types/Type;	b	NAMESPACED_STRING
c	aqf$1	net/minecraft/util/datafix/schemas/NamespacedSchema$1
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Ljava/lang/Object;	a	write
c	aqg	net/minecraft/util/datafix/schemas/V100
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	equipment
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$1
c	aqh	net/minecraft/util/datafix/schemas/V102
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	aqi	net/minecraft/util/datafix/schemas/V1022
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$1
c	aqj	net/minecraft/util/datafix/schemas/V106
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	aqk	net/minecraft/util/datafix/schemas/V107
c	aql	net/minecraft/util/datafix/schemas/V1125
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$2
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$1
c	aqm	net/minecraft/util/datafix/schemas/V135
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	aqn	net/minecraft/util/datafix/schemas/V143
c	aqo	net/minecraft/util/datafix/schemas/V1451
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	aqp	net/minecraft/util/datafix/schemas/V1451_1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	aqq	net/minecraft/util/datafix/schemas/V1451_2
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	aqr	net/minecraft/util/datafix/schemas/V1451_3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$11
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$10
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$9
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$8
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$7
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$1
c	aqs	net/minecraft/util/datafix/schemas/V1451_4
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	aqt	net/minecraft/util/datafix/schemas/V1451_5
c	aqu	net/minecraft/util/datafix/schemas/V1451_6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	a	createCriterionTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$1
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$2
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$createCriterionTypes$7
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$createCriterionTypes$5
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$createCriterionTypes$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$createCriterionTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$createCriterionTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$0
	f	Ljava/lang/String;	b	SPECIAL_OBJECTIVE_MARKER
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	c	UNPACK_OBJECTIVE_ID
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	d	REPACK_OBJECTIVE_ID
c	aqu$1	net/minecraft/util/datafix/schemas/V1451_6$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/Dynamic;	a	lambda$apply$1
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	lambda$apply$0
c	aqu$2	net/minecraft/util/datafix/schemas/V1451_6$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$apply$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	packWithDot
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	b	lambda$apply$0
c	aqv	net/minecraft/util/datafix/schemas/V1451_7
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	aqw	net/minecraft/util/datafix/schemas/V1460
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$47
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$26
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$39
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$42
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$46
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$44
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$25
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerInventory
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$32
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$45
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$43
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$24
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$30
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$37
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$41
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$23
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$36
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$40
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$22
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$27
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$38
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$21
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$35
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$20
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerTypes$34
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$19
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerTypes$33
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$18
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerTypes$31
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$17
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerTypes$29
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$16
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerTypes$28
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$15
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerInventory$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$14
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$13
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$12
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$11
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	q	lambda$registerEntities$10
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	r	lambda$registerEntities$9
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	s	lambda$registerEntities$8
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	t	lambda$registerEntities$7
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	u	lambda$registerEntities$6
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	v	lambda$registerEntities$5
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	w	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	x	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	y	lambda$registerEntities$2
c	aqx	net/minecraft/util/datafix/schemas/V1466
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	aqy	net/minecraft/util/datafix/schemas/V1470
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	aqz	net/minecraft/util/datafix/schemas/V1481
c	ara	net/minecraft/util/datafix/schemas/V1483
c	arb	net/minecraft/util/datafix/schemas/V1486
c	arc	net/minecraft/util/datafix/schemas/V1510
c	ard	net/minecraft/util/datafix/schemas/V1800
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	are	net/minecraft/util/datafix/schemas/V1801
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	arf	net/minecraft/util/datafix/schemas/V1904
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	arg	net/minecraft/util/datafix/schemas/V1906
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
c	arh	net/minecraft/util/datafix/schemas/V1909
c	ari	net/minecraft/util/datafix/schemas/V1920
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
c	arj	net/minecraft/util/datafix/schemas/V1928
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	equipment
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerMob$0
c	ark	net/minecraft/util/datafix/schemas/V1929
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$0
c	arl	net/minecraft/util/datafix/schemas/V1931
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	arm	net/minecraft/util/datafix/schemas/V2100
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerMob$0
c	arn	net/minecraft/util/datafix/schemas/V2501
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerFurnace$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerFurnace
c	aro	net/minecraft/util/datafix/schemas/V2502
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	arp	net/minecraft/util/datafix/schemas/V2505
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	arq	net/minecraft/util/datafix/schemas/V2509
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	arr	net/minecraft/util/datafix/schemas/V2519
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	ars	net/minecraft/util/datafix/schemas/V2522
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	art	net/minecraft/util/datafix/schemas/V2551
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$0
c	aru	net/minecraft/util/datafix/schemas/V2568
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	arv	net/minecraft/util/datafix/schemas/V2571
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	arw	net/minecraft/util/datafix/schemas/V2684
c	arx	net/minecraft/util/datafix/schemas/V2686
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	ary	net/minecraft/util/datafix/schemas/V2688
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	arz	net/minecraft/util/datafix/schemas/V2704
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	asa	net/minecraft/util/datafix/schemas/V2707
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntity$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerEntity
c	asb	net/minecraft/util/datafix/schemas/V2831
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	asc	net/minecraft/util/datafix/schemas/V2832
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$0
c	asd	net/minecraft/util/datafix/schemas/V2842
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	ase	net/minecraft/util/datafix/schemas/V501
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	asf	net/minecraft/util/datafix/schemas/V700
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	asg	net/minecraft/util/datafix/schemas/V701
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	ash	net/minecraft/util/datafix/schemas/V702
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	asi	net/minecraft/util/datafix/schemas/V703
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$0
c	asj	net/minecraft/util/datafix/schemas/V704
	m	()Lcom/google/common/collect/ImmutableMap;	a	lambda$static$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerInventory$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$1
	f	Ljava/util/Map;	a	ITEM_TO_BLOCKENTITY
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	b	ADD_NAMES
c	asj$1	net/minecraft/util/datafix/schemas/V704$1
c	ask	net/minecraft/util/datafix/schemas/V705
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$25
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$23
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$24
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerThrowableProjectile$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$22
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerThrowableProjectile
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$21
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$20
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$19
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$18
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$17
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$16
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$15
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$14
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$13
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$12
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$11
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$10
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$9
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$8
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	q	lambda$registerEntities$7
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	r	lambda$registerEntities$6
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	s	lambda$registerEntities$5
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	t	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	u	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	v	lambda$registerEntities$2
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	b	ADD_NAMES
c	ask$1	net/minecraft/util/datafix/schemas/V705$1
c	asl	net/minecraft/util/datafix/schemas/V808
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
c	asm	net/minecraft/util/datafix/schemas/V99
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$30
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	equipment
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$21
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addNames$35
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addNames$34
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object;	a	addNames
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addNames$36
	m	(Ljava/util/HashMap;)V	a	lambda$static$33
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$27
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$29
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$32
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$20
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerThrowableProjectile
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$24
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$26
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$31
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$19
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	c	registerMinecart
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$28
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$18
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	d	registerInventory
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$25
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$17
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$23
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$16
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$22
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$15
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$14
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$13
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$12
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$11
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerInventory$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$10
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerMinecart$2
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$9
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerThrowableProjectile$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$8
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$7
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$6
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$5
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$4
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	a	ADD_NAMES
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	ITEM_TO_BLOCKENTITY
c	asm$1	net/minecraft/util/datafix/schemas/V99$1
c	asn	net/minecraft/util/datafix/schemas/package-info
c	aso	net/minecraft/util/monitoring/jmx/MinecraftServerStatistics
	m	()F	a	getAverageTickTime
	m	(I)[Ljavax/management/MBeanAttributeInfo;	a	lambda$new$1
	m	(Laso$a;)Ljavax/management/Attribute;	a	lambda$getAttributes$2
	m	(Lnet/minecraft/server/MinecraftServer;)V	a	registerJmxMonitoring
	m	()[J	b	getTickTimes
	m	(Laso$a;)Ljava/lang/String;	b	lambda$new$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Ljavax/management/MBeanInfo;	c	mBeanInfo
	f	Ljava/util/Map;	d	attributeDescriptionByName
c	aso$a	net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription
	m	()Ljavax/management/MBeanAttributeInfo;	a	asMBeanAttributeInfo
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Supplier;	b	getter
	f	Ljava/lang/String;	c	description
	f	Ljava/lang/Class;	d	type
c	asp	net/minecraft/util/monitoring/jmx/package-info
c	asq	net/minecraft/util/package-info
c	asr	net/minecraft/util/profiling/ActiveProfiler
	m	()V	a	startTick
	m	(J)Ljava/lang/Object;	a	lambda$pop$2
	m	(Lauc;)V	a	markForCharting
	m	(Ljava/lang/String;)V	a	push
	m	(Ljava/lang/String;I)V	a	incrementCounter
	m	(Ljava/util/function/Supplier;)V	a	push
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
	m	(Ljava/util/function/Supplier;)V	b	popPush
	m	()V	c	pop
	m	(Ljava/lang/String;)Lasr$a;	c	getEntry
	m	()Lasx;	d	getResults
	m	()Ljava/util/Set;	e	getChartedPaths
	m	(Ljava/lang/String;)Lasr$a;	e	lambda$getCurrentEntry$3
	m	()Lasr$a;	f	getCurrentEntry
	m	()Ljava/lang/Object;	g	lambda$pop$1
	m	()Ljava/lang/Object;	h	lambda$endTick$0
	f	J	a	WARNING_TIME_NANOS
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/List;	d	paths
	f	Lit/unimi/dsi/fastutil/longs/LongList;	e	startTimes
	f	Ljava/util/Map;	f	entries
	f	Ljava/util/function/IntSupplier;	g	getTickTime
	f	Ljava/util/function/LongSupplier;	h	getRealTime
	f	J	i	startTimeNano
	f	I	j	startTimeTicks
	f	Ljava/lang/String;	k	path
	f	Z	l	started
	f	Lasr$a;	m	currentEntry
	f	Z	n	warn
	f	Ljava/util/Set;	o	chartedPaths
c	asr$a	net/minecraft/util/profiling/ActiveProfiler$PathEntry
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
	f	J	a	maxDuration
	f	J	b	minDuration
	f	J	c	accumulatedDuration
	f	J	d	count
	f	Lit/unimi/dsi/fastutil/objects/Object2LongOpenHashMap;	e	counters
c	ass	net/minecraft/util/profiling/ContinuousProfiler
	m	()Z	a	isEnabled
	m	()V	b	disable
	m	()V	c	enable
	m	()Lasy;	d	getFiller
	m	()Lasx;	e	getResults
	f	Ljava/util/function/LongSupplier;	a	realTime
	f	Ljava/util/function/IntSupplier;	b	tickCount
	f	Lasw;	c	profiler
c	ast	net/minecraft/util/profiling/EmptyProfileResults
	m	()J	a	getStartTimeNano
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
	m	(Ljava/nio/file/Path;)Z	a	saveResults
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
	f	Last;	a	EMPTY
c	asu	net/minecraft/util/profiling/FilledProfileResults
	m	()J	a	getStartTimeNano
	m	(IILjava/lang/StringBuilder;Ljava/util/Map$Entry;)V	a	lambda$appendCounterResults$5
	m	(ILjava/lang/String;Lasu$a;ILjava/lang/StringBuilder;)V	a	appendCounterResults
	m	(ILjava/lang/String;Ljava/lang/StringBuilder;)V	a	appendProfilerResults
	m	(JI)Ljava/lang/String;	a	getProfilerResults
	m	(Lasu$a;)J	a	lambda$static$0
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	isDirectChild
	m	(Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;	a	indentLine
	m	(Ljava/lang/StringBuilder;ILjava/lang/String;Lasu$a;)V	a	lambda$appendCounters$6
	m	(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Long;)V	a	lambda$appendProfilerResults$4
	m	(Ljava/nio/file/Path;)Z	a	saveResults
	m	(Ljava/util/Map;Ljava/lang/String;Lasz;)V	a	lambda$getCounterValues$3
	m	(Ljava/util/Map;Ljava/lang/StringBuilder;I)V	a	appendCounters
	m	(Ljava/util/Map;Ljava/util/List;Ljava/lang/String;Ljava/lang/Long;)V	a	lambda$getCounterValues$2
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	(Ljava/lang/String;)Lasz;	c	getEntry
	m	()I	d	getEndTimeTicks
	m	(Ljava/lang/String;)Lasu$a;	d	lambda$getCounterValues$1
	m	()Ljava/lang/String;	e	getProfilerResults
	m	()I	f	getTickDuration
	m	()Ljava/util/Map;	h	getCounterValues
	m	()Ljava/lang/String;	i	getComment
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lasz;	b	EMPTY
	f	Lcom/google/common/base/Splitter;	c	SPLITTER
	f	Ljava/util/Comparator;	e	COUNTER_ENTRY_COMPARATOR
	f	Ljava/util/Map;	f	entries
	f	J	g	startTimeNano
	f	I	h	startTimeTicks
	f	J	i	endTimeNano
	f	I	j	endTimeTicks
	f	I	k	tickDuration
c	asu$1	net/minecraft/util/profiling/FilledProfileResults$1
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
c	asu$a	net/minecraft/util/profiling/FilledProfileResults$CounterCollector
	m	(Ljava/lang/String;)Lasu$a;	a	lambda$addValue$0
	m	(Ljava/util/Iterator;J)V	a	addValue
	f	J	a	selfValue
	f	J	b	totalValue
	f	Ljava/util/Map;	c	children
c	asv	net/minecraft/util/profiling/InactiveProfiler
	m	()V	a	startTick
	m	(Lauc;)V	a	markForCharting
	m	(Ljava/lang/String;)V	a	push
	m	(Ljava/lang/String;I)V	a	incrementCounter
	m	(Ljava/util/function/Supplier;)V	a	push
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
	m	(Ljava/util/function/Supplier;)V	b	popPush
	m	()V	c	pop
	m	(Ljava/lang/String;)Lasr$a;	c	getEntry
	m	()Lasx;	d	getResults
	m	()Ljava/util/Set;	e	getChartedPaths
	f	Lasv;	a	INSTANCE
c	asw	net/minecraft/util/profiling/ProfileCollector
	m	(Ljava/lang/String;)Lasr$a;	c	getEntry
	m	()Lasx;	d	getResults
	m	()Ljava/util/Set;	e	getChartedPaths
c	asx	net/minecraft/util/profiling/ProfileResults
	m	()J	a	getStartTimeNano
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
	m	(Ljava/nio/file/Path;)Z	a	saveResults
	m	()I	b	getStartTimeTicks
	m	(Ljava/lang/String;)Ljava/lang/String;	b	demanglePath
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
	m	()I	f	getTickDuration
	m	()J	g	getNanoDuration
	f	C	d	PATH_SEPARATOR
c	asy	net/minecraft/util/profiling/ProfilerFiller
	m	()V	a	startTick
	m	(Lasy;Lasy;)Lasy;	a	tee
	m	(Lauc;)V	a	markForCharting
	m	(Ljava/lang/String;)V	a	push
	m	(Ljava/lang/String;I)V	a	incrementCounter
	m	(Ljava/util/function/Supplier;)V	a	push
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
	m	(Ljava/util/function/Supplier;)V	b	popPush
	m	()V	c	pop
	m	(Ljava/util/function/Supplier;)V	c	incrementCounter
	m	(Ljava/lang/String;)V	d	incrementCounter
	f	Ljava/lang/String;	b	ROOT
c	asy$1	net/minecraft/util/profiling/ProfilerFiller$1
	m	()V	a	startTick
	m	(Lauc;)V	a	markForCharting
	m	(Ljava/lang/String;)V	a	push
	m	(Ljava/lang/String;I)V	a	incrementCounter
	m	(Ljava/util/function/Supplier;)V	a	push
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
	m	(Ljava/util/function/Supplier;)V	b	popPush
	m	()V	c	pop
	f	Lasy;	a	val$first
	f	Lasy;	c	val$second
c	asz	net/minecraft/util/profiling/ProfilerPathEntry
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
c	ata	net/minecraft/util/profiling/ResultField
	m	()I	a	getColor
	m	(Lata;)I	a	compareTo
	f	D	a	percentage
	f	D	b	globalPercentage
	f	J	c	count
	f	Ljava/lang/String;	d	name
c	atb	net/minecraft/util/profiling/SingleTickProfiler
	m	()Lasy;	a	startTick
	m	(Lasy;Latb;)Lasy;	a	decorateFiller
	m	(Ljava/lang/String;)Latb;	a	createTickProfiler
	m	()V	b	endTick
	m	()I	c	lambda$startTick$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/LongSupplier;	b	realTime
	f	J	c	saveThreshold
	f	I	d	tick
	f	Ljava/io/File;	e	location
	f	Lasw;	f	profiler
c	atc	net/minecraft/util/profiling/jfr/Environment
	m	()Ljava/lang/String;	a	getDescription
	m	(Lnet/minecraft/server/MinecraftServer;)Latc;	a	from
	m	()[Latc;	b	$values
	f	Latc;	a	CLIENT
	f	Latc;	b	SERVER
	f	Ljava/lang/String;	c	description
	f	[Latc;	d	$VALUES
c	atd	net/minecraft/util/profiling/jfr/JfrProfiler
	m	()Latd;	a	getInstance
	m	(F)V	a	onServerTick
	m	(IILjava/net/SocketAddress;I)V	a	onPacketReceived
	m	(Latc;)Z	a	start
	m	(Latc;Ljava/lang/String;Ljdk/jfr/Recording;)V	a	lambda$start$2
	m	(Lcac;Lys;Ljava/lang/String;)Lath;	a	onChunkGenerate
	m	(Ljava/io/Reader;Latc;)Z	a	start
	m	(Ljava/net/SocketAddress;)Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b;	a	networkStatFor
	m	()Ljava/nio/file/Path;	b	stop
	m	(IILjava/net/SocketAddress;I)V	b	onPacketSent
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	()Lath;	e	onWorldLoadedStarted
	m	()V	f	setupSummaryListener
	m	()V	g	lambda$new$1
	m	()V	h	lambda$new$0
	f	Ljava/lang/String;	a	ROOT_CATEGORY
	f	Ljava/lang/String;	b	WORLD_GEN_CATEGORY
	f	Ljava/lang/String;	c	TICK_CATEGORY
	f	Ljava/lang/String;	d	NETWORK_CATEGORY
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Ljava/util/List;	g	CUSTOM_EVENTS
	f	Ljava/lang/String;	h	FLIGHT_RECORDER_CONFIG
	f	Ljava/time/format/DateTimeFormatter;	i	DATE_TIME_FORMATTER
	f	Latd;	j	INSTANCE
	f	Ljdk/jfr/Recording;	k	recording
	f	F	l	currentAverageTickTime
	f	Ljava/util/Map;	m	networkTrafficByAddress
c	atd$1	net/minecraft/util/profiling/jfr/JfrProfiler$1
	m	()V	a	lambda$$0
	f	Latg;	a	summaryReporter
	f	Latd;	b	this$0
c	ate	net/minecraft/util/profiling/jfr/JvmProfiler
	m	(F)V	a	onServerTick
	m	(IILjava/net/SocketAddress;I)V	a	onPacketReceived
	m	(Latc;)Z	a	start
	m	(Lcac;Lys;Ljava/lang/String;)Lath;	a	onChunkGenerate
	m	()Ljava/nio/file/Path;	b	stop
	m	(IILjava/net/SocketAddress;I)V	b	onPacketSent
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	()Lath;	e	onWorldLoadedStarted
	f	Late;	e	INSTANCE
c	ate$a	net/minecraft/util/profiling/jfr/JvmProfiler$NoOpProfiler
	m	()V	a	lambda$static$0
	m	(F)V	a	onServerTick
	m	(IILjava/net/SocketAddress;I)V	a	onPacketReceived
	m	(Latc;)Z	a	start
	m	(Lcac;Lys;Ljava/lang/String;)Lath;	a	onChunkGenerate
	m	()Ljava/nio/file/Path;	b	stop
	m	(IILjava/net/SocketAddress;I)V	b	onPacketSent
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	()Lath;	e	onWorldLoadedStarted
	f	Lath;	a	noOpCommit
	f	Lorg/slf4j/Logger;	b	LOGGER
c	atf	net/minecraft/util/profiling/jfr/Percentiles
	m	(Ljava/util/Map;)Ljava/util/Map;	a	sorted
	m	(Ljava/util/Map;Lit/unimi/dsi/fastutil/ints/Int2DoubleRBTreeMap;)V	a	lambda$sorted$0
	m	([D)Ljava/util/Map;	a	evaluate
	m	([J)Ljava/util/Map;	a	evaluate
	f	Lcom/google/common/math/Quantiles$ScaleAndIndexes;	a	DEFAULT_INDEXES
c	atg	net/minecraft/util/profiling/jfr/SummaryReporter
	m	()Ljava/lang/String;	a	lambda$recordingStopped$3
	m	(Ljava/nio/file/Path;)V	a	recordingStopped
	m	(Ljava/util/function/Supplier;)V	a	infoWithFallback
	m	(Ljava/util/function/Supplier;Ljava/lang/Throwable;)V	a	warnWithFallback
	m	()Ljava/lang/String;	b	lambda$recordingStopped$1
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	b	lambda$recordingStopped$2
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	c	lambda$recordingStopped$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/Runnable;	b	onDeregistration
c	ath	net/minecraft/util/profiling/jfr/callback/ProfiledDuration
c	ati	net/minecraft/util/profiling/jfr/callback/package-info
c	atj	net/minecraft/util/profiling/jfr/event/PacketEvent
c	atj$a	net/minecraft/util/profiling/jfr/event/PacketEvent$Fields
	f	Ljava/lang/String;	a	REMOTE_ADDRESS
	f	Ljava/lang/String;	b	PROTOCOL_ID
	f	Ljava/lang/String;	c	PACKET_ID
	f	Ljava/lang/String;	d	BYTES
c	atk	net/minecraft/util/profiling/jfr/event/package-info
c	atl	net/minecraft/util/profiling/jfr/package-info
c	atm	net/minecraft/util/profiling/jfr/parse/JfrStatsParser
	m	()Latn;	a	results
	m	(Latv$b;)Latm$a;	a	lambda$incrementPacket$1
	m	(Ljava/nio/file/Path;)Latn;	a	parse
	m	(Ljava/time/Duration;Ljava/util/Map;)Latv;	a	collectPacketStats
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$collectPacketStats$2
	m	(Ljava/util/stream/Stream;)V	a	capture
	m	(Ljdk/jfr/consumer/RecordedEvent;)V	a	lambda$capture$0
	m	(Ljdk/jfr/consumer/RecordedEvent;ILjava/util/Map;)V	a	incrementPacket
	m	(Ljdk/jfr/consumer/RecordedEvent;Ljava/util/List;Ljava/lang/String;)V	a	appendFileIO
	f	Ljava/time/Instant;	a	recordingStarted
	f	Ljava/time/Instant;	b	recordingEnded
	f	Ljava/util/List;	c	chunkGenStats
	f	Ljava/util/List;	d	cpuLoadStat
	f	Ljava/util/Map;	e	receivedPackets
	f	Ljava/util/Map;	f	sentPackets
	f	Ljava/util/List;	g	fileWrites
	f	Ljava/util/List;	h	fileReads
	f	I	i	garbageCollections
	f	Ljava/time/Duration;	j	gcTotalDuration
	f	Ljava/util/List;	k	gcHeapStats
	f	Ljava/util/List;	l	threadAllocationStats
	f	Ljava/util/List;	m	tickTimes
	f	Ljava/time/Duration;	n	worldCreationDuration
c	atm$1	net/minecraft/util/profiling/jfr/parse/JfrStatsParser$1
	m	()Ljdk/jfr/consumer/RecordedEvent;	a	next
	f	Ljdk/jfr/consumer/RecordingFile;	a	val$recordingFile
c	atm$a	net/minecraft/util/profiling/jfr/parse/JfrStatsParser$MutableCountAndSize
	m	()Latv$a;	a	toCountAndSize
	m	(I)V	a	increment
	f	J	a	count
	f	J	b	totalSize
c	atn	net/minecraft/util/profiling/jfr/parse/JfrStatsResult
	m	()Ljava/util/List;	a	chunkGenSummary
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/time/Duration;	a	lambda$chunkGenSummary$1
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$chunkGenSummary$0
	m	()Ljava/lang/String;	b	asJson
	m	()Ljava/time/Instant;	c	recordingStarted
	m	()Ljava/time/Instant;	d	recordingEnded
	m	()Ljava/time/Duration;	e	recordingDuration
	m	()Ljava/time/Duration;	f	worldCreationDuration
	m	()Ljava/util/List;	g	tickTimes
	m	()Ljava/util/List;	h	cpuLoadStats
	m	()Latu$a;	i	heapSummary
	m	()Latw$a;	j	threadAllocationSummary
	m	()Latv;	k	receivedPacketsSummary
	m	()Latv;	l	sentPacketsSummary
	m	()Latt$a;	m	fileWrites
	m	()Latt$a;	n	fileReads
	m	()Ljava/util/List;	o	chunkGenStats
	f	Ljava/time/Instant;	a	recordingStarted
	f	Ljava/time/Instant;	b	recordingEnded
	f	Ljava/time/Duration;	c	recordingDuration
	f	Ljava/time/Duration;	d	worldCreationDuration
	f	Ljava/util/List;	e	tickTimes
	f	Ljava/util/List;	f	cpuLoadStats
	f	Latu$a;	g	heapSummary
	f	Latw$a;	h	threadAllocationSummary
	f	Latv;	i	receivedPacketsSummary
	f	Latv;	j	sentPacketsSummary
	f	Latt$a;	k	fileWrites
	f	Latt$a;	l	fileReads
	f	Ljava/util/List;	m	chunkGenStats
c	ato	net/minecraft/util/profiling/jfr/parse/package-info
c	atp	net/minecraft/util/profiling/jfr/serialize/JfrResultJsonSerializer
	m	(Latn;)Ljava/lang/String;	a	format
	m	(Latr;)Lcom/google/gson/JsonElement;	a	lambda$chunkGen$4
	m	(Latt$a;)Lcom/google/gson/JsonElement;	a	fileIoSummary
	m	(Latu$a;)Lcom/google/gson/JsonElement;	a	heap
	m	(Latv;)Lcom/google/gson/JsonElement;	a	packets
	m	(Latw$a;)Lcom/google/gson/JsonElement;	a	threadAllocations
	m	(Latx;)D	a	lambda$serverTicks$7
	m	(Lcom/google/gson/JsonArray;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$packets$10
	m	(Lcom/google/gson/JsonArray;Ljava/lang/String;Ljava/lang/Double;)V	a	lambda$threadAllocations$6
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonArray;)V	a	lambda$chunkGen$1
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonObject;)V	a	lambda$chunkGen$2
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Integer;Ljava/lang/Double;)V	a	lambda$serverTicks$8
	m	(Lcom/mojang/datafixers/util/Pair;)D	a	lambda$chunkGen$0
	m	(Ljava/lang/String;Ljava/lang/Double;Lcom/google/gson/JsonObject;)V	a	lambda$threadAllocations$5
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	a	chunkGen
	m	(Ljava/util/List;Ljava/util/function/ToDoubleFunction;)Lcom/google/gson/JsonObject;	a	lambda$cpu$11
	m	(Latn;)Lcom/google/gson/JsonElement;	b	fileIO
	m	(Lcom/google/gson/JsonArray;Lcom/mojang/datafixers/util/Pair;)V	b	lambda$fileIoSummary$9
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Integer;Ljava/lang/Double;)V	b	lambda$chunkGen$3
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	b	serverTicks
	m	(Latn;)Lcom/google/gson/JsonElement;	c	network
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	c	cpu
	f	Lcom/google/gson/Gson;	a	gson
	f	Ljava/lang/String;	b	BYTES_PER_SECOND
	f	Ljava/lang/String;	c	COUNT
	f	Ljava/lang/String;	d	DURATION_NANOS_TOTAL
	f	Ljava/lang/String;	e	TOTAL_BYTES
	f	Ljava/lang/String;	f	COUNT_PER_SECOND
c	atq	net/minecraft/util/profiling/jfr/serialize/package-info
c	atr	net/minecraft/util/profiling/jfr/stats/ChunkGenStat
	m	()Ljava/time/Duration;	a	duration
	m	(Ljdk/jfr/consumer/RecordedEvent;)Latr;	a	from
	m	()Lcac;	b	chunkPos
	m	()Ladn;	c	worldPos
	m	()Lcqt;	d	status
	m	()Ljava/lang/String;	e	level
	f	Ljava/time/Duration;	a	duration
	f	Lcac;	b	chunkPos
	f	Ladn;	c	worldPos
	f	Lcqt;	d	status
	f	Ljava/lang/String;	e	level
c	ats	net/minecraft/util/profiling/jfr/stats/CpuLoadStat
	m	()D	a	jvm
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lats;	a	from
	m	()D	b	userJvm
	m	()D	c	system
	f	D	a	jvm
	f	D	b	userJvm
	f	D	c	system
c	att	net/minecraft/util/profiling/jfr/stats/FileIOStat
	m	()Ljava/time/Duration;	a	duration
	m	(Latt;)J	a	lambda$summary$3
	m	(Ljava/time/Duration;Ljava/util/List;)Latt$a;	a	summary
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$summary$4
	m	()Ljava/lang/String;	b	path
	m	(Latt;)Ljava/lang/String;	b	lambda$summary$2
	m	()J	c	bytes
	m	(Latt;)Z	c	lambda$summary$1
	m	(Latt;)J	d	lambda$summary$0
	f	Ljava/time/Duration;	a	duration
	f	Ljava/lang/String;	b	path
	f	J	c	bytes
c	att$a	net/minecraft/util/profiling/jfr/stats/FileIOStat$Summary
	m	()J	a	totalBytes
	m	()D	b	bytesPerSecond
	m	()J	c	counts
	m	()D	d	countsPerSecond
	m	()Ljava/time/Duration;	e	timeSpentInIO
	m	()Ljava/util/List;	f	topTenContributorsByTotalBytes
	f	J	a	totalBytes
	f	D	b	bytesPerSecond
	f	J	c	counts
	f	D	d	countsPerSecond
	f	Ljava/time/Duration;	e	timeSpentInIO
	f	Ljava/util/List;	f	topTenContributorsByTotalBytes
c	atu	net/minecraft/util/profiling/jfr/stats/GcHeapStat
	m	()Ljava/time/Instant;	a	timestamp
	m	(Latu;)Latu$b;	a	lambda$calculateAllocationRatePerSecond$0
	m	(Ljava/time/Duration;Ljava/util/List;Ljava/time/Duration;I)Latu$a;	a	summary
	m	(Ljava/util/List;)D	a	calculateAllocationRatePerSecond
	m	(Ljdk/jfr/consumer/RecordedEvent;)Latu;	a	from
	m	()J	b	heapUsed
	m	()Latu$b;	c	timing
	f	Ljava/time/Instant;	a	timestamp
	f	J	b	heapUsed
	f	Latu$b;	c	timing
c	atu$a	net/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary
	m	()F	a	gcOverHead
	m	()Ljava/time/Duration;	b	duration
	m	()Ljava/time/Duration;	c	gcTotalDuration
	m	()I	d	totalGCs
	m	()D	e	allocationRateBytesPerSecond
	f	Ljava/time/Duration;	a	duration
	f	Ljava/time/Duration;	b	gcTotalDuration
	f	I	c	totalGCs
	f	D	d	allocationRateBytesPerSecond
c	atu$b	net/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing
	m	()[Latu$b;	a	$values
	f	Latu$b;	a	BEFORE_GC
	f	Latu$b;	b	AFTER_GC
	f	[Latu$b;	c	$VALUES
c	atv	net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary
	m	()D	a	getCountsPerSecond
	m	()D	b	getSizePerSecond
	m	()J	c	getTotalCount
	m	()J	d	getTotalSize
	m	()Ljava/util/List;	e	largestSizeContributors
	m	()Latv$a;	f	lambda$new$0
	f	Latv$a;	a	totalPacketCountAndSize
	f	Ljava/util/List;	b	largestSizeContributors
	f	Ljava/time/Duration;	c	recordingDuration
c	atv$a	net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize
	m	()J	a	totalCount
	m	(Latv$a;)Latv$a;	a	add
	m	()J	b	totalSize
	f	J	a	totalCount
	f	J	b	totalSize
	f	Ljava/util/Comparator;	c	SIZE_THEN_COUNT
c	atv$b	net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketIdentification
	m	()Ljava/lang/String;	a	packetName
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lrd;Lpx;Ljava/lang/Integer;Ljava/lang/Class;)V	a	lambda$static$0
	m	(Ljdk/jfr/consumer/RecordedEvent;)Latv$b;	a	from
	m	()Lrd;	b	direction
	m	()I	c	protocolId
	m	()I	d	packetId
	f	Lrd;	a	direction
	f	I	b	protocolId
	f	I	c	packetId
	f	Ljava/util/Map;	d	PACKET_NAME_BY_ID
c	atw	net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat
	m	()Ljava/time/Instant;	a	timestamp
	m	(Latw;)Ljava/lang/String;	a	lambda$summary$0
	m	(Ljava/util/List;)Latw$a;	a	summary
	m	(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V	a	lambda$summary$1
	m	(Ljdk/jfr/consumer/RecordedEvent;)Latw;	a	from
	m	()Ljava/lang/String;	b	threadName
	m	()J	c	totalBytes
	f	Ljava/time/Instant;	a	timestamp
	f	Ljava/lang/String;	b	threadName
	f	J	c	totalBytes
	f	Ljava/lang/String;	d	UNKNOWN_THREAD
c	atw$a	net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary
	m	()Ljava/util/Map;	a	allocationsPerSecondByThread
	f	Ljava/util/Map;	a	allocationsPerSecondByThread
c	atx	net/minecraft/util/profiling/jfr/stats/TickTimeStat
	m	()Ljava/time/Instant;	a	timestamp
	m	(Ljdk/jfr/consumer/RecordedEvent;)Latx;	a	from
	m	()Ljava/time/Duration;	b	currentAverage
	f	Ljava/time/Instant;	a	timestamp
	f	Ljava/time/Duration;	b	currentAverage
c	aty	net/minecraft/util/profiling/jfr/stats/TimeStamped
	m	()Ljava/time/Instant;	a	getTimestamp
c	atz	net/minecraft/util/profiling/jfr/stats/TimedStat
	m	()Ljava/time/Duration;	a	duration
c	aua	net/minecraft/util/profiling/jfr/stats/TimedStatSummary
	m	()Latz;	a	fastest
	m	(Latz;)J	a	lambda$summary$0
	m	(Ljava/util/List;)Laua;	a	summary
	m	()Latz;	b	slowest
	m	()Latz;	c	secondSlowest
	m	()I	d	count
	m	()Ljava/util/Map;	e	percentilesNanos
	m	()Ljava/time/Duration;	f	totalDuration
	f	Latz;	a	fastest
	f	Latz;	b	slowest
	f	Latz;	c	secondSlowest
	f	I	d	count
	f	Ljava/util/Map;	e	percentilesNanos
	f	Ljava/time/Duration;	f	totalDuration
c	aub	net/minecraft/util/profiling/jfr/stats/package-info
c	auc	net/minecraft/util/profiling/metrics/MetricCategory
	m	()Ljava/lang/String;	a	getDescription
	m	()[Lauc;	b	$values
	f	Lauc;	a	PATH_FINDING
	f	Lauc;	b	EVENT_LOOPS
	f	Lauc;	c	MAIL_BOXES
	f	Lauc;	d	TICK_LOOP
	f	Lauc;	e	JVM
	f	Lauc;	f	CHUNK_RENDERING
	f	Lauc;	g	CHUNK_RENDERING_DISPATCHING
	f	Lauc;	h	CPU
	f	Ljava/lang/String;	i	description
	f	[Lauc;	j	$VALUES
c	aud	net/minecraft/util/profiling/metrics/MetricSampler
	m	()V	a	onStartTick
	m	(I)V	a	onEndTick
	m	(Ljava/lang/String;Lauc;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Laud;	a	create
	m	(Ljava/lang/String;Lauc;Ljava/util/function/DoubleSupplier;)Laud;	a	create
	m	(Ljava/lang/String;Lauc;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)Laud$a;	a	builder
	m	()V	b	onFinished
	m	()Ljava/util/function/DoubleSupplier;	c	getSampler
	m	()Ljava/lang/String;	d	getName
	m	()Lauc;	e	getCategory
	m	()Laud$b;	f	result
	m	()Z	g	triggersThreshold
	m	()V	h	verifyRunning
	f	Laud$c;	a	thresholdTest
	f	Ljava/lang/String;	b	name
	f	Lauc;	c	category
	f	Ljava/util/function/DoubleSupplier;	d	sampler
	f	Lio/netty/buffer/ByteBuf;	e	ticks
	f	Lio/netty/buffer/ByteBuf;	f	values
	f	Z	g	isRunning
	f	Ljava/lang/Runnable;	h	beforeTick
	f	D	i	currentValue
c	aud$a	net/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder
	m	()Laud;	a	build
	m	(Laud$c;)Laud$a;	a	withThresholdAlert
	m	(Ljava/util/function/Consumer;)Laud$a;	a	withBeforeTick
	m	(Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)D	a	lambda$new$0
	m	(Ljava/util/function/Consumer;)V	b	lambda$withBeforeTick$1
	f	Ljava/lang/String;	a	name
	f	Lauc;	b	category
	f	Ljava/util/function/DoubleSupplier;	c	sampler
	f	Ljava/lang/Object;	d	context
	f	Ljava/lang/Runnable;	e	beforeTick
	f	Laud$c;	f	thresholdTest
c	aud$b	net/minecraft/util/profiling/metrics/MetricSampler$SamplerResult
	m	()I	a	getFirstTick
	m	(I)D	a	valueAtTick
	m	()I	b	getLastTick
	f	Lit/unimi/dsi/fastutil/ints/Int2DoubleMap;	a	recording
	f	I	b	firstTick
	f	I	c	lastTick
c	aud$c	net/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest
c	aud$d	net/minecraft/util/profiling/metrics/MetricSampler$ValueIncreasedByPercentage
	f	F	a	percentageIncreaseThreshold
	f	D	b	previousValue
c	aue	net/minecraft/util/profiling/metrics/MetricsRegistry
	m	()Ljava/util/List;	a	getRegisteredSamplers
	m	(Laug;)V	a	add
	m	(Ljava/util/Map$Entry;)Laud;	a	lambda$aggregateDuplicates$1
	m	(Ljava/util/Map;)Ljava/util/List;	a	aggregateDuplicates
	m	(Laug;)Ljava/util/stream/Stream;	b	lambda$getRegisteredSamplers$0
	f	Laue;	a	INSTANCE
	f	Ljava/util/WeakHashMap;	b	measuredInstances
c	aue$a	net/minecraft/util/profiling/metrics/MetricsRegistry$AggregatedMetricSampler
	m	(DLaud;)Z	a	lambda$thresholdTest$2
	m	(Ljava/util/List;)Laud$c;	a	thresholdTest
	m	(Ljava/util/List;D)Z	a	lambda$thresholdTest$3
	m	(Ljava/util/List;)V	b	beforeTick
	m	(Ljava/util/List;)D	c	averageValueFromDelegates
	m	(Ljava/util/List;)V	d	lambda$new$1
	m	(Ljava/util/List;)D	e	lambda$new$0
	f	Ljava/util/List;	b	delegates
c	auf	net/minecraft/util/profiling/metrics/MetricsSamplerProvider
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	samplers
c	aug	net/minecraft/util/profiling/metrics/ProfilerMeasured
	m	()Ljava/util/List;	bj	profiledMetrics
c	auh	net/minecraft/util/profiling/metrics/package-info
c	aui	net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder
	m	()V	a	end
	m	(Lasx;)V	a	scheduleSaveResults
	m	(Laud;)Ljava/util/List;	a	lambda$endTick$3
	m	(Lauf;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lauo;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Laui;	a	createStarted
	m	(Ljava/util/HashSet;Lasx;)V	a	lambda$scheduleSaveResults$5
	m	(Ljava/util/function/Consumer;)V	a	registerGlobalCompletionCallback
	m	()V	b	startTick
	m	()V	c	endTick
	m	()Z	d	isRecording
	m	()Lasy;	e	getProfiler
	m	()V	f	verifyStarted
	m	()I	g	lambda$endTick$4
	m	()Lasw;	h	lambda$startTick$2
	m	()I	i	lambda$new$1
	m	()I	j	lambda$new$0
	f	I	a	PROFILING_MAX_DURATION_SECONDS
	f	Ljava/util/function/Consumer;	b	globalOnReportFinished
	f	Ljava/util/Map;	c	deviationsBySampler
	f	Lass;	d	taskProfiler
	f	Ljava/util/concurrent/Executor;	e	ioExecutor
	f	Lauo;	f	metricsPersister
	f	Ljava/util/function/Consumer;	g	onProfilingEnd
	f	Ljava/util/function/Consumer;	h	onReportFinished
	f	Lauf;	i	metricsSamplerProvider
	f	Ljava/util/function/LongSupplier;	j	wallTimeSource
	f	J	k	deadlineNano
	f	I	l	currentTick
	f	Lasw;	m	singleTickProfiler
	f	Z	n	killSwitch
	f	Ljava/util/Set;	o	thisTickSamplers
c	auj	net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder
	m	()V	a	end
	m	()V	b	startTick
	m	()V	c	endTick
	m	()Z	d	isRecording
	m	()Lasy;	e	getProfiler
	f	Lauk;	a	INSTANCE
c	auk	net/minecraft/util/profiling/metrics/profiling/MetricsRecorder
	m	()V	a	end
	m	()V	b	startTick
	m	()V	c	endTick
	m	()Z	d	isRecording
	m	()Lasy;	e	getProfiler
c	aul	net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	newSamplersFoundInProfiler
	m	(Ljava/util/function/Supplier;Ljava/lang/String;)D	a	lambda$samplerForProfilingPath$2
	m	(Ljava/util/function/Supplier;Ljava/lang/String;Lauc;)Laud;	a	samplerForProfilingPath
	m	(Ljava/util/function/Supplier;Lorg/apache/commons/lang3/tuple/Pair;)Laud;	a	lambda$newSamplersFoundInProfiler$1
	m	(Lorg/apache/commons/lang3/tuple/Pair;)Z	a	lambda$newSamplersFoundInProfiler$0
	f	Ljava/util/Set;	a	previouslyFoundSamplerNames
c	aum	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider
	m	()Ljava/util/Set;	a	runtimeIndependentSamplers
	m	(Laum$a;I)Laud;	a	lambda$runtimeIndependentSamplers$1
	m	(Lcom/google/common/base/Stopwatch;)D	a	lambda$tickTimeSampler$3
	m	(Ljava/util/function/LongSupplier;)Laud;	a	tickTimeSampler
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	samplers
	m	()D	b	lambda$runtimeIndependentSamplers$2
	m	(Laum$a;I)D	b	lambda$runtimeIndependentSamplers$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	b	samplers
	f	Laul;	c	samplerFactory
c	aum$1	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$1
	f	Ljava/util/function/LongSupplier;	a	val$timeSource
c	aum$a	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$CpuStats
	m	(I)D	a	loadForCpu
	f	I	a	nrOfCpus
	f	Loshi/SystemInfo;	b	systemInfo
	f	Loshi/hardware/CentralProcessor;	c	processor
	f	[[J	d	previousCpuLoadTick
	f	[D	e	currentLoad
	f	J	f	lastPollMs
c	aun	net/minecraft/util/profiling/metrics/profiling/package-info
c	auo	net/minecraft/util/profiling/metrics/storage/MetricsPersister
	m	(I)[Ljava/lang/String;	a	lambda$saveCategory$2
	m	(ILaud$b;)Ljava/lang/String;	a	lambda$saveCategory$1
	m	(Lasx;Ljava/nio/file/Path;)V	a	saveProfilingTaskExecutionResult
	m	(Lauc;Ljava/util/List;Ljava/nio/file/Path;)V	a	saveCategory
	m	(Ljava/nio/file/Path;Lauc;Ljava/util/List;)V	a	lambda$saveMetrics$0
	m	(Ljava/time/format/DateTimeFormatter;Ljava/nio/file/Path;Laud;Laup;)V	a	lambda$saveDeviations$3
	m	(Ljava/time/format/DateTimeFormatter;Ljava/nio/file/Path;Laud;Ljava/util/List;)V	a	lambda$saveDeviations$4
	m	(Ljava/util/Map;Ljava/nio/file/Path;)V	a	saveDeviations
	m	(Ljava/util/Set;Ljava/nio/file/Path;)V	a	saveMetrics
	m	(Ljava/util/Set;Ljava/util/Map;Lasx;)Ljava/nio/file/Path;	a	saveReports
	f	Ljava/nio/file/Path;	a	PROFILING_RESULTS_DIR
	f	Ljava/lang/String;	b	METRICS_DIR_NAME
	f	Ljava/lang/String;	c	DEVIATIONS_DIR_NAME
	f	Ljava/lang/String;	d	PROFILING_RESULT_FILENAME
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Ljava/lang/String;	f	rootFolderName
c	aup	net/minecraft/util/profiling/metrics/storage/RecordedDeviation
	f	Ljava/time/Instant;	a	timestamp
	f	I	b	tick
	f	Lasx;	c	profilerResultAtTick
c	auq	net/minecraft/util/profiling/metrics/storage/package-info
c	aur	net/minecraft/util/profiling/package-info
c	aus	net/minecraft/util/random/SimpleWeightedRandomList
	m	()Laus$a;	a	builder
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	wrappedCodecAllowingEmpty
	m	(Ljava/lang/Object;)Laus;	a	single
	m	(Ljava/util/Random;)Ljava/util/Optional;	a	getRandomValue
	m	()Laus;	b	empty
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	wrappedCodec
c	aus$a	net/minecraft/util/random/SimpleWeightedRandomList$Builder
	m	()Laus;	a	build
	m	(Ljava/lang/Object;I)Laus$a;	a	add
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	result
c	aut	net/minecraft/util/random/Weight
	m	()I	a	asInt
	m	(I)Laut;	a	of
	m	(I)V	b	validateWeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laut;	b	ONE
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	value
c	auu	net/minecraft/util/random/WeightedEntry
	m	()Laut;	a	getWeight
	m	(Ljava/lang/Object;I)Lauu$b;	a	wrap
c	auu$a	net/minecraft/util/random/WeightedEntry$IntrusiveBase
	m	()Laut;	a	getWeight
	f	Laut;	a	weight
c	auu$b	net/minecraft/util/random/WeightedEntry$Wrapper
	m	()Laut;	a	getWeight
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
	m	()Ljava/lang/Object;	b	getData
	f	Ljava/lang/Object;	a	data
	f	Laut;	b	weight
c	auv	net/minecraft/util/random/WeightedRandom
	m	(Ljava/util/List;)I	a	getTotalWeight
	m	(Ljava/util/List;I)Ljava/util/Optional;	a	getWeightedItem
	m	(Ljava/util/Random;Ljava/util/List;)Ljava/util/Optional;	a	getRandomItem
	m	(Ljava/util/Random;Ljava/util/List;I)Ljava/util/Optional;	a	getRandomItem
c	auw	net/minecraft/util/random/WeightedRandomList
	m	(Ljava/util/List;)Lauw;	a	create
	m	([Lauu;)Lauw;	a	create
	m	(Ljava/util/Random;)Ljava/util/Optional;	b	getRandom
	m	()Lauw;	c	create
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	c	codec
	m	()Z	d	isEmpty
	m	()Ljava/util/List;	e	unwrap
	f	I	a	totalWeight
	f	Lcom/google/common/collect/ImmutableList;	b	items
c	auy	net/minecraft/util/random/package-info
c	auz	net/minecraft/util/thread/BlockableEventLoop
	m	(Ljava/lang/Object;)V	a	tell
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	a	submitAsync
	m	(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	submit
	m	()Z	as	scheduleExecutables
	m	()Ljava/lang/Thread;	at	getRunningThread
	m	(Ljava/lang/Runnable;)Ljava/lang/Void;	b	lambda$submitAsync$0
	m	()Ljava/util/List;	bj	profiledMetrics
	m	()Z	bk	isSameThread
	m	()I	bl	getPendingTasksCount
	m	()Ljava/lang/String;	bm	name
	m	()V	bn	dropAllTasks
	m	()V	bo	runAllTasks
	m	()V	bp	waitForTasks
	m	(Ljava/lang/Runnable;)V	c	executeIfPossible
	m	(Ljava/util/function/BooleanSupplier;)V	c	managedBlock
	m	(Ljava/lang/Runnable;)V	d	doRunTask
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	g	submit
	m	(Ljava/lang/Runnable;)V	h	executeBlocking
	m	(Ljava/lang/Runnable;)V	i	tell
	m	()Z	y	pollTask
	f	Ljava/lang/String;	b	name
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/Queue;	d	pendingRunnables
	f	I	e	blockingCount
c	ava	net/minecraft/util/thread/NamedThreadFactory
	m	(Ljava/lang/Runnable;Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$newThread$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/ThreadGroup;	b	group
	f	Ljava/util/concurrent/atomic/AtomicInteger;	c	threadNumber
	f	Ljava/lang/String;	d	namePrefix
c	avb	net/minecraft/util/thread/ProcessorHandle
	m	(Ljava/lang/Object;)V	a	tell
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Lavb;	a	of
	m	(Ljava/util/concurrent/CompletableFuture;Lcom/mojang/datafixers/util/Either;)V	a	lambda$askEither$0
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	b	ask
	m	()Ljava/lang/String;	bm	name
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	c	askEither
c	avb$1	net/minecraft/util/thread/ProcessorHandle$1
	m	(Ljava/lang/Object;)V	a	tell
	m	()Ljava/lang/String;	bm	name
	f	Ljava/lang/String;	a	val$name
	f	Ljava/util/function/Consumer;	b	val$tell
c	avc	net/minecraft/util/thread/ProcessorMailbox
	m	()V	a	runAll
	m	(I)Z	a	lambda$runAll$1
	m	(Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I	a	pollUntil
	m	(Ljava/lang/Object;)V	a	tell
	m	(Ljava/util/concurrent/Executor;Ljava/lang/String;)Lavc;	a	create
	m	()I	b	size
	m	(I)Z	b	lambda$run$0
	m	()Ljava/util/List;	bj	profiledMetrics
	m	()Ljava/lang/String;	bm	name
	m	()Z	c	hasWork
	m	()Z	d	setAsScheduled
	m	()V	e	setAsIdle
	m	()Z	f	canBeScheduled
	m	()Z	g	shouldProcess
	m	()Z	h	pollTask
	m	()V	i	registerForExecution
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	CLOSED_BIT
	f	I	c	SCHEDULED_BIT
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	status
	f	Lave;	e	queue
	f	Ljava/util/concurrent/Executor;	f	dispatcher
	f	Ljava/lang/String;	g	name
c	avd	net/minecraft/util/thread/ReentrantBlockableEventLoop
	m	()Z	as	scheduleExecutables
	m	()Z	bq	runningTask
	m	(Ljava/lang/Runnable;)V	d	doRunTask
	f	I	b	reentrantCount
c	ave	net/minecraft/util/thread/StrictQueue
	m	()Ljava/lang/Object;	a	pop
	m	(Ljava/lang/Object;)Z	a	push
	m	()Z	b	isEmpty
	m	()I	c	size
c	ave$a	net/minecraft/util/thread/StrictQueue$FixedPriorityQueue
	m	()Ljava/lang/Object;	a	pop
	m	(Lave$b;)Z	a	push
	m	(Ljava/lang/Object;)Z	a	push
	m	()Z	b	isEmpty
	m	()I	c	size
	m	()Ljava/lang/Runnable;	d	pop
	f	[Ljava/util/Queue;	a	queues
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	size
c	ave$b	net/minecraft/util/thread/StrictQueue$IntRunnable
	m	()I	a	getPriority
	f	I	a	priority
	f	Ljava/lang/Runnable;	b	task
c	ave$c	net/minecraft/util/thread/StrictQueue$QueueStrictQueue
	m	()Ljava/lang/Object;	a	pop
	m	(Ljava/lang/Object;)Z	a	push
	m	()Z	b	isEmpty
	m	()I	c	size
	f	Ljava/util/Queue;	a	queue
c	avf	net/minecraft/util/thread/package-info
c	avg	net/minecraft/util/valueproviders/BiasedToBottomInt
	m	()I	a	getMinValue
	m	(II)Lavg;	a	of
	m	(Lavg;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ljava/util/Random;)I	a	sample
	m	()I	b	getMaxValue
	m	(Lavg;)Ljava/lang/Integer;	b	lambda$static$1
	m	()Lavp;	c	getType
	m	(Lavg;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	minInclusive
	f	I	f	maxInclusive
c	avh	net/minecraft/util/valueproviders/ClampedInt
	m	()I	a	getMinValue
	m	(Lavh;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
	m	(Lavo;II)Lavh;	a	of
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ljava/util/Random;)I	a	sample
	m	()I	b	getMaxValue
	m	(Lavh;)Ljava/lang/Integer;	b	lambda$static$2
	m	()Lavp;	c	getType
	m	(Lavh;)Ljava/lang/Integer;	c	lambda$static$1
	m	(Lavh;)Lavo;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lavo;	b	source
	f	I	f	minInclusive
	f	I	g	maxInclusive
c	avi	net/minecraft/util/valueproviders/ClampedNormalFloat
	m	()F	a	getMinValue
	m	(FFFF)Lavi;	a	of
	m	(Lavi;)Lcom/mojang/serialization/DataResult;	a	lambda$static$5
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Ljava/util/Random;)F	a	sample
	m	(Ljava/util/Random;FFFF)F	a	sample
	m	()F	b	getMaxValue
	m	(Lavi;)Ljava/lang/Float;	b	lambda$static$3
	m	()Lavn;	c	getType
	m	(Lavi;)Ljava/lang/Float;	c	lambda$static$2
	m	(Lavi;)Ljava/lang/Float;	d	lambda$static$1
	m	(Lavi;)Ljava/lang/Float;	e	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	mean
	f	F	d	deviation
	f	F	e	min
	f	F	f	max
c	avj	net/minecraft/util/valueproviders/ClampedNormalInt
	m	()I	a	getMinValue
	m	(FFII)Lavj;	a	of
	m	(Lavj;)Lcom/mojang/serialization/DataResult;	a	lambda$static$5
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Ljava/util/Random;)I	a	sample
	m	(Ljava/util/Random;FFFF)I	a	sample
	m	()I	b	getMaxValue
	m	(Lavj;)Ljava/lang/Integer;	b	lambda$static$3
	m	()Lavp;	c	getType
	m	(Lavj;)Ljava/lang/Integer;	c	lambda$static$2
	m	(Lavj;)Ljava/lang/Float;	d	lambda$static$1
	m	(Lavj;)Ljava/lang/Float;	e	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	mean
	f	F	f	deviation
	f	I	g	min_inclusive
	f	I	h	max_inclusive
c	avk	net/minecraft/util/valueproviders/ConstantFloat
	m	()F	a	getMinValue
	m	(F)Lavk;	a	of
	m	(Lavk;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$4
	m	(Lcom/mojang/datafixers/util/Either;)Lavk;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ljava/util/Random;)F	a	sample
	m	()F	b	getMaxValue
	m	(Lavk;)Lavk;	b	lambda$static$2
	m	()Lavn;	c	getType
	m	(Lavk;)Ljava/lang/Float;	c	lambda$static$0
	m	()F	d	getValue
	f	Lavk;	a	ZERO
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	F	d	value
c	avl	net/minecraft/util/valueproviders/ConstantInt
	m	()I	a	getMinValue
	m	(I)Lavl;	a	of
	m	(Lavl;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$4
	m	(Lcom/mojang/datafixers/util/Either;)Lavl;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ljava/util/Random;)I	a	sample
	m	()I	b	getMaxValue
	m	(Lavl;)Lavl;	b	lambda$static$2
	m	()Lavp;	c	getType
	m	(Lavl;)Ljava/lang/Integer;	c	lambda$static$0
	m	()I	d	getValue
	f	Lavl;	a	ZERO
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	f	value
c	avm	net/minecraft/util/valueproviders/FloatProvider
	m	()F	a	getMinValue
	m	(FF)Lcom/mojang/serialization/Codec;	a	codec
	m	(FFLavm;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$3
	m	(Lavm;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
	m	(Lcom/mojang/datafixers/util/Either;)Lavm;	a	lambda$static$1
	m	(Ljava/util/Random;)F	a	sample
	m	()F	b	getMaxValue
	m	(Lavm;)Lavm;	b	lambda$static$0
	m	()Lavn;	c	getType
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	avn	net/minecraft/util/valueproviders/FloatProviderType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lavn;	a	register
	f	Lavn;	a	CONSTANT
	f	Lavn;	b	UNIFORM
	f	Lavn;	c	CLAMPED_NORMAL
	f	Lavn;	d	TRAPEZOID
c	avo	net/minecraft/util/valueproviders/IntProvider
	m	()I	a	getMinValue
	m	(IILavo;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$3
	m	(Lavo;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
	m	(Lcom/mojang/datafixers/util/Either;)Lavo;	a	lambda$static$1
	m	(Ljava/util/Random;)I	a	sample
	m	()I	b	getMaxValue
	m	(II)Lcom/mojang/serialization/Codec;	b	codec
	m	(Lavo;)Lavo;	b	lambda$static$0
	m	()Lavp;	c	getType
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	NON_NEGATIVE_CODEC
	f	Lcom/mojang/serialization/Codec;	e	POSITIVE_CODEC
c	avp	net/minecraft/util/valueproviders/IntProviderType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lavp;	a	register
	f	Lavp;	a	CONSTANT
	f	Lavp;	b	UNIFORM
	f	Lavp;	c	BIASED_TO_BOTTOM
	f	Lavp;	d	CLAMPED
	f	Lavp;	e	WEIGHTED_LIST
	f	Lavp;	f	CLAMPED_NORMAL
c	avq	net/minecraft/util/valueproviders/TrapezoidFloat
	m	()F	a	getMinValue
	m	(FFF)Lavq;	a	of
	m	(Lavq;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ljava/util/Random;)F	a	sample
	m	()F	b	getMaxValue
	m	(Lavq;)Ljava/lang/Float;	b	lambda$static$2
	m	()Lavn;	c	getType
	m	(Lavq;)Ljava/lang/Float;	c	lambda$static$1
	m	(Lavq;)Ljava/lang/Float;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	min
	f	F	d	max
	f	F	e	plateau
c	avr	net/minecraft/util/valueproviders/UniformFloat
	m	()F	a	getMinValue
	m	(Lavr;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ljava/util/Random;)F	a	sample
	m	()F	b	getMaxValue
	m	(FF)Lavr;	b	of
	m	(Lavr;)Ljava/lang/Float;	b	lambda$static$1
	m	()Lavn;	c	getType
	m	(Lavr;)Ljava/lang/Float;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	minInclusive
	f	F	d	maxExclusive
c	avs	net/minecraft/util/valueproviders/UniformInt
	m	()I	a	getMinValue
	m	(II)Lavs;	a	of
	m	(Lavs;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ljava/util/Random;)I	a	sample
	m	()I	b	getMaxValue
	m	(Lavs;)Ljava/lang/Integer;	b	lambda$static$1
	m	()Lavp;	c	getType
	m	(Lavs;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	minInclusive
	f	I	f	maxInclusive
c	avt	net/minecraft/util/valueproviders/WeightedListInt
	m	()I	a	getMinValue
	m	(Lavt;)Laus;	a	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ljava/util/Random;)I	a	sample
	m	()I	b	getMaxValue
	m	()Lavp;	c	getType
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laus;	b	distribution
	f	I	f	minValue
	f	I	g	maxValue
c	avu	net/minecraft/util/valueproviders/package-info
c	avv	net/minecraft/util/worldupdate/WorldUpgrader
	m	()V	a	cancel
	m	(Ljava/io/File;Ljava/lang/String;)Z	a	lambda$getAllChunkPos$2
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$new$0
	m	(Lys;)F	a	dimensionProgress
	m	()Z	b	isFinished
	m	(Lys;)Ljava/util/List;	b	getAllChunkPos
	m	()Lcom/google/common/collect/ImmutableSet;	c	levels
	m	()F	d	getProgress
	m	()I	e	getTotalChunks
	m	()I	f	getConverted
	m	()I	g	getSkipped
	m	()Lqk;	h	getStatus
	m	()V	i	work
	m	()Ldkl;	j	lambda$work$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/ThreadFactory;	b	THREAD_FACTORY
	f	Lcut;	c	worldGenSettings
	f	Z	d	eraseCache
	f	Ldkp$a;	e	levelStorage
	f	Ljava/lang/Thread;	f	thread
	f	Lcom/mojang/datafixers/DataFixer;	g	dataFixer
	f	Z	h	running
	f	Z	i	finished
	f	F	j	progress
	f	I	k	totalChunks
	f	I	l	converted
	f	I	m	skipped
	f	Lit/unimi/dsi/fastutil/objects/Object2FloatMap;	n	progressMap
	f	Lqk;	o	status
	f	Ljava/util/regex/Pattern;	p	REGEX
	f	Ldkl;	q	overworldDataStorage
c	avw	net/minecraft/util/worldupdate/package-info
c	avx	net/minecraft/world/BossEvent
	m	(F)V	a	setProgress
	m	(Lavx$a;)V	a	setColor
	m	(Lavx$b;)V	a	setOverlay
	m	(Lqk;)V	a	setName
	m	(Z)Lavx;	a	setDarkenScreen
	m	(Z)Lavx;	b	setPlayBossMusic
	m	(Z)Lavx;	c	setCreateWorldFog
	m	()Ljava/util/UUID;	i	getId
	m	()Lqk;	j	getName
	m	()F	k	getProgress
	m	()Lavx$a;	l	getColor
	m	()Lavx$b;	m	getOverlay
	m	()Z	n	shouldDarkenScreen
	m	()Z	o	shouldPlayBossMusic
	m	()Z	p	shouldCreateWorldFog
	f	Lqk;	a	name
	f	F	b	progress
	f	Lavx$a;	c	color
	f	Lavx$b;	d	overlay
	f	Z	e	darkenScreen
	f	Z	f	playBossMusic
	f	Z	g	createWorldFog
	f	Ljava/util/UUID;	h	id
c	avx$a	net/minecraft/world/BossEvent$BossBarColor
	m	()Lp;	a	getFormatting
	m	(Ljava/lang/String;)Lavx$a;	a	byName
	m	()Ljava/lang/String;	b	getName
	m	()[Lavx$a;	c	$values
	f	Lavx$a;	a	PINK
	f	Lavx$a;	b	BLUE
	f	Lavx$a;	c	RED
	f	Lavx$a;	d	GREEN
	f	Lavx$a;	e	YELLOW
	f	Lavx$a;	f	PURPLE
	f	Lavx$a;	g	WHITE
	f	Ljava/lang/String;	h	name
	f	Lp;	i	formatting
	f	[Lavx$a;	j	$VALUES
c	avx$b	net/minecraft/world/BossEvent$BossBarOverlay
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lavx$b;	a	byName
	m	()[Lavx$b;	b	$values
	f	Lavx$b;	a	PROGRESS
	f	Lavx$b;	b	NOTCHED_6
	f	Lavx$b;	c	NOTCHED_10
	f	Lavx$b;	d	NOTCHED_12
	f	Lavx$b;	e	NOTCHED_20
	f	Ljava/lang/String;	f	name
	f	[Lavx$b;	g	$VALUES
c	avy	net/minecraft/world/Clearable
	m	()V	a	clearContent
	m	(Ljava/lang/Object;)V	a	tryClear
c	avz	net/minecraft/world/CompoundContainer
	m	()I	N_	getMaxStackSize
	m	()V	a	clearContent
	m	(I)Lbuw;	a	getItem
	m	(II)Lbuw;	a	removeItem
	m	(ILbuw;)V	a	setItem
	m	(Lawa;)Z	a	contains
	m	(Lboj;)Z	a	stillValid
	m	()I	b	getContainerSize
	m	(I)Lbuw;	b	removeItemNoUpdate
	m	(ILbuw;)Z	b	canPlaceItem
	m	(Lboj;)V	b_	startOpen
	m	()Z	c	isEmpty
	m	(Lboj;)V	c_	stopOpen
	m	()V	e	setChanged
	f	Lawa;	b	container1
	f	Lawa;	c	container2
c	awa	net/minecraft/world/Container
	m	()I	N_	getMaxStackSize
	m	(I)Lbuw;	a	getItem
	m	(II)Lbuw;	a	removeItem
	m	(ILbuw;)V	a	setItem
	m	(Lboj;)Z	a	stillValid
	m	(Ljava/util/Set;)Z	a	hasAnyOf
	m	(Lbus;)I	a_	countItem
	m	()I	b	getContainerSize
	m	(I)Lbuw;	b	removeItemNoUpdate
	m	(ILbuw;)Z	b	canPlaceItem
	m	(Lboj;)V	b_	startOpen
	m	()Z	c	isEmpty
	m	(Lboj;)V	c_	stopOpen
	m	()V	e	setChanged
	f	I	j_	LARGE_MAX_STACK_SIZE
c	awb	net/minecraft/world/ContainerHelper
	m	(Lawa;Ljava/util/function/Predicate;IZ)I	a	clearOrCountMatchingItems
	m	(Lbuw;Ljava/util/function/Predicate;IZ)I	a	clearOrCountMatchingItems
	m	(Ljava/util/List;I)Lbuw;	a	takeItem
	m	(Ljava/util/List;II)Lbuw;	a	removeItem
	m	(Lok;Lgx;)Lok;	a	saveAllItems
	m	(Lok;Lgx;Z)Lok;	a	saveAllItems
	m	(Lok;Lgx;)V	b	loadAllItems
c	awc	net/minecraft/world/ContainerListener
	m	(Lawa;)V	a	containerChanged
c	awd	net/minecraft/world/Containers
	m	(Lcav;DDDLawa;)V	a	dropContents
	m	(Lcav;DDDLbuw;)V	a	dropItemStack
	m	(Lcav;Laxk;Lawa;)V	a	dropContents
	m	(Lcav;Lgj;Lawa;)V	a	dropContents
	m	(Lcav;Lgj;Lbuw;)V	a	lambda$dropContents$0
	m	(Lcav;Lgj;Lgx;)V	a	dropContents
	f	Ljava/util/Random;	a	RANDOM
c	awe	net/minecraft/world/Difficulty
	m	()I	a	getId
	m	(I)Lawe;	a	byId
	m	(Ljava/lang/String;)Lawe;	a	byName
	m	()Lqk;	b	getDisplayName
	m	(I)[Lawe;	b	lambda$static$0
	m	()Ljava/lang/String;	c	getKey
	m	()[Lawe;	d	$values
	f	Lawe;	a	PEACEFUL
	f	Lawe;	b	EASY
	f	Lawe;	c	NORMAL
	f	Lawe;	d	HARD
	f	[Lawe;	e	BY_ID
	f	I	f	id
	f	Ljava/lang/String;	g	key
	f	[Lawe;	h	$VALUES
c	awf	net/minecraft/world/DifficultyInstance
	m	()Lawe;	a	getDifficulty
	m	(F)Z	a	isHarderThan
	m	(Lawe;JJF)F	a	calculateDifficulty
	m	()F	b	getEffectiveDifficulty
	m	()Z	c	isHard
	m	()F	d	getSpecialMultiplier
	f	F	a	DIFFICULTY_TIME_GLOBAL_OFFSET
	f	F	b	MAX_DIFFICULTY_TIME_GLOBAL
	f	F	c	MAX_DIFFICULTY_TIME_LOCAL
	f	Lawe;	d	base
	f	F	e	effectiveDifficulty
c	awg	net/minecraft/world/InteractionHand
	m	()[Lawg;	a	$values
	f	Lawg;	a	MAIN_HAND
	f	Lawg;	b	OFF_HAND
	f	[Lawg;	c	$VALUES
c	awh	net/minecraft/world/InteractionResult
	m	()Z	a	consumesAction
	m	(Z)Lawh;	a	sidedSuccess
	m	()Z	b	shouldSwing
	m	()Z	c	shouldAwardStats
	m	()[Lawh;	d	$values
	f	Lawh;	a	SUCCESS
	f	Lawh;	b	CONSUME
	f	Lawh;	c	CONSUME_PARTIAL
	f	Lawh;	d	PASS
	f	Lawh;	e	FAIL
	f	[Lawh;	f	$VALUES
c	awi	net/minecraft/world/InteractionResultHolder
	m	()Lawh;	a	getResult
	m	(Ljava/lang/Object;)Lawi;	a	success
	m	(Ljava/lang/Object;Z)Lawi;	a	sidedSuccess
	m	()Ljava/lang/Object;	b	getObject
	m	(Ljava/lang/Object;)Lawi;	b	consume
	m	(Ljava/lang/Object;)Lawi;	c	pass
	m	(Ljava/lang/Object;)Lawi;	d	fail
	f	Lawh;	a	result
	f	Ljava/lang/Object;	b	object
c	awj	net/minecraft/world/LockCode
	m	(Lbuw;)Z	a	unlocksWith
	m	(Lok;)V	a	addToTag
	m	(Lok;)Lawj;	b	fromTag
	f	Lawj;	a	NO_LOCK
	f	Ljava/lang/String;	b	TAG_LOCK
	f	Ljava/lang/String;	c	key
c	awk	net/minecraft/world/MenuProvider
	m	()Lqk;	C_	getDisplayName
c	awl	net/minecraft/world/Nameable
	m	()Lqk;	C_	getDisplayName
	m	()Lqk;	X	getName
	m	()Z	Y	hasCustomName
	m	()Lqk;	Z	getCustomName
c	awm	net/minecraft/world/SimpleContainer
	m	()V	a	clearContent
	m	(I)Lbuw;	a	getItem
	m	(II)Lbuw;	a	removeItem
	m	(ILbuw;)V	a	setItem
	m	(Lawc;)V	a	addListener
	m	(Lboj;)Z	a	stillValid
	m	(Lbol;)V	a	fillStackedContents
	m	(Lbus;I)Lbuw;	a	removeItemType
	m	(Lbuw;)Lbuw;	a	addItem
	m	(Lbuw;Lbuw;)V	a	moveItemsBetweenStacks
	m	(Loq;)V	a	fromTag
	m	()I	b	getContainerSize
	m	(I)Lbuw;	b	removeItemNoUpdate
	m	(Lawc;)V	b	removeListener
	m	(Lbuw;)Z	b	canAddItem
	m	()Z	c	isEmpty
	m	(Lbuw;)V	c	moveItemToEmptySlots
	m	(Lbuw;)V	d	moveItemToOccupiedSlotsWithSameType
	m	()V	e	setChanged
	m	(Lbuw;)Z	e	lambda$toString$1
	m	()Ljava/util/List;	f	removeAllItems
	m	(Lbuw;)Z	f	lambda$removeAllItems$0
	m	()Loq;	g	createTag
	f	I	b	size
	f	Lgx;	c	items
	f	Ljava/util/List;	d	listeners
c	awn	net/minecraft/world/SimpleMenuProvider
	m	()Lqk;	C_	getDisplayName
	f	Lqk;	a	title
	f	Lbrs;	b	menuConstructor
c	awo	net/minecraft/world/WorldlyContainer
	m	(ILbuw;Lgo;)Z	a	canPlaceItemThroughFace
	m	(Lgo;)[I	a	getSlotsForFace
	m	(ILbuw;Lgo;)Z	b	canTakeItemThroughFace
c	awp	net/minecraft/world/WorldlyContainerHolder
	m	(Lcov;Lcaw;Lgj;)Lawo;	a	getContainer
c	awq	net/minecraft/world/damagesource/BadRespawnPointDamage
	m	(Laxy;)Lqk;	a	getLocalizedDeathMessage
	m	(Lqu;)Lqu;	a	lambda$getLocalizedDeathMessage$0
c	awr	net/minecraft/world/damagesource/CombatEntry
	m	()Lawu;	a	getSource
	m	()I	b	getTime
	m	()F	c	getDamage
	m	()F	d	getHealthBeforeDamage
	m	()F	e	getHealthAfterDamage
	m	()Z	f	isCombatRelated
	m	()Ljava/lang/String;	g	getLocation
	m	()Lqk;	h	getAttackerName
	m	()Laxk;	i	getAttacker
	m	()F	j	getFallDistance
	f	Lawu;	a	source
	f	I	b	time
	f	F	c	damage
	f	F	d	health
	f	Ljava/lang/String;	e	location
	f	F	f	fallDistance
c	aws	net/minecraft/world/damagesource/CombatRules
	m	(FF)F	a	getDamageAfterMagicAbsorb
	m	(FFF)F	a	getDamageAfterAbsorb
	f	F	a	MAX_ARMOR
	f	F	b	ARMOR_PROTECTION_DIVIDER
	f	F	c	BASE_ARMOR_TOUGHNESS
	f	F	d	MIN_ARMOR_RATIO
	f	I	e	NUM_ARMOR_ITEMS
c	awt	net/minecraft/world/damagesource/CombatTracker
	m	()V	a	prepareForDamage
	m	(Lawr;)Ljava/lang/String;	a	getFallLocation
	m	(Lawu;FF)V	a	recordDamage
	m	()Lqk;	b	getDeathMessage
	m	()Laxy;	c	getKiller
	m	()Z	d	isTakingDamage
	m	()Z	e	isInCombat
	m	()I	f	getCombatDuration
	m	()V	g	recheckStatus
	m	()Laxy;	h	getMob
	m	()Lawr;	i	getLastEntry
	m	()I	j	getKillerId
	m	()Lawr;	k	getMostSignificantFall
	m	()V	l	resetPreparedStatus
	f	I	a	RESET_DAMAGE_STATUS_TIME
	f	I	b	RESET_COMBAT_STATUS_TIME
	f	Ljava/util/List;	c	entries
	f	Laxy;	d	mob
	f	I	e	lastDamageTime
	f	I	f	combatStartTime
	f	I	g	combatEndTime
	f	Z	h	inCombat
	f	Z	i	takingDamage
	f	Ljava/lang/String;	j	nextLocation
c	awu	net/minecraft/world/damagesource/DamageSource
	m	()Lawu;	A	setIsFall
	m	()Z	B	isCreativePlayer
	m	()Ldpo;	C	getSourcePosition
	m	()Lawu;	a	badRespawnPointExplosion
	m	(Laxk;)Lawu;	a	thorns
	m	(Laxk;Laxk;)Lawu;	a	trident
	m	(Laxk;Laxy;)Lawu;	a	indirectMobAttack
	m	(Laxy;)Lqk;	a	getLocalizedDeathMessage
	m	(Lboj;)Lawu;	a	playerAttack
	m	(Lbon;Laxk;)Lawu;	a	arrow
	m	(Lbot;Laxk;)Lawu;	a	fireball
	m	(Lbou;Laxk;)Lawu;	a	fireworks
	m	(Lbpm;Laxk;)Lawu;	a	witherSkull
	m	(Lcan;)Lawu;	a	explosion
	m	()Z	b	isProjectile
	m	(Laxk;Laxk;)Lawu;	b	thrown
	m	(Laxy;)Lawu;	b	sting
	m	()Lawu;	c	setProjectile
	m	(Laxk;Laxk;)Lawu;	c	indirectMagic
	m	(Laxy;)Lawu;	c	mobAttack
	m	()Z	d	isExplosion
	m	(Laxy;)Lawu;	d	explosion
	m	()Lawu;	e	setExplosion
	m	()Z	f	isBypassArmor
	m	()Z	g	isDamageHelmet
	m	()F	h	getFoodExhaustion
	m	()Z	i	isBypassInvul
	m	()Z	j	isBypassMagic
	m	()Laxk;	k	getDirectEntity
	m	()Laxk;	l	getEntity
	m	()Lawu;	m	bypassArmor
	m	()Lawu;	n	damageHelmet
	m	()Lawu;	o	bypassInvul
	m	()Lawu;	p	bypassMagic
	m	()Lawu;	q	setIsFire
	m	()Lawu;	r	setNoAggro
	m	()Z	s	isFire
	m	()Z	t	isNoAggro
	m	()Ljava/lang/String;	u	getMsgId
	m	()Lawu;	v	setScalesWithDifficulty
	m	()Z	w	scalesWithDifficulty
	m	()Z	x	isMagic
	m	()Lawu;	y	setMagic
	m	()Z	z	isFall
	f	Z	A	bypassArmor
	f	Z	B	bypassInvul
	f	Z	C	bypassMagic
	f	F	D	exhaustion
	f	Z	E	isFireSource
	f	Z	F	isProjectile
	f	Z	G	scalesWithDifficulty
	f	Z	H	isMagic
	f	Z	I	isExplosion
	f	Z	J	isFall
	f	Z	K	noAggro
	f	Lawu;	a	IN_FIRE
	f	Lawu;	b	LIGHTNING_BOLT
	f	Lawu;	c	ON_FIRE
	f	Lawu;	d	LAVA
	f	Lawu;	e	HOT_FLOOR
	f	Lawu;	f	IN_WALL
	f	Lawu;	g	CRAMMING
	f	Lawu;	h	DROWN
	f	Lawu;	i	STARVE
	f	Lawu;	j	CACTUS
	f	Lawu;	k	FALL
	f	Lawu;	l	FLY_INTO_WALL
	f	Lawu;	m	OUT_OF_WORLD
	f	Lawu;	n	GENERIC
	f	Lawu;	o	MAGIC
	f	Lawu;	p	WITHER
	f	Lawu;	q	ANVIL
	f	Lawu;	r	FALLING_BLOCK
	f	Lawu;	s	DRAGON_BREATH
	f	Lawu;	t	DRY_OUT
	f	Lawu;	u	SWEET_BERRY_BUSH
	f	Lawu;	v	FREEZE
	f	Lawu;	w	FALLING_STALACTITE
	f	Lawu;	x	STALAGMITE
	f	Ljava/lang/String;	y	msgId
	f	Z	z	damageHelmet
c	awv	net/minecraft/world/damagesource/EntityDamageSource
	m	()Ldpo;	C	getSourcePosition
	m	()Lawv;	D	setThorns
	m	()Z	E	isThorns
	m	(Laxy;)Lqk;	a	getLocalizedDeathMessage
	m	()Laxk;	l	getEntity
	m	()Z	w	scalesWithDifficulty
	f	Z	A	isThorns
	f	Laxk;	z	entity
c	aww	net/minecraft/world/damagesource/IndirectEntityDamageSource
	m	(Laxy;)Lqk;	a	getLocalizedDeathMessage
	m	()Laxk;	k	getDirectEntity
	m	()Laxk;	l	getEntity
	f	Laxk;	A	owner
c	awx	net/minecraft/world/damagesource/package-info
c	awy	net/minecraft/world/effect/AbsoptionMobEffect
	m	(Laxy;Layw;I)V	a	removeAttributeModifiers
	m	(Laxy;Layw;I)V	b	addAttributeModifiers
c	awz	net/minecraft/world/effect/AttackDamageMobEffect
	m	(ILayx;)D	a	getAttributeModifierValue
	f	D	a	multiplier
c	axa	net/minecraft/world/effect/HealthBoostMobEffect
	m	(Laxy;Layw;I)V	a	removeAttributeModifiers
c	axb	net/minecraft/world/effect/InstantenousMobEffect
	m	()Z	a	isInstantenous
	m	(II)Z	a	isDurationEffectTick
c	axc	net/minecraft/world/effect/MobEffect
	m	()Z	a	isInstantenous
	m	(I)Laxc;	a	byId
	m	(II)Z	a	isDurationEffectTick
	m	(ILayx;)D	a	getAttributeModifierValue
	m	(Laxc;)I	a	getId
	m	(Laxk;Laxk;Laxy;ID)V	a	applyInstantenousEffect
	m	(Laxy;I)V	a	applyEffectTick
	m	(Laxy;Layw;I)V	a	removeAttributeModifiers
	m	(Layu;Ljava/lang/String;DLayx$a;)Laxc;	a	addAttributeModifier
	m	()Ljava/lang/String;	b	getOrCreateDescriptionId
	m	(Laxy;Layw;I)V	b	addAttributeModifiers
	m	()Ljava/lang/String;	c	getDescriptionId
	m	()Lqk;	d	getDisplayName
	m	()Laxd;	e	getCategory
	m	()I	f	getColor
	m	()Ljava/util/Map;	g	getAttributeModifiers
	m	()Z	h	isBeneficial
	f	Ljava/util/Map;	a	attributeModifiers
	f	Laxd;	b	category
	f	I	c	color
	f	Ljava/lang/String;	d	descriptionId
c	axd	net/minecraft/world/effect/MobEffectCategory
	m	()Lp;	a	getTooltipFormatting
	m	()[Laxd;	b	$values
	f	Laxd;	a	BENEFICIAL
	f	Laxd;	b	HARMFUL
	f	Laxd;	c	NEUTRAL
	f	Lp;	d	tooltipFormatting
	f	[Laxd;	e	$VALUES
c	axe	net/minecraft/world/effect/MobEffectInstance
	m	()Laxc;	a	getEffect
	m	(Laxc;Lok;)Laxe;	a	loadSpecifiedEffect
	m	(Laxe;)V	a	setDetailsFrom
	m	(Laxy;)V	a	applyEffect
	m	(Laxy;Ljava/lang/Runnable;)Z	a	tick
	m	(Lok;)Lok;	a	save
	m	(Z)V	a	setNoCounter
	m	()I	b	getDuration
	m	(Laxe;)Z	b	update
	m	(Lok;)Laxe;	b	load
	m	()I	c	getAmplifier
	m	(Laxe;)I	c	compareTo
	m	(Lok;)V	c	writeDetailsTo
	m	()Z	d	isAmbient
	m	()Z	e	isVisible
	m	()Z	f	showIcon
	m	()Ljava/lang/String;	g	getDescriptionId
	m	()Z	h	isNoCounter
	m	()I	i	tickDownDuration
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Laxc;	b	effect
	f	I	c	duration
	f	I	d	amplifier
	f	Z	e	ambient
	f	Z	f	noCounter
	f	Z	g	visible
	f	Z	h	showIcon
	f	Laxe;	i	hiddenEffect
c	axf	net/minecraft/world/effect/MobEffectUtil
	m	(Laxe;F)Ljava/lang/String;	a	formatDuration
	m	(Laxy;)Z	a	hasDigSpeed
	m	(Laxy;)I	b	getDigSpeedAmplification
	m	(Laxy;)Z	c	hasWaterBreathing
c	axg	net/minecraft/world/effect/MobEffects
	m	(ILjava/lang/String;Laxc;)Laxc;	a	register
	f	Laxc;	A	UNLUCK
	f	Laxc;	B	SLOW_FALLING
	f	Laxc;	C	CONDUIT_POWER
	f	Laxc;	D	DOLPHINS_GRACE
	f	Laxc;	E	BAD_OMEN
	f	Laxc;	F	HERO_OF_THE_VILLAGE
	f	Laxc;	a	MOVEMENT_SPEED
	f	Laxc;	b	MOVEMENT_SLOWDOWN
	f	Laxc;	c	DIG_SPEED
	f	Laxc;	d	DIG_SLOWDOWN
	f	Laxc;	e	DAMAGE_BOOST
	f	Laxc;	f	HEAL
	f	Laxc;	g	HARM
	f	Laxc;	h	JUMP
	f	Laxc;	i	CONFUSION
	f	Laxc;	j	REGENERATION
	f	Laxc;	k	DAMAGE_RESISTANCE
	f	Laxc;	l	FIRE_RESISTANCE
	f	Laxc;	m	WATER_BREATHING
	f	Laxc;	n	INVISIBILITY
	f	Laxc;	o	BLINDNESS
	f	Laxc;	p	NIGHT_VISION
	f	Laxc;	q	HUNGER
	f	Laxc;	r	WEAKNESS
	f	Laxc;	s	POISON
	f	Laxc;	t	WITHER
	f	Laxc;	u	HEALTH_BOOST
	f	Laxc;	v	ABSORPTION
	f	Laxc;	w	SATURATION
	f	Laxc;	x	GLOWING
	f	Laxc;	y	LEVITATION
	f	Laxc;	z	LUCK
c	axg$1	net/minecraft/world/effect/MobEffects$1
	m	(II)Z	a	isDurationEffectTick
	m	(Laxy;I)V	a	applyEffectTick
c	axh	net/minecraft/world/effect/package-info
c	axi	net/minecraft/world/entity/AgeableMob
	m	(IZ)V	a	ageUp
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	(Z)V	a	setBaby
	m	()V	a_	defineSynchedData
	m	(I)V	a_	ageUp
	m	(Lok;)V	b	addAdditionalSaveData
	m	(I)V	b_	setAge
	m	()Z	g	canBreed
	m	()I	j	getAge
	m	()V	n	ageBoundaryReached
	m	()V	w_	aiStep
	m	()Z	y_	isBaby
	f	I	b	BABY_START_AGE
	f	Lyb;	bV	DATA_BABY_ID
	f	I	bW	FORCED_AGE_PARTICLE_TICKS
	f	I	c	age
	f	I	d	forcedAge
	f	I	e	forcedAgeTimer
c	axi$a	net/minecraft/world/entity/AgeableMob$AgeableMobGroupData
	m	()I	a	getGroupSize
	m	()V	b	increaseGroupSizeByOne
	m	()Z	c	isShouldSpawnBaby
	m	()F	d	getBabySpawnChance
	f	I	a	groupSize
	f	Z	b	shouldSpawnBaby
	f	F	c	babySpawnChance
c	axj	net/minecraft/world/entity/AreaEffectCloud
	m	()Lrc;	S	getAddEntityPacket
	m	(F)V	a	setRadius
	m	(I)V	a	setFixedColor
	m	(Laxe;)V	a	addEffect
	m	(Laxy;)V	a	setOwner
	m	(Layk;)Laxl;	a	getDimensions
	m	(Lbwr;)V	a	setPotion
	m	(Lia;)V	a	setParticle
	m	(Ljava/util/Map$Entry;)Z	a	lambda$tick$0
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	(Z)V	a	setWaiting
	m	()V	a_	defineSynchedData
	m	(F)V	b	setRadiusOnUse
	m	(I)V	b	setDuration
	m	(Lok;)V	b	addAdditionalSaveData
	m	(F)V	c	setRadiusPerTick
	m	(I)V	c	setDurationOnUse
	m	()Ldjd;	c_	getPistonPushReaction
	m	(I)V	d	setWaitTime
	m	()F	h	getRadius
	m	()I	i	getColor
	m	()Lia;	j	getParticle
	m	()V	k	tick
	m	()Z	l	isWaiting
	m	()I	n	getDuration
	m	()F	o	getRadiusOnUse
	m	()F	q	getRadiusPerTick
	m	()I	r	getDurationOnUse
	m	()I	s	getWaitTime
	m	()Laxy;	t	getOwner
	m	()Lbwr;	u	getPotion
	m	()V	w	updateColor
	m	()V	z_	refreshDimensions
	f	Laxy;	aA	owner
	f	Ljava/util/UUID;	aB	ownerUUID
	f	Lyb;	ao	DATA_PARTICLE
	f	F	ap	MAX_RADIUS
	f	Lbwr;	aq	potion
	f	Ljava/util/List;	ar	effects
	f	Ljava/util/Map;	as	victims
	f	I	at	duration
	f	I	au	waitTime
	f	I	av	reapplicationDelay
	f	Z	aw	fixedColor
	f	I	ax	durationOnUse
	f	F	ay	radiusOnUse
	f	F	az	radiusPerTick
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	TIME_BETWEEN_APPLICATIONS
	f	Lyb;	d	DATA_RADIUS
	f	Lyb;	e	DATA_COLOR
	f	Lyb;	f	DATA_WAITING
c	axk	net/minecraft/world/entity/Entity
	m	()I	B	getPermissionLevel
	m	()Z	B_	isSpectator
	m	()Lqk;	C_	getDisplayName
	m	()Z	G_	shouldInformAdmins
	m	()V	H	processPortalCooldown
	m	()Lrc;	S	getAddEntityPacket
	m	()Lcav;	W	getLevel
	m	()Lqk;	X	getName
	m	()Z	Y	hasCustomName
	m	()Lqk;	Z	getCustomName
	m	(B)V	a	handleEntityEvent
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(DD)V	a	turn
	m	(DDD)V	a	dismountTo
	m	(DDDFF)V	a	absMoveTo
	m	(DDDFFIZ)V	a	lerpTo
	m	(DDF)Ldpo;	a	getCollisionHorizontalEscapeVector
	m	(DFZ)Ldpm;	a	pick
	m	(DZLcov;Lgj;)V	a	checkFallDamage
	m	(FF)V	a	setRot
	m	(FFLawu;)Z	a	causeFallDamage
	m	(FI)V	a	lerpHeadTo
	m	(FLdpo;)V	a	moveRelative
	m	(Ladw;)Ldjv;	a	findDimensionEntryPoint
	m	(Ladw;Laxx;)V	a	thunderHit
	m	(Ladw;Laxy;)V	a	killed
	m	(Ladw;Lgj;ZLcql;)Ljava/util/Optional;	a	getExitPortal
	m	(Ladw;Ln$a;)Ldjv;	a	lambda$findDimensionEntryPoint$6
	m	(Ladx;)Z	a	broadcastToPlayer
	m	(Lahj;FF)V	a	playSound
	m	(Laif;)Z	a	isEyeInFluid
	m	(Laif;D)Z	a	updateFluidHeightAndDoFluidPushing
	m	(Lawu;F)Z	a	hurt
	m	(Laxk$c;)V	a	remove
	m	(Laxk;)Z	a	lambda$hasExactlyOnePlayerPassenger$15
	m	(Laxk;D)Z	a	closerThan
	m	(Laxk;ILawu;)V	a	awardKillScore
	m	(Laxk;Laxk$a;)V	a	positionRider
	m	(Laxk;Laxk;)Z	a	lambda$hasIndirectPassenger$16
	m	(Laxk;Ldpo;Ldpj;Lcav;Ljava/util/List;)Ldpo;	a	collideBoundingBox
	m	(Laxk;Z)Z	a	startRiding
	m	(Laxl;Ldpo;)V	a	lambda$refreshDimensions$13
	m	(Laxp;Lbuw;)V	a	setItemSlot
	m	(Laxy;Laxk;)V	a	doEnchantDamageEffects
	m	(Laye;Ldpo;)V	a	move
	m	(Layk;)Laxl;	a	getDimensions
	m	(Layk;Laxl;)F	a	getEyeHeight
	m	(Lboj;Lawg;)Lawh;	a	interact
	m	(Lboj;Ldpo;Lawg;)Lawh;	a	interactAt
	m	(Lbus;)Ldpo;	a	getHandHoldingItemAngle
	m	(Lbuw;F)Lbli;	a	spawnAtLocation
	m	(Lcan;Lcab;Lgj;Lcov;F)Z	a	shouldBlockExplode
	m	(Lcan;Lcab;Lgj;Lcov;Ldix;F)F	a	getBlockExplosionResistance
	m	(Lcau;)Lbli;	a	spawnAtLocation
	m	(Lcau;I)Lbli;	a	spawnAtLocation
	m	(Lcav;Lgj;)Z	a	mayInteract
	m	(Lchz;)F	a	mirror
	m	(Lcjm;)F	a	rotate
	m	(Lcov;)V	a	onInsideBlock
	m	(Lcov;Ldpo;)V	a	makeStuckInBlock
	m	(Lcov;Lgj;)Z	a	lambda$findDimensionEntryPoint$5
	m	(Lcsh;)V	a	setLevelCallback
	m	(Lcsy;)V	a	gameEvent
	m	(Lcsy;Laxk;)V	a	gameEvent
	m	(Lcsy;Laxk;Lgj;)V	a	gameEvent
	m	(Lcsy;Lgj;)V	a	gameEvent
	m	(Ldpj;)V	a	setBoundingBox
	m	(Ldpj;Lgj;)Z	a	lambda$isInWall$1
	m	(Ldpo;FF)Ldpo;	a	getInputVector
	m	(Ldpo;Laye;)Ldpo;	a	maybeBackOffFromEdge
	m	(Ldpo;Ldpj;Ljava/util/List;)Ldpo;	a	collideWithShapes
	m	(Ldqo;)Z	a	isAlliedTo
	m	(Ldv$a;Ldpo;)V	a	lookAt
	m	(Lgj;FF)V	a	moveTo
	m	(Lgj;Lcov;)Z	a	isColliding
	m	(Lgo$a;D)D	a	applyPistonMovementRestriction
	m	(Lgo$a;Ln$a;)Ldpo;	a	getRelativePortalPosition
	m	(Ljava/lang/String;)Z	a	addTag
	m	(Ljava/util/function/Predicate;)Z	a	hasPassenger
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lqk;)V	a	setCustomName
	m	(Lqk;Ljava/util/UUID;)V	a	sendMessage
	m	(Lqu;)Lqu;	a	lambda$getDisplayName$11
	m	(Lr;)V	a	fillCrashReportCategory
	m	(Lrg;)V	a	recreateFromPacket
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	([D)Loq;	a	newDoubleList
	m	([F)Loq;	a	newFloatList
	m	()Lgj;	aA	getOnPos
	m	()F	aB	getBlockJumpFactor
	m	()F	aC	getBlockSpeedFactor
	m	()Lgj;	aD	getBlockPosBelowThatAffectsMyMovement
	m	()F	aE	nextStep
	m	()Lahj;	aF	getSwimSound
	m	()Lahj;	aG	getSwimSplashSound
	m	()Lahj;	aH	getSwimHighSpeedSplashSound
	m	()V	aI	checkInsideBlocks
	m	()V	aJ	onFlap
	m	()Z	aK	isFlapping
	m	()Z	aL	isSilent
	m	()Z	aM	isNoGravity
	m	()Laxk$b;	aN	getMovementEmission
	m	()Z	aO	occludesVibrations
	m	()Z	aP	fireImmune
	m	()Z	aQ	isInWater
	m	()Z	aR	isInWaterOrRain
	m	()Z	aS	isInWaterRainOrBubble
	m	()Z	aT	isInWaterOrBubble
	m	()Z	aU	isUnderWater
	m	()V	aV	updateSwimming
	m	()Z	aW	updateInWaterStateAndDoFluidPushing
	m	()V	aX	updateInWaterStateAndDoWaterCurrentPushing
	m	()V	aY	doWaterSplashEffect
	m	()Lcov;	aZ	getBlockStateOn
	m	()V	a_	defineSynchedData
	m	(Ldpo;)V	a_	setPacketCoordinates
	m	(Ljava/util/UUID;)V	a_	setUUID
	m	(Z)V	a_	setSharedFlagOnFire
	m	()I	aa	getTeamColor
	m	()V	ab	unRide
	m	()Ldpo;	ac	getPacketCoordinates
	m	()Laxo;	ad	getType
	m	()I	ae	getId
	m	()Ljava/util/Set;	af	getTags
	m	()V	ag	kill
	m	()V	ah	discard
	m	()Lye;	ai	getEntityData
	m	()V	aj	onClientRemoval
	m	()Layk;	ak	getPose
	m	()Ldpj;	al	makeBoundingBox
	m	()V	am	reapplyPosition
	m	()V	an	baseTick
	m	()V	ao	checkOutOfWorld
	m	()V	ap	setPortalCooldown
	m	()Z	aq	isOnPortalCooldown
	m	()I	ar	getPortalWaitTime
	m	()V	as	lavaHurt
	m	()I	at	getRemainingFireTicks
	m	()V	au	clearFire
	m	()V	av	outOfWorld
	m	()Z	aw	isOnGround
	m	()V	ax	tryCheckInsideBlocks
	m	()V	ay	playEntityOnFireExtinguishedSound
	m	()V	az	processFlappingMovement
	m	(D)V	b	setViewScale
	m	(DDD)V	b	teleportTo
	m	(DDDFF)V	b	moveTo
	m	(FF)Ldpo;	b	calculateViewVector
	m	(IZ)V	b	setSharedFlag
	m	(Ladw;)Laxk;	b	changeDimension
	m	(Laif;)D	b	getFluidHeight
	m	(Lawu;)Z	b	isInvulnerableTo
	m	(Laxk$c;)V	b	setRemoved
	m	(Laxk;)V	b	lambda$teleportTo$12
	m	(Laxk;Laxk;)Z	b	lambda$removePassenger$4
	m	(Laxy;)Ldpo;	b	getDismountLocationForPassenger
	m	(Layk;)V	b	setPose
	m	(Lboj;)V	b	playerTouch
	m	(Lbuw;)Lbli;	b	spawnAtLocation
	m	(Lcov;)V	b	playAmethystStepSound
	m	(Ldpj;)Z	b	isFree
	m	(Ldpo;)V	b	setPos
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Ljava/lang/String;)Z	b	removeTag
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lqk;)Lqk;	b	removeAction
	m	()V	bA	animateHurt
	m	()Ljava/lang/Iterable;	bB	getHandSlots
	m	()Ljava/lang/Iterable;	bC	getArmorSlots
	m	()Ljava/lang/Iterable;	bD	getAllSlots
	m	()Z	bE	isOnFire
	m	()Z	bF	isPassenger
	m	()Z	bG	isVehicle
	m	()Z	bH	rideableUnderWater
	m	()Z	bI	isShiftKeyDown
	m	()Z	bJ	isSteppingCarefully
	m	()Z	bK	isSuppressingBounce
	m	()Z	bL	isDiscrete
	m	()Z	bM	isDescending
	m	()Z	bN	isCrouching
	m	()Z	bO	isSprinting
	m	()Z	bP	isSwimming
	m	()Z	bQ	isVisuallySwimming
	m	()Z	bR	isVisuallyCrawling
	m	()Z	bS	hasGlowingTag
	m	()Z	bT	isCurrentlyGlowing
	m	()Z	bU	isInvisible
	m	()Lctb;	bV	getGameEventListenerRegistrar
	m	()Ldqo;	bW	getTeam
	m	()I	bX	getMaxAirSupply
	m	()I	bY	getAirSupply
	m	()I	bZ	getTicksFrozen
	m	()Z	ba	canSpawnSprintParticle
	m	()V	bb	spawnSprintParticle
	m	()Z	bc	isInLava
	m	()F	bd	getBrightness
	m	()V	be	setOldPosAndRot
	m	()V	bf	markHurt
	m	()Ldpo;	bg	getEyePosition
	m	()Z	bh	isPickable
	m	()Z	bi	isPushable
	m	()Z	bj	repositionEntityAfterLoad
	m	()Ljava/lang/String;	bk	getEncodeId
	m	()Z	bl	isAlive
	m	()Z	bm	isInWall
	m	()Z	bn	canBeCollidedWith
	m	()V	bo	rideTick
	m	()D	bp	getMyRidingOffset
	m	()D	bq	getPassengersRidingOffset
	m	()Z	br	showVehicleHealth
	m	()V	bs	ejectPassengers
	m	()V	bt	removeVehicle
	m	()F	bu	getPickRadius
	m	()Ldpo;	bv	getLookAngle
	m	()Ldpn;	bw	getRotationVector
	m	()Ldpo;	bx	getForward
	m	()V	by	handleNetherPortal
	m	()I	bz	getDimensionChangingDelay
	m	(D)D	c	getX
	m	(DDD)V	c	moveTo
	m	(FF)Ldpo;	c	calculateUpVector
	m	(Ladx;)V	c	startSeenByPlayer
	m	(Laxk;)V	c	lambda$startRiding$3
	m	(Layk;)Z	c	canEnterPose
	m	(Lboj;)Z	c	isInvisibleTo
	m	(Lcov;)Z	c	lambda$move$0
	m	(Ldpo;)Z	c	isHorizontalCollisionMinor
	m	(Z)V	c	setOnGround
	m	()Lcav;	cA	getCommandSenderWorld
	m	()Lnet/minecraft/server/MinecraftServer;	cB	getServer
	m	()Z	cC	ignoreExplosion
	m	()Z	cD	onlyOpCanSetNbt
	m	()Laxk;	cE	getControllingPassenger
	m	()Ljava/util/List;	cF	getPassengers
	m	()Laxk;	cG	getFirstPassenger
	m	()Ljava/util/stream/Stream;	cH	getSelfAndPassengers
	m	()Ljava/util/stream/Stream;	cI	getPassengersAndSelf
	m	()Ljava/lang/Iterable;	cJ	getIndirectPassengers
	m	()Z	cK	hasExactlyOnePlayerPassenger
	m	()Laxk;	cL	getRootVehicle
	m	()Z	cM	isControlledByLocalInstance
	m	()Laxk;	cN	getVehicle
	m	()Lahl;	cO	getSoundSource
	m	()I	cP	getFireImmuneTicks
	m	()Ldm;	cQ	createCommandSourceStack
	m	()Z	cR	touchingUnloadedChunk
	m	()D	cS	getFluidJumpThreshold
	m	()F	cT	getBbWidth
	m	()F	cU	getBbHeight
	m	()Ldpo;	cV	position
	m	()Lgj;	cW	blockPosition
	m	()Lcov;	cX	getFeetBlockState
	m	()Lgj;	cY	eyeBlockPosition
	m	()Lcac;	cZ	chunkPosition
	m	()Ldjd;	c_	getPistonPushReaction
	m	()F	ca	getPercentFrozen
	m	()Z	cb	isFullyFrozen
	m	()I	cc	getTicksRequiredToFreeze
	m	()Lqk;	cd	getTypeName
	m	()F	ce	getYHeadRot
	m	()Z	cf	isAttackable
	m	()Z	cg	isInvulnerable
	m	()V	ch	removeAfterChangingDimensions
	m	()Z	ci	canChangeDimensions
	m	()I	cj	getMaxFallDistance
	m	()Z	ck	isIgnoringBlockTriggers
	m	()Z	cl	displayFireAnimation
	m	()Ljava/util/UUID;	cm	getUUID
	m	()Ljava/lang/String;	cn	getStringUUID
	m	()Ljava/lang/String;	co	getScoreboardName
	m	()Z	cp	isPushedByFluid
	m	()D	cq	getViewScale
	m	()Z	cr	isCustomNameVisible
	m	()Z	cs	shouldShowName
	m	()Lgo;	ct	getDirection
	m	()Lgo;	cu	getMotionDirection
	m	()Lqo;	cv	createHoverEvent
	m	()Ldpj;	cw	getBoundingBox
	m	()Ldpj;	cx	getBoundingBoxForCulling
	m	()F	cy	getEyeHeight
	m	()Ldpo;	cz	getLeashOffset
	m	(D)D	d	getRandomX
	m	(DDD)V	d	setPacketCoordinates
	m	(F)V	d	playSwimSound
	m	(Ladx;)V	d	stopSeenByPlayer
	m	(Laxk;)Z	d	lambda$startRiding$2
	m	(Layk;)Ldpj;	d	getBoundingBoxForPose
	m	(Ldpo;)Ldpo;	d	limitPistonMovement
	m	(Lgj;)V	d	handleInsidePortal
	m	(Lok;)Z	d	saveAsPassenger
	m	(Z)V	d	setSilent
	m	()Ldpo;	da	getDeltaMovement
	m	()I	db	getBlockX
	m	()D	dc	getX
	m	()I	dd	getBlockY
	m	()D	de	getY
	m	()D	df	getRandomY
	m	()D	dg	getEyeY
	m	()I	dh	getBlockZ
	m	()D	di	getZ
	m	()V	dj	checkDespawn
	m	()Lbuw;	dk	getPickResult
	m	()Z	dl	canFreeze
	m	()Z	dm	isFreezing
	m	()F	dn	getYRot
	m	()F	do	getXRot
	m	()Z	dp	isRemoved
	m	()Laxk$c;	dq	getRemovalReason
	m	()V	dr	unsetRemoved
	m	()Z	ds	shouldBeSaved
	m	()Z	dt	isAlwaysTicking
	m	(D)D	e	getY
	m	(DDD)V	e	setPos
	m	(F)Ldpo;	e	getViewVector
	m	(I)V	e	setId
	m	(Laxk;)F	e	distanceTo
	m	(Layk;)F	e	getEyeHeight
	m	(Ldpo;)V	e	moveTo
	m	(Lok;)Z	e	save
	m	(Z)V	e	setNoGravity
	m	(D)D	f	getZ
	m	(DDD)Z	f	isFree
	m	(F)F	f	getViewXRot
	m	(I)V	f	setSecondsOnFire
	m	(Laxk;)D	f	distanceToSqr
	m	(Ldpo;)D	f	distanceToSqr
	m	(Lok;)Lok;	f	saveWithoutId
	m	(Z)V	f	setShiftKeyDown
	m	(D)D	g	getRandomZ
	m	(DDD)V	g	absMoveTo
	m	(F)F	g	getViewYRot
	m	(I)V	g	setRemainingFireTicks
	m	(Laxk;)V	g	push
	m	(Ldpo;)V	g	setDeltaMovement
	m	(Lok;)V	g	load
	m	(Z)V	g	setSprinting
	m	(DDD)D	h	distanceToSqr
	m	(F)Ldpo;	h	getUpVector
	m	(I)Z	h	getSharedFlag
	m	(Laxk;)Z	h	canCollideWith
	m	(Ldpo;)Ldpo;	h	collide
	m	(Z)V	h	setSwimming
	m	()Z	i	isInRain
	m	(DDD)V	i	push
	m	(F)Ldpo;	i	getEyePosition
	m	(I)V	i	setAirSupply
	m	(Laxk;)V	i	positionRider
	m	(Z)V	i	setGlowingTag
	m	()Z	i_	acceptsSuccess
	m	()Z	j	isInBubbleColumn
	m	(DDD)Z	j	shouldRender
	m	(F)Ldpo;	j	getLightProbePosition
	m	(I)V	j	setTicksFrozen
	m	(Laxk;)V	j	onPassengerTurned
	m	(Z)V	j	setInvisible
	m	()Z	j_	acceptsFailure
	m	()V	k	tick
	m	(DDD)V	k	lerpMotion
	m	(F)Ldpo;	k	getPosition
	m	(I)Layp;	k	getSlot
	m	(Laxk;)Z	k	startRiding
	m	(Z)V	k	onAboveBubbleCol
	m	()V	l	updateFluidOnEyes
	m	(DDD)V	l	moveTowardsClosestSpace
	m	(F)V	l	setYHeadRot
	m	(I)Z	l	hasPermissions
	m	(Laxk;)Z	l	canRide
	m	(Z)V	l	onInsideBubbleColumn
	m	()V	m	resetFallDistance
	m	(DDD)V	m	teleportToWithTicket
	m	(F)V	m	setYBodyRot
	m	(Laxk;)V	m	addPassenger
	m	(Z)V	m	setInvulnerable
	m	()Ljava/util/stream/Stream;	n	getIndirectPassengersStream
	m	(DDD)V	n	setDeltaMovement
	m	(F)Ldpo;	n	getRopeHoldPosition
	m	(Laxk;)V	n	removePassenger
	m	(Z)V	n	setCustomNameVisible
	m	()Ljava/util/Iterator;	o	lambda$getIndirectPassengers$14
	m	(DDD)V	o	setPosRaw
	m	(F)V	o	setYRot
	m	(Laxk;)Z	o	canAddPassenger
	m	(Z)V	o	setIsInPowderSnow
	m	()V	p	stopRiding
	m	(F)V	p	setXRot
	m	(Laxk;)Z	p	isAlliedTo
	m	(Laxk;)Z	q	is
	m	()Ljava/lang/String;	r	lambda$fillCrashReportCategory$10
	m	(Laxk;)Z	r	skipAttackInteraction
	m	()Ljava/lang/String;	s	lambda$fillCrashReportCategory$9
	m	(Laxk;)V	s	copyPosition
	m	(Laxk;)V	t	restoreFrom
	m	()Ljava/lang/String;	u	lambda$fillCrashReportCategory$8
	m	(Laxk;)Z	u	hasPassenger
	m	(Laxk;)Z	v	isPassengerOfSameVehicle
	m	()Ljava/lang/String;	w	lambda$fillCrashReportCategory$7
	m	(Laxk;)Z	w	hasIndirectPassenger
	m	()V	z_	refreshDimensions
	f	Z	A	verticalCollision
	f	Z	B	verticalCollisionBelow
	f	Z	C	minorHorizontalCollision
	f	Z	D	hurtMarked
	f	Ldpo;	E	stuckSpeedMultiplier
	f	F	F	DEFAULT_BB_WIDTH
	f	F	G	DEFAULT_BB_HEIGHT
	f	F	H	walkDistO
	f	F	I	walkDist
	f	F	J	moveDist
	f	F	K	flyDist
	f	F	L	fallDistance
	f	D	M	xOld
	f	D	N	yOld
	f	D	O	zOld
	f	F	P	maxUpStep
	f	Z	Q	noPhysics
	f	Ljava/util/Random;	R	random
	f	I	S	tickCount
	f	Z	T	wasTouchingWater
	f	Lit/unimi/dsi/fastutil/objects/Object2DoubleMap;	U	fluidHeight
	f	Z	V	wasEyeInWater
	f	I	W	invulnerableTime
	f	Z	X	firstTick
	f	Lye;	Y	entityData
	f	Lyb;	Z	DATA_SHARED_FLAGS_ID
	f	F	aA	yRot
	f	F	aB	xRot
	f	Ldpj;	aC	bb
	f	Laxk$c;	aD	removalReason
	f	F	aE	nextStep
	f	I	aF	remainingFireTicks
	f	Ljava/util/Set;	aG	fluidOnEyes
	f	I	aH	FLAG_SHIFT_KEY_DOWN
	f	I	aI	FLAG_SPRINTING
	f	I	aJ	FLAG_SWIMMING
	f	I	aK	FLAG_INVISIBLE
	f	Lyb;	aL	DATA_AIR_SUPPLY_ID
	f	Lyb;	aM	DATA_CUSTOM_NAME
	f	Lyb;	aN	DATA_CUSTOM_NAME_VISIBLE
	f	Lyb;	aO	DATA_SILENT
	f	Lyb;	aP	DATA_NO_GRAVITY
	f	Lyb;	aQ	DATA_TICKS_FROZEN
	f	Lcsh;	aR	levelCallback
	f	Ldpo;	aS	packetCoordinates
	f	I	aT	portalCooldown
	f	Z	aU	invulnerable
	f	Z	aV	hasGlowingTag
	f	Ljava/util/Set;	aW	tags
	f	[D	aX	pistonDeltas
	f	J	aY	pistonDeltasGameTime
	f	Laxl;	aZ	dimensions
	f	I	aa	FLAG_ONFIRE
	f	I	ab	FLAG_GLOWING
	f	I	ac	FLAG_FALL_FLYING
	f	Lyb;	ad	DATA_POSE
	f	Z	ae	noCulling
	f	Z	af	hasImpulse
	f	Z	ag	isInsidePortal
	f	I	ah	portalTime
	f	Lgj;	ai	portalEntrancePos
	f	Ljava/util/UUID;	aj	uuid
	f	Ljava/lang/String;	ak	stringUUID
	f	Z	al	isInPowderSnow
	f	Z	am	wasInPowderSnow
	f	Z	an	wasOnFire
	f	D	ao	WATER_FLOW_SCALE
	f	D	ap	LAVA_FAST_FLOW_SCALE
	f	D	aq	LAVA_SLOW_FLOW_SCALE
	f	D	ar	viewScale
	f	Laxo;	as	type
	f	I	at	id
	f	Lcom/google/common/collect/ImmutableList;	au	passengers
	f	Laxk;	av	vehicle
	f	Ldpo;	aw	position
	f	Lgj;	ax	blockPosition
	f	Lcac;	ay	chunkPosition
	f	Ldpo;	az	deltaMovement
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	F	ba	eyeHeight
	f	F	bb	crystalSoundIntensity
	f	I	bc	lastCrystalSoundPlayTick
	f	Z	bd	hasVisualFire
	f	Lcov;	be	feetBlockState
	f	Ljava/util/concurrent/atomic/AtomicInteger;	c	ENTITY_COUNTER
	f	Ljava/util/List;	d	EMPTY_LIST
	f	Ldpj;	e	INITIAL_AABB
	f	Ljava/lang/String;	g	ID_TAG
	f	Ljava/lang/String;	h	PASSENGERS_TAG
	f	I	i	BOARDING_COOLDOWN
	f	I	j	TOTAL_AIR_SUPPLY
	f	I	k	MAX_ENTITY_TAG_COUNT
	f	D	l	DELTA_AFFECTED_BY_BLOCKS_BELOW
	f	F	m	BREATHING_DISTANCE_BELOW_EYES
	f	I	n	BASE_TICKS_REQUIRED_TO_FREEZE
	f	I	o	FREEZE_HURT_FREQUENCY
	f	Ljava/lang/String;	p	UUID_TAG
	f	Z	q	blocksBuilding
	f	I	r	boardingCooldown
	f	Lcav;	s	level
	f	D	t	xo
	f	D	u	yo
	f	D	v	zo
	f	F	w	yRotO
	f	F	x	xRotO
	f	Z	y	onGround
	f	Z	z	horizontalCollision
c	axk$1	net/minecraft/world/entity/Entity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	axk$a	net/minecraft/world/entity/Entity$MoveFunction
c	axk$b	net/minecraft/world/entity/Entity$MovementEmission
	m	()Z	a	emitsAnything
	m	()Z	b	emitsEvents
	m	()Z	c	emitsSounds
	m	()[Laxk$b;	d	$values
	f	Laxk$b;	a	NONE
	f	Laxk$b;	b	SOUNDS
	f	Laxk$b;	c	EVENTS
	f	Laxk$b;	d	ALL
	f	Z	e	sounds
	f	Z	f	events
	f	[Laxk$b;	g	$VALUES
c	axk$c	net/minecraft/world/entity/Entity$RemovalReason
	m	()Z	a	shouldDestroy
	m	()Z	b	shouldSave
	m	()[Laxk$c;	c	$values
	f	Laxk$c;	a	KILLED
	f	Laxk$c;	b	DISCARDED
	f	Laxk$c;	c	UNLOADED_TO_CHUNK
	f	Laxk$c;	d	UNLOADED_WITH_PLAYER
	f	Laxk$c;	e	CHANGED_DIMENSION
	f	Z	f	destroy
	f	Z	g	save
	f	[Laxk$c;	h	$VALUES
c	axl	net/minecraft/world/entity/EntityDimensions
	m	(DDD)Ldpj;	a	makeBoundingBox
	m	(F)Laxl;	a	scale
	m	(FF)Laxl;	a	scale
	m	(Ldpo;)Ldpj;	a	makeBoundingBox
	m	(FF)Laxl;	b	scalable
	m	(FF)Laxl;	c	fixed
	f	F	a	width
	f	F	b	height
	f	Z	c	fixed
c	axm	net/minecraft/world/entity/EntityEvent
	f	B	A	PERMISSION_LEVEL_ADMINS
	f	B	B	PERMISSION_LEVEL_OWNERS
	f	B	C	ATTACK_BLOCKED
	f	B	D	SHIELD_DISABLED
	f	B	E	FISHING_ROD_REEL_IN
	f	B	F	ARMORSTAND_WOBBLE
	f	B	G	THORNED
	f	B	H	STOP_OFFER_FLOWER
	f	B	I	TALISMAN_ACTIVATE
	f	B	J	DROWNED
	f	B	K	BURNED
	f	B	L	DOLPHIN_LOOKING_FOR_TREASURE
	f	B	M	RAVAGER_STUNNED
	f	B	N	TRUSTING_FAILED
	f	B	O	TRUSTING_SUCCEEDED
	f	B	P	VILLAGER_SWEAT
	f	B	Q	BAD_OMEN_TRIGGERED
	f	B	R	POKED
	f	B	S	FOX_EAT
	f	B	T	TELEPORT
	f	B	U	MAINHAND_BREAK
	f	B	V	OFFHAND_BREAK
	f	B	W	HEAD_BREAK
	f	B	X	CHEST_BREAK
	f	B	Y	LEGS_BREAK
	f	B	Z	FEET_BREAK
	f	B	a	JUMP
	f	B	aa	HONEY_SLIDE
	f	B	ab	HONEY_JUMP
	f	B	ac	SWAP_HANDS
	f	B	ad	CANCEL_SHAKE_WETNESS
	f	B	ae	FROZEN
	f	B	af	START_RAM
	f	B	ag	END_RAM
	f	B	ah	POOF
	f	B	b	HURT
	f	B	c	DEATH
	f	B	d	START_ATTACKING
	f	B	e	STOP_ATTACKING
	f	B	f	TAMING_FAILED
	f	B	g	TAMING_SUCCEEDED
	f	B	h	SHAKE_WETNESS
	f	B	i	USE_ITEM_COMPLETE
	f	B	j	EAT_GRASS
	f	B	k	OFFER_FLOWER
	f	B	l	LOVE_HEARTS
	f	B	m	VILLAGER_ANGRY
	f	B	n	VILLAGER_HAPPY
	f	B	o	WITCH_HAT_MAGIC
	f	B	p	ZOMBIE_CONVERTING
	f	B	q	FIREWORKS_EXPLODE
	f	B	r	IN_LOVE_HEARTS
	f	B	s	SQUID_ANIM_SYNCH
	f	B	t	SILVERFISH_MERGE_ANIM
	f	B	u	GUARDIAN_ATTACK_SOUND
	f	B	v	REDUCED_DEBUG_INFO
	f	B	w	FULL_DEBUG_INFO
	f	B	x	PERMISSION_LEVEL_ALL
	f	B	y	PERMISSION_LEVEL_MODERATORS
	f	B	z	PERMISSION_LEVEL_GAMEMASTERS
c	axn	net/minecraft/world/entity/EntitySelector
	m	(DDDD)Ljava/util/function/Predicate;	a	withinDistance
	m	(DDDDLaxk;)Z	a	lambda$withinDistance$5
	m	(Laxk;)Ljava/util/function/Predicate;	a	pushableBy
	m	(Laxk;Laxk;)Z	a	lambda$notRiding$7
	m	(Laxk;Ldqo;Ldqo$a;Laxk;)Z	a	lambda$pushableBy$6
	m	(Laxk;)Ljava/util/function/Predicate;	b	notRiding
	m	(Laxk;)Z	c	lambda$static$4
	m	(Laxk;)Z	d	lambda$static$3
	m	(Laxk;)Z	e	lambda$static$2
	m	(Laxk;)Z	f	lambda$static$1
	m	(Laxk;)Z	g	lambda$static$0
	f	Ljava/util/function/Predicate;	a	ENTITY_STILL_ALIVE
	f	Ljava/util/function/Predicate;	b	LIVING_ENTITY_STILL_ALIVE
	f	Ljava/util/function/Predicate;	c	ENTITY_NOT_BEING_RIDDEN
	f	Ljava/util/function/Predicate;	d	CONTAINER_ENTITY_SELECTOR
	f	Ljava/util/function/Predicate;	e	NO_CREATIVE_OR_SPECTATOR
	f	Ljava/util/function/Predicate;	f	NO_SPECTATORS
	f	Ljava/util/function/Predicate;	g	CAN_BE_COLLIDED_WITH
c	axn$a	net/minecraft/world/entity/EntitySelector$MobCanWearArmorEntitySelector
	m	(Laxk;)Z	a	test
	f	Lbuw;	a	itemStack
c	axo	net/minecraft/world/entity/EntityType
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(DDD)Ldpj;	a	getAABB
	m	(ILcav;)Laxk;	a	create
	m	(Ladw;Lbuw;Lboj;Lgj;Layc;ZZ)Laxk;	a	spawn
	m	(Ladw;Lok;Lqk;Lboj;Lgj;Layc;ZZ)Laxk;	a	spawn
	m	(Laif;)Z	a	is
	m	(Laxk;)Laxk;	a	tryCast
	m	(Laxo;)Lyt;	a	getKey
	m	(Lcav;)Laxk;	a	create
	m	(Lcav;Laxo;)Laxk;	a	create
	m	(Lcav;Lboj;Laxk;Lok;)V	a	updateCustomEntityTag
	m	(Lcay;Lgj;ZLdpj;)D	a	getYOffset
	m	(Lcov;)Z	a	isBlockDangerous
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byString
	m	(Ljava/lang/String;Laxo$a;)Laxo;	a	register
	m	(Ljava/util/List;Lcav;)Ljava/util/stream/Stream;	a	loadEntitiesRecursive
	m	(Lok;)Ljava/util/Optional;	a	by
	m	(Lok;Laxk;)V	a	lambda$create$1
	m	(Lok;Lcav;)Ljava/util/Optional;	a	create
	m	(Lok;Lcav;Ljava/util/function/Function;)Laxk;	a	loadEntityRecursive
	m	(Lok;Lcav;Ljava/util/function/Function;Laxk;)Laxk;	a	lambda$loadEntityRecursive$3
	m	()Z	b	canSerialize
	m	(Ladw;Lok;Lqk;Lboj;Lgj;Layc;ZZ)Laxk;	b	create
	m	(Lcav;Laxo;)Laxk;	b	lambda$create$0
	m	(Lok;)V	b	lambda$create$2
	m	(Lok;Lcav;)Ljava/util/Optional;	b	loadStaticEntity
	m	()Z	c	canSummon
	m	()Z	d	fireImmune
	m	()Z	e	canSpawnFarFromPlayer
	m	()Layb;	f	getCategory
	m	()Ljava/lang/String;	g	getDescriptionId
	m	()Lqk;	h	getDescription
	m	()Ljava/lang/String;	i	toShortString
	m	()Lyt;	j	getDefaultLootTable
	m	()F	k	getWidth
	m	()F	l	getHeight
	m	()Laxl;	m	getDimensions
	m	()I	n	clientTrackingRange
	m	()I	o	updateInterval
	m	()Z	p	trackDeltas
	m	()Lgs$c;	q	builtInRegistryHolder
	f	Laxo;	A	EXPERIENCE_ORB
	f	Laxo;	B	EYE_OF_ENDER
	f	Laxo;	C	FALLING_BLOCK
	f	Laxo;	D	FIREWORK_ROCKET
	f	Laxo;	E	FOX
	f	Laxo;	F	GHAST
	f	Laxo;	G	GIANT
	f	Laxo;	H	GLOW_ITEM_FRAME
	f	Laxo;	I	GLOW_SQUID
	f	Laxo;	J	GOAT
	f	Laxo;	K	GUARDIAN
	f	Laxo;	L	HOGLIN
	f	Laxo;	M	HORSE
	f	Laxo;	N	HUSK
	f	Laxo;	O	ILLUSIONER
	f	Laxo;	P	IRON_GOLEM
	f	Laxo;	Q	ITEM
	f	Laxo;	R	ITEM_FRAME
	f	Laxo;	S	FIREBALL
	f	Laxo;	T	LEASH_KNOT
	f	Laxo;	U	LIGHTNING_BOLT
	f	Laxo;	V	LLAMA
	f	Laxo;	W	LLAMA_SPIT
	f	Laxo;	X	MAGMA_CUBE
	f	Laxo;	Y	MARKER
	f	Laxo;	Z	MINECART
	f	Laxo;	aA	SILVERFISH
	f	Laxo;	aB	SKELETON
	f	Laxo;	aC	SKELETON_HORSE
	f	Laxo;	aD	SLIME
	f	Laxo;	aE	SMALL_FIREBALL
	f	Laxo;	aF	SNOW_GOLEM
	f	Laxo;	aG	SNOWBALL
	f	Laxo;	aH	SPECTRAL_ARROW
	f	Laxo;	aI	SPIDER
	f	Laxo;	aJ	SQUID
	f	Laxo;	aK	STRAY
	f	Laxo;	aL	STRIDER
	f	Ljava/lang/String;	a	ENTITY_TAG
	f	Laxo;	aM	EGG
	f	Laxo;	aN	ENDER_PEARL
	f	Laxo;	aO	EXPERIENCE_BOTTLE
	f	Laxo;	aP	POTION
	f	Laxo;	aQ	TRIDENT
	f	Laxo;	aR	TRADER_LLAMA
	f	Laxo;	aS	TROPICAL_FISH
	f	Laxo;	aT	TURTLE
	f	Laxo;	aU	VEX
	f	Laxo;	aV	VILLAGER
	f	Laxo;	aW	VINDICATOR
	f	Laxo;	aX	WANDERING_TRADER
	f	Laxo;	aY	WITCH
	f	Laxo;	aZ	WITHER
	f	Laxo;	aa	CHEST_MINECART
	f	Laxo;	ab	COMMAND_BLOCK_MINECART
	f	Laxo;	ac	FURNACE_MINECART
	f	Laxo;	ad	HOPPER_MINECART
	f	Laxo;	ae	SPAWNER_MINECART
	f	Laxo;	af	TNT_MINECART
	f	Laxo;	ag	MULE
	f	Laxo;	ah	MOOSHROOM
	f	Laxo;	ai	OCELOT
	f	Laxo;	aj	PAINTING
	f	Laxo;	ak	PANDA
	f	Laxo;	al	PARROT
	f	Laxo;	am	PHANTOM
	f	Laxo;	an	PIG
	f	Laxo;	ao	PIGLIN
	f	Laxo;	ap	PIGLIN_BRUTE
	f	Laxo;	aq	PILLAGER
	f	Laxo;	ar	POLAR_BEAR
	f	Laxo;	as	TNT
	f	Laxo;	at	PUFFERFISH
	f	Laxo;	au	RABBIT
	f	Laxo;	av	RAVAGER
	f	Laxo;	aw	SALMON
	f	Laxo;	ax	SHEEP
	f	Laxo;	ay	SHULKER
	f	Laxo;	az	SHULKER_BULLET
	f	Laxo;	b	AREA_EFFECT_CLOUD
	f	Laxo;	ba	WITHER_SKELETON
	f	Laxo;	bb	WITHER_SKULL
	f	Laxo;	bc	WOLF
	f	Laxo;	bd	ZOGLIN
	f	Laxo;	be	ZOMBIE
	f	Laxo;	bf	ZOMBIE_HORSE
	f	Laxo;	bg	ZOMBIE_VILLAGER
	f	Laxo;	bh	ZOMBIFIED_PIGLIN
	f	Laxo;	bi	PLAYER
	f	Laxo;	bj	FISHING_BOBBER
	f	Lorg/slf4j/Logger;	bk	LOGGER
	f	Lgs$c;	bl	builtInRegistryHolder
	f	F	bm	MAGIC_HORSE_WIDTH
	f	Laxo$b;	bn	factory
	f	Layb;	bo	category
	f	Lcom/google/common/collect/ImmutableSet;	bp	immuneTo
	f	Z	bq	serialize
	f	Z	br	summon
	f	Z	bs	fireImmune
	f	Z	bt	canSpawnFarFromPlayer
	f	I	bu	clientTrackingRange
	f	I	bv	updateInterval
	f	Ljava/lang/String;	bw	descriptionId
	f	Lqk;	bx	description
	f	Lyt;	by	lootTable
	f	Laxl;	bz	dimensions
	f	Laxo;	c	ARMOR_STAND
	f	Laxo;	d	ARROW
	f	Laxo;	e	AXOLOTL
	f	Laxo;	f	BAT
	f	Laxo;	g	BEE
	f	Laxo;	h	BLAZE
	f	Laxo;	i	BOAT
	f	Laxo;	j	CAT
	f	Laxo;	k	CAVE_SPIDER
	f	Laxo;	l	CHICKEN
	f	Laxo;	m	COD
	f	Laxo;	n	COW
	f	Laxo;	o	CREEPER
	f	Laxo;	p	DOLPHIN
	f	Laxo;	q	DONKEY
	f	Laxo;	r	DRAGON_FIREBALL
	f	Laxo;	s	DROWNED
	f	Laxo;	t	ELDER_GUARDIAN
	f	Laxo;	u	END_CRYSTAL
	f	Laxo;	v	ENDER_DRAGON
	f	Laxo;	w	ENDERMAN
	f	Laxo;	x	ENDERMITE
	f	Laxo;	y	EVOKER
	f	Laxo;	z	EVOKER_FANGS
c	axo$1	net/minecraft/world/entity/EntityType$1
	m	(Lcav;Ljava/util/function/Consumer;Lpd;)V	a	lambda$tryAdvance$1
	m	(Ljava/util/function/Consumer;Laxk;)Laxk;	a	lambda$tryAdvance$0
	f	Ljava/util/Spliterator;	a	val$tagSpliterator
	f	Lcav;	b	val$level
	f	Ljava/util/List;	c	val$entities
c	axo$a	net/minecraft/world/entity/EntityType$Builder
	m	()Laxo$a;	a	noSummon
	m	(FF)Laxo$a;	a	sized
	m	(I)Laxo$a;	a	clientTrackingRange
	m	(Laxo$b;Layb;)Laxo$a;	a	of
	m	(Laxo;Lcav;)Laxk;	a	lambda$createNothing$0
	m	(Layb;)Laxo$a;	a	createNothing
	m	(Ljava/lang/String;)Laxo;	a	build
	m	([Lcdq;)Laxo$a;	a	immuneTo
	m	()Laxo$a;	b	noSave
	m	(I)Laxo$a;	b	updateInterval
	m	()Laxo$a;	c	fireImmune
	m	()Laxo$a;	d	canSpawnFarFromPlayer
	f	Laxo$b;	a	factory
	f	Layb;	b	category
	f	Lcom/google/common/collect/ImmutableSet;	c	immuneTo
	f	Z	d	serialize
	f	Z	e	summon
	f	Z	f	fireImmune
	f	Z	g	canSpawnFarFromPlayer
	f	I	h	clientTrackingRange
	f	I	i	updateInterval
	f	Laxl;	j	dimensions
c	axo$b	net/minecraft/world/entity/EntityType$EntityFactory
c	axp	net/minecraft/world/entity/EquipmentSlot
	m	()Laxp$a;	a	getType
	m	(I)I	a	getIndex
	m	(Laxp$a;I)Laxp;	a	byTypeAndIndex
	m	(Ljava/lang/String;)Laxp;	a	byName
	m	()I	b	getIndex
	m	()I	c	getFilterFlag
	m	()Ljava/lang/String;	d	getName
	m	()[Laxp;	e	$values
	f	Laxp;	a	MAINHAND
	f	Laxp;	b	OFFHAND
	f	Laxp;	c	FEET
	f	Laxp;	d	LEGS
	f	Laxp;	e	CHEST
	f	Laxp;	f	HEAD
	f	Laxp$a;	g	type
	f	I	h	index
	f	I	i	filterFlag
	f	Ljava/lang/String;	j	name
	f	[Laxp;	k	$VALUES
c	axp$a	net/minecraft/world/entity/EquipmentSlot$Type
	m	()[Laxp$a;	a	$values
	f	Laxp$a;	a	HAND
	f	Laxp$a;	b	ARMOR
	f	[Laxp$a;	c	$VALUES
c	axq	net/minecraft/world/entity/ExperienceOrb
	m	()Lrc;	S	getAddEntityPacket
	m	(I)I	a	getExperienceValue
	m	(IILaxq;)Z	a	lambda$tryMergeToExisting$0
	m	(Ladw;Ldpo;I)V	a	award
	m	(Lawu;F)Z	a	hurt
	m	(Laxq;)Z	a	canMerge
	m	(Laxq;II)Z	a	canMerge
	m	(Lboj;I)I	a	repairPlayerItems
	m	(Lok;)V	a	readAdditionalSaveData
	m	()Laxk$b;	aN	getMovementEmission
	m	()V	aY	doWaterSplashEffect
	m	()V	a_	defineSynchedData
	m	(I)I	b	durabilityToXp
	m	(Ladw;Ldpo;I)Z	b	tryMergeToExisting
	m	(Laxq;)V	b	merge
	m	(Lboj;)V	b	playerTouch
	m	(Lok;)V	b	addAdditionalSaveData
	m	(I)I	c	xpToDurability
	m	()Lahl;	cO	getSoundSource
	m	()Z	cf	isAttackable
	m	()I	h	getValue
	m	()I	i	getIcon
	m	()V	j	scanForEntities
	m	()V	k	tick
	m	()V	l	setUnderwaterMovement
	f	I	ao	age
	f	I	ap	health
	f	I	aq	value
	f	I	ar	count
	f	Lboj;	as	followingPlayer
	f	I	b	LIFETIME
	f	I	c	ENTITY_SCAN_PERIOD
	f	I	d	MAX_FOLLOW_DIST
	f	I	e	ORB_GROUPS_PER_AREA
	f	D	f	ORB_MERGE_DISTANCE
c	axr	net/minecraft/world/entity/FlyingMob
	m	(DZLcov;Lgj;)V	a	checkFallDamage
	m	(FFLawu;)Z	a	causeFallDamage
	m	()Z	b_	onClimbable
	m	(Ldpo;)V	h	travel
c	axs	net/minecraft/world/entity/GlowSquid
	m	(Lawu;F)Z	a	hurt
	m	(Laxo;Lcbk;Layc;Lgj;Ljava/util/Random;)Z	a	checkGlowSquideSpawnRules
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(I)V	b	setDarkTicks
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Lia;	n	getInkParticle
	m	()Lahj;	q	getSquirtSound
	m	()Lahj;	r	getAmbientSound
	m	()I	t	getDarkTicksRemaining
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	f	Lyb;	bZ	DATA_DARK_TICKS_REMAINING
c	axt	net/minecraft/world/entity/HumanoidArm
	m	()Laxt;	a	getOpposite
	m	()Lqk;	b	getName
	m	()[Laxt;	c	$values
	f	Laxt;	a	LEFT
	f	Laxt;	b	RIGHT
	f	Lqk;	c	name
	f	[Laxt;	d	$VALUES
c	axu	net/minecraft/world/entity/ItemBasedSteering
	m	()V	a	onSynced
	m	(Ljava/util/Random;)Z	a	boost
	m	(Lok;)V	a	addAdditionalSaveData
	m	(Z)V	a	setSaddle
	m	()Z	b	hasSaddle
	m	(Lok;)V	b	readAdditionalSaveData
	f	Z	a	boosting
	f	I	b	boostTime
	f	I	c	boostTimeTotal
	f	I	d	MIN_BOOST_TIME
	f	I	e	MAX_BOOST_TIME
	f	Lye;	f	entityData
	f	Lyb;	g	boostTimeAccessor
	f	Lyb;	h	hasSaddleAccessor
c	axv	net/minecraft/world/entity/ItemSteerable
	m	()Z	a	boost
	m	(Laya;Laxu;Ldpo;)Z	a	travel
	m	(Ldpo;)V	a	travelWithInput
	m	()F	b	getSteeringSpeed
c	axw	net/minecraft/world/entity/LerpingModel
	m	()Ljava/util/Map;	a	getModelRotationValues
c	axx	net/minecraft/world/entity/LightningBolt
	m	()Lrc;	S	getAddEntityPacket
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(I)V	a	spawnFire
	m	(Laxk;)Z	a	lambda$tick$0
	m	(Lcav;Lgj;Lcov;)V	a	lambda$randomStepCleaningCopper$2
	m	(Lcav;Lgj;Lgj$a;I)V	a	randomWalkCleaningCopper
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Z)V	a	setVisualOnly
	m	()V	a_	defineSynchedData
	m	(Ladx;)V	b	setCause
	m	(Lcav;Lgj;)V	b	clearCopperOnLightningStrike
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lcav;Lgj;)Ljava/util/Optional;	c	randomStepCleaningCopper
	m	()Lahl;	cO	getSoundSource
	m	(Ladx;)Z	e	lambda$tick$1
	m	()Ladx;	h	getCause
	m	()I	i	getBlocksSetOnFire
	m	()Ljava/util/stream/Stream;	j	getHitEntities
	m	()V	k	tick
	m	()V	l	powerLightningRod
	m	()Lgj;	n	getStrikePosition
	f	I	ao	flashes
	f	Z	ap	visualOnly
	f	Ladx;	aq	cause
	f	Ljava/util/Set;	ar	hitEntities
	f	I	as	blocksSetOnFire
	f	J	b	seed
	f	I	c	START_LIFE
	f	D	d	DAMAGE_RADIUS
	f	D	e	DETECTION_RADIUS
	f	I	f	life
c	axy	net/minecraft/world/entity/LivingEntity
	m	()V	A	updatingUsingItem
	m	(Laxk;)V	A	doPush
	m	(Laxk;)Z	B	hasLineOfSight
	m	()Z	C	shouldTriggerItemUseEffects
	m	()V	D	updateSwimAmount
	m	()Z	E	checkBedExists
	m	()V	F	updateInvisibilityStatus
	m	()Lrc;	S	getAddEntityPacket
	m	(B)V	a	handleEntityEvent
	m	(DDDFFIZ)V	a	lerpTo
	m	(DDDZ)Z	a	randomTeleport
	m	(DZLcov;Lgj;)V	a	checkFallDamage
	m	(DZLdpo;)Ldpo;	a	getFluidFallingAdjustedMovement
	m	(F)F	a	getSwimAmount
	m	(FFLawu;)Z	a	causeFallDamage
	m	(FI)V	a	lerpHeadTo
	m	(Lawg;)V	a	swing
	m	(Lawg;Lbuw;)V	a	setItemInHand
	m	(Lawg;Z)V	a	swing
	m	(Lawu;)V	a	die
	m	(Lawu;F)Z	a	hurt
	m	(Lawu;IZ)V	a	dropCustomDeathLoot
	m	(Lawu;Z)V	a	dropFromLootTable
	m	(Laxc;)Z	a	hasEffect
	m	(Laxe;)V	a	onEffectRemoved
	m	(Laxe;Laxk;)V	a	onEffectAdded
	m	(Laxe;ZLaxk;)V	a	onEffectUpdated
	m	(Laxk;)V	a	dismountVehicle
	m	(Laxk;I)V	a	take
	m	(Laxo;)Z	a	canAttackType
	m	(Laxp;)Z	a	hasItemInSlot
	m	(Laxp;Lbuw;)V	a	setItemSlot
	m	(Laxy;)V	a	setLastHurtByMob
	m	(Laxy;Laxp;)Layp;	a	createEquipmentSlotAccess
	m	(Laxy;Lbhf;)Z	a	canAttack
	m	(Laxy;Z)V	a	calculateEntityAnimation
	m	(Layk;)Laxl;	a	getDimensions
	m	(Layk;Laxl;)F	a	getEyeHeight
	m	(Layu;)Layv;	a	getAttribute
	m	(Lbli;)V	a	onItemPickup
	m	(Lbus;Lbuw;)Z	a	lambda$isHolding$4
	m	(Lbuw;)V	a	updateUsingItem
	m	(Lbuw;I)V	a	spawnItemParticles
	m	(Lbuw;Lcav;Laxy;)V	a	addEatEffect
	m	(Lcav;Lbuw;)Lbuw;	a	eat
	m	(Lcom/mojang/serialization/Dynamic;)Layt;	a	makeBrain
	m	(Ldix;)Z	a	canStandOnFluid
	m	(Ldpj;Ldpj;)V	a	checkAutoSpinAttack
	m	(Ldpo;F)Ldpo;	a	handleRelativeFrictionAndCalculateMovement
	m	(Ldv$a;Ldpo;)V	a	lookAt
	m	(Lgj;)V	a	setPosToBed
	m	(Lgj;Z)V	a	setRecordPlayingNearby
	m	(Lgo$a;Ln$a;)Ldpo;	a	getRelativePortalPosition
	m	(Ljava/util/List;Laxp;Lbuw;)V	a	lambda$handleEquipmentChanges$5
	m	(Ljava/util/Map;)V	a	handleHandSwap
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lok;Lgj;)V	a	lambda$addAdditionalSaveData$1
	m	(Lok;Lpd;)V	a	lambda$addAdditionalSaveData$2
	m	(Lri;)V	a	recreateFromPacket
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	(ZLawu;)Ldlc$a;	a	createLootContext
	m	()F	aC	getBlockSpeedFactor
	m	()V	a_	defineSynchedData
	m	()V	ag	kill
	m	()V	an	baseTick
	m	()V	av	outOfWorld
	m	(F)V	b	heal
	m	(Lawg;)Lbuw;	b	getItemInHand
	m	(Lawu;F)V	b	hurtArmor
	m	(Laxc;)Laxe;	b	getEffect
	m	(Laxe;)Z	b	addEffect
	m	(Laxe;Laxk;)Z	b	addEffect
	m	(Laxp;)Lbuw;	b	getItemBySlot
	m	(Laxp;Lbuw;)V	b	setLastArmorItem
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Layu;)D	b	getAttributeValue
	m	(Lbus;)Z	b	isHolding
	m	(Lbuw;I)V	b	triggerItemUseEffects
	m	(Lcov;)Z	b	shouldRemoveSoulSpeed
	m	(Lgj;)V	b	startSleeping
	m	(Ljava/util/Map;)V	b	handleEquipmentChanges
	m	(Ljava/util/function/Predicate;)Z	b	isHolding
	m	(Lok;)V	b	addAdditionalSaveData
	m	()V	bA	animateHurt
	m	()Ljava/lang/Iterable;	bC	getArmorSlots
	m	()Z	bH	rideableUnderWater
	m	()Z	bQ	isVisuallySwimming
	m	()Z	bT	isCurrentlyGlowing
	m	()Z	b_	onClimbable
	m	()Z	bh	isPickable
	m	()Z	bi	isPushable
	m	()Z	bl	isAlive
	m	()Z	bm	isInWall
	m	()V	bo	rideTick
	m	(F)V	c	setHealth
	m	(I)Lahj;	c	getFallDamageSound
	m	(IZ)V	c	setLivingEntityFlag
	m	(Laif;)V	c	jumpInLiquid
	m	(Lawg;)V	c	startUsingItem
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lawu;F)V	c	hurtHelmet
	m	(Laxc;)Laxe;	c	removeEffectNoUpdate
	m	(Laxe;)Z	c	canBeAffected
	m	(Laxe;Laxk;)V	c	forceAddEffect
	m	(Laxp;)V	c	broadcastBreakEvent
	m	(Laxp;Lbuw;)V	c	setLastHandItem
	m	(Laxy;)Z	c	canAttack
	m	(Layu;)D	c	getAttributeBaseValue
	m	(Lbuw;)V	c	equipEventAndSound
	m	(Lgj;)V	c	onChangedBlock
	m	(Lgj;Lcov;)Z	c	trapdoorUsableAsLadder
	m	(Ljava/util/Collection;)Z	c	areAllEffectsAmbient
	m	(Z)V	c	setOnGround
	m	()F	ce	getYHeadRot
	m	()Z	cs	shouldShowName
	m	()Ldpj;	cx	getBoundingBoxForCulling
	m	(FF)I	d	calculateFallDamage
	m	(I)Laxp;	d	getEquipmentSlot
	m	(Lawg;)V	d	broadcastBreakEvent
	m	(Lawu;)V	d	playHurtSound
	m	(Lawu;F)F	d	getDamageAfterArmorAbsorb
	m	(Laxc;)Z	d	removeEffect
	m	(Laxe;)V	d	lambda$tickEffects$3
	m	(Laxp;)Lbuw;	d	getLastArmorItem
	m	(Laxp;Lbuw;)Z	d	lambda$createEquipmentSlotAccess$10
	m	(Laxy;)V	d	blockUsingShield
	m	(Lboj;)I	d	getExperienceReward
	m	(Lbuw;)Lahj;	d	getDrinkingSound
	m	()Z	dA	onSoulSpeedBlock
	m	()V	dB	removeSoulSpeed
	m	()V	dC	tryAddSoulSpeed
	m	()V	dD	removeFrost
	m	()V	dE	tryAddFrost
	m	()F	dF	getScale
	m	()Z	dG	isAffectedByFluids
	m	()V	dH	tickDeath
	m	()Z	dI	shouldDropExperience
	m	()Z	dJ	shouldDropLoot
	m	()Z	dK	isAlwaysExperienceDropper
	m	()Ljava/util/Random;	dL	getRandom
	m	()Laxy;	dM	getLastHurtByMob
	m	()I	dN	getLastHurtByMobTimestamp
	m	()Laxy;	dO	getLastHurtMob
	m	()I	dP	getLastHurtMobTimestamp
	m	()I	dQ	getNoActionTime
	m	()Z	dR	shouldDiscardFriction
	m	()V	dS	tickEffects
	m	()Z	dT	canBeSeenAsEnemy
	m	()Z	dU	canBeSeenByAnyone
	m	()V	dV	removeEffectParticles
	m	()Z	dW	removeAllEffects
	m	()Ljava/util/Collection;	dX	getActiveEffects
	m	()Ljava/util/Map;	dY	getActiveEffectsMap
	m	()Z	dZ	isInvertedHealAndHarm
	m	()Z	dl	canFreeze
	m	()Layt;	du	getBrain
	m	()Layt$b;	dv	brainProvider
	m	()Layy$a;	dw	createLivingAttributes
	m	()Z	dx	canBreatheUnderwater
	m	()Z	dy	canSpawnSoulSpeedParticle
	m	()V	dz	spawnSoulSpeedParticle
	m	(FF)F	e	tickHeadTurn
	m	(Lawu;)Z	e	isDamageSourceBlocked
	m	(Lawu;F)F	e	getDamageAfterMagicAbsorb
	m	(Laxp;)Lbuw;	e	getLastHandItem
	m	(Laxy;)V	e	blockedByShield
	m	(Lboj;)V	e	setLastHurtByPlayer
	m	(Lbuw;)Lahj;	e	getEatingSound
	m	(Lgj;)V	e	setSleepingPos
	m	()V	eA	jumpFromGround
	m	()V	eB	goDownInWater
	m	()F	eC	getWaterSlowDown
	m	()F	eD	getSpeed
	m	()Z	eE	isSensitiveToWater
	m	()V	eF	serverAiStep
	m	()V	eG	pushEntities
	m	()Z	eH	isAutoSpinAttack
	m	()Z	eI	isEffectiveAi
	m	()F	eJ	getAbsorptionAmount
	m	()V	eK	updateEffectVisibility
	m	()Laxt;	eL	getMainArm
	m	()Z	eM	isUsingItem
	m	()Lawg;	eN	getUsedItemHand
	m	()Lbuw;	eO	getUseItem
	m	()I	eP	getUseItemRemainingTicks
	m	()I	eQ	getTicksUsingItem
	m	()V	eR	releaseUsingItem
	m	()V	eS	stopUsingItem
	m	()Z	eT	isBlocking
	m	()Z	eU	isSuppressingSlidingDownLadder
	m	()Z	eV	isFallFlying
	m	()I	eW	getFallFlyingTicks
	m	()Z	eX	isAffectedByPotions
	m	()Z	eY	attackable
	m	()Lcom/google/common/collect/ImmutableList;	eZ	getDismountPoses
	m	()F	ea	getHealth
	m	()Z	eb	isDeadOrDying
	m	()Lawu;	ec	getLastDamageSource
	m	()V	ed	dropEquipment
	m	()V	ee	dropExperience
	m	()Lyt;	ef	getLootTable
	m	()Laxy$a;	eg	getFallSounds
	m	()Ljava/util/Optional;	eh	getLastClimbablePos
	m	()V	ei	playBlockFallSound
	m	()I	ej	getArmorValue
	m	()Lawt;	ek	getCombatTracker
	m	()Laxy;	el	getKillCredit
	m	()F	em	getMaxHealth
	m	()I	en	getArrowCount
	m	()I	eo	getStingerCount
	m	()V	ep	updateSwingTime
	m	()Layw;	eq	getAttributes
	m	()Layd;	er	getMobType
	m	()Lbuw;	es	getMainHandItem
	m	()Lbuw;	et	getOffhandItem
	m	()F	eu	getArmorCoverPercentage
	m	()F	ev	getSoundVolume
	m	()F	ew	getVoicePitch
	m	()Z	ex	isImmobile
	m	()F	ey	getJumpPower
	m	()D	ez	getJumpBoostPower
	m	(Lawu;)V	f	dropAllDeathLoot
	m	(Lawu;F)V	f	actuallyHurt
	m	(Laxp;)B	f	entityEventForEquipmentBreak
	m	(Laxy;)V	f	createWitherRose
	m	(Layk;)Ldpj;	f	getLocalBoundsForPose
	m	(Lbuw;)V	f	verifyEquippedItem
	m	(Lgj;)V	f	lambda$stopSleeping$9
	m	()Ljava/util/Optional;	fa	getSleepingPos
	m	()V	fb	clearSleepingPos
	m	()Z	fc	isSleeping
	m	()V	fd	stopSleeping
	m	()Lgo;	fe	getBedOrientation
	m	(F)F	g	getViewYRot
	m	(Lawu;)Z	g	checkTotemDeathProtection
	m	(Laxk;)V	g	push
	m	(Laxy;)V	g	doAutoAttackOnTouch
	m	(Lbuw;)Z	g	canTakeItem
	m	(Lgj;)Ldpo;	g	lambda$stopSleeping$8
	m	(Z)V	g	setSprinting
	m	()V	h	onEnterCombat
	m	(Laxy;)V	h	lambda$updateFallFlying$6
	m	(Lbuw;)Lbuw;	h	getProjectile
	m	(Ldpo;)V	h	travel
	m	(Lgj;)Ljava/lang/Boolean;	h	lambda$checkBedExists$7
	m	()V	i	onLeaveCombat
	m	(Laxy;)V	i	lambda$tryAddSoulSpeed$0
	m	(Lbuw;)Laxp;	i	getEquipmentSlotForItem
	m	(Ldpo;)Ldpo;	i	resetForwardDirectionOfRelativePortalPosition
	m	(Lbuw;)V	j	breakItem
	m	(Ldpo;)Ldpo;	j	handleOnClimbable
	m	()V	k	tick
	m	(I)Layp;	k	getSlot
	m	(F)V	l	setYHeadRot
	m	(F)V	m	setYBodyRot
	m	(I)I	m	decreaseAirSupply
	m	()V	n	updateGlowingStatus
	m	(I)I	n	increaseAirSupply
	m	(I)V	o	setNoActionTime
	m	()V	p	stopRiding
	m	(DDD)V	p	knockback
	m	(I)V	p	setArrowCount
	m	(Z)V	p	setDiscardFriction
	m	(F)V	q	hurtCurrentlyUsedShield
	m	(I)V	q	setStingerCount
	m	(Z)V	q	setJumping
	m	()I	r	getCurrentSwingDuration
	m	(F)V	r	setSpeed
	m	(F)F	s	getAttackAnim
	m	(F)V	t	setAbsorptionAmount
	m	()V	u	makePoofParticles
	m	(F)F	u	getFrictionInfluencedSpeed
	m	()V	v	completeUsingItem
	m	()V	w	swapHandItems
	m	()V	w_	aiStep
	m	()V	x	detectEquipmentUpdates
	m	(Laxk;)V	x	setLastHurtMob
	m	()Lahj;	x_	getDeathSound
	m	()Ljava/util/Map;	y	collectEquipmentChanges
	m	(Laxk;)D	y	getVisibilityPercent
	m	()Z	y_	isBaby
	m	()V	z	updateFallFlying
	m	(Laxk;)Z	z	doHurtTarget
	f	I	aA	LIVING_ENTITY_FLAG_SPIN_ATTACK
	f	Lyb;	aB	DATA_LIVING_ENTITY_FLAGS
	f	F	aC	DEFAULT_EYE_HEIGHT
	f	Laxl;	aD	SLEEPING_DIMENSIONS
	f	F	aE	EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT
	f	Z	aF	swinging
	f	Lawg;	aG	swingingArm
	f	I	aH	swingTime
	f	I	aI	removeArrowTime
	f	I	aJ	removeStingerTime
	f	I	aK	hurtTime
	f	I	aL	hurtDuration
	f	F	aM	hurtDir
	f	I	aN	deathTime
	f	F	aO	oAttackAnim
	f	F	aP	attackAnim
	f	I	aQ	attackStrengthTicker
	f	F	aR	animationSpeedOld
	f	F	aS	animationSpeed
	f	F	aT	animationPosition
	f	I	aU	invulnerableDuration
	f	F	aV	timeOffs
	f	F	aW	rotA
	f	F	aX	yBodyRot
	f	F	aY	yBodyRotO
	f	F	aZ	yHeadRot
	f	I	ao	HAND_SLOTS
	f	I	ap	ARMOR_SLOTS
	f	I	aq	EQUIPMENT_SLOT_OFFSET
	f	I	ar	ARMOR_SLOT_OFFSET
	f	I	as	SWING_DURATION
	f	I	at	PLAYER_HURT_EXPERIENCE_TIME
	f	D	au	MIN_MOVEMENT_DISTANCE
	f	D	av	DEFAULT_BASE_GRAVITY
	f	I	aw	DEATH_DURATION
	f	I	ax	USE_ITEM_INTERVAL
	f	I	ay	LIVING_ENTITY_FLAG_IS_USING
	f	I	az	LIVING_ENTITY_FLAG_OFF_HAND
	f	I	bA	useItemRemaining
	f	I	bB	fallFlyTicks
	f	I	bC	autoSpinAttackTicks
	f	Layt;	bD	brain
	f	Layx;	bE	SPEED_MODIFIER_SPRINTING
	f	I	bF	DAMAGE_SOURCE_TIMEOUT
	f	I	bG	WAIT_TICKS_BEFORE_ITEM_USE_EFFECTS
	f	I	bH	TICKS_PER_ELYTRA_FREE_FALL_EVENT
	f	I	bI	FREE_FALL_EVENTS_PER_ELYTRA_BREAK
	f	D	bJ	MAX_LINE_OF_SIGHT_TEST_RANGE
	f	Lyb;	bK	DATA_HEALTH_ID
	f	Lyb;	bL	DATA_EFFECT_COLOR_ID
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lyb;	bM	DATA_EFFECT_AMBIENCE_ID
	f	Lyb;	bN	DATA_ARROW_COUNT_ID
	f	Lyb;	bO	DATA_STINGER_COUNT_ID
	f	Lyb;	bP	SLEEPING_POS_ID
	f	Layw;	bQ	attributes
	f	Lawt;	bR	combatTracker
	f	Ljava/util/Map;	bS	activeEffects
	f	Lgx;	bT	lastHandItemStacks
	f	Lgx;	bU	lastArmorItemStacks
	f	Z	bV	discardFriction
	f	Z	bW	effectsDirty
	f	Laxy;	bX	lastHurtByMob
	f	I	bY	lastHurtByMobTimestamp
	f	Laxy;	bZ	lastHurtMob
	f	F	ba	yHeadRotO
	f	F	bb	flyingSpeed
	f	Lboj;	bc	lastHurtByPlayer
	f	I	bd	lastHurtByPlayerTime
	f	Z	be	dead
	f	I	bf	noActionTime
	f	F	bg	oRun
	f	F	bh	run
	f	F	bi	animStep
	f	F	bj	animStepO
	f	F	bk	rotOffs
	f	I	bl	deathScore
	f	F	bm	lastHurt
	f	Z	bn	jumping
	f	F	bo	xxa
	f	F	bp	yya
	f	F	bq	zza
	f	I	br	lerpSteps
	f	D	bs	lerpX
	f	D	bt	lerpY
	f	D	bu	lerpZ
	f	D	bv	lerpYRot
	f	D	bw	lerpXRot
	f	D	bx	lyHeadRot
	f	I	by	lerpHeadSteps
	f	Lbuw;	bz	useItem
	f	Ljava/util/UUID;	c	SPEED_MODIFIER_SPRINTING_UUID
	f	I	ca	lastHurtMobTimestamp
	f	F	cb	speed
	f	I	cc	noJumpDelay
	f	F	cd	absorptionAmount
	f	Lgj;	ce	lastPos
	f	Ljava/util/Optional;	cf	lastClimbablePos
	f	Lawu;	cg	lastDamageSource
	f	J	ch	lastDamageStamp
	f	F	ci	swimAmount
	f	F	cj	swimAmountO
	f	Ljava/util/UUID;	d	SPEED_MODIFIER_SOUL_SPEED_UUID
	f	Ljava/util/UUID;	e	SPEED_MODIFIER_POWDER_SNOW_UUID
c	axy$1	net/minecraft/world/entity/LivingEntity$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	f	[I	b	$SwitchMap$net$minecraft$world$entity$EquipmentSlot
c	axy$a	net/minecraft/world/entity/LivingEntity$Fallsounds
	m	()Lahj;	a	small
	m	()Lahj;	b	big
	f	Lahj;	a	small
	f	Lahj;	b	big
c	axz	net/minecraft/world/entity/Marker
	m	()Lrc;	S	getAddEntityPacket
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Ldjd;	c_	getPistonPushReaction
	m	()V	k	tick
	m	(Laxk;)V	m	addPassenger
	f	Ljava/lang/String;	b	DATA_TAG
	f	Lok;	c	data
c	aya	net/minecraft/world/entity/Mob
	m	()Lbcw;	A	getMoveControl
	m	()Lbcu;	C	getJumpControl
	m	()Lbgf;	D	getNavigation
	m	()Lbgy;	E	getSensing
	m	()Laxy;	G	getTarget
	m	()V	I	ate
	m	()I	J	getAmbientSoundInterval
	m	()V	K	playAmbientSound
	m	()V	L	spawnAnim
	m	()V	M	updateControlFlags
	m	()Lyt;	N	getDefaultLootTable
	m	()Z	O	requiresCustomPersistence
	m	()Z	P	shouldDespawnInPeaceful
	m	()V	Q	sendDebugPackets
	m	()V	R	customServerAiStep
	m	()I	T	getMaxHeadXRot
	m	()I	U	getMaxHeadYRot
	m	()I	V	getHeadRotSpeed
	m	(B)V	a	handleEntityEvent
	m	(FFF)F	a	rotlerp
	m	(FLaxp;)V	a	enchantSpawnedArmor
	m	(Lawf;)V	a	populateDefaultEquipmentSlots
	m	(Lawu;IZ)V	a	dropCustomDeathLoot
	m	(Lawu;Z)V	a	dropFromLootTable
	m	(Laxk;FF)V	a	lookAt
	m	(Laxk;Z)Z	a	startRiding
	m	(Laxo;)Z	a	canAttackType
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	a	checkMobSpawnRules
	m	(Laxo;Z)Laya;	a	convertTo
	m	(Laxp;F)V	a	setDropChance
	m	(Laxp;I)Lbus;	a	getEquipmentForSlot
	m	(Laxp;Lbuw;)V	a	setItemSlot
	m	(Lboj;)Z	a	canBeLeashed
	m	(Lboj;Lawg;)Lawh;	a	interact
	m	(Lboj;Laya;)V	a	onOffspringSpawnedFromEgg
	m	(Lboj;Lbuw;Lbuw;)V	a	maybeDisableShield
	m	(Lbuw;Lbuw;)Z	a	canReplaceCurrentItem
	m	(Lbvk;)Z	a	canFireProjectileWeapon
	m	(Lcav;)Lbgf;	a	createNavigation
	m	(Lcaw;Layc;)Z	a	checkSpawnRules
	m	(Lcay;)Z	a	checkSpawnObstruction
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Ldjj;)F	a	getPathfindingMalus
	m	(Ldjj;F)V	a	setPathfindingMalus
	m	(Lgj;)Z	a	isWithinRestriction
	m	(Lgj;I)V	a	restrictTo
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Z)V	a	setBaby
	m	(ZLawu;)Ldlc$a;	a	createLootContext
	m	(ZZ)V	a	dropLeash
	m	()V	a_	defineSynchedData
	m	()V	an	baseTick
	m	(Lawf;)V	b	populateDefaultEquipmentEnchantments
	m	(Laxk;Z)V	b	setLeashedTo
	m	(Laxp;)Lbuw;	b	getItemBySlot
	m	(Laxp;Lbuw;)V	b	setItemSlotAndDropWhenKilled
	m	(Lbli;)V	b	pickUpItem
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lboj;Laya;)V	b	lambda$checkAndHandleImportantInteractions$2
	m	(Lbuw;Lbuw;)Z	b	canReplaceEqualItem
	m	(Ldjj;)Z	b	canCutCorner
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Ljava/lang/Iterable;	bB	getHandSlots
	m	()Ljava/lang/Iterable;	bC	getArmorSlots
	m	(I)Z	c	isMaxGroupSizeReached
	m	(Laif;)V	c	jumpInLiquid
	m	(Lboj;Lawg;)Lawh;	c	checkAndHandleImportantInteractions
	m	(Ljava/lang/String;)Z	c	lambda$canReplaceEqualItem$1
	m	()Z	cM	isControlledByLocalInstance
	m	()V	ch	removeAfterChangingDimensions
	m	()I	cj	getMaxFallDistance
	m	(I)V	d	setDelayedLeashHolderId
	m	(Lawu;)V	d	playHurtSound
	m	(Laxp;)V	d	setGuaranteedDrop
	m	(Lboj;)I	d	getExperienceReward
	m	(Ljava/lang/String;)Z	d	lambda$canReplaceEqualItem$0
	m	()V	dj	checkDespawn
	m	()Lbuw;	dk	getPickResult
	m	(FF)F	e	tickHeadTurn
	m	(Laxp;)F	e	getEquipmentDropChance
	m	()V	eF	serverAiStep
	m	()Z	eI	isEffectiveAi
	m	()Laxt;	eL	getMainArm
	m	()Lyt;	ef	getLootTable
	m	()I	ff	getMaxSpawnClusterSize
	m	()Z	fg	canBeControlledByRider
	m	()V	fh	setPersistenceRequired
	m	()Z	fi	canPickUpLoot
	m	()Z	fj	isPersistenceRequired
	m	()Z	fk	isWithinRestriction
	m	()Lgj;	fl	getRestrictCenter
	m	()F	fm	getRestrictRadius
	m	()V	fn	clearRestriction
	m	()Z	fo	hasRestriction
	m	()V	fp	tickLeash
	m	()Z	fq	isLeashed
	m	()Laxk;	fr	getLeashHolder
	m	()Z	fs	isNoAi
	m	()Z	ft	isLeftHanded
	m	()Z	fu	isAggressive
	m	()Z	fv	isSunBurnTick
	m	()V	fw	removeFreeWill
	m	()V	fx	restoreLeashFromSave
	m	(Lbuw;)Z	g	canTakeItem
	m	(D)Z	h	removeWhenFarAway
	m	(Laxy;)V	h	setTarget
	m	(Laxy;)D	i	getMeleeAttackRangeSqr
	m	(Lbuw;)Z	j	equipItemIfPossible
	m	()V	k	tick
	m	(Lbuw;)Z	k	canHoldItem
	m	(Lbuw;)Z	l	wantsToPickUp
	m	()V	n	resetAmbientSoundTime
	m	(Lbuw;)V	n	lambda$removeAfterChangingDimensions$3
	m	()Lahj;	r	getAmbientSound
	m	(F)V	r	setSpeed
	m	(Z)V	r	setCanPickUpLoot
	m	(Z)V	s	setNoAi
	m	(Z)V	t	setLeftHanded
	m	()V	u	registerGoals
	m	(F)V	u	setZza
	m	(Z)V	u	setAggressive
	m	(F)V	v	setYya
	m	()Layy$a;	w	createMobAttributes
	m	(F)V	w	setXxa
	m	()V	w_	aiStep
	m	()Z	x	shouldPassengersInheritMalus
	m	(F)V	x	enchantSpawnedWeapon
	m	()Lbcr;	y	createBodyControl
	m	()Lbcv;	z	getLookControl
	m	(Laxk;)Z	z	doHurtTarget
	f	F	bE	MAX_PICKUP_LOOT_CHANCE
	f	F	bF	MAX_ENCHANTED_ARMOR_CHANCE
	f	F	bG	MAX_ENCHANTED_WEAPON_CHANCE
	f	Ljava/lang/String;	bH	LEASH_TAG
	f	F	bI	DEFAULT_EQUIPMENT_DROP_CHANCE
	f	I	bJ	UPDATE_GOAL_SELECTOR_EVERY_N_TICKS
	f	I	bK	ambientSoundTime
	f	I	bL	xpReward
	f	Lyb;	b	DATA_MOB_FLAGS_ID
	f	Lbcv;	bM	lookControl
	f	Lbcw;	bN	moveControl
	f	Lbcu;	bO	jumpControl
	f	Lbgf;	bP	navigation
	f	Lbdu;	bQ	goalSelector
	f	Lbdu;	bR	targetSelector
	f	[F	bS	handDropChances
	f	[F	bT	armorDropChances
	f	I	bU	PICKUP_REACH
	f	Lbcr;	bV	bodyRotationControl
	f	Laxy;	bW	target
	f	Lbgy;	bX	sensing
	f	Lgx;	bY	handItems
	f	Lgx;	bZ	armorItems
	f	I	c	MOB_FLAG_NO_AI
	f	Z	ca	canPickUpLoot
	f	Z	cb	persistenceRequired
	f	Ljava/util/Map;	cc	pathfindingMalus
	f	Lyt;	cd	lootTable
	f	J	ce	lootTableSeed
	f	Laxk;	cf	leashHolder
	f	I	cg	delayedLeashHolderId
	f	Lok;	ch	leashInfoTag
	f	Lgj;	ci	restrictCenter
	f	F	cj	restrictRadius
	f	I	d	MOB_FLAG_LEFTHANDED
	f	I	e	MOB_FLAG_AGGRESSIVE
	f	F	f	MAX_WEARING_ARMOR_CHANCE
c	aya$1	net/minecraft/world/entity/Mob$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	f	[I	b	$SwitchMap$net$minecraft$world$entity$EquipmentSlot
c	ayb	net/minecraft/world/entity/MobCategory
	m	()Ljava/lang/String;	a	getName
	m	(Layb;)Layb;	a	lambda$static$0
	m	(Ljava/lang/String;)Layb;	a	byName
	m	()I	b	getMaxInstancesPerChunk
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	isFriendly
	m	()Z	e	isPersistent
	m	()I	f	getDespawnDistance
	m	()I	g	getNoDespawnDistance
	m	()[Layb;	h	$values
	f	Layb;	a	MONSTER
	f	Layb;	b	CREATURE
	f	Layb;	c	AMBIENT
	f	Layb;	d	AXOLOTLS
	f	Layb;	e	UNDERGROUND_WATER_CREATURE
	f	Layb;	f	WATER_CREATURE
	f	Layb;	g	WATER_AMBIENT
	f	Layb;	h	MISC
	f	Lcom/mojang/serialization/Codec;	i	CODEC
	f	Ljava/util/Map;	j	BY_NAME
	f	I	k	max
	f	Z	l	isFriendly
	f	Z	m	isPersistent
	f	Ljava/lang/String;	n	name
	f	I	o	noDespawnDistance
	f	I	p	despawnDistance
	f	[Layb;	q	$VALUES
c	ayc	net/minecraft/world/entity/MobSpawnType
	m	()[Layc;	a	$values
	f	Layc;	a	NATURAL
	f	Layc;	b	CHUNK_GENERATION
	f	Layc;	c	SPAWNER
	f	Layc;	d	STRUCTURE
	f	Layc;	e	BREEDING
	f	Layc;	f	MOB_SUMMONED
	f	Layc;	g	JOCKEY
	f	Layc;	h	EVENT
	f	Layc;	i	CONVERSION
	f	Layc;	j	REINFORCEMENT
	f	Layc;	k	TRIGGERED
	f	Layc;	l	BUCKET
	f	Layc;	m	SPAWN_EGG
	f	Layc;	n	COMMAND
	f	Layc;	o	DISPENSER
	f	Layc;	p	PATROL
	f	[Layc;	q	$VALUES
c	ayd	net/minecraft/world/entity/MobType
	f	Layd;	a	UNDEFINED
	f	Layd;	b	UNDEAD
	f	Layd;	c	ARTHROPOD
	f	Layd;	d	ILLAGER
	f	Layd;	e	WATER
c	aye	net/minecraft/world/entity/MoverType
	m	()[Laye;	a	$values
	f	Laye;	a	SELF
	f	Laye;	b	PLAYER
	f	Laye;	c	PISTON
	f	Laye;	d	SHULKER_BOX
	f	Laye;	e	SHULKER
	f	[Laye;	f	$VALUES
c	ayf	net/minecraft/world/entity/NeutralMob
	m	()Laxy;	G	getTarget
	m	()V	H_	stopBeingAngry
	m	()Z	I_	isAngry
	m	()V	J_	forgetCurrentTargetAndRefreshUniversalAnger
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
	m	(Ladw;Z)V	a	updatePersistentAnger
	m	(Laxy;)V	a	setLastHurtByMob
	m	(Lcav;Lok;)V	a	readPersistentAngerSaveData
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
	m	(Laxy;)Z	a_	isAngryAt
	m	(Lboj;)V	a_	playerDied
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lcav;)Z	b	isAngryAtAllPlayers
	m	()V	c	startPersistentAngerTimer
	m	(Laxy;)Z	c	canAttack
	m	(Lok;)V	c	addPersistentAngerSaveData
	m	()Laxy;	dM	getLastHurtByMob
	m	(Lboj;)V	e	setLastHurtByPlayer
	m	(Laxy;)V	h	setTarget
	f	Ljava/lang/String;	a_	TAG_ANGER_TIME
	f	Ljava/lang/String;	b_	TAG_ANGRY_AT
c	ayg	net/minecraft/world/entity/OwnableEntity
	m	()Ljava/util/UUID;	d	getOwnerUUID
	m	()Laxk;	e	getOwner
c	ayh	net/minecraft/world/entity/PathfinderMob
	m	(Lcaw;Layc;)Z	a	checkSpawnRules
	m	(Lgj;Lcay;)F	a	getWalkTargetValue
	m	(Lgj;)F	f	getWalkTargetValue
	m	()V	fp	tickLeash
	m	()Z	fx	isPathFinding
	m	()D	fy	followLeashSpeed
	m	(F)V	y	onLeashDistance
	f	F	bU	DEFAULT_WALK_TARGET_VALUE
c	ayi	net/minecraft/world/entity/PlayerRideable
c	ayj	net/minecraft/world/entity/PlayerRideableJumping
	m	()Z	a	canJump
	m	(I)V	a	onPlayerJump
	m	()V	b	handleStopJump
	m	(I)V	b	handleStartJump
c	ayk	net/minecraft/world/entity/Pose
	m	()[Layk;	a	$values
	f	Layk;	a	STANDING
	f	Layk;	b	FALL_FLYING
	f	Layk;	c	SLEEPING
	f	Layk;	d	SWIMMING
	f	Layk;	e	SPIN_ATTACK
	f	Layk;	f	CROUCHING
	f	Layk;	g	LONG_JUMPING
	f	Layk;	h	DYING
	f	[Layk;	i	$VALUES
c	ayl	net/minecraft/world/entity/PowerableMob
	m	()Z	a	isPowered
c	aym	net/minecraft/world/entity/ReputationEventHandler
	m	(Lbhp;Laxk;)V	a	onReputationEventFrom
c	ayn	net/minecraft/world/entity/Saddleable
	m	(Lahl;)V	a	equipSaddle
	m	()Z	c	isSaddleable
	m	()Z	d	isSaddled
c	ayo	net/minecraft/world/entity/Shearable
	m	()Z	a	readyForShearing
	m	(Lahl;)V	a	shear
c	ayp	net/minecraft/world/entity/SlotAccess
	m	()Lbuw;	a	get
	m	(Lawa;I)Layp;	a	forContainer
	m	(Lawa;ILjava/util/function/Predicate;)Layp;	a	forContainer
	m	(Laxy;Laxp;)Layp;	a	forEquipmentSlot
	m	(Laxy;Laxp;Ljava/util/function/Predicate;)Layp;	a	forEquipmentSlot
	m	(Lbuw;)Z	a	set
	m	(Lbuw;)Z	b	lambda$forEquipmentSlot$1
	m	(Lbuw;)Z	c	lambda$forContainer$0
	f	Layp;	a	NULL
c	ayp$1	net/minecraft/world/entity/SlotAccess$1
	m	()Lbuw;	a	get
	m	(Lbuw;)Z	a	set
c	ayp$2	net/minecraft/world/entity/SlotAccess$2
	m	()Lbuw;	a	get
	m	(Lbuw;)Z	a	set
	f	Lawa;	b	val$inventory
	f	I	c	val$id
	f	Ljava/util/function/Predicate;	d	val$validator
c	ayp$3	net/minecraft/world/entity/SlotAccess$3
	m	()Lbuw;	a	get
	m	(Lbuw;)Z	a	set
	f	Laxy;	b	val$entity
	f	Laxp;	c	val$slot
	f	Ljava/util/function/Predicate;	d	val$validator
c	ayq	net/minecraft/world/entity/SpawnGroupData
c	ayr	net/minecraft/world/entity/SpawnPlacements
	m	(Laxo;)Layr$c;	a	getPlacementType
	m	(Laxo;Layr$c;Lctw$a;Layr$b;)V	a	register
	m	(Laxo;Lcbk;Layc;Lgj;Ljava/util/Random;)Z	a	checkSpawnRules
	m	(Laxo;)Lctw$a;	b	getHeightmapType
	f	Ljava/util/Map;	a	DATA_BY_TYPE
c	ayr$a	net/minecraft/world/entity/SpawnPlacements$Data
	f	Lctw$a;	a	heightMap
	f	Layr$c;	b	placement
	f	Layr$b;	c	predicate
c	ayr$b	net/minecraft/world/entity/SpawnPlacements$SpawnPredicate
c	ayr$c	net/minecraft/world/entity/SpawnPlacements$Type
	m	()[Layr$c;	a	$values
	f	Layr$c;	a	ON_GROUND
	f	Layr$c;	b	IN_WATER
	f	Layr$c;	c	NO_RESTRICTIONS
	f	Layr$c;	d	IN_LAVA
	f	[Layr$c;	e	$VALUES
c	ays	net/minecraft/world/entity/TamableAnimal
	m	(B)V	a	handleEntityEvent
	m	(Lawu;)V	a	die
	m	(Laxy;Laxy;)Z	a	wantsToAttack
	m	(Lboj;)Z	a	canBeLeashed
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Ljava/util/UUID;)V	b	setOwnerUUID
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Ldqo;	bW	getTeam
	m	(Laxy;)Z	c	canAttack
	m	()Ljava/util/UUID;	d	getOwnerUUID
	m	()Laxk;	e	getOwner
	m	(Lboj;)V	f	tame
	m	()Laxy;	fA	getOwner
	m	()Z	fB	isOrderedToSit
	m	()Z	fz	isInSittingPose
	m	(Laxy;)Z	j	isOwnedBy
	m	(Laxk;)Z	p	isAlliedTo
	m	()Z	q	isTame
	m	()V	t	reassessTameGoals
	m	(Z)V	v	spawnTamingParticles
	m	(Z)V	w	setTame
	m	(Z)V	x	setInSittingPose
	m	(Z)V	y	setOrderedToSit
	f	Lyb;	bV	DATA_FLAGS_ID
	f	Lyb;	bW	DATA_OWNERUUID_ID
	f	Z	bY	orderedToSit
c	ayt	net/minecraft/world/entity/ai/Brain
	m	()Ljava/util/Map;	a	getMemories
	m	(ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList;	a	createPriorityPairs
	m	(JJ)V	a	updateActivityFromSchedule
	m	(Ladw;Laxy;)V	a	tick
	m	(Lbfy;)Z	a	hasMemoryValue
	m	(Lbfy;Lbfz;)Z	a	checkMemory
	m	(Lbfy;Ljava/lang/Object;)V	a	setMemory
	m	(Lbfy;Ljava/lang/Object;J)V	a	setMemoryWithExpiry
	m	(Lbfy;Ljava/util/Optional;)V	a	setMemory
	m	(Lbps;)V	a	setActiveActivityIfPossible
	m	(Lbps;ILcom/google/common/collect/ImmutableList;)V	a	addActivity
	m	(Lbps;ILcom/google/common/collect/ImmutableList;Lbfy;)V	a	addActivityAndRemoveMemoryWhenStopped
	m	(Lbps;Lcom/google/common/collect/ImmutableList;)V	a	addActivity
	m	(Lbps;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V	a	addActivityWithConditions
	m	(Lbps;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V	a	addActivityAndRemoveMemoriesWhenStopped
	m	(Lbpu;)V	a	setSchedule
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	serializeStart
	m	(Ljava/lang/Integer;)Ljava/util/Map;	a	lambda$addActivityAndRemoveMemoriesWhenStopped$2
	m	(Ljava/lang/Object;)Z	a	isEmptyCollection
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	a	lambda$isMemoryValue$1
	m	(Ljava/util/Collection;Ljava/util/Collection;)Layt$b;	a	provider
	m	(Ljava/util/List;)V	a	setActiveActivityToFirstValid
	m	(Ljava/util/Map$Entry;)Layt$a;	a	lambda$memories$0
	m	(Ljava/util/Set;)V	a	setCoreActivities
	m	()Lbpu;	b	getSchedule
	m	(Ladw;Laxy;)V	b	stopAll
	m	(Lbfy;)V	b	eraseMemory
	m	(Lbfy;Ljava/lang/Object;)Z	b	isMemoryValue
	m	(Lbfy;Ljava/util/Optional;)V	b	setMemoryInternal
	m	(Lbps;)V	b	setDefaultActivity
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec;	b	codec
	m	()Ljava/util/Set;	c	getActiveActivities
	m	(Ladw;Laxy;)V	c	tickSensors
	m	(Lbfy;)Ljava/util/Optional;	c	getMemory
	m	(Lbps;)Z	c	isActive
	m	()Ljava/util/List;	d	getRunningBehaviors
	m	(Ladw;Laxy;)V	d	startEachNonRunningBehavior
	m	(Lbfy;)J	d	getTimeUntilExpiry
	m	(Lbps;)V	d	setActiveActivity
	m	()V	e	useDefaultActivity
	m	(Ladw;Laxy;)V	e	tickEachRunningBehavior
	m	(Lbps;)V	e	eraseMemoriesForOtherActivitesThan
	m	()Ljava/util/Optional;	f	getActiveNonCoreActivity
	m	(Lbps;)Z	f	activityRequirementsAreMet
	m	()V	g	removeAllBehaviors
	m	(Lbps;)Ljava/util/Set;	g	lambda$addActivityAndRemoveMemoriesWhenStopped$3
	m	()Layt;	h	copyWithoutBehaviors
	m	()Ljava/util/stream/Stream;	i	memories
	m	()V	j	forgetOutdatedMemories
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/Supplier;	b	codec
	f	I	c	SCHEDULE_UPDATE_DELAY
	f	Ljava/util/Map;	d	memories
	f	Ljava/util/Map;	e	sensors
	f	Ljava/util/Map;	f	availableBehaviorsByPriority
	f	Lbpu;	g	schedule
	f	Ljava/util/Map;	h	activityRequirements
	f	Ljava/util/Map;	i	activityMemoriesToEraseWhenStopped
	f	Ljava/util/Set;	j	coreActivities
	f	Ljava/util/Set;	k	activeActivities
	f	Lbps;	l	defaultActivity
	f	J	m	lastScheduleUpdate
c	ayt$1	net/minecraft/world/entity/ai/Brain$1
	m	(Layt;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder;	a	encode
	m	(Lbfy;)Lcom/mojang/serialization/DataResult;	a	lambda$captureRead$5
	m	(Lbfy;Lbfx;)Layt$a;	a	lambda$captureRead$7
	m	(Lbfy;Lcom/mojang/serialization/Codec;)Lyt;	a	lambda$keys$0
	m	(Lbfy;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	captureRead
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;Lbfy;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$3
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;Layt$a;)V	a	lambda$encode$8
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult;	a	lambda$captureRead$6
	m	(Lcom/mojang/serialization/DynamicOps;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$decode$4
	m	(Lcom/mojang/serialization/DynamicOps;Lyt;)Ljava/lang/Object;	a	lambda$keys$2
	m	(Lbfy;)Ljava/util/stream/Stream;	b	lambda$keys$1
	f	Ljava/util/Collection;	a	val$memoryTypes
	f	Ljava/util/Collection;	b	val$sensorTypes
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	c	val$codecReference
c	ayt$a	net/minecraft/world/entity/ai/Brain$MemoryValue
	m	(Layt;)V	a	setMemoryInternal
	m	(Lbfy;Ljava/util/Optional;)Layt$a;	a	createUnchecked
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V	a	serialize
	m	(Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)V	a	lambda$serialize$1
	m	(Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Lbfx;)V	a	lambda$serialize$0
	f	Lbfy;	a	type
	f	Ljava/util/Optional;	b	value
c	ayt$b	net/minecraft/world/entity/ai/Brain$Provider
	m	()Layt;	a	lambda$makeBrain$1
	m	(Lcom/mojang/serialization/Dynamic;)Layt;	a	makeBrain
	m	()Lcom/mojang/serialization/Codec;	b	lambda$makeBrain$0
	f	Ljava/util/Collection;	a	memoryTypes
	f	Ljava/util/Collection;	b	sensorTypes
	f	Lcom/mojang/serialization/Codec;	c	codec
c	ayu	net/minecraft/world/entity/ai/attributes/Attribute
	m	()D	a	getDefaultValue
	m	(D)D	a	sanitizeValue
	m	(Z)Layu;	a	setSyncable
	m	()Z	b	isClientSyncable
	m	()Ljava/lang/String;	c	getDescriptionId
	f	I	a	MAX_NAME_LENGTH
	f	D	b	defaultValue
	f	Z	c	syncable
	f	Ljava/lang/String;	d	descriptionId
c	ayv	net/minecraft/world/entity/ai/attributes/AttributeInstance
	m	()Layu;	a	getAttribute
	m	(D)V	a	setBaseValue
	m	(Layv;)V	a	replaceFrom
	m	(Layx$a;)Ljava/util/Set;	a	getModifiers
	m	(Layx$a;Ljava/util/Set;)V	a	lambda$replaceFrom$1
	m	(Layx;)Z	a	hasModifier
	m	(Ljava/util/UUID;)Layx;	a	getModifier
	m	(Lok;)V	a	load
	m	()D	b	getBaseValue
	m	(Layx$a;)Ljava/util/Collection;	b	getModifiersOrEmpty
	m	(Layx;)V	b	addTransientModifier
	m	(Ljava/util/UUID;)V	b	removeModifier
	m	()Ljava/util/Set;	c	getModifiers
	m	(Layx$a;)Ljava/util/Set;	c	lambda$getModifiers$0
	m	(Layx;)V	c	addPermanentModifier
	m	(Ljava/util/UUID;)Z	c	removePermanentModifier
	m	()V	d	setDirty
	m	(Layx;)V	d	removeModifier
	m	()V	e	removeModifiers
	m	(Layx;)V	e	addModifier
	m	()D	f	getValue
	m	()Lok;	g	save
	m	()D	h	calculateValue
	f	Layu;	a	attribute
	f	Ljava/util/Map;	b	modifiersByOperation
	f	Ljava/util/Map;	c	modifierById
	f	Ljava/util/Set;	d	permanentModifiers
	f	D	e	baseValue
	f	Z	f	dirty
	f	D	g	cachedValue
	f	Ljava/util/function/Consumer;	h	onDirty
c	ayw	net/minecraft/world/entity/ai/attributes/AttributeMap
	m	()Ljava/util/Set;	a	getDirtyAttributes
	m	(Layu;)Layv;	a	getInstance
	m	(Layu;Layx;)V	a	lambda$addTransientAttributeModifiers$3
	m	(Layu;Ljava/util/Collection;)V	a	lambda$removeAttributeModifiers$2
	m	(Layu;Ljava/util/UUID;)Z	a	hasModifier
	m	(Layv;)V	a	onAttributeModified
	m	(Layw;)V	a	assignValues
	m	(Lcom/google/common/collect/Multimap;)V	a	removeAttributeModifiers
	m	(Ljava/lang/String;)V	a	lambda$load$6
	m	(Lok;Layu;)V	a	lambda$load$5
	m	(Loq;)V	a	load
	m	()Ljava/util/Collection;	b	getSyncableAttributes
	m	(Layu;)Z	b	hasAttribute
	m	(Layu;Ljava/util/UUID;)D	b	getModifierValue
	m	(Layv;)V	b	lambda$assignValues$4
	m	(Lcom/google/common/collect/Multimap;)V	b	addTransientAttributeModifiers
	m	()Loq;	c	save
	m	(Layu;)D	c	getValue
	m	(Layv;)Z	c	lambda$getSyncableAttributes$0
	m	(Layu;)D	d	getBaseValue
	m	(Layu;)Layv;	e	lambda$getInstance$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	attributes
	f	Ljava/util/Set;	c	dirtyAttributes
	f	Layy;	d	supplier
c	ayx	net/minecraft/world/entity/ai/attributes/AttributeModifier
	m	()Ljava/util/UUID;	a	getId
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$1
	m	(Lok;)Layx;	a	load
	m	()Ljava/lang/String;	b	getName
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$new$0
	m	()Layx$a;	c	getOperation
	m	()D	d	getAmount
	m	()Lok;	e	save
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	D	b	amount
	f	Layx$a;	c	operation
	f	Ljava/util/function/Supplier;	d	nameGetter
	f	Ljava/util/UUID;	e	id
c	ayx$a	net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation
	m	()I	a	toValue
	m	(I)Layx$a;	a	fromValue
	m	()[Layx$a;	b	$values
	f	Layx$a;	a	ADDITION
	f	Layx$a;	b	MULTIPLY_BASE
	f	Layx$a;	c	MULTIPLY_TOTAL
	f	[Layx$a;	d	OPERATIONS
	f	I	e	value
	f	[Layx$a;	f	$VALUES
c	ayy	net/minecraft/world/entity/ai/attributes/AttributeSupplier
	m	()Layy$a;	a	builder
	m	(Layu;)D	a	getValue
	m	(Layu;Ljava/util/UUID;)D	a	getModifierValue
	m	(Ljava/util/function/Consumer;Layu;)Layv;	a	createInstance
	m	(Layu;)D	b	getBaseValue
	m	(Layu;Ljava/util/UUID;)Z	b	hasModifier
	m	(Layu;)Z	c	hasAttribute
	m	(Layu;)Layv;	d	getAttributeInstance
	f	Ljava/util/Map;	a	instances
c	ayy$a	net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder
	m	()Layy;	a	build
	m	(Layu;)Layy$a;	a	add
	m	(Layu;D)Layy$a;	a	add
	m	(Layu;Layv;)V	a	lambda$create$0
	m	(Layu;)Layv;	b	create
	f	Ljava/util/Map;	a	builder
	f	Z	b	instanceFrozen
c	ayz	net/minecraft/world/entity/ai/attributes/Attributes
	m	(Ljava/lang/String;Layu;)Layu;	a	register
	f	Layu;	a	MAX_HEALTH
	f	Layu;	b	FOLLOW_RANGE
	f	Layu;	c	KNOCKBACK_RESISTANCE
	f	Layu;	d	MOVEMENT_SPEED
	f	Layu;	e	FLYING_SPEED
	f	Layu;	f	ATTACK_DAMAGE
	f	Layu;	g	ATTACK_KNOCKBACK
	f	Layu;	h	ATTACK_SPEED
	f	Layu;	i	ARMOR
	f	Layu;	j	ARMOR_TOUGHNESS
	f	Layu;	k	LUCK
	f	Layu;	l	SPAWN_REINFORCEMENTS_CHANCE
	f	Layu;	m	JUMP_STRENGTH
c	aza	net/minecraft/world/entity/ai/attributes/DefaultAttributes
	m	()V	a	validate
	m	(Laxo;)Layy;	a	getSupplier
	m	(Lyt;)V	a	lambda$validate$2
	m	(Laxo;)Z	b	hasSupplier
	m	(Laxo;)Z	c	lambda$validate$1
	m	(Laxo;)Z	d	lambda$validate$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	SUPPLIERS
c	azb	net/minecraft/world/entity/ai/attributes/RangedAttribute
	m	(D)D	a	sanitizeValue
	m	()D	d	getMinValue
	m	()D	e	getMaxValue
	f	D	b	minValue
	f	D	c	maxValue
c	azc	net/minecraft/world/entity/ai/attributes/package-info
c	azd	net/minecraft/world/entity/ai/behavior/AcquirePoi
	m	(JLgj;)Z	a	lambda$start$1
	m	(JLit/unimi/dsi/fastutil/longs/Long2ObjectMap$Entry;)Z	a	lambda$start$0
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Layh;)Z	a	checkExtraStartConditions
	m	(Ladw;Layh;J)V	a	start
	m	(Ladw;Layh;Ljava/lang/Byte;)V	a	lambda$start$3
	m	(Layh;JJ)Lazd$a;	a	lambda$start$5
	m	(Lbfy;Lbfy;)Lcom/google/common/collect/ImmutableMap;	a	constructEntryConditionMap
	m	(Lbhs;Lgj;Layh;Ladw;Lbhv;)V	a	lambda$start$4
	m	(Lgj;Lgj;)Z	a	lambda$start$2
	f	I	a	SCAN_RANGE
	f	I	c	BATCH_SIZE
	f	I	d	RATE
	f	Lbhv;	e	poiType
	f	Lbfy;	f	memoryToAcquire
	f	Z	g	onlyIfAdult
	f	Ljava/util/Optional;	h	onPoiAcquisitionEvent
	f	J	i	nextScheduledStart
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	j	batchCache
c	azd$a	net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry
	m	(J)V	a	markAttempt
	m	(J)Z	b	isStillValid
	m	(J)Z	c	shouldRetry
	f	I	a	MIN_INTERVAL_INCREASE
	f	I	b	MAX_INTERVAL_INCREASE
	f	I	c	MAX_RETRY_PATHFINDING_INTERVAL
	f	Ljava/util/Random;	d	random
	f	J	e	previousAttemptTimestamp
	f	J	f	nextScheduledAttemptTimestamp
	f	I	g	currentDelay
c	aze	net/minecraft/world/entity/ai/behavior/AnimalMakeLove
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbid;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbid;J)V	a	start
	m	(Lbid;)Lbid;	a	getBreedTarget
	m	(Lbid;Laxy;)Z	a	lambda$findValidBreedPartner$0
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Lbid;J)Z	b	canStillUse
	m	(Lbid;)Z	b	hasBreedTargetOfRightType
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Lbid;J)V	c	tick
	m	(Lbid;)Ljava/util/Optional;	c	findValidBreedPartner
	m	(Ladw;Laxy;J)V	d	tick
	m	(Ladw;Lbid;J)V	d	stop
	f	I	a	BREED_RANGE
	f	I	c	MIN_DURATION
	f	I	d	MAX_DURATION
	f	Laxo;	e	partnerType
	f	F	f	speedModifier
	f	J	g	spawnChildAtTime
c	azf	net/minecraft/world/entity/ai/behavior/AnimalPanic
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Layh;J)Z	a	canStillUse
	m	(Layh;Ladw;)Ldpo;	a	getPanicPos
	m	(Lcab;Laxk;)Ljava/util/Optional;	a	lookForWater
	m	(Lcab;Lgj;)Z	a	lambda$lookForWater$0
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Layh;J)V	b	start
	m	(Ladw;Layh;J)V	c	tick
	m	(Ladw;Laxy;J)V	d	tick
	f	I	a	PANIC_MIN_DURATION
	f	I	c	PANIC_MAX_DURATION
	f	I	d	PANIC_DISTANCE_HORIZONTAL
	f	I	e	PANIC_DISTANCE_VERTICAL
	f	F	f	speedMultiplier
c	azg	net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnw;J)V	a	start
	m	(Lbhv;)Ljava/util/Optional;	a	lambda$start$2
	m	(Lbhv;Lbnz;)Z	a	lambda$start$1
	m	(Lbnw;Ladw;Lbnz;)V	a	lambda$start$3
	m	(Lgr;Ladw;)Ljava/util/Optional;	a	lambda$start$0
c	azh	net/minecraft/world/entity/ai/behavior/BabyFollowAdult
	m	(FLaxy;)Ljava/lang/Float;	a	lambda$new$0
	m	(Ladw;Laxi;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxi;J)V	a	start
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Laxi;)Laxi;	a	getNearestAdult
	f	Lavs;	a	followRange
	f	Ljava/util/function/Function;	c	speedModifier
c	azi	net/minecraft/world/entity/ai/behavior/BackUpIfTooClose
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laya;)Z	a	checkExtraStartConditions
	m	(Ladw;Laya;J)V	a	start
	m	(Laya;)Z	a	isTargetVisible
	m	(Laya;)Z	b	isTargetTooClose
	m	(Laya;)Laxy;	c	getTarget
	f	I	a	tooCloseDistance
	f	F	c	strafeSpeed
c	azj	net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent
	m	(Ladw;Laxy;J)V	a	start
	f	I	a	pacifyDuration
c	azk	net/minecraft/world/entity/ai/behavior/Behavior
	m	()Lazk$a;	a	getStatus
	m	(J)Z	a	timedOut
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Laxy;)Z	a	hasRequiredMemories
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Laxy;J)V	d	tick
	m	(Ladw;Laxy;J)Z	e	tryStart
	m	(Ladw;Laxy;J)V	f	tickOrStop
	m	(Ladw;Laxy;J)V	g	doStop
	f	I	a	DEFAULT_DURATION
	f	Ljava/util/Map;	b	entryCondition
	f	Lazk$a;	c	status
	f	J	d	endTimestamp
	f	I	e	minDuration
	f	I	f	maxDuration
c	azk$a	net/minecraft/world/entity/ai/behavior/Behavior$Status
	m	()[Lazk$a;	a	$values
	f	Lazk$a;	a	STOPPED
	f	Lazk$a;	b	RUNNING
	f	[Lazk$a;	c	$VALUES
c	azl	net/minecraft/world/entity/ai/behavior/BehaviorUtils
	m	(Ladw;ILhf;)Z	a	lambda$findSectionClosestToVillage$2
	m	(Ladw;Lhf;I)Lhf;	a	findSectionClosestToVillage
	m	(Laxk;)Laxy;	a	lambda$getLivingEntityFromUUIDMemory$4
	m	(Laxo;Laxy;)Z	a	lambda$targetIsValid$0
	m	(Laxy;)Lbnw;	a	lambda$getNearbyVillagersWithCondition$6
	m	(Laxy;Laxk;FI)V	a	setWalkAndLookTargetMemories
	m	(Laxy;Laxy;)V	a	lookAtEntity
	m	(Laxy;Laxy;D)Z	a	isOtherTargetMuchFurtherAwayThanCurrentAttackTarget
	m	(Laxy;Laxy;F)V	a	lockGazeAndWalkToEachOther
	m	(Laxy;Laxy;Laxy;)Laxy;	a	getTargetNearestMe
	m	(Laxy;Lbfy;)Ljava/util/Optional;	a	getLivingEntityFromUUIDMemory
	m	(Laxy;Lbuw;Ldpo;)V	a	throwItem
	m	(Laxy;Lgj;FI)V	a	setWalkAndLookTargetMemories
	m	(Laxy;Ljava/util/Optional;Laxy;)Laxy;	a	getNearestTarget
	m	(Laxy;Ljava/util/UUID;)Laxk;	a	lambda$getLivingEntityFromUUIDMemory$3
	m	(Laya;Laxy;)Z	a	isWithinMeleeAttackRange
	m	(Laya;Laxy;I)Z	a	isWithinAttackRange
	m	(Layh;II)Ldpo;	a	getRandomSwimmablePos
	m	(Layt;Laxy;)Z	a	entityIsVisible
	m	(Layt;Lbfy;Laxo;)Z	a	targetIsValid
	m	(Layt;Lbfy;Ljava/util/function/Predicate;)Z	a	targetIsValid
	m	(Lbnw;Laxy;)Z	a	lambda$getNearbyVillagersWithCondition$5
	m	(Lbnw;Ljava/util/function/Predicate;)Ljava/util/stream/Stream;	a	getNearbyVillagersWithCondition
	m	(Lbnw;Ljava/util/function/Predicate;Ljava/util/List;)Ljava/util/stream/Stream;	a	lambda$getNearbyVillagersWithCondition$7
	m	(Laxy;Laxy;)Z	b	canSee
	m	(Laxy;Laxy;F)V	b	setWalkAndLookTargetMemoriesToEachOther
	m	(Layt;Laxy;)Z	b	lambda$targetIsValid$1
	m	(Laxy;Laxy;)V	c	lookAtEachOther
c	azm	net/minecraft/world/entity/ai/behavior/BlockPosTracker
	m	()Ldpo;	a	currentPosition
	m	(Laxy;)Z	a	isVisibleBy
	m	()Lgj;	b	currentBlockPosition
	f	Lgj;	a	blockPos
	f	Ldpo;	b	centerPosition
c	azn	net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnw;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnw;J)Z	a	canStillUse
	m	(Lbts;I)Lbuw;	a	getFirework
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Lbnw;J)V	b	stop
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Lbnw;J)V	c	tick
	m	(Ladw;Laxy;J)V	d	tick
	f	Lbpo;	a	currentRaid
c	azo	net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laya;)Z	a	checkExtraStartConditions
	m	(Ladw;Laya;J)V	a	start
	f	Ljava/util/function/Predicate;	a	predicate
	f	Lbfy;	c	sourceMemory
	f	Lbfy;	d	targetMemory
	f	Lavs;	e	durationOfCopy
c	azp	net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks
	m	(J)Z	a	timedOut
	m	(Laxy;)Ljava/util/Optional;	a	getCooldownTickMemory
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Laxy;J)V	d	tick
	f	Lbfy;	a	cooldownTicks
c	azq	net/minecraft/world/entity/ai/behavior/CrossbowAttack
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laya;)Z	a	checkExtraStartConditions
	m	(Ladw;Laya;J)Z	a	canStillUse
	m	(Laxy;)Laxy;	a	getAttackTarget
	m	(Laya;Laxy;)V	a	crossbowAttack
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Laya;J)V	b	tick
	m	(Laya;Laxy;)V	b	lookAtTarget
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Laya;J)V	c	stop
	m	(Ladw;Laxy;J)V	d	tick
	f	I	a	TIMEOUT
	f	I	c	attackDelay
	f	Lazq$a;	d	crossbowState
c	azq$a	net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState
	m	()[Lazq$a;	a	$values
	f	Lazq$a;	a	UNCHARGED
	f	Lazq$a;	b	CHARGING
	f	Lazq$a;	c	CHARGED
	f	Lazq$a;	d	READY_TO_ATTACK
	f	[Lazq$a;	e	$VALUES
c	azr	net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Laxy;Laxk;)Z	a	isVehicleValid
	f	I	a	maxWalkDistToRideTarget
	f	Ljava/util/function/BiPredicate;	c	dontRideIf
c	azs	net/minecraft/world/entity/ai/behavior/DoNothing
	m	(Ladw;Laxy;J)Z	b	canStillUse
c	azt	net/minecraft/world/entity/ai/behavior/EntityTracker
	m	()Ldpo;	a	currentPosition
	m	(Laxy;)Z	a	isVisibleBy
	m	()Lgj;	b	currentBlockPosition
	m	()Laxk;	c	getEntity
	f	Laxk;	a	entity
	f	Z	b	trackEyeHeight
c	azu	net/minecraft/world/entity/ai/behavior/EraseMemoryIf
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	f	Ljava/util/function/Predicate;	a	predicate
	f	Lbfy;	c	memoryType
c	azv	net/minecraft/world/entity/ai/behavior/FollowTemptation
	m	(J)Z	a	timedOut
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Layh;J)Z	a	canStillUse
	m	(Layh;)F	a	getSpeedModifier
	m	()Lcom/google/common/collect/ImmutableMap;	b	lambda$new$0
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Layh;J)V	b	start
	m	(Layh;)Ljava/util/Optional;	b	getTemptingPlayer
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Layh;J)V	c	stop
	m	(Ladw;Laxy;J)V	d	tick
	m	(Ladw;Layh;J)V	d	tick
	f	I	a	TEMPTATION_COOLDOWN
	f	D	c	CLOSE_ENOUGH_DIST
	f	Ljava/util/function/Function;	d	speedModifier
c	azw	net/minecraft/world/entity/ai/behavior/GateBehavior
	m	(J)Z	a	timedOut
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laxy;JLazk;)V	a	lambda$stop$6
	m	(Lazk;)Z	a	lambda$toString$7
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$new$0
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Laxy;JLazk;)V	b	lambda$tick$4
	m	(Lazk;)Z	b	lambda$stop$5
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Laxy;JLazk;)Z	c	lambda$canStillUse$2
	m	(Lazk;)Z	c	lambda$tick$3
	m	(Ladw;Laxy;J)V	d	tick
	m	(Lazk;)Z	d	lambda$canStillUse$1
	f	Ljava/util/Set;	a	exitErasedMemories
	f	Lazw$a;	c	orderPolicy
	f	Lazw$b;	d	runningPolicy
	f	Lbbq;	e	behaviors
c	azw$a	net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy
	m	()[Lazw$a;	a	$values
	m	(Lbbq;)V	a	apply
	m	(Lbbq;)V	b	lambda$static$0
	f	Lazw$a;	a	ORDERED
	f	Lazw$a;	b	SHUFFLED
	f	Ljava/util/function/Consumer;	c	consumer
	f	[Lazw$a;	d	$VALUES
c	azw$b	net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy
	m	()[Lazw$b;	a	$values
	m	(Ljava/util/stream/Stream;Ladw;Laxy;J)V	a	apply
	f	Lazw$b;	a	RUN_ONE
	f	Lazw$b;	b	TRY_ALL
	f	[Lazw$b;	c	$VALUES
c	azw$b$1	net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$1
	m	(Ladw;Laxy;JLazk;)Z	a	lambda$apply$1
	m	(Lazk;)Z	a	lambda$apply$0
	m	(Ljava/util/stream/Stream;Ladw;Laxy;J)V	a	apply
c	azw$b$2	net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$2
	m	(Ladw;Laxy;JLazk;)V	a	lambda$apply$1
	m	(Lazk;)Z	a	lambda$apply$0
	m	(Ljava/util/stream/Stream;Ladw;Laxy;J)V	a	apply
c	azx	net/minecraft/world/entity/ai/behavior/GiveGiftToHero
	m	(Ladw;)I	a	calculateTimeUntilNextGift
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnw;J)V	a	start
	m	(Lbnw;)Ljava/util/List;	a	getItemToThrow
	m	(Lbnw;Laxy;)V	a	throwGift
	m	(Lbnw;Lboj;)Z	a	isWithinThrowingDistance
	m	(Lboj;)Z	a	isHero
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Lbnw;J)Z	b	canStillUse
	m	(Lbnw;)Z	b	isHeroVisible
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Lbnw;J)V	c	tick
	m	(Lbnw;)Ljava/util/Optional;	c	getNearestTargetableHero
	m	(Ladw;Laxy;J)V	d	tick
	m	(Ladw;Lbnw;J)V	d	stop
	f	I	a	THROW_GIFT_AT_DISTANCE
	f	I	c	MIN_TIME_BETWEEN_GIFTS
	f	I	d	MAX_TIME_BETWEEN_GIFTS
	f	I	e	TIME_TO_DELAY_FOR_HEAD_TO_FINISH_TURNING
	f	Ljava/util/Map;	f	GIFTS
	f	F	g	SPEED_MODIFIER
	f	I	h	timeUntilNextGift
	f	Z	i	giftGivenDuringThisRun
	f	J	j	timeSinceStart
c	azy	net/minecraft/world/entity/ai/behavior/GoOutsideToCelebrate
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
c	azz	net/minecraft/world/entity/ai/behavior/GoToCelebrateLocation
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laya;J)V	a	start
	m	(Laya;)Lgj;	a	getCelebrateLocation
	m	(Laya;Lgj;)Lgj;	a	getNearbyPos
	m	(Ljava/util/Random;)I	a	getRandomOffset
	f	I	a	closeEnoughDist
	f	F	c	speedModifier
c	baa	net/minecraft/world/entity/ai/behavior/GoToClosestVillage
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnw;J)V	a	start
	m	(Lbhs;Lgj;)D	a	lambda$start$0
	f	F	a	speedModifier
	f	I	c	closeEnoughDistance
c	bab	net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnw;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnw;J)Z	a	canStillUse
	m	(Ladw;Lgr;)V	a	lambda$stop$2
	m	(Lbhv;)Z	a	lambda$stop$1
	m	(Lbps;)Ljava/lang/Boolean;	a	lambda$checkExtraStartConditions$0
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Lbnw;J)V	b	tick
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Lbnw;J)V	c	stop
	m	(Ladw;Laxy;J)V	d	tick
	f	F	a	speedModifier
	f	I	c	TICKS_UNTIL_TIMEOUT
c	bac	net/minecraft/world/entity/ai/behavior/GoToWantedItem
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Laxy;)Lbli;	a	getClosestLovedItem
	m	(Laxy;)Z	b	lambda$new$0
	f	Ljava/util/function/Predicate;	a	predicate
	f	I	c	maxDistToWalk
	f	F	d	speedModifier
c	bad	net/minecraft/world/entity/ai/behavior/HarvestFarmland
	m	(Ladw;)Lgj;	a	getValidFarmland
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnw;J)V	a	start
	m	(Lgj;Ladw;)Z	a	validPos
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Lbnw;J)V	b	stop
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Lbnw;J)V	c	tick
	m	(Ladw;Laxy;J)V	d	tick
	m	(Ladw;Lbnw;J)Z	d	canStillUse
	f	F	a	SPEED_MODIFIER
	f	I	c	HARVEST_DURATION
	f	Lgj;	d	aboveFarmlandPos
	f	J	e	nextOkStartTime
	f	I	f	timeWorkedSoFar
	f	Ljava/util/List;	g	validFarmlandAroundVillager
c	bae	net/minecraft/world/entity/ai/behavior/InsideBrownianWalk
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Layh;)Z	a	checkExtraStartConditions
	m	(Ladw;Layh;J)V	a	start
	m	(Ladw;Layh;Lgj;)Z	a	lambda$start$2
	m	(Ladw;Lgj;)Z	a	lambda$start$0
	m	(Layh;Lgj;)V	a	lambda$start$3
	m	(Ladw;Layh;Lgj;)Z	b	lambda$start$1
	f	F	a	speedModifier
c	baf	net/minecraft/world/entity/ai/behavior/InteractWith
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Laxo;ILbfy;FI)Lbaf;	a	of
	m	(Laxo;ILjava/util/function/Predicate;Lbfy;FI)Lbaf;	a	of
	m	(Laxy;)Z	a	seesAtLeastOneValidTarget
	m	(Laxy;Laxy;)Z	a	canInteract
	m	(Layt;Laxy;)V	a	lambda$start$4
	m	(Laxy;)Z	b	isTargetValid
	m	(Laxy;Laxy;)Z	b	lambda$start$3
	m	(Laxy;)Z	c	lambda$of$2
	m	(Laxy;)Z	d	lambda$of$1
	m	(Laxy;)Z	e	lambda$of$0
	f	I	a	maxDist
	f	F	c	speedModifier
	f	Laxo;	d	type
	f	I	e	interactionRangeSqr
	f	Ljava/util/function/Predicate;	f	targetFilter
	f	Ljava/util/function/Predicate;	g	selfFilter
	f	Lbfy;	h	memory
c	bag	net/minecraft/world/entity/ai/behavior/InteractWithDoor
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laxy;Ldjl;Ldjl;)V	a	closeDoorsThatIHaveOpenedOrPassedThrough
	m	(Ladw;Laxy;Lgj;)Z	a	areOtherMobsComingThroughDoor
	m	(Ladw;Laxy;Lgr;)Z	a	isDoorTooFarAway
	m	(Ladw;Lgj;Laxy;)Z	a	lambda$areOtherMobsComingThroughDoor$5
	m	(Laxy;Laxy;)Z	a	lambda$areOtherMobsComingThroughDoor$3
	m	(Lcou$a;)Z	a	lambda$closeDoorsThatIHaveOpenedOrPassedThrough$2
	m	(Lgj;Laxy;)Z	a	lambda$areOtherMobsComingThroughDoor$4
	m	(Ladw;Laxy;Lgj;)Z	b	isMobComingThroughDoor
	m	(Lcou$a;)Z	b	lambda$start$1
	m	(Ladw;Laxy;Lgj;)V	c	rememberDoorToClose
	m	(Lcou$a;)Z	c	lambda$start$0
	f	I	a	COOLDOWN_BEFORE_RERUNNING_IN_SAME_NODE
	f	D	c	SKIP_CLOSING_DOOR_IF_FURTHER_AWAY_THAN
	f	D	d	MAX_DISTANCE_TO_HOLD_DOOR_OPEN_FOR_OTHER_MOBS
	f	Ldjl;	e	lastCheckedNode
	f	I	f	remainingCooldown
c	bah	net/minecraft/world/entity/ai/behavior/JumpOnBed
	m	(J)Z	a	timedOut
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laya;)Z	a	checkExtraStartConditions
	m	(Ladw;Laya;J)V	a	start
	m	(Ladw;Laya;Lgj;)V	a	lambda$start$0
	m	(Ladw;Lgj;)Z	a	isBed
	m	(Laya;)Ljava/util/Optional;	a	getNearestBed
	m	(Laya;Lgj;)V	a	startWalkingTowardsBed
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Laya;)Z	b	nearBed
	m	(Ladw;Laya;J)V	b	stop
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Laya;)Z	c	onOrOverBed
	m	(Ladw;Laya;J)Z	c	canStillUse
	m	(Ladw;Laxy;J)V	d	tick
	m	(Ladw;Laya;)Z	d	onBedSurface
	m	(Ladw;Laya;J)V	d	tick
	m	(Ladw;Laya;)Z	e	tiredOfWalking
	m	(Ladw;Laya;)Z	f	tiredOfJumping
	f	I	a	MAX_TIME_TO_REACH_BED
	f	I	c	MIN_JUMPS
	f	I	d	MAX_JUMPS
	f	I	e	COOLDOWN_BETWEEN_JUMPS
	f	F	f	speedModifier
	f	Lgj;	g	targetBed
	f	I	h	remainingTimeToReachBed
	f	I	i	remainingJumps
	f	I	j	remainingCooldownUntilNextJump
c	bai	net/minecraft/world/entity/ai/behavior/LocateHidingPlace
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Lbhv;)Z	a	lambda$start$2
	m	(Lgj;)Z	a	lambda$start$3
	m	(Lbhv;)Z	b	lambda$checkExtraStartConditions$0
	m	(Lgj;)Z	b	lambda$checkExtraStartConditions$1
	f	F	a	speedModifier
	f	I	c	radius
	f	I	d	closeEnoughDist
	f	Ljava/util/Optional;	e	currentPos
c	baj	net/minecraft/world/entity/ai/behavior/LocateHidingPlaceDuringRaid
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
c	bak	net/minecraft/world/entity/ai/behavior/LongJumpMidJump
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laya;J)Z	a	canStillUse
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Laya;J)V	b	start
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Laya;J)V	c	stop
	f	I	a	TIME_OUT_DURATION
	f	Lavs;	c	timeBetweenLongJumps
	f	Lahj;	d	landingSound
c	bal	net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laya;)Z	a	checkExtraStartConditions
	m	(Ladw;Laya;J)Z	a	canStillUse
	m	(Laya;Ldpo;)Ljava/util/Optional;	a	calculateOptimalJumpVector
	m	(Laya;Ldpo;I)Ljava/util/Optional;	a	calculateJumpVectorForAngle
	m	(Laya;Ldpo;Ldpo;)Z	a	isClearTransition
	m	(Lgj;DLdpo;)V	a	lambda$start$0
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Laya;J)V	b	start
	m	(Ladw;Laya;J)V	c	tick
	m	(Ladw;Laxy;J)V	d	tick
	f	I	a	TIME_OUT_DURATION
	f	I	c	FIND_JUMP_TRIES
	f	I	d	PREPARE_JUMP_DURATION
	f	I	e	MIN_PATHFIND_DISTANCE_TO_VALID_JUMP
	f	Lavs;	f	timeBetweenLongJumps
	f	I	g	maxLongJumpHeight
	f	I	h	maxLongJumpWidth
	f	F	i	maxJumpVelocity
	f	Ljava/util/List;	j	jumpCandidates
	f	Ljava/util/Optional;	k	initialPosition
	f	Ljava/util/Optional;	l	chosenJump
	f	I	m	findJumpTries
	f	J	n	prepareJumpStart
	f	Ljava/util/function/Function;	o	getJumpSound
c	bal$a	net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos$PossibleJump
	m	()Lgj;	b	getJumpTarget
	m	()Ldpo;	c	getJumpVector
	f	Lgj;	a	jumpTarget
	f	Ldpo;	b	jumpVector
c	bam	net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink
	m	(J)Z	a	timedOut
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnw;J)Z	a	canStillUse
	m	(Lbnw;)V	a	followPlayer
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Lbnw;J)V	b	start
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Lbnw;J)V	c	stop
	m	(Ladw;Laxy;J)V	d	tick
	m	(Ladw;Lbnw;J)V	d	tick
	f	F	a	speedModifier
c	ban	net/minecraft/world/entity/ai/behavior/LookAtTargetSink
	m	(Ladw;Laya;J)Z	a	canStillUse
	m	(Laya;Lbau;)V	a	lambda$tick$1
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Laya;J)V	b	stop
	m	(Laya;Lbau;)Z	b	lambda$canStillUse$0
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Laya;J)V	c	tick
	m	(Ladw;Laxy;J)V	d	tick
c	bao	net/minecraft/world/entity/ai/behavior/MeleeAttack
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laya;)Z	a	checkExtraStartConditions
	m	(Ladw;Laya;J)V	a	start
	m	(Laya;)Z	a	isHoldingUsableProjectileWeapon
	m	(Laya;Lbuw;)Z	a	lambda$isHoldingUsableProjectileWeapon$0
	m	(Laya;)Laxy;	b	getAttackTarget
	f	I	a	cooldownBetweenAttacks
c	bap	net/minecraft/world/entity/ai/behavior/Mount
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Laxy;)Z	a	isCloseEnoughToStartRiding
	m	(Laxy;)Laxk;	b	getRidableEntity
	f	I	a	CLOSE_ENOUGH_TO_START_RIDING_DIST
	f	F	c	speedModifier
c	baq	net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laxy;Lgj;)Z	a	hasNoBlocksAbove
	m	(Ldpo;)Lbgb;	a	lambda$start$0
	m	(Ladw;Laxy;)Ldpo;	b	getOutdoorPosition
	f	F	a	speedModifier
c	bar	net/minecraft/world/entity/ai/behavior/MoveToTargetSink
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laya;)Z	a	checkExtraStartConditions
	m	(Ladw;Laya;J)Z	a	canStillUse
	m	(Laya;Lbgb;)Z	a	reachedTarget
	m	(Laya;Lbgb;J)Z	a	tryComputePath
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Laya;J)V	b	stop
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Laya;J)V	c	start
	m	(Ladw;Laxy;J)V	d	tick
	m	(Ladw;Laya;J)V	d	tick
	f	I	a	MAX_COOLDOWN_BEFORE_RETRYING
	f	I	c	remainingCooldown
	f	Ldjn;	d	path
	f	Lgj;	e	lastTargetPos
	f	F	f	speedModifier
c	bas	net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Layh;)Z	a	checkExtraStartConditions
	m	(Ladw;Layh;J)V	a	start
	m	(Ladw;Layh;Laxy;)V	a	fleeFromChaser
	m	(Laxy;)Laxy;	a	whoAreYouChasing
	m	(Laxy;Laxy;)Z	a	isFriendChasingMe
	m	(Laxy;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$checkHowManyChasersEachFriendHas$2
	m	(Layh;)Ljava/util/Optional;	a	findSomeoneToChase
	m	(Layh;Laxy;)V	a	chaseKid
	m	(Ljava/util/Map$Entry;)Z	a	lambda$findSomeoneBeingChased$1
	m	(Ljava/util/Map;Laxy;)V	a	lambda$checkHowManyChasersEachFriendHas$3
	m	(Laxy;)Laxy;	b	seeIfSomeoneIsChasingMe
	m	(Laxy;Laxy;)Z	b	lambda$isFriendChasingMe$5
	m	(Layh;)Ljava/util/Optional;	b	findSomeoneBeingChased
	m	(Layh;Laxy;)V	b	lambda$start$0
	m	(Laxy;)Z	c	isChasingSomeone
	m	(Laxy;Laxy;)Z	c	lambda$seeIfSomeoneIsChasingMe$4
	m	(Layh;)Ljava/util/Map;	c	checkHowManyChasersEachFriendHas
	m	(Layh;)Ljava/util/List;	d	getFriendsNearby
	m	(Layh;)Z	e	hasFriendsNearby
	f	I	a	MAX_FLEE_XZ_DIST
	f	I	c	MAX_FLEE_Y_DIST
	f	F	d	FLEE_SPEED_MODIFIER
	f	F	e	CHASE_SPEED_MODIFIER
	f	I	f	MAX_CHASERS_PER_TARGET
	f	I	g	AVERAGE_WAIT_TIME_BETWEEN_RUNS
c	bat	net/minecraft/world/entity/ai/behavior/PoiCompetitorScan
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;J)V	a	start
	m	(Lbhv;Lbnz;)Z	a	hasMatchingProfession
	m	(Lbnw;)Z	a	hasJobSite
	m	(Lbnw;Lbnw;)Lbnw;	a	selectWinner
	m	(Lbnw;Lgr;Lbhv;)V	a	lambda$start$1
	m	(Lgr;Lbhv;Lbnw;)Z	a	competesForSameJobsite
	m	(Lgr;Lbhv;Lbnw;)Z	b	lambda$start$0
	f	Lbnz;	a	profession
c	bau	net/minecraft/world/entity/ai/behavior/PositionTracker
	m	()Ldpo;	a	currentPosition
	m	(Laxy;)Z	a	isVisibleBy
	m	()Lgj;	b	currentBlockPosition
c	bav	net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Layh;J)V	a	start
	m	(Laxy;Lgj;)Lbav$a;	a	lambda$chooseRamPosition$4
	m	(Layh;Laxy;)Ljava/util/Optional;	a	calculateRammingStartPosition
	m	(Layh;Lbga;)Ljava/util/Optional;	a	lambda$start$1
	m	(Layh;Lgj;)Z	a	isWalkableBlock
	m	(Lbgf;Lgj;)Z	a	lambda$calculateRammingStartPosition$3
	m	(Lgj;Lgj;)Ldpo;	a	getEdgeOfBlock
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Layh;J)V	b	stop
	m	(Layh;Laxy;)V	b	chooseRamPosition
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Layh;J)Z	c	canStillUse
	m	(Layh;Laxy;)V	c	lambda$start$2
	m	(Ladw;Laxy;J)V	d	tick
	m	(Ladw;Layh;J)V	d	tick
	m	(Layh;Laxy;)Z	d	lambda$start$0
	f	I	a	TIME_OUT_DURATION
	f	Ljava/util/function/ToIntFunction;	c	getCooldownOnFail
	f	I	d	minRamDistance
	f	I	e	maxRamDistance
	f	F	f	walkSpeed
	f	Lbhf;	g	ramTargeting
	f	I	h	ramPrepareTime
	f	Ljava/util/function/Function;	i	getPrepareRamSound
	f	Ljava/util/Optional;	j	reachedRamPositionTimestamp
	f	Ljava/util/Optional;	k	ramCandidate
c	bav$a	net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget$RamCandidate
	m	()Lgj;	a	getStartPosition
	m	()Lgj;	b	getTargetPosition
	m	()Laxy;	c	getTarget
	f	Lgj;	a	startPosition
	f	Lgj;	b	targetPosition
	f	Laxy;	c	target
c	baw	net/minecraft/world/entity/ai/behavior/RamTarget
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Layh;)Z	a	checkExtraStartConditions
	m	(Ladw;Layh;J)Z	a	canStillUse
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Layh;)V	b	finishRam
	m	(Ladw;Layh;J)V	b	start
	m	(Ladw;Layh;J)V	c	tick
	m	(Ladw;Laxy;J)V	d	tick
	f	I	a	TIME_OUT_DURATION
	f	F	c	RAM_SPEED_FORCE_FACTOR
	f	Ljava/util/function/Function;	d	getTimeBetweenRams
	f	Lbhf;	e	ramTargeting
	f	F	f	speed
	f	Ljava/util/function/ToDoubleFunction;	g	getKnockbackForce
	f	Ldpo;	h	ramDirection
	f	Ljava/util/function/Function;	i	getImpactSound
c	bax	net/minecraft/world/entity/ai/behavior/RandomStroll
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Layh;)Z	a	checkExtraStartConditions
	m	(Ladw;Layh;J)V	a	start
	m	(Layh;)Ldpo;	a	getTargetPos
	m	(Ldpo;)Lbgb;	a	lambda$start$0
	f	I	a	maxHorizontalDistance
	f	I	c	maxVerticalDistance
	f	I	d	MAX_XZ_DIST
	f	I	e	MAX_Y_DIST
	f	F	f	speedModifier
	f	Z	g	mayStrollFromWater
c	bay	net/minecraft/world/entity/ai/behavior/RandomSwim
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Layh;)Z	a	checkExtraStartConditions
	m	(Layh;)Ldpo;	a	getTargetPos
	f	[[I	d	XY_DISTANCE_TIERS
c	baz	net/minecraft/world/entity/ai/behavior/ReactToBell
	m	(Ladw;Laxy;J)V	a	start
c	bba	net/minecraft/world/entity/ai/behavior/ResetProfession
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnw;J)V	a	start
c	bbb	net/minecraft/world/entity/ai/behavior/ResetRaidStatus
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
c	bbc	net/minecraft/world/entity/ai/behavior/RingBell
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	f	I	a	RING_BELL_FROM_DISTANCE
	f	F	c	BELL_RING_CHANCE
c	bbd	net/minecraft/world/entity/ai/behavior/RunIf
	m	(J)Z	a	timedOut
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Laxy;)Z	a	lambda$new$0
	m	(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;	a	mergeMaps
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Laxy;J)V	d	tick
	f	Ljava/util/function/Predicate;	a	predicate
	f	Lazk;	c	wrappedBehavior
	f	Z	d	checkWhileRunningAlso
c	bbe	net/minecraft/world/entity/ai/behavior/RunOne
c	bbf	net/minecraft/world/entity/ai/behavior/RunSometimes
	m	(J)Z	a	timedOut
	m	(Ladw;)V	a	resetTicksUntilNextStart
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Laxy;J)V	d	tick
	f	Z	a	resetTicks
	f	Z	c	wasRunning
	f	Lavs;	d	interval
	f	Lazk;	e	wrappedBehavior
	f	I	f	ticksUntilNextStart
c	bbg	net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Lgj;)Z	a	lambda$start$0
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z	a	lambda$start$1
	f	I	a	CACHE_TIMEOUT
	f	I	c	BATCH_SIZE
	f	I	d	RATE
	f	I	e	OK_DISTANCE_SQR
	f	F	f	speedModifier
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	g	batchCache
	f	I	h	triedCount
	f	J	i	lastUpdate
c	bbh	net/minecraft/world/entity/ai/behavior/SetEntityLookTarget
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Laif;Laxy;)Z	a	lambda$new$0
	m	(Laxo;Laxy;)Z	a	lambda$new$2
	m	(Laxy;)Z	a	lambda$new$3
	m	(Laxy;Laxy;)Z	a	lambda$checkExtraStartConditions$4
	m	(Layb;Laxy;)Z	a	lambda$new$1
	f	Ljava/util/function/Predicate;	a	predicate
	f	F	c	maxDistSqr
	f	Ljava/util/Optional;	d	nearestEntityMatchingTest
c	bbi	net/minecraft/world/entity/ai/behavior/SetHiddenState
	m	(Ladw;Laxy;J)V	a	start
	f	I	a	HIDE_TIMEOUT
	f	I	c	closeEnoughDist
	f	I	d	stayHiddenTicks
	f	I	e	ticksHidden
c	bbj	net/minecraft/world/entity/ai/behavior/SetLookAndInteract
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Laxy;)Z	a	isMatchingTarget
	m	(Laxy;Laxy;)Z	a	lambda$start$2
	m	(Laxy;Lbga;)Ljava/util/Optional;	a	lambda$start$3
	m	(Layt;Laxy;)V	a	lambda$start$4
	m	(Laxy;)Lbga;	b	getVisibleEntities
	m	(Laxy;)Z	c	lambda$new$1
	m	(Laxy;)Z	d	lambda$new$0
	f	Laxo;	a	type
	f	I	c	interactionRangeSqr
	f	Ljava/util/function/Predicate;	d	targetFilter
	f	Ljava/util/function/Predicate;	e	selfFilter
c	bbk	net/minecraft/world/entity/ai/behavior/SetRaidStatus
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
c	bbl	net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Layh;)Z	a	checkExtraStartConditions
	m	(Ladw;Layh;J)V	a	start
	m	(Layh;)Ldpo;	a	getPosToAvoid
	m	(Layh;Ldpo;F)V	a	moveAwayFrom
	m	(Lbfy;FIZ)Lbbl;	a	pos
	m	(Layh;)Z	b	alreadyWalkingAwayFromPosWithSameSpeed
	m	(Lbfy;FIZ)Lbbl;	b	entity
	f	Lbfy;	a	walkAwayFromMemory
	f	F	c	speedModifier
	f	I	d	desiredDistance
	f	Ljava/util/function/Function;	e	toPosition
c	bbm	net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach
	m	(FLaxy;)Ljava/lang/Float;	a	lambda$new$0
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laya;J)V	a	start
	m	(Laxy;)V	a	clearWalkTarget
	m	(Laxy;Laxy;)V	a	setWalkAndLookTarget
	f	I	a	PROJECTILE_ATTACK_RANGE_BUFFER
	f	Ljava/util/function/Function;	c	speedModifier
c	bbn	net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;)Z	a	tiredOfTryingToFindTarget
	m	(Ladw;Lbnw;J)V	a	start
	m	(Ladw;Lbnw;JLayt;Lgr;)V	a	lambda$start$0
	m	(Ladw;Lbnw;Lgr;)Z	a	closeEnough
	m	(Ladw;Lgr;)Z	a	wrongDimension
	m	(Lbnw;J)V	a	dropPOI
	m	(Lbnw;Lgr;)Z	a	tooFar
	f	Lbfy;	a	memoryType
	f	F	c	speedModifier
	f	I	d	closeEnoughDist
	f	I	e	tooFarDistance
	f	I	f	tooLongUnreachableDuration
c	bbo	net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget
	m	(FLaxy;)Ljava/lang/Float;	a	lambda$new$1
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Laxy;)Z	a	lambda$new$0
	f	Ljava/util/function/Function;	a	speedModifier
	f	I	c	closeEnoughDistance
	f	Ljava/util/function/Predicate;	d	canSetWalkTargetPredicate
c	bbp	net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnw;J)Z	a	canStillUse
	m	(Laxy;Lbnw;)V	a	findItemsToDisplay
	m	(Lbnw;)V	a	displayFirstItem
	m	(Lbnw;Lbuw;)V	a	displayAsHeldItem
	m	(Lbzt;)Z	a	playerItemStackMatchesCostOfOffer
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Lbnw;J)V	b	start
	m	(Lbnw;)V	b	updateDisplayItems
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Lbnw;J)V	c	tick
	m	(Lbnw;)V	c	clearHeldItem
	m	(Ladw;Laxy;J)V	d	tick
	m	(Ladw;Lbnw;J)V	d	stop
	m	(Lbnw;)Laxy;	d	lookAtTarget
	m	(Lbnw;)V	e	displayCyclingItems
	f	I	a	MAX_LOOK_TIME
	f	I	c	STARTING_LOOK_TIME
	f	Lbuw;	d	playerItemStack
	f	Ljava/util/List;	e	displayItems
	f	I	f	cycleCounter
	f	I	g	displayIndex
	f	I	h	lookTime
c	bbq	net/minecraft/world/entity/ai/behavior/ShufflingList
	m	()Lbbq;	a	shuffle
	m	(Lbbq$a;)V	a	lambda$shuffle$1
	m	(Lbbq;)Ljava/util/List;	a	lambda$codec$0
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/Object;I)Lbbq;	a	add
	m	()Ljava/util/stream/Stream;	b	stream
	f	Ljava/util/List;	a	entries
	f	Ljava/util/Random;	b	random
c	bbq$a	net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry
	m	()Ljava/lang/Object;	a	getData
	m	(F)V	a	setRandom
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	()I	b	getWeight
	m	()D	c	getRandWeight
	f	Ljava/lang/Object;	a	data
	f	I	b	weight
	f	D	c	randWeight
c	bbq$a$1	net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry$1
	m	(Lbbq$a;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Object;)Lbbq$a;	a	lambda$decode$0
	m	(Lcom/mojang/serialization/DynamicOps;Lbbq$a;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$1
	f	Lcom/mojang/serialization/Codec;	a	val$elementCodec
c	bbr	net/minecraft/world/entity/ai/behavior/SleepInBed
	m	(J)Z	a	timedOut
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Laxy;J)V	c	stop
	f	I	a	COOLDOWN_AFTER_BEING_WOKEN
	f	J	c	nextOkStartTime
c	bbs	net/minecraft/world/entity/ai/behavior/SocializeAtBell
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Laxy;)Z	a	lambda$checkExtraStartConditions$0
	m	(Laxy;Laxy;)Z	a	lambda$start$1
	m	(Laxy;Lbga;)Ljava/util/Optional;	a	lambda$start$2
	m	(Layt;Laxy;)V	a	lambda$start$3
	f	F	a	SPEED_MODIFIER
c	bbt	net/minecraft/world/entity/ai/behavior/StartAttacking
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laya;)Z	a	checkExtraStartConditions
	m	(Ladw;Laya;J)V	a	start
	m	(Laya;)Z	a	lambda$new$0
	m	(Laya;Laxy;)V	a	setAttackTarget
	m	(Laya;Laxy;)V	b	lambda$start$1
	f	Ljava/util/function/Predicate;	a	canAttackPredicate
	f	Ljava/util/function/Function;	c	targetFinderFunction
c	bbu	net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Laxy;)Laxy;	a	getAttackTarget
	f	I	a	celebrateDuration
	f	Ljava/util/function/BiPredicate;	c	dancePredicate
c	bbv	net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laya;J)V	a	start
	m	(Laxy;)Z	a	isTiredOfTryingToReachTarget
	m	(Laya;)V	a	clearAttackTarget
	m	(Laxy;)Z	b	lambda$new$2
	m	(Laya;)Z	b	isCurrentTargetInDifferentLevel
	m	(Laxy;)Z	c	lambda$new$1
	m	(Laya;)Laxy;	c	getAttackTarget
	m	(Laya;)Z	d	isCurrentTargetDeadOrRemoved
	m	(Laya;)V	e	lambda$new$3
	m	(Laya;)V	f	lambda$new$0
	f	I	a	TIMEOUT_TO_GET_WITHIN_ATTACK_RANGE
	f	Ljava/util/function/Predicate;	c	stopAttackingWhen
	f	Ljava/util/function/Consumer;	d	onTargetErased
c	bbw	net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Laya;J)V	a	start
	m	(Ladw;Laya;Laxy;)V	a	lambda$start$0
c	bbx	net/minecraft/world/entity/ai/behavior/StrollAroundPoi
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Layh;)Z	a	checkExtraStartConditions
	m	(Ladw;Layh;J)V	a	start
	m	(Ldpo;)Lbgb;	a	lambda$start$0
	f	I	a	MIN_TIME_BETWEEN_STROLLS
	f	I	c	STROLL_MAX_XZ_DIST
	f	I	d	STROLL_MAX_Y_DIST
	f	Lbfy;	e	memoryType
	f	J	f	nextOkStartTime
	f	I	g	maxDistanceFromPoi
	f	F	h	speedModifier
c	bby	net/minecraft/world/entity/ai/behavior/StrollToPoi
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Layh;)Z	a	checkExtraStartConditions
	m	(Ladw;Layh;J)V	a	start
	m	(Layt;Lgr;)V	a	lambda$start$0
	f	Lbfy;	a	memoryType
	f	I	c	closeEnoughDist
	f	I	d	maxDistanceFromPoi
	f	F	e	speedModifier
	f	J	f	nextOkStartTime
c	bbz	net/minecraft/world/entity/ai/behavior/StrollToPoiList
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnw;J)V	a	start
	f	Lbfy;	a	strollToMemoryType
	f	Lbfy;	c	mustBeCloseToMemoryType
	f	F	d	speedModifier
	f	I	e	closeEnoughDist
	f	I	f	maxDistanceFromPoi
	f	J	g	nextOkStartTime
	f	Lgr;	h	targetPos
c	bca	net/minecraft/world/entity/ai/behavior/Swim
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laya;)Z	a	checkExtraStartConditions
	m	(Ladw;Laya;J)Z	a	canStillUse
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Laya;J)V	b	tick
	m	(Ladw;Laxy;J)V	d	tick
	f	F	a	chance
c	bcb	net/minecraft/world/entity/ai/behavior/TradeWithVillager
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnw;J)Z	a	canStillUse
	m	(Lbnw;Lbnw;)Ljava/util/Set;	a	figureOutWhatIAmWillingToTrade
	m	(Lbnw;Ljava/util/Set;Laxy;)V	a	throwHalfStack
	m	(Lcom/google/common/collect/ImmutableSet;Lbus;)Z	a	lambda$figureOutWhatIAmWillingToTrade$0
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Lbnw;J)V	b	start
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Lbnw;J)V	c	tick
	m	(Ladw;Laxy;J)V	d	tick
	m	(Ladw;Lbnw;J)V	d	stop
	f	I	a	INTERACT_DIST_SQR
	f	F	c	SPEED_MODIFIER
	f	Ljava/util/Set;	d	trades
c	bcc	net/minecraft/world/entity/ai/behavior/TryFindWater
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Layh;)Z	a	checkExtraStartConditions
	m	(Ladw;Layh;J)V	a	stop
	m	(Ladw;Layh;J)V	b	start
	m	(Ladw;Laxy;J)V	c	stop
	f	I	a	range
	f	F	c	speedModifier
	f	J	d	nextOkStartTime
c	bcd	net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule
	m	(Ladw;Laxy;J)V	a	start
c	bce	net/minecraft/world/entity/ai/behavior/UseBonemeal
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnw;J)Z	a	canStillUse
	m	(Lbnw;)V	a	setCurrentCropAsTarget
	m	(Lbnw;Lgj;)V	a	lambda$setCurrentCropAsTarget$0
	m	(Lgj;Ladw;)Z	a	validPos
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Lbnw;)Ljava/util/Optional;	b	pickNextTarget
	m	(Ladw;Lbnw;J)V	b	start
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Lbnw;J)V	c	stop
	m	(Ladw;Laxy;J)V	d	tick
	m	(Ladw;Lbnw;J)V	d	tick
	f	I	a	BONEMEALING_DURATION
	f	J	c	nextWorkCycleTime
	f	J	d	lastBonemealingSession
	f	I	e	timeWorkedSoFar
	f	Ljava/util/Optional;	f	cropPos
c	bcf	net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lgj;)Z	a	poiDoesntExist
	m	(Ladw;Lgj;Laxy;)Z	a	bedIsOccupied
	f	I	a	MAX_DISTANCE
	f	Lbfy;	c	memoryType
	f	Ljava/util/function/Predicate;	d	poiPredicate
c	bcg	net/minecraft/world/entity/ai/behavior/VictoryStroll
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Layh;)Z	a	checkExtraStartConditions
c	bch	net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Layh;J)V	a	start
	m	(Layh;)V	a	setRandomPos
	m	(Layh;Lhf;)V	a	setTargetedPos
	m	(Ldpo;)Lbgb;	a	lambda$setRandomPos$1
	m	(Ldpo;)Lbgb;	b	lambda$setTargetedPos$0
	f	I	a	MAX_XZ_DIST
	f	I	c	MAX_Y_DIST
	f	F	d	speedModifier
	f	I	e	maxXyDist
	f	I	f	maxYDist
c	bci	net/minecraft/world/entity/ai/behavior/VillagerCalmDown
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;J)V	a	start
	m	(Lbnw;)Z	a	isCloseToEntityThatHurtMe
	m	(Lbnw;Laxy;)Z	a	lambda$isCloseToEntityThatHurtMe$0
	f	I	a	SAFE_DISTANCE_FROM_DANGER
c	bcj	net/minecraft/world/entity/ai/behavior/VillagerGoalPackages
	m	()Lcom/mojang/datafixers/util/Pair;	a	getFullLookBehavior
	m	(F)Lcom/google/common/collect/ImmutableList;	a	getPlayPackage
	m	(Lbnz;F)Lcom/google/common/collect/ImmutableList;	a	getCorePackage
	m	()Lcom/mojang/datafixers/util/Pair;	b	getMinimalLookBehavior
	m	(Lbnz;F)Lcom/google/common/collect/ImmutableList;	b	getWorkPackage
	m	(Lbnz;F)Lcom/google/common/collect/ImmutableList;	c	getRestPackage
	m	(Lbnz;F)Lcom/google/common/collect/ImmutableList;	d	getMeetPackage
	m	(Lbnz;F)Lcom/google/common/collect/ImmutableList;	e	getIdlePackage
	m	(Lbnz;F)Lcom/google/common/collect/ImmutableList;	f	getPanicPackage
	m	(Lbnz;F)Lcom/google/common/collect/ImmutableList;	g	getPreRaidPackage
	m	(Lbnz;F)Lcom/google/common/collect/ImmutableList;	h	getRaidPackage
	m	(Lbnz;F)Lcom/google/common/collect/ImmutableList;	i	getHidePackage
	f	F	a	STROLL_SPEED_MODIFIER
c	bck	net/minecraft/world/entity/ai/behavior/VillagerMakeLove
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnw;J)Z	a	canStillUse
	m	(Ladw;Lbnw;Lbnw;)V	a	tryToGiveBirth
	m	(Ladw;Lbnw;Lgj;)V	a	giveBedToChild
	m	(Laxi;)Z	a	lambda$isBreedingPossible$0
	m	(Lbnw;)Z	a	isBreedingPossible
	m	(Lbnw;Lgj;)Z	a	canReach
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Lbnw;)Ljava/util/Optional;	b	takeVacantBed
	m	(Ladw;Lbnw;J)V	b	start
	m	(Ladw;Lbnw;Lbnw;)Ljava/util/Optional;	b	breed
	m	(Lbnw;Lgj;)Z	b	lambda$takeVacantBed$1
	m	(Ladw;Laxy;J)V	c	stop
	m	(Ladw;Lbnw;J)V	c	tick
	m	(Ladw;Laxy;J)V	d	tick
	m	(Ladw;Lbnw;J)V	d	stop
	f	I	a	INTERACT_DIST_SQR
	f	F	c	SPEED_MODIFIER
	f	J	d	birthTimestamp
c	bcl	net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;J)Z	a	canStillUse
	m	(Laxy;)Z	a	hasHostile
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Lbnw;J)V	b	start
	m	(Laxy;)Z	b	isHurt
	m	(Ladw;Lbnw;J)V	c	tick
	m	(Ladw;Laxy;J)V	d	tick
c	bcm	net/minecraft/world/entity/ai/behavior/WakeUp
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
c	bcn	net/minecraft/world/entity/ai/behavior/WorkAtComposter
	m	(Ladw;Lbnw;)V	a	useWorkstation
	m	(Ladw;Lbnw;Lgr;Lcov;)V	a	compostItems
	m	(Ladw;Lcov;Lgj;Lcov;)V	a	spawnComposterFillEffects
	m	(Lbnw;)V	a	makeBread
	f	Ljava/util/List;	a	COMPOSTABLE_ITEMS
c	bco	net/minecraft/world/entity/ai/behavior/WorkAtPoi
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;)V	a	useWorkstation
	m	(Ladw;Lbnw;J)V	a	start
	m	(Layt;Lgr;)V	a	lambda$start$0
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Lbnw;)Z	b	checkExtraStartConditions
	m	(Ladw;Lbnw;J)Z	b	canStillUse
	f	I	a	CHECK_COOLDOWN
	f	D	c	DISTANCE
	f	J	d	lastCheck
c	bcp	net/minecraft/world/entity/ai/behavior/YieldJobSite
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnw;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnw;J)V	a	start
	m	(Ladw;Lbnw;Lbnw;Lgj;Z)V	a	yieldJobSite
	m	(Ladw;Lbnw;Lgj;Lbnw;)V	a	lambda$start$1
	m	(Lbhv;Lbnw;Lgj;)Z	a	nearbyWantsJobsite
	m	(Lbnw;)V	a	eraseMemories
	m	(Lbnw;Lgj;Lbhv;)Z	a	canReachPos
	m	(Ljava/util/Optional;Lgj;Lbnw;)Z	a	lambda$start$0
	f	F	a	speedModifier
c	bcq	net/minecraft/world/entity/ai/behavior/package-info
c	bcr	net/minecraft/world/entity/ai/control/BodyRotationControl
	m	()V	a	clientTick
	m	()V	b	rotateBodyIfNecessary
	m	()V	c	rotateHeadIfNecessary
	m	()V	d	rotateHeadTowardsFront
	m	()Z	e	notCarryingMobPassengers
	m	()Z	f	isMoving
	f	Laya;	a	mob
	f	I	b	HEAD_STABLE_ANGLE
	f	I	c	DELAY_UNTIL_STARTING_TO_FACE_FORWARD
	f	I	d	HOW_LONG_IT_TAKES_TO_FACE_FORWARD
	f	I	e	headStableTime
	f	F	f	lastStableYHeadRot
c	bcs	net/minecraft/world/entity/ai/control/Control
c	bct	net/minecraft/world/entity/ai/control/FlyingMoveControl
	m	()V	a	tick
	f	I	l	maxTurn
	f	Z	m	hoversInPlace
c	bcu	net/minecraft/world/entity/ai/control/JumpControl
	m	()V	a	jump
	m	()V	b	tick
	f	Z	a	jump
	f	Laya;	b	mob
c	bcv	net/minecraft/world/entity/ai/control/LookControl
	m	()V	a	tick
	m	(DDD)V	a	setLookAt
	m	(DDDFF)V	a	setLookAt
	m	(FFF)F	a	rotateTowards
	m	(Laxk;)V	a	setLookAt
	m	(Laxk;FF)V	a	setLookAt
	m	(Ldpo;)V	a	setLookAt
	m	(Ljava/lang/Float;)V	a	lambda$tick$1
	m	()V	b	clampHeadRotationToBody
	m	(Laxk;)D	b	getWantedY
	m	(Ljava/lang/Float;)V	b	lambda$tick$0
	m	()Z	c	resetXRotOnTick
	m	()Z	d	isLookingAtTarget
	m	()D	e	getWantedX
	m	()D	f	getWantedY
	m	()D	g	getWantedZ
	m	()Ljava/util/Optional;	h	getXRotD
	m	()Ljava/util/Optional;	i	getYRotD
	f	Laya;	a	mob
	f	F	b	yMaxRotSpeed
	f	F	c	xMaxRotAngle
	f	I	d	lookAtCooldown
	f	D	e	wantedX
	f	D	f	wantedY
	f	D	g	wantedZ
c	bcw	net/minecraft/world/entity/ai/control/MoveControl
	m	()V	a	tick
	m	(DDDD)V	a	setWantedPosition
	m	(FF)V	a	strafe
	m	(FFF)F	a	rotlerp
	m	()Z	b	hasWanted
	m	(FF)Z	b	isWalkable
	m	()D	c	getSpeedModifier
	m	()D	d	getWantedX
	m	()D	e	getWantedY
	m	()D	f	getWantedZ
	f	F	a	MIN_SPEED
	f	F	b	MIN_SPEED_SQR
	f	I	c	MAX_TURN
	f	Laya;	d	mob
	f	D	e	wantedX
	f	D	f	wantedY
	f	D	g	wantedZ
	f	D	h	speedModifier
	f	F	i	strafeForwards
	f	F	j	strafeRight
	f	Lbcw$a;	k	operation
c	bcw$a	net/minecraft/world/entity/ai/control/MoveControl$Operation
	m	()[Lbcw$a;	a	$values
	f	Lbcw$a;	a	WAIT
	f	Lbcw$a;	b	MOVE_TO
	f	Lbcw$a;	c	STRAFE
	f	Lbcw$a;	d	JUMPING
	f	[Lbcw$a;	e	$VALUES
c	bcx	net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl
	m	()V	a	tick
	m	(Ljava/lang/Float;)V	a	lambda$tick$1
	m	(Ljava/lang/Float;)V	b	lambda$tick$0
	f	I	h	maxYRotFromCenter
	f	I	i	HEAD_TILT_X
	f	I	j	HEAD_TILT_Y
c	bcy	net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl
	m	()V	a	tick
	f	I	l	maxTurnX
	f	I	m	maxTurnY
	f	F	n	inWaterSpeedModifier
	f	F	o	outsideWaterSpeedModifier
	f	Z	p	applyGravity
c	bcz	net/minecraft/world/entity/ai/control/package-info
c	bda	net/minecraft/world/entity/ai/goal/AvoidEntityGoal
	m	()Z	a	canUse
	m	(Laxy;)Z	a	lambda$canUse$2
	m	()Z	b	canContinueToUse
	m	(Laxy;)Z	b	lambda$new$1
	m	()V	c	start
	m	(Laxy;)Z	c	lambda$new$0
	m	()V	d	stop
	m	()V	e	tick
	f	Layh;	a	mob
	f	Laxy;	b	toAvoid
	f	F	c	maxDist
	f	Ldjn;	d	path
	f	Lbgf;	e	pathNav
	f	Ljava/lang/Class;	f	avoidClass
	f	Ljava/util/function/Predicate;	g	avoidPredicate
	f	Ljava/util/function/Predicate;	h	predicateOnAvoidEntity
	f	D	i	walkSpeedModifier
	f	D	j	sprintSpeedModifier
	f	Lbhf;	k	avoidEntityTargeting
c	bdb	net/minecraft/world/entity/ai/goal/BegGoal
	m	()Z	a	canUse
	m	(Lboj;)Z	a	playerHoldingInteresting
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbje;	a	wolf
	f	Lboj;	b	player
	f	Lcav;	c	level
	f	F	d	lookDistance
	f	I	e	lookTime
	f	Lbhf;	f	begTargeting
c	bdc	net/minecraft/world/entity/ai/goal/BoatGoals
	m	()[Lbdc;	a	$values
	f	Lbdc;	a	GO_TO_BOAT
	f	Lbdc;	b	GO_IN_BOAT_DIRECTION
	f	[Lbdc;	c	$VALUES
c	bdd	net/minecraft/world/entity/ai/goal/BreakDoorGoal
	m	()Z	a	canUse
	m	(Lawe;)Z	a	isValidDifficulty
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()I	f	getDoorBreakTime
	f	I	a	breakTime
	f	I	b	lastBreakProgress
	f	I	c	doorBreakTime
	f	I	g	DEFAULT_DOOR_BREAK_TIME
	f	Ljava/util/function/Predicate;	h	validDifficulties
c	bde	net/minecraft/world/entity/ai/goal/BreathAirGoal
	m	()Z	D_	isInterruptable
	m	()Z	a	canUse
	m	(Lcay;Lgj;)Z	a	givesAir
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	m	()V	h	findAirPosition
	f	Layh;	a	mob
c	bdf	net/minecraft/world/entity/ai/goal/BreedGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	m	()V	g	breed
	m	()Lbid;	h	getFreePartner
	f	Lbid;	a	animal
	f	Lcav;	b	level
	f	Lbid;	c	partner
	f	Lbhf;	d	PARTNER_TARGETING
	f	Ljava/lang/Class;	e	partnerClass
	f	I	f	loveTime
	f	D	g	speedModifier
c	bdg	net/minecraft/world/entity/ai/goal/CatLieOnBedGoal
	m	()Z	a	canUse
	m	(Layh;)I	a	nextStartTick
	m	(Lcay;Lgj;)Z	a	isValidTarget
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbig;	g	cat
c	bdh	net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal
	m	()Z	a	canUse
	m	(Lcay;Lgj;)Z	a	isValidTarget
	m	(Lcou$a;)Z	a	lambda$isValidTarget$1
	m	(Lcpj;)Ljava/lang/Boolean;	a	lambda$isValidTarget$0
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbig;	g	cat
c	bdi	net/minecraft/world/entity/ai/goal/ClimbOnTopOfPowderSnowGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	e	tick
	f	Laya;	a	mob
	f	Lcav;	b	level
c	bdj	net/minecraft/world/entity/ai/goal/DolphinJumpGoal
	m	()Z	D_	isInterruptable
	m	()Z	a	canUse
	m	(Lgj;III)Z	a	waterIsClear
	m	()Z	b	canContinueToUse
	m	(Lgj;III)Z	b	surfaceIsClear
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	[I	a	STEPS_TO_CHECK
	f	Lbik;	b	dolphin
	f	I	c	interval
	f	Z	d	breached
c	bdk	net/minecraft/world/entity/ai/goal/DoorInteractGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(Z)V	a	setOpen
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	m	()Z	h	isOpen
	f	Z	a	passed
	f	F	b	doorOpenDirX
	f	F	c	doorOpenDirZ
	f	Laya;	d	mob
	f	Lgj;	e	doorPos
	f	Z	f	hasDoor
c	bdl	net/minecraft/world/entity/ai/goal/EatBlockGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()I	h	getEatAnimationTick
	f	I	a	EAT_ANIMATION_TICKS
	f	Ljava/util/function/Predicate;	b	IS_TALL_GRASS
	f	Laya;	c	mob
	f	Lcav;	d	level
	f	I	e	eatAnimationTick
c	bdm	net/minecraft/world/entity/ai/goal/FleeSunGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()Z	h	setWantedPos
	m	()Ldpo;	i	getHidePos
	f	Layh;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
	f	Lcav;	f	level
c	bdn	net/minecraft/world/entity/ai/goal/FloatGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	e	tick
	f	Laya;	a	mob
c	bdo	net/minecraft/world/entity/ai/goal/FollowBoatGoal
	m	()Z	D_	isInterruptable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	timeToRecalcPath
	f	Layh;	b	mob
	f	Lboj;	c	following
	f	Lbdc;	d	currentGoal
c	bdp	net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal
	m	()Z	a	canUse
	m	(Lbic;)I	a	nextStartTick
	m	()Z	b	canContinueToUse
	m	(Lbic;)Z	b	lambda$canUse$1
	m	()V	c	start
	m	(Lbic;)Z	c	lambda$canUse$0
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	INTERVAL_TICKS
	f	Lbic;	b	mob
	f	I	c	timeToRecalcPath
	f	I	d	nextStartTick
c	bdq	net/minecraft/world/entity/ai/goal/FollowMobGoal
	m	()Z	a	canUse
	m	(Laya;Laya;)Z	a	lambda$new$0
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Laya;	a	mob
	f	Ljava/util/function/Predicate;	b	followPredicate
	f	Laya;	c	followingMob
	f	D	d	speedModifier
	f	Lbgf;	e	navigation
	f	I	f	timeToRecalcPath
	f	F	g	stopDistance
	f	F	h	oldWaterCost
	f	F	i	areaSize
c	bdr	net/minecraft/world/entity/ai/goal/FollowOwnerGoal
	m	()Z	a	canUse
	m	(II)I	a	randomIntInclusive
	m	(III)Z	a	maybeTeleportTo
	m	(Lgj;)Z	a	canTeleportTo
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()V	h	teleportToOwner
	f	I	a	TELEPORT_WHEN_DISTANCE_IS
	f	I	b	MIN_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	f	I	c	MAX_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	f	I	d	MAX_VERTICAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	f	Lays;	e	tamable
	f	Laxy;	f	owner
	f	Lcay;	g	level
	f	D	h	speedModifier
	f	Lbgf;	i	navigation
	f	I	j	timeToRecalcPath
	f	F	k	stopDistance
	f	F	l	startDistance
	f	F	m	oldWaterCost
	f	Z	n	canFly
c	bds	net/minecraft/world/entity/ai/goal/FollowParentGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	HORIZONTAL_SCAN_RANGE
	f	I	b	VERTICAL_SCAN_RANGE
	f	I	c	DONT_FOLLOW_IF_CLOSER_THAN
	f	Lbid;	d	animal
	f	Lbid;	e	parent
	f	D	f	speedModifier
	f	I	g	timeToRecalcPath
c	bdt	net/minecraft/world/entity/ai/goal/Goal
	m	()Z	D_	isInterruptable
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(I)I	a	adjustedTickDelay
	m	(Ljava/util/EnumSet;)V	a	setFlags
	m	()Z	b	canContinueToUse
	m	(I)I	b	reducedTickDelay
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Ljava/util/EnumSet;	j	getFlags
	f	Ljava/util/EnumSet;	a	flags
c	bdt$a	net/minecraft/world/entity/ai/goal/Goal$Flag
	m	()[Lbdt$a;	a	$values
	f	Lbdt$a;	a	MOVE
	f	Lbdt$a;	b	LOOK
	f	Lbdt$a;	c	JUMP
	f	Lbdt$a;	d	TARGET
	f	[Lbdt$a;	e	$VALUES
c	bdu	net/minecraft/world/entity/ai/goal/GoalSelector
	m	()V	a	removeAllGoals
	m	(I)V	a	setNewGoalRate
	m	(ILbdt;)V	a	addGoal
	m	(Lbdt$a;)V	a	disableControlFlag
	m	(Lbdt$a;Z)V	a	setControlFlag
	m	(Lbdt;)V	a	removeGoal
	m	(Lbdt;Lbfg;)Z	a	lambda$removeGoal$1
	m	(Lbfg;Ljava/util/EnumSet;)Z	a	goalContainsAnyFlags
	m	(Lbfg;Ljava/util/Map;)Z	a	goalCanBeReplacedForAllFlags
	m	(Z)V	a	tickRunningGoals
	m	()V	b	tick
	m	(Lbdt$a;)V	b	enableControlFlag
	m	(Lbdt;Lbfg;)Z	b	lambda$removeGoal$0
	m	()Ljava/util/Set;	c	getAvailableGoals
	m	()Ljava/util/stream/Stream;	d	getRunningGoals
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lbfg;	b	NO_GOAL
	f	Ljava/util/Map;	c	lockedFlags
	f	Ljava/util/Set;	d	availableGoals
	f	Ljava/util/function/Supplier;	e	profiler
	f	Ljava/util/EnumSet;	f	disabledFlags
	f	I	g	tickCount
	f	I	h	newGoalRate
c	bdu$1	net/minecraft/world/entity/ai/goal/GoalSelector$1
	m	()Z	a	canUse
c	bdu$2	net/minecraft/world/entity/ai/goal/GoalSelector$2
	m	()Z	h	isRunning
c	bdv	net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal
	m	(Ladw;Lhf;)Z	a	lambda$getRandomVillageSection$0
	m	(Lbhv;)Z	a	lambda$getRandomPoiWithinSection$1
	m	(Lbnw;)Z	a	doesVillagerWantGolem
	m	(Lhf;)Lgj;	a	getRandomPoiWithinSection
	m	()Ldpo;	h	getPosition
	m	()Ldpo;	k	getPositionTowardsAnywhere
	m	()Ldpo;	l	getPositionTowardsVillagerWhoWantsGolem
	m	()Ldpo;	m	getPositionTowardsPoi
	m	()Lhf;	n	getRandomVillageSection
	f	I	i	POI_SECTION_SCAN_RADIUS
	f	I	j	VILLAGER_SCAN_RADIUS
	f	I	k	RANDOM_POS_XY_DISTANCE
	f	I	l	RANDOM_POS_Y_DISTANCE
c	bdw	net/minecraft/world/entity/ai/goal/InteractGoal
c	bdx	net/minecraft/world/entity/ai/goal/JumpGoal
c	bdy	net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal
	m	()Z	D_	isInterruptable
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbiy;	a	entity
	f	Ladx;	b	owner
	f	Z	c	isSittingOnShoulder
c	bdz	net/minecraft/world/entity/ai/goal/LeapAtTargetGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Laya;	a	mob
	f	Laxy;	b	target
	f	F	c	yd
c	bea	net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal
	m	()Z	a	canUse
	m	(Laxk;)Z	a	lambda$canUse$0
	m	(Lbjr;I)Z	a	firstIsLeashed
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	f	Lbjr;	a	llama
	f	D	b	speedModifier
	f	I	c	CARAVAN_LIMIT
	f	I	d	distCheckCounter
c	beb	net/minecraft/world/entity/ai/goal/LookAtPlayerGoal
	m	()Z	a	canUse
	m	(Laxy;)Z	a	lambda$canUse$1
	m	(Laya;Laxy;)Z	a	lambda$new$0
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	F	a	DEFAULT_PROBABILITY
	f	Laya;	b	mob
	f	Laxk;	c	lookAt
	f	F	d	lookDistance
	f	F	e	probability
	f	Ljava/lang/Class;	f	lookAtType
	f	Lbhf;	g	lookAtContext
	f	I	h	lookTime
	f	Z	i	onlyHorizontal
c	bec	net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal
	m	()Z	a	canUse
	f	Lbnr;	h	villager
c	bed	net/minecraft/world/entity/ai/goal/MeleeAttackGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(Laxy;)D	a	getAttackReachSqr
	m	(Laxy;D)V	a	checkAndPerformAttack
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()V	h	resetAttackCooldown
	m	()Z	i	isTimeToAttack
	m	()I	k	getTicksUntilNextAttack
	m	()I	l	getAttackInterval
	f	Layh;	a	mob
	f	D	b	speedModifier
	f	Z	c	followingTargetEvenIfNotSeen
	f	Ldjn;	d	path
	f	D	e	pathedTargetX
	f	D	f	pathedTargetY
	f	D	g	pathedTargetZ
	f	I	h	ticksUntilNextPathRecalculation
	f	I	i	ticksUntilNextAttack
	f	I	j	attackInterval
	f	J	k	lastCanUseCheck
	f	J	l	COOLDOWN_BETWEEN_CAN_USE_CHECKS
c	bee	net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal
	m	()Z	a	canUse
	m	()Ldpo;	h	getPosition
	f	I	i	MAX_XZ_DIST
	f	I	j	MAX_Y_DIST
c	bef	net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal
	m	()Z	a	canUse
	m	(Ladw;Lgj;Lgj;)D	a	lambda$canUse$0
	m	(Lgj;)Z	a	hasNotVisited
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	h	updateVisited
	f	Layh;	a	mob
	f	D	b	speedModifier
	f	Ldjn;	c	path
	f	Lgj;	d	poiPos
	f	Z	e	onlyAtNight
	f	Ljava/util/List;	f	visited
	f	I	g	distanceToPoi
	f	Ljava/util/function/BooleanSupplier;	h	canDealWithDoors
c	beg	net/minecraft/world/entity/ai/goal/MoveToBlockGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(Layh;)I	a	nextStartTick
	m	(Lcay;Lgj;)Z	a	isValidTarget
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	m	()V	h	moveMobToBlock
	m	()D	i	acceptedDistance
	m	()Lgj;	k	getMoveToTarget
	m	()Z	l	shouldRecalculatePath
	m	()Z	m	isReachedTarget
	m	()Z	n	findNearestBlock
	f	Layh;	a	mob
	f	D	b	speedModifier
	f	I	c	nextStartTick
	f	I	d	tryTicks
	f	Lgj;	e	blockPos
	f	I	f	verticalSearchStart
	f	I	g	GIVE_UP_TICKS
	f	I	h	STAY_TICKS
	f	I	i	INTERVAL_TICKS
	f	I	j	maxStayTicks
	f	Z	k	reachedTarget
	f	I	l	searchRange
	f	I	m	verticalSearchRange
c	beh	net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Layh;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
c	bei	net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Layh;	a	mob
	f	Laxy;	b	target
	f	D	c	wantedX
	f	D	d	wantedY
	f	D	e	wantedZ
	f	D	f	speedModifier
	f	F	g	within
c	bej	net/minecraft/world/entity/ai/goal/OcelotAttackGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	f	Laya;	a	mob
	f	Laxy;	b	target
	f	I	c	attackTime
c	bek	net/minecraft/world/entity/ai/goal/OfferFlowerGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	OFFER_TICKS
	f	Lbhf;	b	OFFER_TARGER_CONTEXT
	f	Lbin;	c	golem
	f	Lbnw;	d	villager
	f	I	e	tick
c	bel	net/minecraft/world/entity/ai/goal/OpenDoorGoal
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Z	a	closeDoor
	f	I	b	forgetTime
c	bem	net/minecraft/world/entity/ai/goal/PanicGoal
	m	()Z	a	canUse
	m	(Lcab;Laxk;I)Lgj;	a	lookForWater
	m	(Lcab;Lgj;)Z	a	lambda$lookForWater$0
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()Z	h	shouldPanic
	m	()Z	i	findRandomPosition
	m	()Z	k	isRunning
	f	I	a	WATER_CHECK_DISTANCE_VERTICAL
	f	Layh;	b	mob
	f	D	c	speedModifier
	f	D	d	posX
	f	D	e	posY
	f	D	f	posZ
	f	Z	g	isRunning
c	ben	net/minecraft/world/entity/ai/goal/PathfindToRaidGoal
	m	()Z	a	canUse
	m	(Lbpo;)V	a	recruitNearby
	m	(Lbpo;Lbpp;)Z	a	lambda$recruitNearby$0
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	f	I	a	RECRUITMENT_SEARCH_TICK_DELAY
	f	F	b	SPEED_MODIFIER
	f	Lbpp;	c	mob
	f	I	d	recruitmentTick
c	beo	net/minecraft/world/entity/ai/goal/RandomLookAroundGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	f	Laya;	a	mob
	f	D	b	relX
	f	D	c	relZ
	f	I	d	lookTime
c	bep	net/minecraft/world/entity/ai/goal/RandomStrollGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	(I)V	c	setInterval
	m	()V	d	stop
	m	()Ldpo;	h	getPosition
	m	()V	i	trigger
	f	I	a	DEFAULT_INTERVAL
	f	Layh;	b	mob
	f	D	c	wantedX
	f	D	d	wantedY
	f	D	e	wantedZ
	f	D	f	speedModifier
	f	I	g	interval
	f	Z	h	forceTrigger
	f	Z	i	checkNoActionTime
c	beq	net/minecraft/world/entity/ai/goal/RandomSwimmingGoal
	m	()Ldpo;	h	getPosition
c	ber	net/minecraft/world/entity/ai/goal/RangedAttackGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	f	Laya;	a	mob
	f	Lbmh;	b	rangedAttackMob
	f	Laxy;	c	target
	f	I	d	attackTime
	f	D	e	speedModifier
	f	I	f	seeTime
	f	I	g	attackIntervalMin
	f	I	h	attackIntervalMax
	f	F	i	attackRadius
	f	F	j	attackRadiusSqr
c	bes	net/minecraft/world/entity/ai/goal/RangedBowAttackGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	(I)V	c	setMinAttackInterval
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	isHoldingBow
	f	Lbmd;	a	mob
	f	D	b	speedModifier
	f	I	c	attackIntervalMin
	f	F	d	attackRadiusSqr
	f	I	e	attackTime
	f	I	f	seeTime
	f	Z	g	strafingClockwise
	f	Z	h	strafingBackwards
	f	I	i	strafingTime
c	bet	net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	isHoldingCrossbow
	m	()Z	i	isValidTarget
	m	()Z	k	canRun
	f	Lavs;	a	PATHFINDING_DELAY_RANGE
	f	Lbmd;	b	mob
	f	Lbet$a;	c	crossbowState
	f	D	d	speedModifier
	f	F	e	attackRadiusSqr
	f	I	f	seeTime
	f	I	g	attackDelay
	f	I	h	updatePathDelay
c	bet$a	net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState
	m	()[Lbet$a;	a	$values
	f	Lbet$a;	a	UNCHARGED
	f	Lbet$a;	b	CHARGING
	f	Lbet$a;	c	CHARGED
	f	Lbet$a;	d	READY_TO_ATTACK
	f	[Lbet$a;	e	$VALUES
c	beu	net/minecraft/world/entity/ai/goal/RemoveBlockGoal
	m	()Z	a	canUse
	m	(Lcav;Lgj;)V	a	playBreakSound
	m	(Lcaw;Lgj;)V	a	playDestroyProgressSound
	m	(Lcay;Lgj;)Z	a	isValidTarget
	m	(Lgj;Lcab;)Lgj;	a	getPosWithBlock
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	o	tryFindBlock
	f	Lcdq;	g	blockToRemove
	f	Laya;	h	removerMob
	f	I	i	ticksSinceReachedGoal
	f	I	j	WAIT_AFTER_BLOCK_FOUND
c	bev	net/minecraft/world/entity/ai/goal/RestrictSunGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	f	Layh;	a	mob
c	bew	net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbjo;	a	horse
	f	D	b	speedModifier
	f	D	c	posX
	f	D	d	posY
	f	D	e	posZ
c	bex	net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lays;	a	mob
c	bey	net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal
	m	()Z	a	canUse
	m	(Ladw;Lgj;)D	a	lambda$canUse$0
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	m	()V	h	moveRandomly
	f	I	a	DISTANCE_THRESHOLD
	f	Layh;	b	mob
	f	I	c	interval
	f	Lgj;	d	wantedPos
c	bez	net/minecraft/world/entity/ai/goal/SwellGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lblp;	a	creeper
	f	Laxy;	b	target
c	bfa	net/minecraft/world/entity/ai/goal/TemptGoal
	m	()Z	a	canUse
	m	(Laxy;)Z	a	shouldFollow
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	canScare
	m	()Z	i	isRunning
	f	Layh;	a	mob
	f	Lboj;	b	player
	f	Lbhf;	c	TEMP_TARGETING
	f	Lbhf;	d	targetingConditions
	f	D	e	speedModifier
	f	D	f	px
	f	D	g	py
	f	D	h	pz
	f	D	i	pRotX
	f	D	j	pRotY
	f	I	k	calmDown
	f	Z	l	isRunning
	f	Lbxl;	m	items
	f	Z	n	canScare
c	bfb	net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbnr;	a	mob
c	bfc	net/minecraft/world/entity/ai/goal/TryFindWaterGoal
	m	()Z	a	canUse
	m	()V	c	start
	f	Layh;	a	mob
c	bfd	net/minecraft/world/entity/ai/goal/UseItemGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Laya;	a	mob
	f	Lbuw;	b	item
	f	Ljava/util/function/Predicate;	c	canUseSelector
	f	Lahj;	d	finishUsingSound
c	bfe	net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal
	m	()Ldpo;	h	getPosition
c	bff	net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal
	m	()Ldpo;	h	getPosition
	f	F	i	PROBABILITY
	f	F	j	probability
c	bfg	net/minecraft/world/entity/ai/goal/WrappedGoal
	m	()Z	D_	isInterruptable
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(I)I	a	adjustedTickDelay
	m	(Lbfg;)Z	a	canBeReplacedBy
	m	(Ljava/util/EnumSet;)V	a	setFlags
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	isRunning
	m	()I	i	getPriority
	m	()Ljava/util/EnumSet;	j	getFlags
	m	()Lbdt;	k	getGoal
	f	Lbdt;	a	goal
	f	I	b	priority
	f	Z	c	isRunning
c	bfh	net/minecraft/world/entity/ai/goal/ZombieAttackGoal
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbmw;	b	zombie
	f	I	c	raiseArmTicks
c	bfi	net/minecraft/world/entity/ai/goal/package-info
c	bfj	net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbin;	a	golem
	f	Laxy;	b	potentialTarget
	f	Lbhf;	c	attackTargeting
c	bfk	net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal
	m	()Z	a	canUse
	m	(Laya;Laxy;)V	a	alertOther
	m	([Ljava/lang/Class;)Lbfk;	a	setAlertOthers
	m	()V	c	start
	m	()V	h	alertOthers
	f	Lbhf;	a	HURT_BY_TARGETING
	f	I	b	ALERT_RANGE_Y
	f	Z	c	alertSameType
	f	I	d	timestamp
	f	[Ljava/lang/Class;	i	toIgnoreDamage
	f	[Ljava/lang/Class;	j	toIgnoreAlert
c	bfl	net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal
	m	()Z	a	canUse
	m	(D)Ldpj;	a	getTargetSearchArea
	m	(Laxy;)V	a	setTarget
	m	(Laxy;)Z	b	lambda$findTarget$0
	m	()V	c	start
	m	()V	h	findTarget
	f	Ljava/lang/Class;	a	targetType
	f	I	b	randomInterval
	f	Laxy;	c	target
	f	Lbhf;	d	targetConditions
	f	I	i	DEFAULT_RANDOM_INTERVAL
c	bfm	net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal
	m	()Z	a	canUse
	m	(Z)V	a	setCanAttack
	f	Z	i	canAttack
c	bfn	net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()I	i	getCooldown
	m	()V	k	decrementCooldown
	f	I	i	DEFAULT_COOLDOWN
	f	I	j	cooldown
c	bfo	net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lays;	i	tamableMob
c	bfp	net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal
	m	()Z	a	canUse
	m	()V	c	start
	f	Lays;	a	tameAnimal
	f	Laxy;	b	ownerLastHurtBy
	f	I	c	timestamp
c	bfq	net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal
	m	()Z	a	canUse
	m	()V	c	start
	f	Lays;	a	tameAnimal
	f	Laxy;	b	ownerLastHurt
	f	I	c	timestamp
c	bfr	net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal
	m	()Z	a	canUse
	m	(Laya;)Layf;	a	lambda$start$1
	m	(Laya;)Z	b	lambda$start$0
	m	()V	c	start
	m	()Z	h	wasHurtByPlayer
	m	()Ljava/util/List;	i	getNearbyMobsOfSameType
	f	I	a	ALERT_RANGE_Y
	f	Laya;	b	mob
	f	Z	c	alertOthersOfSameType
	f	I	d	lastHurtByPlayerTimestamp
c	bfs	net/minecraft/world/entity/ai/goal/target/TargetGoal
	m	(Laxy;)Z	a	canReach
	m	(Laxy;Lbhf;)Z	a	canAttack
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	(I)Lbfs;	c	setUnseenMemoryTicks
	m	()V	d	stop
	m	()D	l	getFollowDistance
	f	I	a	EMPTY_REACH_CACHE
	f	I	b	CAN_REACH_CACHE
	f	I	c	CANT_REACH_CACHE
	f	Z	d	mustReach
	f	Laya;	e	mob
	f	Z	f	mustSee
	f	Laxy;	g	targetMob
	f	I	h	unseenMemoryTicks
	f	I	i	reachCache
	f	I	j	reachCacheTime
	f	I	k	unseenTicks
c	bft	net/minecraft/world/entity/ai/goal/target/package-info
c	bfu	net/minecraft/world/entity/ai/gossip/GossipContainer
	m	()Ljava/util/Map;	a	getGossipEntries
	m	(II)I	a	mergeValuesForTransfer
	m	(Lbfu$b;)V	a	lambda$update$8
	m	(Lbfu;Ljava/util/Random;I)V	a	transferFrom
	m	(Lbfv;)V	a	remove
	m	(Lbfv;II)I	a	mergeValuesForAddition
	m	(Lbfv;Ljava/util/function/DoublePredicate;)J	a	getCountForType
	m	(Lcom/mojang/serialization/DataResult;)Ljava/util/stream/Stream;	a	lambda$update$7
	m	(Lcom/mojang/serialization/Dynamic;)V	a	update
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	store
	m	(Lcom/mojang/serialization/DynamicOps;Lbfu$b;)Lcom/mojang/serialization/Dynamic;	a	lambda$store$6
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$unpack$1
	m	(Ljava/util/Map;Ljava/util/UUID;)V	a	lambda$getGossipEntries$0
	m	(Ljava/util/Random;I)Ljava/util/Collection;	a	selectGossipsForTransfer
	m	(Ljava/util/UUID;)Lbfu$a;	a	getOrCreate
	m	(Ljava/util/UUID;Lbfv;)V	a	remove
	m	(Ljava/util/UUID;Lbfv;I)V	a	add
	m	(Ljava/util/UUID;Ljava/util/function/Predicate;)I	a	getReputation
	m	(Ljava/util/function/DoublePredicate;Lbfv;Lbfu$a;)Z	a	lambda$getCountForType$4
	m	()V	b	decay
	m	(Lbfu$b;)V	b	lambda$transferFrom$3
	m	(Lbfv;II)I	b	lambda$add$5
	m	(Ljava/util/UUID;)Lbfu$a;	b	lambda$getOrCreate$2
	m	(Ljava/util/UUID;Lbfv;I)V	b	remove
	m	()Ljava/util/stream/Stream;	c	unpack
	f	I	a	DISCARD_THRESHOLD
	f	Ljava/util/Map;	b	gossips
c	bfu$a	net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips
	m	()V	a	decay
	m	(Lbfv;)V	a	makeSureValueIsntTooLowOrTooHigh
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)I	a	lambda$weightedValue$1
	m	(Ljava/util/UUID;)Ljava/util/stream/Stream;	a	unpack
	m	(Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lbfu$b;	a	lambda$unpack$2
	m	(Ljava/util/function/Predicate;)I	a	weightedValue
	m	(Ljava/util/function/Predicate;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Z	a	lambda$weightedValue$0
	m	()Z	b	isEmpty
	m	(Lbfv;)V	b	remove
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	entries
c	bfu$b	net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry
	m	()I	a	weightedValue
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	load
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	store
	f	Ljava/lang/String;	a	TAG_TARGET
	f	Ljava/lang/String;	b	TAG_TYPE
	f	Ljava/lang/String;	c	TAG_VALUE
	f	Ljava/util/UUID;	d	target
	f	Lbfv;	e	type
	f	I	f	value
c	bfv	net/minecraft/world/entity/ai/gossip/GossipType
	m	()[Lbfv;	a	$values
	m	(Lbfv;)Ljava/lang/String;	a	lambda$static$0
	m	(Ljava/lang/String;)Lbfv;	a	byId
	f	Lbfv;	a	MAJOR_NEGATIVE
	f	Lbfv;	b	MINOR_NEGATIVE
	f	Lbfv;	c	MINOR_POSITIVE
	f	Lbfv;	d	MAJOR_POSITIVE
	f	Lbfv;	e	TRADING
	f	I	f	REPUTATION_CHANGE_PER_EVENT
	f	I	g	REPUTATION_CHANGE_PER_EVERLASTING_MEMORY
	f	I	h	REPUTATION_CHANGE_PER_TRADE
	f	Ljava/lang/String;	i	id
	f	I	j	weight
	f	I	k	max
	f	I	l	decayPerDay
	f	I	m	decayPerTransfer
	f	Ljava/util/Map;	n	BY_ID
	f	[Lbfv;	o	$VALUES
c	bfw	net/minecraft/world/entity/ai/gossip/package-info
c	bfx	net/minecraft/world/entity/ai/memory/ExpirableValue
	m	()V	a	tick
	m	(Lbfx;)Ljava/util/Optional;	a	lambda$codec$1
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$3
	m	(Ljava/lang/Object;)Lbfx;	a	of
	m	(Ljava/lang/Object;J)Lbfx;	a	of
	m	(Ljava/lang/Object;Ljava/util/Optional;)Lbfx;	a	lambda$codec$2
	m	()J	b	getTimeToLive
	m	(Lbfx;)Ljava/lang/Object;	b	lambda$codec$0
	m	()Ljava/lang/Object;	c	getValue
	m	()Z	d	hasExpired
	m	()Z	e	canExpire
	f	Ljava/lang/Object;	a	value
	f	J	b	timeToLive
c	bfy	net/minecraft/world/entity/ai/memory/MemoryModuleType
	m	()Ljava/util/Optional;	a	getCodec
	m	(Ljava/lang/String;)Lbfy;	a	register
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lbfy;	a	register
	f	Lbfy;	A	NEAREST_HOSTILE
	f	Lbfy;	B	NEAREST_ATTACKABLE
	f	Lbfy;	C	HIDING_PLACE
	f	Lbfy;	D	HEARD_BELL_TIME
	f	Lbfy;	E	CANT_REACH_WALK_TARGET_SINCE
	f	Lbfy;	F	GOLEM_DETECTED_RECENTLY
	f	Lbfy;	G	LAST_SLEPT
	f	Lbfy;	H	LAST_WOKEN
	f	Lbfy;	I	LAST_WORKED_AT_POI
	f	Lbfy;	J	NEAREST_VISIBLE_ADULT
	f	Lbfy;	K	NEAREST_VISIBLE_WANTED_ITEM
	f	Lbfy;	L	NEAREST_VISIBLE_NEMESIS
	f	Lbfy;	M	PLAY_DEAD_TICKS
	f	Lbfy;	N	TEMPTING_PLAYER
	f	Lbfy;	O	TEMPTATION_COOLDOWN_TICKS
	f	Lbfy;	P	IS_TEMPTED
	f	Lbfy;	Q	LONG_JUMP_COOLDOWN_TICKS
	f	Lbfy;	R	LONG_JUMP_MID_JUMP
	f	Lbfy;	S	HAS_HUNTING_COOLDOWN
	f	Lbfy;	T	RAM_COOLDOWN_TICKS
	f	Lbfy;	U	RAM_TARGET
	f	Lbfy;	V	ANGRY_AT
	f	Lbfy;	W	UNIVERSAL_ANGER
	f	Lbfy;	X	ADMIRING_ITEM
	f	Lbfy;	Y	TIME_TRYING_TO_REACH_ADMIRE_ITEM
	f	Lbfy;	Z	DISABLE_WALK_TO_ADMIRE_ITEM
	f	Lbfy;	a	DUMMY
	f	Lbfy;	aa	ADMIRING_DISABLED
	f	Lbfy;	ab	HUNTED_RECENTLY
	f	Lbfy;	ac	CELEBRATE_LOCATION
	f	Lbfy;	ad	DANCING
	f	Lbfy;	ae	NEAREST_VISIBLE_HUNTABLE_HOGLIN
	f	Lbfy;	af	NEAREST_VISIBLE_BABY_HOGLIN
	f	Lbfy;	ag	NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD
	f	Lbfy;	ah	NEARBY_ADULT_PIGLINS
	f	Lbfy;	ai	NEAREST_VISIBLE_ADULT_PIGLINS
	f	Lbfy;	aj	NEAREST_VISIBLE_ADULT_HOGLINS
	f	Lbfy;	ak	NEAREST_VISIBLE_ADULT_PIGLIN
	f	Lbfy;	al	NEAREST_VISIBLE_ZOMBIFIED
	f	Lbfy;	am	VISIBLE_ADULT_PIGLIN_COUNT
	f	Lbfy;	an	VISIBLE_ADULT_HOGLIN_COUNT
	f	Lbfy;	ao	NEAREST_PLAYER_HOLDING_WANTED_ITEM
	f	Lbfy;	ap	ATE_RECENTLY
	f	Lbfy;	aq	NEAREST_REPELLENT
	f	Lbfy;	ar	PACIFIED
	f	Ljava/util/Optional;	as	codec
	f	Lbfy;	b	HOME
	f	Lbfy;	c	JOB_SITE
	f	Lbfy;	d	POTENTIAL_JOB_SITE
	f	Lbfy;	e	MEETING_POINT
	f	Lbfy;	f	SECONDARY_JOB_SITE
	f	Lbfy;	g	NEAREST_LIVING_ENTITIES
	f	Lbfy;	h	NEAREST_VISIBLE_LIVING_ENTITIES
	f	Lbfy;	i	VISIBLE_VILLAGER_BABIES
	f	Lbfy;	j	NEAREST_PLAYERS
	f	Lbfy;	k	NEAREST_VISIBLE_PLAYER
	f	Lbfy;	l	NEAREST_VISIBLE_ATTACKABLE_PLAYER
	f	Lbfy;	m	WALK_TARGET
	f	Lbfy;	n	LOOK_TARGET
	f	Lbfy;	o	ATTACK_TARGET
	f	Lbfy;	p	ATTACK_COOLING_DOWN
	f	Lbfy;	q	INTERACTION_TARGET
	f	Lbfy;	r	BREED_TARGET
	f	Lbfy;	s	RIDE_TARGET
	f	Lbfy;	t	PATH
	f	Lbfy;	u	INTERACTABLE_DOORS
	f	Lbfy;	v	DOORS_TO_CLOSE
	f	Lbfy;	w	NEAREST_BED
	f	Lbfy;	x	HURT_BY
	f	Lbfy;	y	HURT_BY_ENTITY
	f	Lbfy;	z	AVOID_TARGET
c	bfz	net/minecraft/world/entity/ai/memory/MemoryStatus
	m	()[Lbfz;	a	$values
	f	Lbfz;	a	VALUE_PRESENT
	f	Lbfz;	b	VALUE_ABSENT
	f	Lbfz;	c	REGISTERED
	f	[Lbfz;	d	$VALUES
c	bga	net/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities
	m	()Lbga;	a	empty
	m	(Laxy;)Z	a	contains
	m	(Laxy;Laxy;)Z	a	lambda$new$1
	m	(Lit/unimi/dsi/fastutil/objects/Object2BooleanOpenHashMap;Ljava/util/function/Predicate;Laxy;)Z	a	lambda$new$2
	m	(Ljava/util/function/Predicate;)Ljava/util/Optional;	a	findClosest
	m	(Ljava/util/function/Predicate;Laxy;)Z	a	lambda$find$4
	m	(Laxy;)Z	b	lambda$new$0
	m	(Ljava/util/function/Predicate;)Ljava/lang/Iterable;	b	findAll
	m	(Ljava/util/function/Predicate;Laxy;)Z	b	lambda$findAll$3
	m	(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;	c	find
	m	(Ljava/util/function/Predicate;)Z	d	contains
	f	Lbga;	a	EMPTY
	f	Ljava/util/List;	b	nearbyEntities
	f	Ljava/util/function/Predicate;	c	lineOfSightTest
c	bgb	net/minecraft/world/entity/ai/memory/WalkTarget
	m	()Lbau;	a	getTarget
	m	()F	b	getSpeedModifier
	m	()I	c	getCloseEnoughDist
	f	Lbau;	a	target
	f	F	b	speedModifier
	f	I	c	closeEnoughDist
c	bgc	net/minecraft/world/entity/ai/memory/package-info
c	bgd	net/minecraft/world/entity/ai/navigation/FlyingPathNavigation
	m	()Z	a	canUpdatePath
	m	(I)Ldjp;	a	createPathFinder
	m	(Laxk;I)Ldjn;	a	createPath
	m	(Lgj;)Z	a	isStableDestination
	m	(Z)V	a	setCanOpenDoors
	m	()Ldpo;	b	getTempMobPos
	m	(Z)V	b	setCanPassDoors
	m	()V	c	tick
	m	()Z	d	canPassDoors
	m	()Z	e	canOpenDoors
c	bge	net/minecraft/world/entity/ai/navigation/GroundPathNavigation
	m	()V	F_	trimPath
	m	()Z	a	canUpdatePath
	m	(I)Ldjp;	a	createPathFinder
	m	(Laxk;I)Ldjn;	a	createPath
	m	(Ldjj;)Z	a	hasValidPathType
	m	(Lgj;I)Ldjn;	a	createPath
	m	(Z)V	a	setCanOpenDoors
	m	()Ldpo;	b	getTempMobPos
	m	(Z)V	b	setCanPassDoors
	m	(Z)V	c	setAvoidSun
	m	()Z	e	canPassDoors
	m	()Z	f	canOpenDoors
	m	()I	t	getSurfaceY
	f	Z	p	avoidSun
c	bgf	net/minecraft/world/entity/ai/navigation/PathNavigation
	m	()V	F_	trimPath
	m	()Z	a	canUpdatePath
	m	(D)V	a	setSpeedModifier
	m	(DDDD)Z	a	moveTo
	m	(DDDI)Ldjn;	a	createPath
	m	(F)V	a	setMaxVisitedNodesMultiplier
	m	(I)Ldjp;	a	createPathFinder
	m	(Laxk;D)Z	a	moveTo
	m	(Laxk;I)Ldjn;	a	createPath
	m	(Ldjn;D)Z	a	moveTo
	m	(Ldpo;)D	a	getGroundY
	m	(Ldpo;Ldpo;)Z	a	canMoveDirectly
	m	(Lgj;)Z	a	isStableDestination
	m	(Lgj;I)Ldjn;	a	createPath
	m	(Lgj;II)Ldjn;	a	createPath
	m	(Ljava/util/Set;I)Ldjn;	a	createPath
	m	(Ljava/util/Set;IZI)Ldjn;	a	createPath
	m	(Ljava/util/Set;IZIF)Ldjn;	a	createPath
	m	(Ljava/util/stream/Stream;I)Ldjn;	a	createPath
	m	()Ldpo;	b	getTempMobPos
	m	(Ldpo;)V	b	doStuckDetection
	m	(Lgj;)Z	b	shouldRecomputePath
	m	()V	c	tick
	m	(Ldpo;)Z	c	shouldTargetNextNodeInDirection
	m	(Z)V	d	setCanFloat
	m	()V	e	timeoutPath
	m	()V	f	resetStuckTimeout
	m	()V	g	resetMaxVisitedNodesMultiplier
	m	()Lgj;	h	getTargetPos
	m	()V	i	recomputePath
	m	()Ldjn;	j	getPath
	m	()V	k	followThePath
	m	()Z	l	isDone
	m	()Z	m	isInProgress
	m	()V	n	stop
	m	()Z	o	isInLiquid
	m	()Ldjm;	p	getNodeEvaluator
	m	()Z	q	canFloat
	m	()F	r	getMaxDistanceToWaypoint
	m	()Z	s	isStuck
	f	Laya;	a	mob
	f	Lcav;	b	level
	f	Ldjn;	c	path
	f	D	d	speedModifier
	f	I	e	tick
	f	I	f	lastStuckCheck
	f	Ldpo;	g	lastStuckCheckPos
	f	Lhh;	h	timeoutCachedNode
	f	J	i	timeoutTimer
	f	J	j	lastTimeoutCheck
	f	D	k	timeoutLimit
	f	F	l	maxDistanceToWaypoint
	f	Z	m	hasDelayedRecomputation
	f	J	n	timeLastRecompute
	f	Ldjm;	o	nodeEvaluator
	f	I	p	MAX_TIME_RECOMPUTE
	f	Lgj;	q	targetPos
	f	I	r	reachRange
	f	F	s	maxVisitedNodesMultiplier
	f	Ldjp;	t	pathFinder
	f	Z	u	isStuck
c	bgg	net/minecraft/world/entity/ai/navigation/WallClimberNavigation
	m	(Laxk;D)Z	a	moveTo
	m	(Laxk;I)Ldjn;	a	createPath
	m	(Lgj;I)Ldjn;	a	createPath
	m	()V	c	tick
	f	Lgj;	p	pathToPosition
c	bgh	net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation
	m	()Z	a	canUpdatePath
	m	(I)Ldjp;	a	createPathFinder
	m	(Ldpo;)D	a	getGroundY
	m	(Ldpo;Ldpo;)Z	a	canMoveDirectly
	m	(Lgj;)Z	a	isStableDestination
	m	()Ldpo;	b	getTempMobPos
	m	(Z)V	d	setCanFloat
	f	Z	p	allowBreaching
c	bgi	net/minecraft/world/entity/ai/navigation/package-info
c	bgj	net/minecraft/world/entity/ai/package-info
c	bgk	net/minecraft/world/entity/ai/sensing/AdultSensor
	m	()Ljava/util/Set;	a	requires
	m	(Ladw;Laxi;)V	a	doTick
	m	(Ladw;Laxy;)V	a	doTick
	m	(Laxi;Laxy;)Z	a	lambda$setNearestVisibleAdult$1
	m	(Laxi;Lbga;)V	a	setNearestVisibleAdult
	m	(Laxi;Lbga;)V	b	lambda$doTick$0
c	bgl	net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor
	m	(Laxy;Laxy;)Z	a	isMatchingEntity
	m	()Lbfy;	b	getMemory
	m	(Laxy;)Z	b	isHostileTarget
	m	(Laxy;Laxy;)Z	e	isHuntTarget
	m	(Laxy;Laxy;)Z	f	isClose
	f	F	a	TARGET_DETECTION_DISTANCE
c	bgm	net/minecraft/world/entity/ai/sensing/DummySensor
	m	()Ljava/util/Set;	a	requires
	m	(Ladw;Laxy;)V	a	doTick
c	bgn	net/minecraft/world/entity/ai/sensing/GolemSensor
	m	()Ljava/util/Set;	a	requires
	m	(Ladw;Laxy;)V	a	doTick
	m	(Laxy;)V	a	checkForNearbyGolem
	m	(Laxy;)V	b	golemDetected
	m	(Laxy;)Z	c	lambda$checkForNearbyGolem$0
	f	I	a	GOLEM_SCAN_RATE
	f	I	c	MEMORY_TIME_TO_LIVE
c	bgo	net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor
	m	()Ljava/util/Set;	a	requires
	m	(Ladw;Laxy;)V	a	doTick
	m	(Ladw;Lbmz;)V	a	doTick
	m	(Ladw;Lgj;)Z	a	lambda$findNearestRepellent$1
	m	(Laxy;)Z	a	lambda$doTick$0
	m	(Ladw;Lbmz;)Ljava/util/Optional;	b	findNearestRepellent
c	bgp	net/minecraft/world/entity/ai/sensing/HurtBySensor
	m	()Ljava/util/Set;	a	requires
	m	(Ladw;Laxy;)V	a	doTick
	m	(Ladw;Layt;Laxy;)V	a	lambda$doTick$0
c	bgq	net/minecraft/world/entity/ai/sensing/NearestBedSensor
	m	()Ljava/util/Set;	a	requires
	m	(Ladw;Laxy;)V	a	doTick
	m	(Ladw;Laya;)V	a	doTick
	m	(Lgj;)Z	a	lambda$doTick$0
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z	a	lambda$doTick$1
	f	I	a	CACHE_TIMEOUT
	f	I	c	BATCH_SIZE
	f	I	d	RATE
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	e	batchCache
	f	I	f	triedCount
	f	J	g	lastUpdate
c	bgr	net/minecraft/world/entity/ai/sensing/NearestItemSensor
	m	()Ljava/util/Set;	a	requires
	m	(Ladw;Laxy;)V	a	doTick
	m	(Ladw;Laya;)V	a	doTick
	m	(Laya;Lbli;)Z	a	lambda$doTick$2
	m	(Lbli;)Z	a	lambda$doTick$0
	m	(Laya;Lbli;)Z	b	lambda$doTick$1
	f	I	a	MAX_DISTANCE_TO_WANTED_ITEM
	f	J	c	XZ_RANGE
	f	J	d	Y_RANGE
c	bgs	net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor
	m	()Ljava/util/Set;	a	requires
	m	(Ladw;Laxy;)V	a	doTick
	m	(Laxy;Laxy;)Z	a	lambda$doTick$0
c	bgt	net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor
	m	()Ljava/util/Set;	a	requires
	m	(Ladw;Laxy;)V	a	doTick
	m	(Laxy;)Ljava/util/Optional;	a	getVisibleEntities
	m	(Laxy;Laxy;)Z	a	isMatchingEntity
	m	(Laxy;Lbga;)Ljava/util/Optional;	a	lambda$getNearestEntity$1
	m	()Lbfy;	b	getMemory
	m	(Laxy;)Ljava/util/Optional;	b	getNearestEntity
	m	(Laxy;Laxy;)Z	e	lambda$getNearestEntity$0
c	bgu	net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor
	m	()Ljava/util/Set;	a	requires
	m	(Ladw;Laxy;)V	a	doTick
	m	(Laxy;)Z	a	lambda$doTick$0
c	bgv	net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor
	m	()Ljava/util/Set;	a	requires
	m	(Ladw;Laxy;)V	a	doTick
	m	(Ladw;Lgj;)Z	a	isValidRepellent
	m	(Laxy;)Z	a	lambda$doTick$0
	m	(Ladw;Lgj;)Z	b	lambda$findNearestRepellent$1
	m	(Ladw;Laxy;)Ljava/util/Optional;	c	findNearestRepellent
c	bgw	net/minecraft/world/entity/ai/sensing/PlayerSensor
	m	()Ljava/util/Set;	a	requires
	m	(Ladw;Laxy;)V	a	doTick
	m	(Laxy;Ladx;)Z	a	lambda$doTick$0
	m	(Laxy;Lboj;)Z	a	lambda$doTick$2
	m	(Laxy;Lboj;)Z	b	lambda$doTick$1
c	bgx	net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor
	m	()Ljava/util/Set;	a	requires
	m	(Ladw;Laxy;)V	a	doTick
	m	(Ladw;Lbnw;)V	a	doTick
	f	I	a	SCAN_RATE
c	bgy	net/minecraft/world/entity/ai/sensing/Sensing
	m	()V	a	tick
	m	(Laxk;)Z	a	hasLineOfSight
	f	Laya;	a	mob
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	b	seen
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	c	unseen
c	bgz	net/minecraft/world/entity/ai/sensing/Sensor
	m	()Ljava/util/Set;	a	requires
	m	(Ladw;Laxy;)V	a	doTick
	m	(Ladw;Laxy;)V	b	tick
	m	(Laxy;Laxy;)Z	b	isEntityTargetable
	m	(Laxy;Laxy;)Z	c	isEntityAttackable
	m	(Laxy;Laxy;)Z	d	isEntityAttackableIgnoringLineOfSight
	f	Ljava/util/Random;	a	RANDOM
	f	I	b	TARGETING_RANGE
	f	I	c	DEFAULT_SCAN_RATE
	f	Lbhf;	d	TARGET_CONDITIONS
	f	Lbhf;	e	TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	f	Lbhf;	f	ATTACK_TARGET_CONDITIONS
	f	Lbhf;	g	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	f	Lbhf;	h	ATTACK_TARGET_CONDITIONS_IGNORE_LINE_OF_SIGHT
	f	Lbhf;	i	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_AND_LINE_OF_SIGHT
	f	I	j	scanRate
	f	J	k	timeToTick
c	bha	net/minecraft/world/entity/ai/sensing/SensorType
	m	()Lbgz;	a	create
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Lbha;	a	register
	m	()Lbhb;	b	lambda$static$1
	m	()Lbhb;	c	lambda$static$0
	f	Lbha;	a	DUMMY
	f	Lbha;	b	NEAREST_ITEMS
	f	Lbha;	c	NEAREST_LIVING_ENTITIES
	f	Lbha;	d	NEAREST_PLAYERS
	f	Lbha;	e	NEAREST_BED
	f	Lbha;	f	HURT_BY
	f	Lbha;	g	VILLAGER_HOSTILES
	f	Lbha;	h	VILLAGER_BABIES
	f	Lbha;	i	SECONDARY_POIS
	f	Lbha;	j	GOLEM_DETECTED
	f	Lbha;	k	PIGLIN_SPECIFIC_SENSOR
	f	Lbha;	l	PIGLIN_BRUTE_SPECIFIC_SENSOR
	f	Lbha;	m	HOGLIN_SPECIFIC_SENSOR
	f	Lbha;	n	NEAREST_ADULT
	f	Lbha;	o	AXOLOTL_ATTACKABLES
	f	Lbha;	p	AXOLOTL_TEMPTATIONS
	f	Lbha;	q	GOAT_TEMPTATIONS
	f	Ljava/util/function/Supplier;	r	factory
c	bhb	net/minecraft/world/entity/ai/sensing/TemptingSensor
	m	()Ljava/util/Set;	a	requires
	m	(Ladw;Laxy;)V	a	doTick
	m	(Ladw;Layh;)V	a	doTick
	m	(Layh;Ladx;)Z	a	lambda$doTick$1
	m	(Lboj;)Z	a	playerHoldingTemptation
	m	(Lbuw;)Z	a	isTemptation
	m	(Layh;Ladx;)Z	b	lambda$doTick$0
	f	I	a	TEMPTATION_RANGE
	f	Lbhf;	c	TEMPT_TARGETING
	f	Lbxl;	d	temptations
c	bhc	net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor
	m	()Ljava/util/Set;	a	requires
	m	(Ladw;Laxy;)V	a	doTick
	m	(Laxy;)Ljava/util/List;	a	getNearestVillagerBabies
	m	(Laxy;)Z	b	isVillagerBaby
	m	(Laxy;)Lbga;	c	getVisibleEntities
c	bhd	net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor
	m	(Laxy;Laxy;)Z	a	isMatchingEntity
	m	()Lbfy;	b	getMemory
	m	(Laxy;)Z	b	isHostile
	m	(Laxy;Laxy;)Z	e	isClose
	f	Lcom/google/common/collect/ImmutableMap;	a	ACCEPTABLE_DISTANCE_FROM_HOSTILES
c	bhe	net/minecraft/world/entity/ai/sensing/package-info
c	bhf	net/minecraft/world/entity/ai/targeting/TargetingConditions
	m	()Lbhf;	a	forCombat
	m	(D)Lbhf;	a	range
	m	(Laxy;Laxy;)Z	a	test
	m	(Ljava/util/function/Predicate;)Lbhf;	a	selector
	m	()Lbhf;	b	forNonCombat
	m	()Lbhf;	c	copy
	m	()Lbhf;	d	ignoreLineOfSight
	m	()Lbhf;	e	ignoreInvisibilityTesting
	f	Lbhf;	a	DEFAULT
	f	D	b	MIN_VISIBILITY_DISTANCE_FOR_INVISIBLE_TARGET
	f	Z	c	isCombat
	f	D	d	range
	f	Z	e	checkLineOfSight
	f	Z	f	testInvisible
	f	Ljava/util/function/Predicate;	g	selector
c	bhg	net/minecraft/world/entity/ai/targeting/package-info
c	bhh	net/minecraft/world/entity/ai/util/AirAndWaterRandomPos
	m	(Layh;IIIDDD)Ldpo;	a	getPos
	m	(Layh;IIIDDDZ)Lgj;	a	generateRandomPos
	m	(Layh;Lgj;)Z	a	lambda$generateRandomPos$1
	m	(Layh;IIIDDDZ)Lgj;	b	lambda$getPos$0
c	bhi	net/minecraft/world/entity/ai/util/AirRandomPos
	m	(Layh;IIILdpo;D)Ldpo;	a	getPosTowards
	m	(Layh;IIILdpo;DZ)Lgj;	a	lambda$getPosTowards$0
c	bhj	net/minecraft/world/entity/ai/util/DefaultRandomPos
	m	(Layh;II)Ldpo;	a	getPos
	m	(Layh;IILdpo;)Ldpo;	a	getPosAway
	m	(Layh;IILdpo;D)Ldpo;	a	getPosTowards
	m	(Layh;IILdpo;DZ)Lgj;	a	lambda$getPosTowards$1
	m	(Layh;IILdpo;Z)Lgj;	a	lambda$getPosAway$2
	m	(Layh;IIZ)Lgj;	a	lambda$getPos$0
	m	(Layh;IZLgj;)Lgj;	a	generateRandomPosTowardDirection
c	bhk	net/minecraft/world/entity/ai/util/GoalUtils
	m	(Laya;)Z	a	hasGroundPathNavigation
	m	(Layh;I)Z	a	mobRestricted
	m	(Layh;Lgj;)Z	a	isWater
	m	(Lbgf;Lgj;)Z	a	isNotStable
	m	(Lgj;Layh;)Z	a	isOutsideLimits
	m	(ZLayh;Lgj;)Z	a	isRestricted
	m	(Layh;Lgj;)Z	b	hasMalus
	m	(Layh;Lgj;)Z	c	isSolid
c	bhl	net/minecraft/world/entity/ai/util/HoverRandomPos
	m	(Layh;IIDDFII)Ldpo;	a	getPos
	m	(Layh;IIDDFZII)Lgj;	a	lambda$getPos$1
	m	(Layh;Lgj;)Z	a	lambda$getPos$0
c	bhm	net/minecraft/world/entity/ai/util/LandRandomPos
	m	(Layh;II)Ldpo;	a	getPos
	m	(Layh;IILdpo;)Ldpo;	a	getPosTowards
	m	(Layh;IILdpo;Z)Ldpo;	a	getPosInDirection
	m	(Layh;IILjava/util/function/ToDoubleFunction;)Ldpo;	a	getPos
	m	(Layh;IIZ)Lgj;	a	lambda$getPos$0
	m	(Layh;IZLgj;)Lgj;	a	generateRandomPosTowardDirection
	m	(Layh;Lgj;)Lgj;	a	movePosUpOutOfSolid
	m	(Layh;IILdpo;)Ldpo;	b	getPosAway
	m	(Layh;IILdpo;Z)Lgj;	b	lambda$getPosInDirection$1
	m	(Layh;Lgj;)Z	b	lambda$movePosUpOutOfSolid$2
c	bhn	net/minecraft/world/entity/ai/util/RandomPos
	m	(Layh;ILjava/util/Random;Lgj;)Lgj;	a	generateRandomPosTowardDirection
	m	(Layh;Ljava/util/function/Supplier;)Ldpo;	a	generateRandomPos
	m	(Lgj;IILjava/util/function/Predicate;)Lgj;	a	moveUpToAboveSolid
	m	(Lgj;ILjava/util/function/Predicate;)Lgj;	a	moveUpOutOfSolid
	m	(Ljava/util/Random;II)Lgj;	a	generateRandomDirection
	m	(Ljava/util/Random;IIIDDD)Lgj;	a	generateRandomDirectionWithinRadians
	m	(Ljava/util/function/Supplier;Ljava/util/function/ToDoubleFunction;)Ldpo;	a	generateRandomPos
	f	I	a	RANDOM_POS_ATTEMPTS
c	bho	net/minecraft/world/entity/ai/util/package-info
c	bhp	net/minecraft/world/entity/ai/village/ReputationEventType
	m	(Ljava/lang/String;)Lbhp;	a	register
	f	Lbhp;	a	ZOMBIE_VILLAGER_CURED
	f	Lbhp;	b	GOLEM_KILLED
	f	Lbhp;	c	VILLAGER_HURT
	f	Lbhp;	d	VILLAGER_KILLED
	f	Lbhp;	e	TRADE
c	bhp$1	net/minecraft/world/entity/ai/village/ReputationEventType$1
	f	Ljava/lang/String;	f	val$name
c	bhq	net/minecraft/world/entity/ai/village/VillageSiege
	m	(Ladw;)Z	a	tryToSetupSiege
	m	(Ladw;Lgj;)Ldpo;	a	findRandomSpawnPos
	m	(Ladw;ZZ)I	a	tick
	m	(Ladw;)V	b	trySpawn
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Z	b	hasSetupSiege
	f	Lbhq$a;	c	siegeState
	f	I	d	zombiesToSpawn
	f	I	e	nextSpawnTime
	f	I	f	spawnX
	f	I	g	spawnY
	f	I	h	spawnZ
c	bhq$a	net/minecraft/world/entity/ai/village/VillageSiege$State
	m	()[Lbhq$a;	a	$values
	f	Lbhq$a;	a	SIEGE_CAN_ACTIVATE
	f	Lbhq$a;	b	SIEGE_TONIGHT
	f	Lbhq$a;	c	SIEGE_DONE
	f	[Lbhq$a;	d	$VALUES
c	bhr	net/minecraft/world/entity/ai/village/package-info
c	bhs	net/minecraft/world/entity/ai/village/poi/PoiManager
	m	(J)V	a	setDirty
	m	(Lbht;)Lgj;	a	lambda$take$10
	m	(Lbhu;)Ljava/lang/Boolean;	a	lambda$isVillageCenter$17
	m	(Lbhv;Lgj;)Z	a	existsAtPosition
	m	(Lcac;Lcrb;)V	a	checkConsistencyWithBlocks
	m	(Lcac;Ljava/lang/Integer;)Ljava/util/Optional;	a	lambda$getInChunk$4
	m	(Lcay;Lcac;)V	a	lambda$ensureLoadedAndValid$27
	m	(Lcay;Lgj;I)V	a	ensureLoadedAndValid
	m	(Lcom/mojang/datafixers/util/Pair;)Lcac;	a	lambda$ensureLoadedAndValid$25
	m	(Lcrb;)Z	a	mayHavePoi
	m	(Lcrb;Lhf;)V	a	lambda$checkConsistencyWithBlocks$20
	m	(Lcrb;Lhf;Lbhu;)V	a	lambda$checkConsistencyWithBlocks$19
	m	(Lcrb;Lhf;Ljava/util/function/BiConsumer;)V	a	updateFromSection
	m	(Lcrb;Ljava/util/function/BiConsumer;Lgj;)V	a	lambda$updateFromSection$22
	m	(Lgj;)V	a	remove
	m	(Lgj;ILbht;)Z	a	lambda$getInRange$3
	m	(Lgj;Lbhu;)Ljava/lang/Integer;	a	lambda$getFreeTickets$16
	m	(Lgj;Lbhv;)V	a	add
	m	(Lgj;Lgj;)D	a	lambda$findClosest$8
	m	(Lgj;Ljava/util/function/Predicate;)Z	a	exists
	m	(Lgj;Ljava/util/function/Predicate;Lbhu;)Ljava/lang/Boolean;	a	lambda$exists$14
	m	(Lhf;)I	a	sectionsToVillage
	m	(Ljava/util/function/BiConsumer;Lgj;Lbhv;)V	a	lambda$updateFromSection$21
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
	m	(Ljava/util/function/Predicate;Lbhs$b;Lcac;)Ljava/util/stream/Stream;	a	lambda$getInSquare$1
	m	(Ljava/util/function/Predicate;Lbhs$b;Ljava/util/Optional;)Ljava/util/stream/Stream;	a	lambda$getInChunk$5
	m	(Ljava/util/function/Predicate;Lbht;)Z	a	lambda$getRandom$11
	m	(Ljava/util/function/Predicate;Lcac;Lbhs$b;)Ljava/util/stream/Stream;	a	getInChunk
	m	(Ljava/util/function/Predicate;Lgj;ILbhs$b;)J	a	getCountInRange
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lbhs$b;Lgj;ILjava/util/Random;)Ljava/util/Optional;	a	getRandom
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgj;I)Ljava/util/Optional;	a	take
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgj;ILbhs$b;)Ljava/util/stream/Stream;	a	findAll
	m	(J)V	b	onSectionLoad
	m	(Lcac;)Z	b	lambda$ensureLoadedAndValid$26
	m	(Lcom/mojang/datafixers/util/Pair;)Z	b	lambda$ensureLoadedAndValid$24
	m	(Lcrb;Lhf;Ljava/util/function/BiConsumer;)V	b	lambda$checkConsistencyWithBlocks$18
	m	(Lgj;)Z	b	release
	m	(Lgj;ILbht;)Z	b	lambda$getInSquare$2
	m	(Lgj;Lbhu;)Ljava/util/Optional;	b	lambda$getType$15
	m	(Lgj;Lgj;)D	b	lambda$findClosest$7
	m	(Lhf;)Lcom/mojang/datafixers/util/Pair;	b	lambda$ensureLoadedAndValid$23
	m	(Ljava/util/function/Predicate;Lbht;)Z	b	lambda$take$9
	m	(Ljava/util/function/Predicate;Lgj;ILbhs$b;)Ljava/util/stream/Stream;	b	getInSquare
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgj;ILbhs$b;)Ljava/util/stream/Stream;	b	findAllClosestFirst
	m	(Lgj;)Ljava/util/Optional;	c	getType
	m	(Lgj;Lbhu;)Ljava/lang/Boolean;	c	lambda$release$12
	m	(Lgj;Lgj;)D	c	lambda$findAllClosestFirst$6
	m	(Ljava/util/function/Predicate;Lgj;ILbhs$b;)Ljava/util/stream/Stream;	c	getInRange
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgj;ILbhs$b;)Ljava/util/Optional;	c	find
	m	(Lgj;)I	d	getFreeTickets
	m	(Lgj;Lbhu;)V	d	lambda$remove$0
	m	(Ljava/util/function/Predicate;Lgj;ILbhs$b;)Ljava/util/Optional;	d	findClosest
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgj;ILbhs$b;)Ljava/util/Optional;	d	findClosest
	m	(Lgj;)Ljava/lang/IllegalStateException;	e	lambda$release$13
	m	(J)Z	g	isVillageCenter
	f	I	a	MAX_VILLAGE_DISTANCE
	f	I	b	VILLAGE_SECTION_SIZE
	f	Lbhs$a;	d	distanceTracker
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	loadedChunks
c	bhs$a	net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker
	m	()V	a	runAllUpdates
	m	(JI)V	a	setLevel
	m	(J)I	b	getLevelFromSource
	m	(J)I	c	getLevel
	f	Lbhs;	a	this$0
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	b	levels
c	bhs$b	net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy
	m	()Ljava/util/function/Predicate;	a	getTest
	m	(Lbht;)Z	a	lambda$static$0
	m	()[Lbhs$b;	b	$values
	f	Lbhs$b;	a	HAS_SPACE
	f	Lbhs$b;	b	IS_OCCUPIED
	f	Lbhs$b;	c	ANY
	f	Ljava/util/function/Predicate;	d	test
	f	[Lbhs$b;	e	$VALUES
c	bht	net/minecraft/world/entity/ai/village/poi/PoiRecord
	m	()I	a	getFreeTickets
	m	(Lbht;)Ljava/lang/Integer;	a	lambda$codec$2
	m	(Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$3
	m	()Z	b	acquireTicket
	m	(Lbht;)Lbhv;	b	lambda$codec$1
	m	()Z	c	releaseTicket
	m	(Lbht;)Lgj;	c	lambda$codec$0
	m	()Z	d	hasSpace
	m	()Z	e	isOccupied
	m	()Lgj;	f	getPos
	m	()Lbhv;	g	getPoiType
	f	Lgj;	a	pos
	f	Lbhv;	b	poiType
	f	I	c	freeTickets
	f	Ljava/lang/Runnable;	d	setDirty
c	bhu	net/minecraft/world/entity/ai/village/poi/PoiSection
	m	()Z	a	isValid
	m	(Lbht;)Z	a	add
	m	(Lbhu;)Ljava/util/List;	a	lambda$codec$1
	m	(Lbhv;)Ljava/util/Set;	a	lambda$add$6
	m	(Lgj;)V	a	remove
	m	(Lgj;Lbhv;)V	a	add
	m	(Lgj;Lbhv;S)Lbht;	a	lambda$refresh$7
	m	(Lgj;Ljava/util/function/Predicate;)Z	a	exists
	m	(Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lgj;Lbhv;)V	a	lambda$refresh$8
	m	(Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$2
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$getRecords$5
	m	(Ljava/util/function/Consumer;)V	a	refresh
	m	(Ljava/util/function/Predicate;Lbhs$b;)Ljava/util/stream/Stream;	a	getRecords
	m	(Ljava/util/function/Predicate;Ljava/util/Map$Entry;)Z	a	lambda$getRecords$4
	m	()V	b	clear
	m	(Lbhu;)Ljava/lang/Boolean;	b	lambda$codec$0
	m	(Lgj;)I	b	getFreeTickets
	m	(Ljava/lang/Runnable;)Lbhu;	b	lambda$codec$3
	m	(Lgj;)Z	c	release
	m	(Lgj;)Ljava/util/Optional;	d	getType
	m	(Lgj;)Ljava/util/Optional;	e	getPoiRecord
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;	b	records
	f	Ljava/util/Map;	c	byType
	f	Ljava/lang/Runnable;	d	setDirty
	f	Z	e	isValid
c	bhv	net/minecraft/world/entity/ai/village/poi/PoiType
	m	()Ljava/lang/String;	a	getName
	m	(Lbhv;)Lbhv;	a	registerBlockStates
	m	(Lbhv;Lcov;)V	a	lambda$registerBlockStates$7
	m	(Lcdq;)Ljava/util/Set;	a	getBlockStates
	m	(Lcov;)Z	a	is
	m	(Ljava/lang/String;Ljava/util/Set;II)Lbhv;	a	register
	m	(Ljava/lang/String;Ljava/util/Set;ILjava/util/function/Predicate;I)Lbhv;	a	register
	m	()I	b	getMaxTickets
	m	(Lbhv;)Z	b	lambda$new$6
	m	(Lcdq;)Ljava/util/stream/Stream;	b	lambda$static$5
	m	(Lcov;)Ljava/util/Optional;	b	forState
	m	()Ljava/util/function/Predicate;	c	getPredicate
	m	(Lbhv;)Z	c	lambda$static$2
	m	(Lcdq;)Ljava/util/stream/Stream;	c	lambda$static$3
	m	(Lcov;)Z	c	lambda$static$4
	m	()I	d	getValidRange
	m	(Lbhv;)Z	d	lambda$static$1
	m	()Ljava/util/Set;	e	lambda$static$0
	f	Ljava/util/Set;	A	BEDS
	f	Ljava/util/Set;	B	CAULDRONS
	f	Ljava/util/Map;	C	TYPE_BY_STATE
	f	Ljava/lang/String;	D	name
	f	Ljava/util/Set;	E	matchingStates
	f	I	F	maxTickets
	f	Ljava/util/function/Predicate;	G	predicate
	f	I	H	validRange
	f	Ljava/util/function/Predicate;	a	ALL_JOBS
	f	Ljava/util/function/Predicate;	b	ALL
	f	Lbhv;	c	UNEMPLOYED
	f	Lbhv;	d	ARMORER
	f	Lbhv;	e	BUTCHER
	f	Lbhv;	f	CARTOGRAPHER
	f	Lbhv;	g	CLERIC
	f	Lbhv;	h	FARMER
	f	Lbhv;	i	FISHERMAN
	f	Lbhv;	j	FLETCHER
	f	Lbhv;	k	LEATHERWORKER
	f	Lbhv;	l	LIBRARIAN
	f	Lbhv;	m	MASON
	f	Lbhv;	n	NITWIT
	f	Lbhv;	o	SHEPHERD
	f	Lbhv;	p	TOOLSMITH
	f	Lbhv;	q	WEAPONSMITH
	f	Lbhv;	r	HOME
	f	Lbhv;	s	MEETING
	f	Lbhv;	t	BEEHIVE
	f	Lbhv;	u	BEE_NEST
	f	Lbhv;	v	NETHER_PORTAL
	f	Lbhv;	w	LODESTONE
	f	Lbhv;	x	LIGHTNING_ROD
	f	Ljava/util/Set;	y	ALL_STATES
	f	Ljava/util/function/Supplier;	z	ALL_JOB_POI_TYPES
c	bhw	net/minecraft/world/entity/ai/village/poi/package-info
c	bhx	net/minecraft/world/entity/ambient/AmbientCreature
	m	(Lboj;)Z	a	canBeLeashed
c	bhy	net/minecraft/world/entity/ambient/Bat
	m	(Laxk;)V	A	doPush
	m	()V	R	customServerAiStep
	m	(DZLcov;Lgj;)V	a	checkFallDamage
	m	(FFLawu;)Z	a	causeFallDamage
	m	(Lawu;F)Z	a	hurt
	m	(Lok;)V	a	readAdditionalSaveData
	m	()Z	aK	isFlapping
	m	()Laxk$b;	aN	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	b	checkBatSpawnRules
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	bi	isPushable
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Z	ck	isIgnoringBlockTriggers
	m	()V	eG	pushEntities
	m	()F	ev	getSoundVolume
	m	()F	ew	getVoicePitch
	m	()V	k	tick
	m	()Layy$a;	n	createAttributes
	m	()Z	q	isResting
	m	()Lahj;	r	getAmbientSound
	m	()Z	t	isHalloween
	m	(Z)V	v	setResting
	m	()Lahj;	x_	getDeathSound
	f	F	b	FLAP_DEGREES_PER_TICK
	f	Lbhf;	bU	BAT_RESTING_TARGETING
	f	Lgj;	bV	targetPosition
	f	I	c	TICKS_PER_FLAP
	f	Lyb;	d	DATA_ID_FLAGS
	f	I	e	FLAG_RESTING
c	bhz	net/minecraft/world/entity/ambient/package-info
c	bia	net/minecraft/world/entity/animal/AbstractFish
	m	()Z	O	requiresCustomPersistence
	m	(Lcav;)Lbgf;	a	createNavigation
	m	(Lok;)V	a	readAdditionalSaveData
	m	()Lahj;	aF	getSwimSound
	m	()V	a_	defineSynchedData
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lok;)V	c	loadFromBucketTag
	m	()Lahj;	fA	getFlopSound
	m	()I	ff	getMaxSpawnClusterSize
	m	()Z	fz	canRandomSwim
	m	(D)Z	h	removeWhenFarAway
	m	(Ldpo;)V	h	travel
	m	(Lbuw;)V	m	saveToBucketTag
	m	()Layy$a;	n	createAttributes
	m	()Z	q	fromBucket
	m	()Lahj;	t	getPickupSound
	m	()V	u	registerGoals
	m	(Z)V	v	setFromBucket
	m	()V	w_	aiStep
	f	Lyb;	b	FROM_BUCKET
c	bia$a	net/minecraft/world/entity/animal/AbstractFish$FishMoveControl
	m	()V	a	tick
	f	Lbia;	l	fish
c	bia$b	net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal
	m	()Z	a	canUse
	f	Lbia;	i	fish
c	bib	net/minecraft/world/entity/animal/AbstractGolem
	m	()I	J	getAmbientSoundInterval
	m	(FFLawu;)Z	a	causeFallDamage
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(D)Z	h	removeWhenFarAway
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	x_	getDeathSound
c	bic	net/minecraft/world/entity/animal/AbstractSchoolingFish
	m	(Lbic;)Lbic;	a	startFollowing
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Ljava/util/stream/Stream;)V	a	addFollowers
	m	(Lbic;)V	b	lambda$addFollowers$1
	m	(Lbic;)Z	c	lambda$addFollowers$0
	m	()I	fB	getMaxSchoolSize
	m	()Z	fC	isFollower
	m	()V	fD	stopFollowing
	m	()Z	fE	canBeFollowed
	m	()Z	fF	hasFollowers
	m	()Z	fG	inRangeOfLeader
	m	()V	fH	pathToLeader
	m	()V	fI	addFollower
	m	()V	fJ	removeFollower
	m	()I	ff	getMaxSpawnClusterSize
	m	()Z	fz	canRandomSwim
	m	()V	k	tick
	m	()V	u	registerGoals
	f	Lbic;	b	leader
	f	I	c	schoolSize
c	bic$a	net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData
	f	Lbic;	a	leader
c	bid	net/minecraft/world/entity/animal/Animal
	m	()I	J	getAmbientSoundInterval
	m	()V	R	customServerAiStep
	m	(B)V	a	handleEntityEvent
	m	(Ladw;Lbid;)V	a	spawnChildFromBreeding
	m	(Lawu;F)Z	a	hurt
	m	(Lbid;)Z	a	canMate
	m	(Lboj;Lawg;Lbuw;)V	a	usePlayerItem
	m	(Lbzy;Lgj;)Z	a	isBrightEnoughToSpawn
	m	(Lgj;Lcay;)F	a	getWalkTargetValue
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	b	checkAnimalSpawnRules
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lok;)V	b	addAdditionalSaveData
	m	()D	bp	getMyRidingOffset
	m	(Lboj;)I	d	getExperienceReward
	m	()Z	fC	canFallInLove
	m	()I	fD	getInLoveTime
	m	()Ladx;	fE	getLoveCause
	m	()Z	fF	isInLove
	m	()V	fG	resetLove
	m	(Lboj;)V	g	setInLove
	m	(D)Z	h	removeWhenFarAway
	m	(Lbuw;)Z	n	isFood
	m	(I)V	r	setInLoveTime
	m	()V	w_	aiStep
	f	I	bV	inLove
	f	Ljava/util/UUID;	bW	loveCause
	f	I	bX	PARENT_AGE_AFTER_BREEDING
c	bie	net/minecraft/world/entity/animal/Bee
	m	(Lbie;)Ljava/util/Random;	A	access$2600
	m	(Lbie;)Ljava/util/Random;	B	access$2700
	m	(Lbie;)Ljava/util/Random;	C	access$2800
	m	()V	Q	sendDebugPackets
	m	()V	R	customServerAiStep
	m	()I	a	getRemainingPersistentAngerTime
	m	(DZLcov;Lgj;)V	a	checkFallDamage
	m	(FFLawu;)Z	a	causeFallDamage
	m	(I)V	a	setRemainingPersistentAngerTime
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lawu;F)Z	a	hurt
	m	(Lbie;)Lbgf;	a	access$000
	m	(Lcav;)Lbgf;	a	createNavigation
	m	(Lcav;DDDDDLia;)V	a	spawnFluidParticle
	m	(Lgj;Lcay;)F	a	getWalkTargetValue
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
	m	(Lok;)V	a	readAdditionalSaveData
	m	()Z	aK	isFlapping
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Ladw;Laxi;)Lbie;	b	getBreedOffspring
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lbie;)Ljava/util/Random;	b	access$100
	m	(Lgj;I)Z	b	closerThan
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	()V	c	startPersistentAngerTimer
	m	(Laif;)V	c	jumpInLiquid
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lbie;)Lbgf;	c	access$200
	m	()Ldpo;	cz	getLeashOffset
	m	(IZ)V	d	setFlag
	m	(Lbie;)Lbgf;	d	access$300
	m	(Lbie;)Lbgf;	e	access$400
	m	()Layd;	er	getMobType
	m	()F	ev	getSoundVolume
	m	(Lbie;)Lbgf;	f	access$500
	m	()Ljava/util/List;	fA	getBlacklistedHives
	m	()V	fB	resetTicksWithoutNectarSinceExitingHive
	m	()Z	fH	hasHive
	m	()Lgj;	fI	getHivePos
	m	()Lbdu;	fJ	getGoalSelector
	m	()Z	fK	hasNectar
	m	()Z	fL	hasStung
	m	()Layy$a;	fM	createAttributes
	m	()Z	fN	isFlying
	m	()V	fO	dropOffNectar
	m	()Z	fP	isTiredOfLookingForNectar
	m	()Z	fQ	wantsToEnterHive
	m	()V	fR	updateRollAmount
	m	()Z	fS	isHiveNearFire
	m	()I	fT	getCropsGrownSincePollination
	m	()V	fU	resetNumCropsGrownSincePollination
	m	()V	fV	incrementNumCropsGrownSincePollination
	m	()Z	fW	isHiveValid
	m	()Z	fX	isRolling
	m	()I	fz	getTravellingTicks
	m	(Lbie;)Lbgf;	g	access$600
	m	(Lgj;)V	g	setSavedFlowerPos
	m	(Lbie;)Lbgf;	h	access$700
	m	(Lgj;)V	h	pathfindRandomlyTowards
	m	(Lbie;)Lbgf;	i	access$800
	m	(Lgj;)Z	i	doesHiveHaveSpace
	m	(Lbie;)Lbgf;	j	access$900
	m	(Lgj;)Z	j	isTooFarAway
	m	()V	k	tick
	m	(Lbie;)Lbgf;	k	access$1000
	m	(Lgj;)Z	k	isFlowerValid
	m	(Lbie;)Lbgf;	l	access$1100
	m	(Lbie;)Lbgf;	m	access$1200
	m	(Lbie;)Lbgf;	n	access$1300
	m	(Lbuw;)Z	n	isFood
	m	(Lbie;)Lbgf;	o	access$1400
	m	(Lbie;)Lbgf;	p	access$1500
	m	()Lgj;	q	getSavedFlowerPos
	m	(Lbie;)Lbgf;	q	access$1600
	m	()Lahj;	r	getAmbientSound
	m	(Lbie;)Lbgf;	r	access$1700
	m	(I)V	s	setStayOutOfHiveCountdown
	m	(Lbie;)Lbgf;	s	access$1800
	m	()Z	t	hasSavedFlowerPos
	m	(I)Z	t	getFlag
	m	(Lbie;)Ljava/util/Random;	t	access$1900
	m	()V	u	registerGoals
	m	(Lbie;)Ljava/util/Random;	u	access$2000
	m	(Lbie;)Lbgf;	v	access$2100
	m	(Z)V	v	setHasNectar
	m	(Lbie;)Ljava/util/Random;	w	access$2200
	m	(Z)V	w	setHasStung
	m	()V	w_	aiStep
	m	(Lbie;)Lbgf;	x	access$2300
	m	(Z)V	x	setRolling
	m	()Lahj;	x_	getDeathSound
	m	(Lbie;)Ljava/util/Random;	y	access$2400
	m	(F)F	z	getRollAmount
	m	(Laxk;)Z	z	doHurtTarget
	m	(Lbie;)Ljava/util/Random;	z	access$2500
	f	F	bV	FLAP_DEGREES_PER_TICK
	f	I	bW	TICKS_PER_FLAP
	f	Ljava/lang/String;	bY	TAG_CROPS_GROWN_SINCE_POLLINATION
	f	Ljava/lang/String;	bZ	TAG_CANNOT_ENTER_HIVE_TICKS
	f	I	cA	ticksWithoutNectarSinceExitingHive
	f	I	cB	stayOutOfHiveCountdown
	f	I	cC	numCropsGrownSincePollination
	f	I	cD	COOLDOWN_BEFORE_LOCATING_NEW_HIVE
	f	I	cE	remainingCooldownBeforeLocatingNewHive
	f	I	cF	COOLDOWN_BEFORE_LOCATING_NEW_FLOWER
	f	I	cG	remainingCooldownBeforeLocatingNewFlower
	f	Lgj;	cH	savedFlowerPos
	f	Lgj;	cI	hivePos
	f	Lbie$k;	cJ	beePollinateGoal
	f	Lbie$e;	cK	goToHiveGoal
	f	Lbie$f;	cL	goToKnownFlowerGoal
	f	I	cM	underWaterTicks
	f	Ljava/lang/String;	ca	TAG_TICKS_SINCE_POLLINATION
	f	Ljava/lang/String;	cb	TAG_HAS_STUNG
	f	Ljava/lang/String;	cc	TAG_HAS_NECTAR
	f	Ljava/lang/String;	cd	TAG_FLOWER_POS
	f	Ljava/lang/String;	ce	TAG_HIVE_POS
	f	Lyb;	cf	DATA_FLAGS_ID
	f	Lyb;	cg	DATA_REMAINING_ANGER_TIME
	f	I	ch	FLAG_ROLL
	f	I	ci	FLAG_HAS_STUNG
	f	I	cj	FLAG_HAS_NECTAR
	f	I	ck	STING_DEATH_COUNTDOWN
	f	I	cl	TICKS_BEFORE_GOING_TO_KNOWN_FLOWER
	f	I	cm	TICKS_WITHOUT_NECTAR_BEFORE_GOING_HOME
	f	I	cn	MIN_ATTACK_DIST
	f	I	co	MAX_CROPS_GROWABLE
	f	I	cp	POISON_SECONDS_NORMAL
	f	I	cq	POISON_SECONDS_HARD
	f	I	cr	TOO_FAR_DISTANCE
	f	I	cs	HIVE_CLOSE_ENOUGH_DISTANCE
	f	I	ct	PATHFIND_TO_HIVE_WHEN_CLOSER_THAN
	f	I	cu	HIVE_SEARCH_DISTANCE
	f	Lavs;	cv	PERSISTENT_ANGER_TIME
	f	Ljava/util/UUID;	cw	persistentAngerTarget
	f	F	cx	rollAmount
	f	F	cy	rollAmountO
	f	I	cz	timeSinceSting
c	bie$1	net/minecraft/world/entity/animal/Bee$1
	m	(Lgj;)Z	a	isStableDestination
	m	()V	c	tick
	f	Lbie;	p	this$0
c	bie$a	net/minecraft/world/entity/animal/Bee$BaseBeeGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	f	Lbie;	a	this$0
c	bie$b	net/minecraft/world/entity/animal/Bee$BeeAttackGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbie;	b	this$0
c	bie$c	net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()Z	i	beeCanTarget
c	bie$d	net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal
	m	()V	c	start
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	f	Lbie;	b	this$0
c	bie$e	net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal
	m	()Z	a	canUse
	m	(Lgj;)Z	a	pathfindDirectlyTowards
	m	()Z	b	canContinueToUse
	m	(Lgj;)Z	b	isTargetBlacklisted
	m	()V	c	start
	m	(Lgj;)V	c	blacklistTarget
	m	()V	d	stop
	m	(Lgj;)Z	d	hasReachedTarget
	m	()V	e	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()V	k	clearBlacklist
	m	()V	l	dropAndBlacklistHive
	m	()V	m	dropHive
	f	I	b	MAX_TRAVELLING_TICKS
	f	Lbie;	c	this$0
	f	I	d	travellingTicks
	f	I	e	MAX_BLACKLISTED_TARGETS
	f	Ljava/util/List;	f	blacklistedTargets
	f	Ldjn;	g	lastPath
	f	I	h	TICKS_BEFORE_HIVE_DROP
	f	I	i	ticksStuck
c	bie$f	net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Z	k	wantsToGoToKnownFlower
	f	Lbie;	b	this$0
	f	I	c	MAX_TRAVELLING_TICKS
	f	I	d	travellingTicks
c	bie$g	net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal
	m	()V	e	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	f	I	b	GROW_CHANCE
	f	Lbie;	c	this$0
c	bie$h	net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal
	m	(Laya;Laxy;)V	a	alertOther
	m	()Z	b	canContinueToUse
	f	Lbie;	a	this$0
c	bie$i	net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal
	m	(Lbhv;)Z	a	lambda$findNearbyHivesWithSpace$0
	m	(Lgj;Lgj;)D	a	lambda$findNearbyHivesWithSpace$1
	m	()V	c	start
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Ljava/util/List;	k	findNearbyHivesWithSpace
	f	Lbie;	b	this$0
c	bie$j	net/minecraft/world/entity/animal/Bee$BeeLookControl
	m	()V	a	tick
	m	()Z	c	resetXRotOnTick
	f	Lbie;	h	this$0
c	bie$k	net/minecraft/world/entity/animal/Bee$BeePollinateGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	(Lcov;)Z	a	lambda$new$0
	m	(Ljava/util/function/Predicate;D)Ljava/util/Optional;	a	findNearestBlock
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Z	k	hasPollinatedLongEnough
	m	()Z	l	isPollinating
	m	()V	m	stopPollinating
	m	()V	n	setWantedPos
	m	()F	o	getOffset
	m	()Ljava/util/Optional;	p	findNearbyFlower
	f	Lbie;	b	this$0
	f	I	c	MIN_POLLINATION_TICKS
	f	I	d	MIN_FIND_FLOWER_RETRY_COOLDOWN
	f	I	e	MAX_FIND_FLOWER_RETRY_COOLDOWN
	f	Ljava/util/function/Predicate;	f	VALID_POLLINATION_BLOCKS
	f	D	g	ARRIVAL_THRESHOLD
	f	I	h	POSITION_CHANGE_CHANCE
	f	F	i	SPEED_MODIFIER
	f	F	j	HOVER_HEIGHT_WITHIN_FLOWER
	f	F	k	HOVER_POS_OFFSET
	f	I	l	successfulPollinatingTicks
	f	I	m	lastSoundPlayedTick
	f	Z	n	pollinating
	f	Ldpo;	o	hoverPos
	f	I	p	pollinatingTicks
	f	I	q	MAX_POLLINATING_TICKS
c	bie$l	net/minecraft/world/entity/animal/Bee$BeeWanderGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()Ldpo;	h	findPos
	f	Lbie;	a	this$0
	f	I	b	WANDER_THRESHOLD
c	bif	net/minecraft/world/entity/animal/Bucketable
	m	(Laya;Lbuw;)V	a	saveDefaultDataToBucketTag
	m	(Laya;Lok;)V	a	loadDefaultDataFromBucketTag
	m	(Lboj;Lawg;Laxy;)Ljava/util/Optional;	a	bucketMobPickup
	m	()Lbuw;	b	getBucketItemStack
	m	(Lok;)V	c	loadFromBucketTag
	m	(Lbuw;)V	m	saveToBucketTag
	m	()Z	q	fromBucket
	m	()Lahj;	t	getPickupSound
	m	(Z)V	v	setFromBucket
c	big	net/minecraft/world/entity/animal/Cat
	m	(F)F	A	getLieDownAmountTail
	m	(Z)V	A	setRelaxStateOne
	m	(F)F	B	getRelaxStateOneAmount
	m	()I	J	getAmbientSoundInterval
	m	()V	R	customServerAiStep
	m	(FFLawu;)Z	a	causeFallDamage
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Ladw;Lcwr;)Z	a	lambda$finalizeSpawn$1
	m	(Lbid;)Z	a	canMate
	m	(Lboj;Lawg;Lbuw;)V	a	usePlayerItem
	m	(Lbts;)V	a	setCollarColor
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Ladw;Laxi;)Lbig;	b	getBreedOffspring
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	bJ	isSteppingCarefully
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Lyt;	fH	getResourceLocation
	m	()I	fI	getCatType
	m	()Z	fJ	isLying
	m	()Z	fK	isRelaxStateOne
	m	()Lbts;	fL	getCollarColor
	m	()V	fM	hiss
	m	()Layy$a;	fN	createAttributes
	m	()F	fO	getAttackDamage
	m	()V	fP	handleLieDown
	m	()V	fQ	updateLieDownAmount
	m	()V	fR	updateRelaxStateOneAmount
	m	(D)Z	h	removeWhenFarAway
	m	()V	k	tick
	m	(Lbuw;)Z	n	isFood
	m	()Lahj;	r	getAmbientSound
	m	(I)V	s	setCatType
	m	()V	t	reassessTameGoals
	m	()V	u	registerGoals
	m	()Lahj;	x_	getDeathSound
	m	(F)F	z	getLieDownAmount
	m	(Laxk;)Z	z	doHurtTarget
	m	(Z)V	z	setLying
	f	D	bY	TEMPT_SPEED_MOD
	f	D	bZ	WALK_SPEED_MOD
	f	F	cA	relaxStateOneAmount
	f	F	cB	relaxStateOneAmountO
	f	D	ca	SPRINT_SPEED_MOD
	f	I	cb	TYPE_TABBY
	f	I	cc	TYPE_BLACK
	f	I	cd	TYPE_RED
	f	I	ce	TYPE_SIAMESE
	f	I	cf	TYPE_BRITISH
	f	I	cg	TYPE_CALICO
	f	I	ch	TYPE_PERSIAN
	f	I	ci	TYPE_RAGDOLL
	f	I	cj	TYPE_WHITE
	f	I	ck	TYPE_JELLIE
	f	I	cl	TYPE_ALL_BLACK
	f	Ljava/util/Map;	cm	TEXTURE_BY_TYPE
	f	Lbxl;	cn	TEMPT_INGREDIENT
	f	Lyb;	co	DATA_TYPE_ID
	f	Lyb;	cp	IS_LYING
	f	Lyb;	cq	RELAX_STATE_ONE
	f	Lyb;	cr	DATA_COLLAR_COLOR
	f	I	cs	NUMBER_OF_CAT_TYPES
	f	I	ct	NUMBER_OF_CAT_TYPES_EXCEPT_ALL_BLACK
	f	Lbig$a;	cu	avoidPlayersGoal
	f	Lbfa;	cv	temptGoal
	f	F	cw	lieDownAmount
	f	F	cx	lieDownAmountO
	f	F	cy	lieDownAmountTail
	f	F	cz	lieDownAmountOTail
c	big$a	net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbig;	i	cat
c	big$b	net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal
	m	()Z	a	canUse
	m	(Lgj;)Lgj;	a	lambda$canUse$1
	m	(Lgj;Lgo;)Lgj;	a	lambda$canUse$0
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	spaceIsOccupied
	m	()V	i	giveMorningGift
	f	Lbig;	a	cat
	f	Lboj;	b	ownerPlayer
	f	Lgj;	c	goalPos
	f	I	d	onBedTicks
c	big$c	net/minecraft/world/entity/animal/Cat$CatTemptGoal
	m	()Z	a	canUse
	m	()V	e	tick
	m	()Z	h	canScare
	f	Lboj;	c	selectedPlayer
	f	Lbig;	d	cat
c	bih	net/minecraft/world/entity/animal/Chicken
	m	(FFLawu;)Z	a	causeFallDamage
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	aJ	onFlap
	m	()Z	aK	isFlapping
	m	(Ladw;Laxi;)Lbih;	b	getBreedOffspring
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lboj;)I	d	getExperienceReward
	m	(D)Z	h	removeWhenFarAway
	m	(Laxk;)V	i	positionRider
	m	(Lbuw;)Z	n	isFood
	m	()Layy$a;	q	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	()Z	t	isChickenJockey
	m	()V	u	registerGoals
	m	(Z)V	v	setChickenJockey
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	f	F	bV	flap
	f	F	bW	flapSpeed
	f	F	bY	oFlapSpeed
	f	F	bZ	oFlap
	f	F	ca	flapping
	f	I	cb	eggTime
	f	Z	cc	isChickenJockey
	f	Lbxl;	cd	FOOD_ITEMS
	f	F	ce	nextFlap
c	bii	net/minecraft/world/entity/animal/Cod
	m	()Lbuw;	b	getBucketItemStack
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Lahj;	fA	getFlopSound
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	x_	getDeathSound
c	bij	net/minecraft/world/entity/animal/Cow
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Ladw;Laxi;)Lbij;	b	getBreedOffspring
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()F	ev	getSoundVolume
	m	()Layy$a;	q	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	()V	u	registerGoals
	m	()Lahj;	x_	getDeathSound
c	bik	net/minecraft/world/entity/animal/Dolphin
	m	()I	T	getMaxHeadXRot
	m	()I	U	getMaxHeadYRot
	m	(B)V	a	handleEntityEvent
	m	(I)V	a	handleAirSupply
	m	(Lbik;)Ljava/util/Random;	a	access$000
	m	(Lboj;)Z	a	canBeLeashed
	m	(Lcav;)Lbgf;	a	createNavigation
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lia;)V	a	addParticlesAroundSelf
	m	(Lok;)V	a	readAdditionalSaveData
	m	()Lahj;	aF	getSwimSound
	m	()Lahj;	aG	getSwimSplashSound
	m	()V	a_	defineSynchedData
	m	(I)V	b	setMoisntessLevel
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lbik;)Ljava/util/Random;	b	access$100
	m	(Lbli;)V	b	pickUpItem
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lok;)V	b	addAdditionalSaveData
	m	()I	bX	getMaxAirSupply
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lbik;)Ljava/util/Random;	c	access$200
	m	(Lbli;)Z	c	lambda$static$0
	m	()Z	dx	canBreatheUnderwater
	m	()Z	fA	closeToNextPos
	m	()Layy$a;	fz	createAttributes
	m	(Lbuw;)Z	g	canTakeItem
	m	(Lgj;)V	g	setTreasurePos
	m	(Ldpo;)V	h	travel
	m	()V	k	tick
	m	(Laxk;)Z	l	canRide
	m	()Lgj;	n	getTreasurePos
	m	(I)I	n	increaseAirSupply
	m	()Z	q	gotFish
	m	()Lahj;	r	getAmbientSound
	m	()I	t	getMoistnessLevel
	m	()V	u	registerGoals
	m	(Z)V	v	setGotFish
	m	()Lahj;	x_	getDeathSound
	m	(Laxk;)Z	z	doHurtTarget
	f	I	b	TOTAL_AIR_SUPPLY
	f	Lyb;	bV	MOISTNESS_LEVEL
	f	Lbhf;	bW	SWIM_WITH_PLAYER_TARGETING
	f	I	bX	TOTAL_MOISTNESS_LEVEL
	f	Ljava/util/function/Predicate;	c	ALLOWED_ITEMS
	f	Lyb;	d	TREASURE_POS
	f	Lyb;	e	GOT_FISH
c	bik$a	net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal
	m	()Z	D_	isInterruptable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbik;	a	dolphin
	f	Z	b	stuck
c	bik$b	net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbik;	a	dolphin
	f	D	b	speedModifier
	f	Lboj;	c	player
c	bik$c	net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal
	m	()Z	a	canUse
	m	(Lbuw;)V	a	drop
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbik;	a	this$0
	f	I	b	cooldown
c	bil	net/minecraft/world/entity/animal/FlyingAnimal
	m	()Z	fN	isFlying
c	bim	net/minecraft/world/entity/animal/Fox
	m	(F)F	A	getCrouchAmount
	m	(Z)V	A	setDefending
	m	(Z)V	B	setSleeping
	m	()V	K	playAmbientSound
	m	(B)V	a	handleEntityEvent
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lawf;)V	a	populateDefaultEquipmentSlots
	m	(Laxk;)Z	a	lambda$static$3
	m	(Lbim$v;)V	a	setFoxType
	m	(Lbim;)Z	a	access$000
	m	(Lbim;Laxy;)Z	a	isPathClear
	m	(Lboj;Lawg;Lbuw;)V	a	usePlayerItem
	m	(Lboj;Laya;)V	a	onOffspringSpawnedFromEgg
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Ladw;Laxi;)Lbim;	b	getBreedOffspring
	m	(Laxk;)Z	b	lambda$static$2
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lbim;)Ljava/util/Random;	b	access$100
	m	(Lbli;)V	b	pickUpItem
	m	(Ljava/util/UUID;)V	b	addTrustedUUID
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	bN	isCrouching
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxk;)Z	c	lambda$static$1
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	c	checkFoxSpawnRules
	m	(Lbim;)Ljava/util/Random;	c	access$200
	m	(Lbli;)Z	c	lambda$static$0
	m	(Ljava/util/UUID;)Z	c	trusts
	m	()Ldpo;	cz	getLeashOffset
	m	(FF)I	d	calculateFallDamage
	m	(IZ)V	d	setFlag
	m	(Lbim;)Ljava/util/Random;	d	access$300
	m	(Lbim;)Z	e	access$400
	m	(Lbuw;)Lahj;	e	getEatingSound
	m	()Z	ex	isImmobile
	m	(Lawu;)V	f	dropAllDeathLoot
	m	(Lbim;)Z	f	access$500
	m	()Z	fA	isFaceplanted
	m	()Z	fB	isPouncing
	m	()Z	fH	isJumping
	m	()Z	fI	isFullyCrouched
	m	()Z	fJ	isInterested
	m	()V	fK	setTargetGoals
	m	()Ljava/util/List;	fL	getTrustedUUIDs
	m	()Z	fM	isDefending
	m	()V	fN	wakeUp
	m	()V	fO	clearStates
	m	()Z	fP	canMove
	m	()Z	fc	isSleeping
	m	()Z	fz	isSitting
	m	(Lbuw;)Z	g	canTakeItem
	m	(Laxy;)V	h	setTarget
	m	(Laxy;)Z	j	lambda$registerGoals$9
	m	()V	k	tick
	m	(Laxy;)Z	k	lambda$registerGoals$8
	m	(Lbuw;)Z	k	canHoldItem
	m	(Laxy;)Z	l	lambda$registerGoals$7
	m	(Laxy;)Z	m	lambda$registerGoals$6
	m	(Lbuw;)Z	m	canEat
	m	(Laxy;)Z	n	lambda$registerGoals$5
	m	(Lbuw;)Z	n	isFood
	m	(Laxy;)Z	o	lambda$registerGoals$4
	m	(Lbuw;)V	o	spitOutItem
	m	(Lbuw;)V	p	dropItemStack
	m	()Layy$a;	q	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	(I)Z	s	getFlag
	m	()Lbim$v;	t	getFoxType
	m	()V	u	registerGoals
	m	(Z)V	v	setSitting
	m	(Z)V	w	setIsPouncing
	m	()V	w_	aiStep
	m	(Z)V	x	setIsCrouching
	m	()Lahj;	x_	getDeathSound
	m	(Z)V	y	setIsInterested
	m	(F)F	z	getHeadRollAngle
	m	(Z)V	z	setFaceplanted
	f	I	bV	FLAG_CROUCHING
	f	I	bW	FLAG_INTERESTED
	f	I	bY	FLAG_POUNCING
	f	Lyb;	bZ	DATA_TYPE_ID
	f	Lyb;	ca	DATA_FLAGS_ID
	f	I	cb	FLAG_SITTING
	f	I	cc	FLAG_SLEEPING
	f	I	cd	FLAG_FACEPLANTED
	f	I	ce	FLAG_DEFENDING
	f	Lyb;	cf	DATA_TRUSTED_ID_0
	f	Lyb;	cg	DATA_TRUSTED_ID_1
	f	Ljava/util/function/Predicate;	ch	ALLOWED_ITEMS
	f	Ljava/util/function/Predicate;	ci	TRUSTED_TARGET_SELECTOR
	f	Ljava/util/function/Predicate;	cj	STALKABLE_PREY
	f	Ljava/util/function/Predicate;	ck	AVOID_PLAYERS
	f	I	cl	MIN_TICKS_BEFORE_EAT
	f	Lbdt;	cm	landTargetGoal
	f	Lbdt;	cn	turtleEggTargetGoal
	f	Lbdt;	co	fishTargetGoal
	f	F	cp	interestedAngle
	f	F	cq	interestedAngleO
	f	F	cr	crouchAmount
	f	F	cs	crouchAmountO
	f	I	ct	ticksSinceEaten
c	bim$a	net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbim;	i	this$0
	f	Laxy;	j	trustedLastHurtBy
	f	Laxy;	k	trustedLastHurt
	f	I	l	timestamp
c	bim$b	net/minecraft/world/entity/animal/Fox$FaceplantGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	countdown
	f	Lbim;	b	this$0
c	bim$c	net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector
	m	(Laxy;)Z	a	test
	f	Lbim;	a	this$0
c	bim$d	net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal
	m	()Z	h	hasShelter
	m	()Z	i	alertable
	f	Lbim;	a	this$0
	f	Lbhf;	b	alertableTargeting
c	bim$e	net/minecraft/world/entity/animal/Fox$FoxBreedGoal
	m	()V	c	start
	m	()V	g	breed
	f	Lbim;	d	this$0
c	bim$f	net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal
	m	()Z	a	canUse
	m	(Lcay;Lgj;)Z	a	isValidTarget
	m	(Lcov;)V	a	pickGlowBerry
	m	(Lcov;)V	b	pickSweetBerries
	m	()V	c	start
	m	()V	e	tick
	m	()D	i	acceptedDistance
	m	()Z	l	shouldRecalculatePath
	m	()V	o	onReachedTarget
	f	I	g	ticksWaited
	f	Lbim;	h	this$0
	f	I	i	WAIT_TICKS
c	bim$g	net/minecraft/world/entity/animal/Fox$FoxFloatGoal
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbim;	a	this$0
c	bim$h	net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbim;	d	this$0
	f	Lbim;	e	fox
c	bim$i	net/minecraft/world/entity/animal/Fox$FoxGroupData
	f	Lbim$v;	a	type
c	bim$j	net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbim;	h	this$0
c	bim$k	net/minecraft/world/entity/animal/Fox$FoxLookControl
	m	()V	a	tick
	m	()Z	c	resetXRotOnTick
	f	Lbim;	h	this$0
c	bim$l	net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal
	m	()Z	a	canUse
	m	(Laxy;D)V	a	checkAndPerformAttack
	m	()V	c	start
	f	Lbim;	b	this$0
c	bim$m	net/minecraft/world/entity/animal/Fox$FoxMoveControl
	m	()V	a	tick
	f	Lbim;	l	this$0
c	bim$n	net/minecraft/world/entity/animal/Fox$FoxPanicGoal
	m	()Z	h	shouldPanic
	f	Lbim;	h	this$0
c	bim$o	net/minecraft/world/entity/animal/Fox$FoxPounceGoal
	m	()Z	D_	isInterruptable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbim;	a	this$0
c	bim$p	net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbim;	a	this$0
c	bim$q	net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()Z	h	canFoxMove
	f	Lbim;	a	this$0
c	bim$r	net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()V	k	resetLook
	f	Lbim;	b	this$0
	f	D	c	relX
	f	D	d	relZ
	f	I	e	lookTime
	f	I	f	looksRemaining
c	bim$s	net/minecraft/world/entity/animal/Fox$SeekShelterGoal
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbim;	b	this$0
	f	I	c	interval
c	bim$t	net/minecraft/world/entity/animal/Fox$SleepGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()Z	k	canSleep
	f	Lbim;	b	this$0
	f	I	c	WAIT_TIME_BEFORE_SLEEP
	f	I	d	countdown
c	bim$u	net/minecraft/world/entity/animal/Fox$StalkPreyGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbim;	a	this$0
c	bim$v	net/minecraft/world/entity/animal/Fox$Type
	m	()Ljava/lang/String;	a	getName
	m	(I)Lbim$v;	a	byId
	m	(Lbim$v;)Lbim$v;	a	lambda$static$1
	m	(Lgs;)Lbim$v;	a	byBiome
	m	(Ljava/lang/String;)Lbim$v;	a	byName
	m	()I	b	getId
	m	(I)[Lbim$v;	b	lambda$static$0
	m	()[Lbim$v;	c	$values
	f	Lbim$v;	a	RED
	f	Lbim$v;	b	SNOW
	f	[Lbim$v;	c	BY_ID
	f	Ljava/util/Map;	d	BY_NAME
	f	I	e	id
	f	Ljava/lang/String;	f	name
	f	[Lbim$v;	g	$VALUES
c	bin	net/minecraft/world/entity/animal/IronGolem
	m	(Laxk;)V	A	doPush
	m	()I	a	getRemainingPersistentAngerTime
	m	(B)V	a	handleEntityEvent
	m	(I)V	a	setRemainingPersistentAngerTime
	m	(Lawu;)V	a	die
	m	(Lawu;F)Z	a	hurt
	m	(Laxo;)Z	a	canAttackType
	m	(Lcay;)Z	a	checkSpawnObstruction
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	()V	c	startPersistentAngerTimer
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Ldpo;	cz	getLeashOffset
	m	()Z	fA	isPlayerCreated
	m	()F	fB	getAttackDamage
	m	()I	fz	getOfferFlowerTick
	m	(Laxy;)Z	j	lambda$registerGoals$0
	m	(I)I	m	decreaseAirSupply
	m	()Layy$a;	n	createAttributes
	m	()Lbin$a;	q	getCrackiness
	m	()I	t	getAttackAnimationTick
	m	()V	u	registerGoals
	m	(Z)V	v	offerFlower
	m	(Z)V	w	setPlayerCreated
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	m	(Laxk;)Z	z	doHurtTarget
	f	I	bV	offerFlowerTick
	f	Lavs;	bW	PERSISTENT_ANGER_TIME
	f	I	bX	remainingPersistentAngerTime
	f	Ljava/util/UUID;	bY	persistentAngerTarget
	f	Lyb;	c	DATA_FLAGS_ID
	f	I	d	IRON_INGOT_HEAL_AMOUNT
	f	I	e	attackAnimationTick
c	bin$a	net/minecraft/world/entity/animal/IronGolem$Crackiness
	m	()[Lbin$a;	a	$values
	m	(F)Lbin$a;	a	byFraction
	m	(Lbin$a;)D	a	lambda$static$0
	f	Lbin$a;	a	NONE
	f	Lbin$a;	b	LOW
	f	Lbin$a;	c	MEDIUM
	f	Lbin$a;	d	HIGH
	f	Ljava/util/List;	e	BY_DAMAGE
	f	F	f	fraction
	f	[Lbin$a;	g	$VALUES
c	bio	net/minecraft/world/entity/animal/MushroomCow
	m	()Z	a	readyForShearing
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Ladw;Laxx;)V	a	thunderHit
	m	(Lahl;)V	a	shear
	m	(Lawg;Lboj;)V	a	lambda$mobInteract$0
	m	(Lbio$a;)V	a	setMushroomType
	m	(Lbio;)Lbio$a;	a	getOffspringType
	m	(Lgj;Lcay;)F	a	getWalkTargetValue
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Ladw;Laxi;)Lbij;	b	getBreedOffspring
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Ladw;Laxi;)Lbio;	c	getBreedOffspring
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	c	checkMushroomSpawnRules
	m	(Lbuw;)Ljava/util/Optional;	m	getEffectFromItemStack
	m	()Lbio$a;	t	getMushroomType
	f	Lyb;	bV	DATA_TYPE
	f	I	bW	MUTATE_CHANCE
	f	Laxc;	bY	effect
	f	I	bZ	effectDuration
	f	Ljava/util/UUID;	ca	lastLightningBoltUUID
c	bio$a	net/minecraft/world/entity/animal/MushroomCow$MushroomType
	m	()Lcov;	a	getBlockState
	m	(Ljava/lang/String;)Lbio$a;	a	byType
	m	()[Lbio$a;	b	$values
	f	Lbio$a;	a	RED
	f	Lbio$a;	b	BROWN
	f	Ljava/lang/String;	c	type
	f	Lcov;	d	blockState
	f	[Lbio$a;	e	$VALUES
c	bip	net/minecraft/world/entity/animal/Ocelot
	m	()I	J	getAmbientSoundInterval
	m	()V	R	customServerAiStep
	m	(B)V	a	handleEntityEvent
	m	(FFLawu;)Z	a	causeFallDamage
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lcay;)Z	a	checkSpawnObstruction
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Ladw;Laxi;)Lbip;	b	getBreedOffspring
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	bJ	isSteppingCarefully
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	c	checkOcelotSpawnRules
	m	()Ldpo;	cz	getLeashOffset
	m	()F	fA	getAttackDamage
	m	()Z	fz	isTrusting
	m	(D)Z	h	removeWhenFarAway
	m	(Lbuw;)Z	n	isFood
	m	()Layy$a;	q	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	()V	t	reassessTrustingGoals
	m	()V	u	registerGoals
	m	(Z)V	v	setTrusting
	m	(Z)V	w	spawnTrustingParticles
	m	()Lahj;	x_	getDeathSound
	m	(Laxk;)Z	z	doHurtTarget
	f	D	bV	CROUCH_SPEED_MOD
	f	D	bW	WALK_SPEED_MOD
	f	D	bY	SPRINT_SPEED_MOD
	f	Lbxl;	bZ	TEMPT_INGREDIENT
	f	Lyb;	ca	DATA_TRUSTING
	f	Lbip$a;	cb	ocelotAvoidPlayersGoal
	f	Lbip$b;	cc	temptGoal
c	bip$a	net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbip;	i	ocelot
c	bip$b	net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal
	m	()Z	h	canScare
	f	Lbip;	c	ocelot
c	biq	net/minecraft/world/entity/animal/Panda
	m	(F)F	A	getLieOnBackAmount
	m	(F)F	B	getRollAmount
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lawu;F)Z	a	hurt
	m	(Lbiq$a;)V	a	setMainGene
	m	(Lbiq;)Z	a	access$000
	m	(Lbiq;Lbiq;)V	a	setGeneFromParents
	m	(Lboj;)Z	a	canBeLeashed
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lbiq$a;)V	b	setHiddenGene
	m	(Lbiq;)Ljava/util/Random;	b	access$100
	m	(Lbli;)V	b	pickUpItem
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lbiq;)Ljava/util/Random;	c	access$200
	m	(Lbli;)Z	c	lambda$static$0
	m	(IZ)V	d	setFlag
	m	(Lbiq;)Ljava/util/Random;	d	access$300
	m	(Lbiq;)Ljava/util/Random;	e	access$400
	m	(Lbiq;)Ljava/util/Random;	f	access$500
	m	()Z	fA	isOnBack
	m	()Z	fB	isEating
	m	()I	fH	getSneezeCounter
	m	()Lbiq$a;	fI	getMainGene
	m	()Lbiq$a;	fJ	getHiddenGene
	m	()Z	fK	isRolling
	m	()Layy$a;	fL	createAttributes
	m	()Lbiq$a;	fM	getVariant
	m	()Z	fN	isLazy
	m	()Z	fO	isWorried
	m	()Z	fP	isPlayful
	m	()Z	fQ	isBrown
	m	()Z	fR	isWeak
	m	()Z	fS	isScared
	m	()V	fT	setAttributes
	m	()Z	fU	canPerformAction
	m	()I	fV	getEatCounter
	m	()V	fW	handleEating
	m	()V	fX	addEatingParticles
	m	()V	fY	updateSitAmount
	m	()V	fZ	updateOnBackAnimation
	m	()Z	fu	isAggressive
	m	()Z	fz	isSitting
	m	(Lbiq;)Ljava/util/Random;	g	access$600
	m	(Lbuw;)Z	g	canTakeItem
	m	()V	ga	updateRollAmount
	m	()V	gb	handleRoll
	m	()V	gc	afterSneeze
	m	()Lbiq$a;	gd	getOneOfGenesRandomly
	m	()V	ge	tryToSit
	m	(Lbiq;)Ljava/util/Random;	h	access$700
	m	(Lbiq;)Ljava/util/Random;	i	access$800
	m	(Lbiq;)Ljava/util/Random;	j	access$900
	m	()V	k	tick
	m	(Lbiq;)Ljava/util/Random;	k	access$1000
	m	(Lbiq;)Ljava/util/Random;	l	access$1100
	m	(Lbuw;)Z	m	isFoodOrCake
	m	(Lbuw;)Z	n	isFood
	m	()I	q	getUnhappyCounter
	m	()Lahj;	r	getAmbientSound
	m	(I)V	s	setUnhappyCounter
	m	()Z	t	isSneezing
	m	(I)V	t	setSneezeCounter
	m	()V	u	registerGoals
	m	(I)V	u	setEatCounter
	m	(I)Z	v	getFlag
	m	(Z)V	v	sit
	m	(Z)V	w	setOnBack
	m	(Z)V	x	eat
	m	()Lahj;	x_	getDeathSound
	m	(Z)V	y	sneeze
	m	(F)F	z	getSitAmount
	m	(Laxk;)Z	z	doHurtTarget
	m	(Z)V	z	roll
	f	I	bV	TOTAL_ROLL_STEPS
	f	I	bW	rollCounter
	f	Lyb;	bY	UNHAPPY_COUNTER
	f	Lyb;	bZ	SNEEZE_COUNTER
	f	Lyb;	ca	EAT_COUNTER
	f	Lyb;	cb	MAIN_GENE_ID
	f	Lyb;	cc	HIDDEN_GENE_ID
	f	Lyb;	cd	DATA_ID_FLAGS
	f	Lbhf;	ce	BREED_TARGETING
	f	I	cf	FLAG_SNEEZE
	f	I	cg	FLAG_ROLL
	f	I	ch	FLAG_SIT
	f	I	ci	FLAG_ON_BACK
	f	I	cj	EAT_TICK_INTERVAL
	f	I	ck	TOTAL_UNHAPPY_TIME
	f	Z	cl	gotBamboo
	f	Z	cm	didBite
	f	Ldpo;	cn	rollDelta
	f	F	co	sitAmount
	f	F	cp	sitAmountO
	f	F	cq	onBackAmount
	f	F	cr	onBackAmountO
	f	F	cs	rollAmount
	f	F	ct	rollAmountO
	f	Lbiq$g;	cu	lookAtPlayerGoal
	f	Ljava/util/function/Predicate;	cv	PANDA_ITEMS
c	biq$a	net/minecraft/world/entity/animal/Panda$Gene
	m	()I	a	getId
	m	(I)Lbiq$a;	a	byId
	m	(Lbiq$a;Lbiq$a;)Lbiq$a;	a	getVariantFromGenes
	m	(Ljava/lang/String;)Lbiq$a;	a	byName
	m	(Ljava/util/Random;)Lbiq$a;	a	getRandom
	m	()Ljava/lang/String;	b	getName
	m	(I)[Lbiq$a;	b	lambda$static$0
	m	()Z	c	isRecessive
	m	()[Lbiq$a;	d	$values
	f	Lbiq$a;	a	NORMAL
	f	Lbiq$a;	b	LAZY
	f	Lbiq$a;	c	WORRIED
	f	Lbiq$a;	d	PLAYFUL
	f	Lbiq$a;	e	BROWN
	f	Lbiq$a;	f	WEAK
	f	Lbiq$a;	g	AGGRESSIVE
	f	[Lbiq$a;	h	BY_ID
	f	I	i	MAX_GENE
	f	I	j	id
	f	Ljava/lang/String;	k	name
	f	Z	l	isRecessive
	f	[Lbiq$a;	m	$VALUES
c	biq$b	net/minecraft/world/entity/animal/Panda$PandaAttackGoal
	m	()Z	a	canUse
	f	Lbiq;	b	panda
c	biq$c	net/minecraft/world/entity/animal/Panda$PandaAvoidGoal
	m	()Z	a	canUse
	f	Lbiq;	i	panda
c	biq$d	net/minecraft/world/entity/animal/Panda$PandaBreedGoal
	m	()Z	a	canUse
	m	()Z	h	canFindBamboo
	f	Lbiq;	d	panda
	f	I	e	unhappyCooldown
c	biq$e	net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal
	m	(Laya;Laxy;)V	a	alertOther
	m	()Z	b	canContinueToUse
	f	Lbiq;	a	panda
c	biq$f	net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbiq;	a	panda
	f	I	b	cooldown
c	biq$g	net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal
	m	()Z	a	canUse
	m	(Laxy;)V	a	setTarget
	m	()Z	b	canContinueToUse
	m	(Laxy;)Z	b	lambda$canUse$0
	m	()V	e	tick
	f	Lbiq;	h	panda
c	biq$h	net/minecraft/world/entity/animal/Panda$PandaMoveControl
	m	()V	a	tick
	f	Lbiq;	l	panda
c	biq$i	net/minecraft/world/entity/animal/Panda$PandaPanicGoal
	m	()Z	b	canContinueToUse
	m	()Z	h	shouldPanic
	f	Lbiq;	h	panda
c	biq$j	net/minecraft/world/entity/animal/Panda$PandaRollGoal
	m	()Z	D_	isInterruptable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbiq;	a	panda
c	biq$k	net/minecraft/world/entity/animal/Panda$PandaSitGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbiq;	a	this$0
	f	I	b	cooldown
c	biq$l	net/minecraft/world/entity/animal/Panda$PandaSneezeGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbiq;	a	panda
c	bir	net/minecraft/world/entity/animal/Parrot
	m	(Laxk;)V	A	doPush
	m	(DZLcov;Lgj;)V	a	checkFallDamage
	m	(FFLawu;)Z	a	causeFallDamage
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lawu;F)Z	a	hurt
	m	(Lbid;)Z	a	canMate
	m	(Lcav;)Lbgf;	a	createNavigation
	m	(Lcav;Laxk;)Z	a	imitateNearbyMobs
	m	(Lcav;Ljava/util/Random;)Lahj;	a	getAmbient
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lgj;Z)V	a	setRecordPlayingNearby
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	(Ljava/util/Random;)F	a	getPitch
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	aJ	onFlap
	m	()Z	aK	isFlapping
	m	()V	a_	defineSynchedData
	m	(Laxo;)Lahj;	b	getImitatedSound
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	bi	isPushable
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	c	checkParrotSpawnRules
	m	()Lahl;	cO	getSoundSource
	m	()Ldpo;	cz	getLeashOffset
	m	()F	ew	getVoicePitch
	m	()Layy$a;	fH	createAttributes
	m	()Z	fI	isPartyParrot
	m	()I	fJ	getVariant
	m	()V	fL	calculateFlapping
	m	()Z	fN	isFlying
	m	(Lbuw;)Z	n	isFood
	m	()Lahj;	r	getAmbientSound
	m	(I)V	s	setVariant
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	m	()Z	y_	isBaby
	m	(Laxk;)Z	z	doHurtTarget
	f	F	bY	flap
	f	F	bZ	flapSpeed
	f	F	ca	oFlapSpeed
	f	F	cb	oFlap
	f	Lyb;	cc	DATA_VARIANT_ID
	f	Ljava/util/function/Predicate;	cd	NOT_PARROT_PREDICATE
	f	Lbus;	ce	POISONOUS_FOOD
	f	Ljava/util/Set;	cf	TAME_FOOD
	f	I	cg	VARIANTS
	f	Ljava/util/Map;	ch	MOB_SOUND_MAP
	f	F	ci	flapping
	f	F	cj	nextFlap
	f	Z	ck	partyParrot
	f	Lgj;	cl	jukebox
c	bir$1	net/minecraft/world/entity/animal/Parrot$1
	m	(Laya;)Z	a	test
c	bir$a	net/minecraft/world/entity/animal/Parrot$ParrotWanderGoal
	m	()Ldpo;	h	getPosition
	m	()Ldpo;	k	getTreePos
c	bis	net/minecraft/world/entity/animal/Pig
	m	()Z	a	boost
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Ladw;Laxx;)V	a	thunderHit
	m	(Lahl;)V	a	equipSaddle
	m	(Ldpo;)V	a	travelWithInput
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	()V	a_	defineSynchedData
	m	()F	b	getSteeringSpeed
	m	(Ladw;Laxi;)Lbis;	b	getBreedOffspring
	m	(Laxy;)Ldpo;	b	getDismountLocationForPassenger
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	c	isSaddleable
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Laxk;	cE	getControllingPassenger
	m	()Ldpo;	cz	getLeashOffset
	m	()Z	d	isSaddled
	m	()V	ed	dropEquipment
	m	()Z	fg	canBeControlledByRider
	m	(Ldpo;)V	h	travel
	m	(Lbuw;)Z	n	isFood
	m	()Layy$a;	q	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	()V	u	registerGoals
	m	()Lahj;	x_	getDeathSound
	f	Lyb;	bV	DATA_SADDLE_ID
	f	Lyb;	bW	DATA_BOOST_TIME
	f	Lbxl;	bY	FOOD_ITEMS
	f	Laxu;	bZ	steering
c	bit	net/minecraft/world/entity/animal/PolarBear
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Layk;)Laxl;	a	getDimensions
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	()V	c	startPersistentAngerTimer
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	c	checkPolarBearSpawnRules
	m	()F	eC	getWaterSlowDown
	m	()Z	fz	isStanding
	m	()V	k	tick
	m	(Lbuw;)Z	n	isFood
	m	()Layy$a;	q	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	()V	t	playWarningSound
	m	()V	u	registerGoals
	m	(Z)V	v	setStanding
	m	()Lahj;	x_	getDeathSound
	m	(F)F	z	getStandingAnimationScale
	m	(Laxk;)Z	z	doHurtTarget
	f	Lyb;	bV	DATA_STANDING_ID
	f	F	bW	STAND_ANIMATION_TICKS
	f	F	bY	clientSideStandAnimationO
	f	F	bZ	clientSideStandAnimation
	f	I	ca	warningSoundTicks
	f	Lavs;	cb	PERSISTENT_ANGER_TIME
	f	I	cc	remainingPersistentAngerTime
	f	Ljava/util/UUID;	cd	persistentAngerTarget
c	bit$a	net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal
	m	()Z	a	canUse
	m	()D	l	getFollowDistance
	f	Lbit;	i	this$0
c	bit$b	net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal
	m	(Laya;Laxy;)V	a	alertOther
	m	()V	c	start
	f	Lbit;	a	this$0
c	bit$c	net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal
	m	(Laxy;)D	a	getAttackReachSqr
	m	(Laxy;D)V	a	checkAndPerformAttack
	m	()V	d	stop
	f	Lbit;	b	this$0
c	bit$d	net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal
	m	()Z	h	shouldPanic
	f	Lbit;	h	this$0
c	biu	net/minecraft/world/entity/animal/Pufferfish
	m	(Laya;)V	a	touch
	m	(Layk;)Laxl;	a	getDimensions
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	()V	a_	defineSynchedData
	m	()Lbuw;	b	getBucketItemStack
	m	(I)V	b	setPuffState
	m	(Laya;)Z	b	lambda$aiStep$1
	m	(Lboj;)V	b	playerTouch
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Lahj;	fA	getFlopSound
	m	()I	fB	getPuffState
	m	(Laxy;)Z	j	lambda$static$0
	m	()V	k	tick
	m	()Lahj;	r	getAmbientSound
	m	(I)F	r	getScale
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	f	I	b	STATE_SMALL
	f	I	bV	inflateCounter
	f	I	bW	deflateTimer
	f	Ljava/util/function/Predicate;	bX	SCARY_MOB
	f	Lbhf;	bY	targetingConditions
	f	I	c	STATE_MID
	f	I	d	STATE_FULL
	f	Lyb;	e	PUFF_STATE
c	biu$a	net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal
	m	()Z	a	canUse
	m	(Laxy;)Z	a	lambda$canUse$0
	m	()V	c	start
	m	()V	d	stop
	f	Lbiu;	a	fish
c	biv	net/minecraft/world/entity/animal/Rabbit
	m	()V	R	customServerAiStep
	m	(B)V	a	handleEntityEvent
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lbiv;)Z	a	access$000
	m	(Lcaw;)I	a	getRandomRabbitType
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(DD)V	b	facePoint
	m	(Ladw;Laxi;)Lbiv;	b	getBreedOffspring
	m	(Lbiv;)Z	b	access$100
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	ba	canSpawnSprintParticle
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	c	checkRabbitSpawnRules
	m	(Lbiv;)Lbcu;	c	access$200
	m	()Lahl;	cO	getSoundSource
	m	()Ldpo;	cz	getLeashOffset
	m	()V	eA	jumpFromGround
	m	()F	ey	getJumpPower
	m	()I	fA	getRabbitType
	m	()V	fB	enableJumpControl
	m	()V	fH	disableJumpControl
	m	()V	fI	setLandingDelay
	m	()V	fJ	checkLandingDelay
	m	()Z	fK	wantsMoreFood
	m	()Lahj;	fz	getJumpSound
	m	(D)V	i	setSpeedModifier
	m	(Lbuw;)Z	m	isTemptingItem
	m	(Lbuw;)Z	n	isFood
	m	()V	q	startJumping
	m	(Z)V	q	setJumping
	m	()Lahj;	r	getAmbientSound
	m	(I)V	s	setRabbitType
	m	()Layy$a;	t	createAttributes
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	m	(F)F	z	getJumpCompletion
	m	(Laxk;)Z	z	doHurtTarget
	f	D	bV	STROLL_SPEED_MOD
	f	D	bW	BREED_SPEED_MOD
	f	D	bY	FOLLOW_SPEED_MOD
	f	D	bZ	FLEE_SPEED_MOD
	f	D	ca	ATTACK_SPEED_MOD
	f	I	cb	TYPE_BROWN
	f	I	cc	TYPE_WHITE
	f	I	cd	TYPE_BLACK
	f	I	ce	TYPE_WHITE_SPLOTCHED
	f	I	cf	TYPE_GOLD
	f	I	cg	TYPE_SALT
	f	I	ch	TYPE_EVIL
	f	I	ci	EVIL_ATTACK_POWER
	f	I	cj	EVIL_ARMOR_VALUE
	f	Lyb;	ck	DATA_TYPE_ID
	f	Lyt;	cl	KILLER_BUNNY
	f	I	cm	MORE_CARROTS_DELAY
	f	I	cn	jumpTicks
	f	I	co	jumpDuration
	f	Z	cp	wasOnGround
	f	I	cq	jumpDelayTicks
	f	I	cr	moreCarrotTicks
c	biv$a	net/minecraft/world/entity/animal/Rabbit$EvilRabbitAttackGoal
	m	(Laxy;)D	a	getAttackReachSqr
c	biv$b	net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal
	m	()Z	a	canUse
	f	Lbiv;	i	rabbit
c	biv$c	net/minecraft/world/entity/animal/Rabbit$RabbitGroupData
	f	I	a	rabbitType
c	biv$d	net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl
	m	(Z)V	a	setCanJump
	m	()V	b	tick
	m	()Z	c	wantJump
	m	()Z	d	canJump
	f	Lbiv;	b	rabbit
	f	Z	c	canJump
c	biv$e	net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl
	m	()V	a	tick
	m	(DDDD)V	a	setWantedPosition
	f	Lbiv;	l	rabbit
	f	D	m	nextJumpSpeed
c	biv$f	net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal
	m	()V	e	tick
	f	Lbiv;	h	rabbit
c	biv$g	net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal
	m	()Z	a	canUse
	m	(Lcay;Lgj;)Z	a	isValidTarget
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	f	Lbiv;	g	rabbit
	f	Z	h	wantsToRaid
	f	Z	i	canRaid
c	biw	net/minecraft/world/entity/animal/Salmon
	m	()Lbuw;	b	getBucketItemStack
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Lahj;	fA	getFlopSound
	m	()I	fB	getMaxSchoolSize
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	x_	getDeathSound
c	bix	net/minecraft/world/entity/animal/Sheep
	m	(F)F	A	getHeadEatAngleScale
	m	()V	I	ate
	m	()Lyt;	N	getDefaultLootTable
	m	()V	R	customServerAiStep
	m	()Z	a	readyForShearing
	m	(B)V	a	handleEntityEvent
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lahl;)V	a	shear
	m	(Lawg;Lboj;)V	a	lambda$mobInteract$2
	m	(Lbid;Lbid;)Lbts;	a	getOffspringColor
	m	(Lbrd;Lbxg;)Lbuw;	a	lambda$getOffspringColor$3
	m	(Lbts;)[F	a	getColorArray
	m	(Lbts;Lbts;)Lbrd;	a	makeContainer
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
	m	(Ljava/util/Random;)Lbts;	a	getRandomSheepColor
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Ladw;Laxi;)Lbix;	b	getBreedOffspring
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lbts;)V	b	setColor
	m	(Lbts;Lbts;)Lbts;	b	lambda$getOffspringColor$4
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lbts;)[F	c	createSheepColor
	m	(Lbts;)Lbts;	d	lambda$static$1
	m	()Z	fz	isSheared
	m	()Layy$a;	q	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	()Lbts;	t	getColor
	m	()V	u	registerGoals
	m	(Z)V	v	setSheared
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	m	(F)F	z	getHeadEatPositionScale
	f	I	bV	EAT_ANIMATION_TICKS
	f	Lyb;	bW	DATA_WOOL_ID
	f	Ljava/util/Map;	bY	ITEM_BY_DYE
	f	Ljava/util/Map;	bZ	COLORARRAY_BY_COLOR
	f	I	ca	eatAnimationTick
	f	Lbdl;	cb	eatBlockGoal
c	bix$1	net/minecraft/world/entity/animal/Sheep$1
	m	(Lboj;)Z	a	stillValid
c	bix$2	net/minecraft/world/entity/animal/Sheep$2
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
c	biy	net/minecraft/world/entity/animal/ShoulderRidingEntity
	m	(Ladx;)Z	b	setEntityOnShoulder
	m	()Z	fK	canSitOnShoulder
	m	()V	k	tick
	f	I	bY	RIDE_COOLDOWN
	f	I	bZ	rideCooldownCounter
c	biz	net/minecraft/world/entity/animal/SnowGolem
	m	()Z	a	readyForShearing
	m	(Lahl;)V	a	shear
	m	(Lawg;Lboj;)V	a	lambda$mobInteract$1
	m	(Laxy;F)V	a	performRangedAttack
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Ldpo;	cz	getLeashOffset
	m	()Z	eE	isSensitiveToWater
	m	(Laxy;)Z	j	lambda$registerGoals$0
	m	()Layy$a;	n	createAttributes
	m	()Z	q	hasPumpkin
	m	()Lahj;	r	getAmbientSound
	m	()V	u	registerGoals
	m	(Z)V	v	setPumpkin
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	f	Lyb;	b	DATA_PUMPKIN_ID
	f	B	c	PUMPKIN_FLAG
	f	F	d	EYE_HEIGHT
c	bja	net/minecraft/world/entity/animal/Squid
	m	(B)V	a	handleEntityEvent
	m	(FFF)V	a	setMovementVector
	m	(Lawu;F)Z	a	hurt
	m	(Lbja;)Z	a	access$000
	m	(Lboj;)Z	a	canBeLeashed
	m	()Laxk$b;	aN	getMovementEmission
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()F	ev	getSoundVolume
	m	()Z	fA	hasMovementVector
	m	()Layy$a;	fz	createAttributes
	m	(Ldpo;)V	h	travel
	m	(Ldpo;)Ldpo;	j	rotateVector
	m	()Lia;	n	getInkParticle
	m	()Lahj;	q	getSquirtSound
	m	()Lahj;	r	getAmbientSound
	m	()V	t	spawnInk
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	f	F	b	xBodyRot
	f	F	bV	tentacleMovement
	f	F	bW	oldTentacleMovement
	f	F	bX	tentacleAngle
	f	F	bY	oldTentacleAngle
	f	F	bZ	speed
	f	F	c	xBodyRotO
	f	F	ca	tentacleSpeed
	f	F	cb	rotateSpeed
	f	F	cc	tx
	f	F	cd	ty
	f	F	ce	tz
	f	F	d	zBodyRot
	f	F	e	zBodyRotO
c	bja$a	net/minecraft/world/entity/animal/Squid$SquidFleeGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbja;	a	this$0
	f	F	b	SQUID_FLEE_SPEED
	f	F	c	SQUID_FLEE_MIN_DISTANCE
	f	F	d	SQUID_FLEE_MAX_DISTANCE
	f	I	e	fleeTicks
c	bja$b	net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbja;	a	this$0
	f	Lbja;	b	squid
c	bjb	net/minecraft/world/entity/animal/TropicalFish
	m	(Lbjb$a;Lbts;Lbts;)I	a	calculateVariant
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	()Lbuw;	b	getBucketItemStack
	m	(I)Ljava/lang/String;	b	getPredefinedName
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	b	checkTropicalFishSpawnRules
	m	(Lok;)V	b	addAdditionalSaveData
	m	(I)Z	c	isMaxGroupSizeReached
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Lahj;	fA	getFlopSound
	m	()I	fI	getVariant
	m	()[F	fJ	getBaseColor
	m	()[F	fK	getPatternColor
	m	()I	fL	getBaseVariant
	m	()Lyt;	fM	getPatternTextureLocation
	m	()Lyt;	fN	getBaseTextureLocation
	m	(Lbuw;)V	m	saveToBucketTag
	m	()Lahj;	r	getAmbientSound
	m	(I)Lbts;	r	getBaseColor
	m	(I)Lbts;	s	getPatternColor
	m	(I)Ljava/lang/String;	t	getFishTypeName
	m	(I)V	u	setVariant
	m	(I)I	v	getBaseVariant
	m	(I)I	w	getBaseColorIdx
	m	(I)I	x	getPatternColorIdx
	m	()Lahj;	x_	getDeathSound
	m	(I)I	y	getPatternVariant
	f	Ljava/lang/String;	b	BUCKET_VARIANT_TAG
	f	Lyb;	bV	DATA_ID_TYPE_VARIANT
	f	I	bW	BASES
	f	[Lyt;	bX	BASE_TEXTURE_LOCATIONS
	f	[Lyt;	bY	PATTERN_A_TEXTURE_LOCATIONS
	f	[Lyt;	bZ	PATTERN_B_TEXTURE_LOCATIONS
	f	I	c	BASE_SMALL
	f	I	ca	PATTERNS
	f	I	cb	COLORS
	f	Z	cc	isSchool
	f	I	d	BASE_LARGE
	f	[I	e	COMMON_VARIANTS
c	bjb$a	net/minecraft/world/entity/animal/TropicalFish$Pattern
	m	()I	a	getBase
	m	(II)Ljava/lang/String;	a	getPatternName
	m	()I	b	getIndex
	m	()Ljava/lang/String;	c	getName
	m	()[Lbjb$a;	d	$values
	f	Lbjb$a;	a	KOB
	f	Lbjb$a;	b	SUNSTREAK
	f	Lbjb$a;	c	SNOOPER
	f	Lbjb$a;	d	DASHER
	f	Lbjb$a;	e	BRINELY
	f	Lbjb$a;	f	SPOTTY
	f	Lbjb$a;	g	FLOPPER
	f	Lbjb$a;	h	STRIPEY
	f	Lbjb$a;	i	GLITTER
	f	Lbjb$a;	j	BLOCKFISH
	f	Lbjb$a;	k	BETTY
	f	Lbjb$a;	l	CLAYFISH
	f	I	m	base
	f	I	n	index
	f	[Lbjb$a;	o	VALUES
	f	[Lbjb$a;	p	$VALUES
c	bjb$b	net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData
	f	I	b	base
	f	I	c	pattern
	f	I	d	baseColor
	f	I	e	patternColor
c	bjc	net/minecraft/world/entity/animal/Turtle
	m	()I	J	getAmbientSoundInterval
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Ladw;Laxx;)V	a	thunderHit
	m	(Lbjc;)Ljava/util/Random;	a	access$000
	m	(Lboj;)Z	a	canBeLeashed
	m	(Lcav;)Lbgf;	a	createNavigation
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lgj;Lcay;)F	a	getWalkTargetValue
	m	(Lok;)V	a	readAdditionalSaveData
	m	()F	aE	nextStep
	m	()Lahj;	aF	getSwimSound
	m	()V	a_	defineSynchedData
	m	(Lbjc;)Ljava/util/Random;	b	access$100
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	c	checkTurtleSpawnRules
	m	(Lbjc;)Z	c	access$200
	m	()Z	cp	isPushedByFluid
	m	(F)V	d	playSwimSound
	m	()F	dF	getScale
	m	()Z	dx	canBreatheUnderwater
	m	()Layd;	er	getMobType
	m	()Lgj;	fA	getHomePos
	m	()Lgj;	fB	getTravelPos
	m	()Z	fC	canFallInLove
	m	()Z	fH	isGoingHome
	m	()Z	fI	isTravelling
	m	()Layy$a;	fz	createAttributes
	m	(Lgj;)V	g	setHomePos
	m	(Ldpo;)V	h	travel
	m	(Lgj;)V	h	setTravelPos
	m	(Laxy;)Z	j	lambda$static$0
	m	()V	n	ageBoundaryReached
	m	(Lbuw;)Z	n	isFood
	m	()Z	q	hasEgg
	m	()Lahj;	r	getAmbientSound
	m	()Z	t	isLayingEgg
	m	()V	u	registerGoals
	m	(Z)V	v	setHasEgg
	m	(Z)V	w	setLayingEgg
	m	()V	w_	aiStep
	m	(Z)V	x	setGoingHome
	m	()Lahj;	x_	getDeathSound
	m	(Z)V	y	setTravelling
	f	Lbxl;	bV	FOOD_ITEMS
	f	Ljava/util/function/Predicate;	bW	BABY_ON_LAND_SELECTOR
	f	Lyb;	bY	HOME_POS
	f	Lyb;	bZ	HAS_EGG
	f	Lyb;	ca	LAYING_EGG
	f	Lyb;	cb	TRAVEL_POS
	f	Lyb;	cc	GOING_HOME
	f	Lyb;	cd	TRAVELLING
	f	I	ce	layEggCounter
c	bjc$a	net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal
	m	()Z	a	canUse
	m	()V	g	breed
	f	Lbjc;	d	turtle
c	bjc$b	net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbjc;	a	turtle
	f	D	b	speedModifier
	f	Z	c	stuck
	f	I	d	closeToHomeTryTicks
	f	I	e	GIVE_UP_TICKS
c	bjc$c	net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal
	m	()Z	a	canUse
	m	(Lcay;Lgj;)Z	a	isValidTarget
	m	()Z	b	canContinueToUse
	m	()Z	l	shouldRecalculatePath
	f	I	g	GIVE_UP_TICKS
	f	Lbjc;	h	turtle
c	bjc$d	net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal
	m	()Z	a	canUse
	m	(Lcay;Lgj;)Z	a	isValidTarget
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	f	Lbjc;	g	turtle
c	bjc$e	net/minecraft/world/entity/animal/Turtle$TurtleMoveControl
	m	()V	a	tick
	m	()V	g	updateSpeed
	f	Lbjc;	l	turtle
c	bjc$f	net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal
	m	()Z	a	canUse
c	bjc$g	net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation
	m	()Z	a	canUpdatePath
	m	(I)Ldjp;	a	createPathFinder
	m	(Lgj;)Z	a	isStableDestination
c	bjc$h	net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal
	m	()Z	a	canUse
	f	Lbjc;	i	turtle
c	bjc$i	net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbjc;	a	turtle
	f	D	b	speedModifier
	f	Z	c	stuck
c	bjd	net/minecraft/world/entity/animal/WaterAnimal
	m	()I	J	getAmbientSoundInterval
	m	(I)V	a	handleAirSupply
	m	(Lboj;)Z	a	canBeLeashed
	m	(Lcay;)Z	a	checkSpawnObstruction
	m	()V	an	baseTick
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	c	checkSurfaceWaterAnimalSpawnRules
	m	()Z	cp	isPushedByFluid
	m	(Lboj;)I	d	getExperienceReward
	m	()Z	dx	canBreatheUnderwater
	m	()Layd;	er	getMobType
c	bje	net/minecraft/world/entity/animal/Wolf
	m	(F)F	A	getHeadRollAngle
	m	()I	T	getMaxHeadXRot
	m	()I	a	getRemainingPersistentAngerTime
	m	(B)V	a	handleEntityEvent
	m	(I)V	a	setRemainingPersistentAngerTime
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lawu;)V	a	die
	m	(Lawu;F)Z	a	hurt
	m	(Laxy;Laxy;)Z	a	wantsToAttack
	m	(Lbid;)Z	a	canMate
	m	(Lbje;)Ljava/util/Random;	a	access$000
	m	(Lboj;)Z	a	canBeLeashed
	m	(Lbts;)V	a	setCollarColor
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Ladw;Laxi;)Lbje;	b	getBreedOffspring
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	()V	c	startPersistentAngerTimer
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	c	checkWolfSpawnRules
	m	()Ldpo;	cz	getLeashOffset
	m	()F	ev	getSoundVolume
	m	(FF)F	f	getBodyRollAngle
	m	()Layy$a;	fH	createAttributes
	m	()Z	fI	isWet
	m	()F	fJ	getTailAngle
	m	()Lbts;	fK	getCollarColor
	m	()Z	fL	isInterested
	m	()V	fM	cancelShake
	m	()I	ff	getMaxSpawnClusterSize
	m	()V	k	tick
	m	(Laxy;)Z	k	lambda$static$0
	m	(Lbuw;)Z	n	isFood
	m	()Lahj;	r	getAmbientSound
	m	()V	u	registerGoals
	m	(Z)V	w	setTame
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	m	(F)F	z	getWetShade
	m	(Laxk;)Z	z	doHurtTarget
	m	(Z)V	z	setIsInterested
	f	Ljava/util/function/Predicate;	bY	PREY_SELECTOR
	f	Lyb;	bZ	DATA_INTERESTED_ID
	f	Lyb;	ca	DATA_COLLAR_COLOR
	f	Lyb;	cb	DATA_REMAINING_ANGER_TIME
	f	F	cc	START_HEALTH
	f	F	cd	TAME_HEALTH
	f	F	ce	interestedAngle
	f	F	cf	interestedAngleO
	f	Z	cg	isWet
	f	Z	ch	isShaking
	f	F	ci	shakeAnim
	f	F	cj	shakeAnimO
	f	Lavs;	ck	PERSISTENT_ANGER_TIME
	f	Ljava/util/UUID;	cl	persistentAngerTarget
c	bje$a	net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal
	m	()Z	a	canUse
	m	(Lbjr;)Z	a	avoidLlama
	m	()V	c	start
	m	()V	e	tick
	f	Lbje;	i	this$0
	f	Lbje;	j	wolf
c	bje$b	net/minecraft/world/entity/animal/Wolf$WolfPanicGoal
	m	()Z	h	shouldPanic
	f	Lbje;	h	this$0
c	bjf	net/minecraft/world/entity/animal/axolotl/Axolotl
	m	()V	K	playAmbientSound
	m	()Z	O	requiresCustomPersistence
	m	()V	Q	sendDebugPackets
	m	()V	R	customServerAiStep
	m	()I	T	getMaxHeadXRot
	m	()I	U	getMaxHeadYRot
	m	()Ljava/util/Map;	a	getModelRotationValues
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lawu;F)Z	a	hurt
	m	(Laxo;Lcbk;Layc;Lgj;Ljava/util/Random;)Z	a	checkAxolotlSpawnRules
	m	(Lbjf$e;)V	a	setVariant
	m	(Lbjf;)V	a	onStopAttacking
	m	(Lboj;)Z	a	canBeLeashed
	m	(Lboj;Lawg;Lbuw;)V	a	usePlayerItem
	m	(Lcav;)Lbgf;	a	createNavigation
	m	(Lcay;)Z	a	checkSpawnObstruction
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lcom/mojang/serialization/Dynamic;)Layt;	a	makeBrain
	m	(Lgj;Lcay;)F	a	getWalkTargetValue
	m	(Ljava/util/Random;)Z	a	useRareVariant
	m	(Lok;)V	a	readAdditionalSaveData
	m	()Lahj;	aF	getSwimSound
	m	()Lahj;	aG	getSwimSplashSound
	m	()V	a_	defineSynchedData
	m	()V	an	baseTick
	m	()Lbuw;	b	getBucketItemStack
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lok;)V	b	addAdditionalSaveData
	m	()I	bX	getMaxAirSupply
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lok;)V	c	loadFromBucketTag
	m	()Z	cp	isPushedByFluid
	m	()Z	dT	canBeSeenAsEnemy
	m	()Layt;	du	getBrain
	m	()Layt$b;	dv	brainProvider
	m	()Z	dx	canBreatheUnderwater
	m	()Layd;	er	getMobType
	m	(Lboj;)V	f	applySupportingEffects
	m	()Lbjf$e;	fA	getVariant
	m	()Z	fB	isPlayingDead
	m	()Layy$a;	fH	createAttributes
	m	()V	fz	rehydrate
	m	(D)Z	h	removeWhenFarAway
	m	(Ldpo;)V	h	travel
	m	(Laxy;)D	i	getMeleeAttackRangeSqr
	m	(Lbuw;)V	m	saveToBucketTag
	m	(Lbuw;)Z	n	isFood
	m	()Z	q	fromBucket
	m	()Lahj;	r	getAmbientSound
	m	(I)V	s	handleAirSupply
	m	()Lahj;	t	getPickupSound
	m	(Z)V	v	setFromBucket
	m	(Z)V	w	setPlayingDead
	m	()Lahj;	x_	getDeathSound
	m	(Laxk;)Z	z	doHurtTarget
	f	I	bV	TOTAL_PLAYDEAD_TIME
	f	Lcom/google/common/collect/ImmutableList;	bW	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bY	MEMORY_TYPES
	f	D	bZ	PLAYER_REGEN_DETECTION_RANGE
	f	I	ca	RARE_VARIANT_CHANCE
	f	Ljava/lang/String;	cb	VARIANT_TAG
	f	Lorg/slf4j/Logger;	cc	LOGGER
	f	Lyb;	cd	DATA_VARIANT
	f	Lyb;	ce	DATA_PLAYING_DEAD
	f	Lyb;	cf	FROM_BUCKET
	f	I	cg	AXOLOTL_TOTAL_AIR_SUPPLY
	f	I	ch	REHYDRATE_AIR_SUPPLY
	f	I	ci	REGEN_BUFF_MAX_DURATION
	f	Ljava/util/Map;	cj	modelRotationValues
	f	I	ck	REGEN_BUFF_BASE_DURATION
c	bjf$a	net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlGroupData
	m	(Ljava/util/Random;)Lbjf$e;	a	getVariant
	f	[Lbjf$e;	a	types
c	bjf$b	net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlLookControl
	m	()V	a	tick
	f	Lbjf;	h	this$0
c	bjf$c	net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlMoveControl
	m	()V	a	tick
	f	Lbjf;	l	axolotl
c	bjf$d	net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlPathNavigation
	m	()Z	a	canUpdatePath
	m	(I)Ldjp;	a	createPathFinder
	m	(Lgj;)Z	a	isStableDestination
c	bjf$e	net/minecraft/world/entity/animal/axolotl/Axolotl$Variant
	m	()I	a	getId
	m	(I)[Lbjf$e;	a	lambda$getSpawnVariant$2
	m	(Ljava/util/Random;)Lbjf$e;	a	getCommonSpawnVariant
	m	(Ljava/util/Random;Z)Lbjf$e;	a	getSpawnVariant
	m	(ZLbjf$e;)Z	a	lambda$getSpawnVariant$1
	m	()Ljava/lang/String;	b	getName
	m	(I)[Lbjf$e;	b	lambda$static$0
	m	(Ljava/util/Random;)Lbjf$e;	b	getRareSpawnVariant
	m	()[Lbjf$e;	c	$values
	f	Lbjf$e;	a	LUCY
	f	Lbjf$e;	b	WILD
	f	Lbjf$e;	c	GOLD
	f	Lbjf$e;	d	CYAN
	f	Lbjf$e;	e	BLUE
	f	[Lbjf$e;	f	BY_ID
	f	I	g	id
	f	Ljava/lang/String;	h	name
	f	Z	i	common
	f	[Lbjf$e;	j	$VALUES
c	bjg	net/minecraft/world/entity/animal/axolotl/AxolotlAi
	m	()Lbxl;	a	getTemptations
	m	(Laxy;)Z	a	canSetWalkTargetFromLookTarget
	m	(Layt;)Layt;	a	makeBrain
	m	(Lbjf;)V	a	updateActivity
	m	(Laxy;)F	b	getSpeedModifierChasing
	m	(Layt;)V	b	initPlayDeadActivity
	m	(Lbjf;)Ljava/util/Optional;	b	findNearestValidAttackTarget
	m	(Laxy;)F	c	getSpeedModifierFollowingAdult
	m	(Layt;)V	c	initFightActivity
	m	(Lbjf;)Z	c	isBreeding
	m	(Laxy;)F	d	getSpeedModifier
	m	(Layt;)V	d	initCoreActivity
	m	(Layt;)V	e	initIdleActivity
	f	Lavs;	a	ADULT_FOLLOW_RANGE
	f	F	b	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	c	SPEED_MULTIPLIER_ON_LAND
	f	F	d	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	f	F	e	SPEED_MULTIPLIER_WHEN_CHASING_IN_WATER
	f	F	f	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT_IN_WATER
c	bjh	net/minecraft/world/entity/animal/axolotl/PlayDead
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbjf;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbjf;J)Z	a	canStillUse
	m	(Ladw;Laxy;J)Z	b	canStillUse
	m	(Ladw;Lbjf;J)V	b	start
c	bji	net/minecraft/world/entity/animal/axolotl/ValidatePlayDead
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbjf;J)V	a	start
c	bjj	net/minecraft/world/entity/animal/axolotl/package-info
c	bjk	net/minecraft/world/entity/animal/goat/Goat
	m	()V	Q	sendDebugPackets
	m	()V	R	customServerAiStep
	m	()I	U	getMaxHeadYRot
	m	(B)V	a	handleEntityEvent
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Layk;)Laxl;	a	getDimensions
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lcom/mojang/serialization/Dynamic;)Layt;	a	makeBrain
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Ladw;Laxi;)Lbjk;	b	getBreedOffspring
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	c	checkGoatSpawnRules
	m	(FF)I	d	calculateFallDamage
	m	()Layt;	du	getBrain
	m	()Layt$b;	dv	brainProvider
	m	(Lbuw;)Lahj;	e	getEatingSound
	m	()F	fA	getRammingXHeadRot
	m	()Z	fz	isScreamingGoat
	m	(F)V	l	setYHeadRot
	m	()V	n	ageBoundaryReached
	m	()Layy$a;	q	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	t	getMilkingSound
	m	(Z)V	v	setScreamingGoat
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	f	Laxl;	bV	LONG_JUMPING_DIMENSIONS
	f	Lcom/google/common/collect/ImmutableList;	bW	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bY	MEMORY_TYPES
	f	I	bZ	GOAT_FALL_DAMAGE_REDUCTION
	f	D	ca	GOAT_SCREAMING_CHANCE
	f	I	cb	ADULT_ATTACK_DAMAGE
	f	I	cc	BABY_ATTACK_DAMAGE
	f	Lyb;	cd	DATA_IS_SCREAMING_GOAT
	f	Z	ce	isLoweringHead
	f	I	cf	lowerHeadTick
c	bjl	net/minecraft/world/entity/animal/goat/GoatAi
	m	()Lbxl;	a	getTemptations
	m	(Laxy;)Ljava/lang/Float;	a	lambda$initIdleActivity$1
	m	(Layt;)Layt;	a	makeBrain
	m	(Lbjk;)V	a	initMemories
	m	(Laxy;)Z	b	lambda$static$0
	m	(Layt;)V	b	initCoreActivity
	m	(Lbjk;)V	b	updateActivity
	m	(Layt;)V	c	initIdleActivity
	m	(Lbjk;)Lahj;	c	lambda$initRamActivity$7
	m	(Layt;)V	d	initLongJumpActivity
	m	(Lbjk;)I	d	lambda$initRamActivity$6
	m	(Layt;)V	e	initRamActivity
	m	(Lbjk;)Lahj;	e	lambda$initRamActivity$5
	m	(Lbjk;)D	f	lambda$initRamActivity$4
	m	(Lbjk;)Lavs;	g	lambda$initRamActivity$3
	m	(Lbjk;)Lahj;	h	lambda$initLongJumpActivity$2
	f	I	a	RAM_PREPARE_TIME
	f	I	b	RAM_MAX_DISTANCE
	f	I	c	MAX_LONG_JUMP_HEIGHT
	f	I	d	MAX_LONG_JUMP_WIDTH
	f	F	e	MAX_JUMP_VELOCITY
	f	I	f	RAM_MIN_DISTANCE
	f	F	g	ADULT_RAM_KNOCKBACK_FORCE
	f	F	h	BABY_RAM_KNOCKBACK_FORCE
	f	Lavs;	i	ADULT_FOLLOW_RANGE
	f	F	j	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	k	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	l	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	f	F	m	SPEED_MULTIPLIER_WHEN_TEMPTED
	f	F	n	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	o	SPEED_MULTIPLIER_WHEN_PREPARING_TO_RAM
	f	Lavs;	p	TIME_BETWEEN_LONG_JUMPS
	f	Lavs;	q	TIME_BETWEEN_RAMS
	f	Lavs;	r	TIME_BETWEEN_RAMS_SCREAMER
	f	Lbhf;	s	RAM_TARGET_CONDITIONS
	f	F	t	SPEED_MULTIPLIER_WHEN_RAMMING
c	bjm	net/minecraft/world/entity/animal/goat/package-info
c	bjn	net/minecraft/world/entity/animal/horse/AbstractChestedHorse
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lok;)V	b	addAdditionalSaveData
	m	()D	bq	getPassengersRidingOffset
	m	()V	ed	dropEquipment
	m	()I	fA	getInventorySize
	m	()V	fB	playChestEquipsSound
	m	()I	fH	getInventoryColumns
	m	()Z	fz	hasChest
	m	(I)Layp;	k	getSlot
	m	()V	q	randomizeAttributes
	m	()Layy$a;	t	createBaseChestedHorseAttributes
	m	(Z)V	v	setChest
	f	I	bV	INV_CHEST_COUNT
	f	Lyb;	cl	DATA_ID_CHEST
c	bjn$1	net/minecraft/world/entity/animal/horse/AbstractChestedHorse$1
	m	()Lbuw;	a	get
	m	(Lbuw;)Z	a	set
	f	Lbjn;	b	this$0
c	bjo	net/minecraft/world/entity/animal/horse/AbstractHorse
	m	(F)F	A	getStandAnim
	m	(Z)V	A	setStanding
	m	(F)F	B	getMouthAnim
	m	(Z)V	B	spawnTamingParticles
	m	()I	J	getAmbientSoundInterval
	m	()Z	a	canJump
	m	(B)V	a	handleEntityEvent
	m	(FFLawu;)Z	a	causeFallDamage
	m	(I)V	a	onPlayerJump
	m	(ILjava/util/function/Predicate;)Layp;	a	createEquipmentSlotAccess
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lahl;)V	a	equipSaddle
	m	(Lawa;)V	a	containerChanged
	m	(Laxi;Lbjo;)V	a	setOffspringAttributes
	m	(Lbid;)Z	a	canMate
	m	(Lboj;Lbuw;)Lawh;	a	fedFood
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lckg;)V	a	playGallopSound
	m	(Ldpo;Laxy;)Ldpo;	a	getDismountLocationInDirection
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	()V	b	handleStopJump
	m	(I)V	b	handleStartJump
	m	(Lawa;)Z	b	hasInventoryChanged
	m	(Laxy;)Ldpo;	b	getDismountLocationForPassenger
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lboj;Lbuw;)Z	b	handleEating
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Ljava/util/UUID;)V	b	setOwnerUUID
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	b_	onClimbable
	m	()Z	bi	isPushable
	m	()Z	c	isSaddleable
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Laxk;	cE	getControllingPassenger
	m	()Z	d	isSaddled
	m	(FF)I	d	calculateFallDamage
	m	(IZ)V	d	setFlag
	m	()V	ed	dropEquipment
	m	()F	ev	getSoundVolume
	m	()Z	ex	isImmobile
	m	(Lboj;)V	f	openInventory
	m	()I	fA	getInventorySize
	m	()V	fB	openMouth
	m	()V	fH	stand
	m	()V	fI	addBehaviourGoals
	m	()Z	fJ	isTamed
	m	()Ljava/util/UUID;	fK	getOwnerUUID
	m	()Z	fL	isJumping
	m	()Z	fM	isEating
	m	()Z	fN	isStanding
	m	()Z	fO	isBred
	m	()I	fP	getTemper
	m	()V	fQ	createInventory
	m	()V	fR	updateContainerEquipment
	m	()D	fS	getCustomJump
	m	()Lahj;	fT	getEatingSound
	m	()Lahj;	fU	getAngrySound
	m	()Layy$a;	fV	createBaseHorseAttributes
	m	()I	fW	getMaxTemper
	m	()V	fX	followMommy
	m	()Z	fY	canEatGrass
	m	()V	fZ	makeMad
	m	()I	ff	getMaxSpawnClusterSize
	m	()Z	fg	canBeControlledByRider
	m	()V	fz	moveTail
	m	()V	ga	playJumpSound
	m	()Z	gb	canParent
	m	()F	gc	generateRandomMaxHealth
	m	()D	gd	generateRandomJumpStrength
	m	()D	ge	generateRandomSpeed
	m	()Z	gf	canWearArmor
	m	()Z	gg	isWearingArmor
	m	(Lboj;)V	h	doPlayerRide
	m	(Ldpo;)V	h	travel
	m	(Laxk;)V	i	positionRider
	m	(Lboj;)Z	i	tameWithName
	m	(Laxy;)Z	j	lambda$static$0
	m	()V	k	tick
	m	(I)Layp;	k	getSlot
	m	(Lbuw;)Z	m	isArmor
	m	(Lbuw;)Z	n	isFood
	m	(Lbuw;)Z	o	lambda$getSlot$2
	m	(Lbuw;)Z	p	lambda$getSlot$1
	m	()V	q	randomizeAttributes
	m	()Lahj;	r	getAmbientSound
	m	(I)Z	s	getFlag
	m	()V	t	eating
	m	(I)V	t	setTemper
	m	()V	u	registerGoals
	m	(I)I	u	modifyTemper
	m	(Z)V	w	setTamed
	m	()V	w_	aiStep
	m	(Z)V	x	setIsJumping
	m	()Lahj;	x_	getDeathSound
	m	(F)V	y	onLeashDistance
	m	(Z)V	y	setBred
	m	(F)F	z	getEatAnim
	m	(Z)V	z	setEating
	f	Ljava/util/function/Predicate;	bV	PARENT_HORSE_SELECTOR
	f	I	bW	EQUIPMENT_SLOT_OFFSET
	f	I	bY	CHEST_SLOT_OFFSET
	f	I	bZ	INVENTORY_SLOT_OFFSET
	f	F	cA	eatAnimO
	f	F	cB	standAnim
	f	F	cC	standAnimO
	f	F	cD	mouthAnim
	f	F	cE	mouthAnimO
	f	I	ca	INV_SLOT_SADDLE
	f	I	cb	INV_SLOT_ARMOR
	f	I	cc	INV_BASE_COUNT
	f	I	cd	tailCounter
	f	I	ce	sprintCounter
	f	Z	cf	isJumping
	f	Lawm;	cg	inventory
	f	I	ch	temper
	f	F	ci	playerJumpPendingScale
	f	Z	cj	canGallop
	f	I	ck	gallopSoundCounter
	f	Lbhf;	cl	MOMMY_TARGETING
	f	Lbxl;	cm	FOOD_ITEMS
	f	Lyb;	cn	DATA_ID_FLAGS
	f	Lyb;	co	DATA_ID_OWNER_UUID
	f	I	cp	FLAG_TAME
	f	I	cq	FLAG_SADDLE
	f	I	cr	FLAG_BRED
	f	I	cs	FLAG_EATING
	f	I	ct	FLAG_STANDING
	f	I	cu	FLAG_OPEN_MOUTH
	f	I	cv	eatingCounter
	f	I	cw	mouthCounter
	f	I	cx	standCounter
	f	Z	cy	allowStandSliding
	f	F	cz	eatAnim
c	bjo$1	net/minecraft/world/entity/animal/horse/AbstractHorse$1
	m	()Lbuw;	a	get
	m	(Lbuw;)Z	a	set
	f	I	b	val$slot
	f	Ljava/util/function/Predicate;	c	val$check
	f	Lbjo;	d	this$0
c	bjp	net/minecraft/world/entity/animal/horse/Donkey
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lbid;)Z	a	canMate
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Lahj;	fT	getEatingSound
	m	()Lahj;	fU	getAngrySound
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	x_	getDeathSound
c	bjq	net/minecraft/world/entity/animal/horse/Horse
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lawa;)V	a	containerChanged
	m	(Lbid;)Z	a	canMate
	m	(Lbjx;Lbjs;)V	a	setVariantAndMarkings
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lckg;)V	a	playGallopSound
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Lbjs;	fB	getMarkings
	m	()I	fH	getTypeVariant
	m	()V	fR	updateContainerEquipment
	m	()Lahj;	fT	getEatingSound
	m	()Lahj;	fU	getAngrySound
	m	()Lbjx;	fz	getVariant
	m	()Z	gf	canWearArmor
	m	(Lbuw;)Z	m	isArmor
	m	(Lbuw;)V	o	setArmor
	m	(Lbuw;)V	p	setArmorEquipment
	m	()V	q	randomizeAttributes
	m	()Lahj;	r	getAmbientSound
	m	()Lbuw;	t	getArmor
	m	(I)V	v	setTypeVariant
	m	()Lahj;	x_	getDeathSound
	f	Ljava/util/UUID;	bV	ARMOR_MODIFIER_UUID
	f	Lyb;	cl	DATA_ID_TYPE_VARIANT
c	bjq$a	net/minecraft/world/entity/animal/horse/Horse$HorseGroupData
	f	Lbjx;	a	variant
c	bjr	net/minecraft/world/entity/animal/horse/Llama
	m	(Z)V	C	setDidSpit
	m	(FFLawu;)Z	a	causeFallDamage
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lawa;)V	a	containerChanged
	m	(Laxy;F)V	a	performRangedAttack
	m	(Lbid;)Z	a	canMate
	m	(Lbjr;)V	a	joinCaravan
	m	(Lbts;)V	a	setSwag
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Ladw;Laxi;)Lbjr;	b	getBreedOffspring
	m	(Lboj;Lbuw;)Z	b	handleEating
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	()D	bq	getPassengersRidingOffset
	m	()Z	c	isSaddleable
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Ldpo;	cz	getLeashOffset
	m	()Z	ex	isImmobile
	m	()I	fA	getInventorySize
	m	()V	fB	playChestEquipsSound
	m	()I	fH	getInventoryColumns
	m	()V	fR	updateContainerEquipment
	m	()Lahj;	fT	getEatingSound
	m	()Lahj;	fU	getAngrySound
	m	()I	fW	getMaxTemper
	m	()V	fX	followMommy
	m	()Z	fY	canEatGrass
	m	()V	fZ	makeMad
	m	()Z	fg	canBeControlledByRider
	m	()D	fy	followLeashSpeed
	m	()Z	gf	canWearArmor
	m	()Z	gg	isWearingArmor
	m	()Z	gh	isTraderLlama
	m	()I	gi	getStrength
	m	()Layy$a;	gj	createAttributes
	m	()I	gk	getVariant
	m	()Lbts;	gl	getSwag
	m	()Lbjr;	gm	makeBabyLlama
	m	()V	gn	leaveCaravan
	m	()Z	go	hasCaravanTail
	m	()Z	gp	inCaravan
	m	()Lbjr;	gq	getCaravanHead
	m	()V	gr	setRandomStrength
	m	(Laxk;)V	i	positionRider
	m	(Laxy;)V	j	spit
	m	(Lbuw;)Z	m	isArmor
	m	(Lbuw;)Z	n	isFood
	m	(Lbuw;)Lbts;	o	getDyeColor
	m	()Lahj;	r	getAmbientSound
	m	()V	u	registerGoals
	m	(I)V	v	setVariant
	m	(I)V	w	setStrength
	m	()Lahj;	x_	getDeathSound
	f	I	cl	MAX_STRENGTH
	f	I	cm	VARIANTS
	f	Lbxl;	cn	FOOD_ITEMS
	f	Lyb;	co	DATA_STRENGTH_ID
	f	Lyb;	cp	DATA_SWAG_ID
	f	Lyb;	cq	DATA_VARIANT_ID
	f	Z	cr	didSpit
	f	Lbjr;	cs	caravanHead
	f	Lbjr;	ct	caravanTail
c	bjr$a	net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal
	m	(Laxy;)Z	b	lambda$new$0
	m	()D	l	getFollowDistance
c	bjr$b	net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData
	f	I	a	variant
c	bjr$c	net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal
	m	()Z	b	canContinueToUse
c	bjs	net/minecraft/world/entity/animal/horse/Markings
	m	()I	a	getId
	m	(I)Lbjs;	a	byId
	m	()[Lbjs;	b	$values
	m	(I)[Lbjs;	b	lambda$static$0
	f	Lbjs;	a	NONE
	f	Lbjs;	b	WHITE
	f	Lbjs;	c	WHITE_FIELD
	f	Lbjs;	d	WHITE_DOTS
	f	Lbjs;	e	BLACK_DOTS
	f	[Lbjs;	f	BY_ID
	f	I	g	id
	f	[Lbjs;	h	$VALUES
c	bjt	net/minecraft/world/entity/animal/horse/Mule
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()V	fB	playChestEquipsSound
	m	()Lahj;	fT	getEatingSound
	m	()Lahj;	fU	getAngrySound
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	x_	getDeathSound
c	bju	net/minecraft/world/entity/animal/horse/SkeletonHorse
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lok;)V	a	readAdditionalSaveData
	m	()Lahj;	aF	getSwimSound
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	bH	rideableUnderWater
	m	()D	bq	getPassengersRidingOffset
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(F)V	d	playSwimSound
	m	()F	eC	getWaterSlowDown
	m	()Layd;	er	getMobType
	m	()V	fI	addBehaviourGoals
	m	()Z	fz	isTrap
	m	()V	ga	playJumpSound
	m	()V	q	randomizeAttributes
	m	()Lahj;	r	getAmbientSound
	m	()Layy$a;	t	createAttributes
	m	(Z)V	v	setTrap
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	f	Lbjv;	bV	skeletonTrapGoal
	f	I	cl	TRAP_MAX_LIFE
	f	Z	cm	isTrap
	f	I	cn	trapTime
c	bjv	net/minecraft/world/entity/animal/horse/SkeletonTrapGoal
	m	()Z	a	canUse
	m	(Lawf;)Lbjo;	a	createHorse
	m	(Lawf;Lbjo;)Lbml;	a	createSkeleton
	m	(Lbuw;)Lbuw;	a	disenchant
	m	()V	e	tick
	f	Lbju;	a	horse
c	bjw	net/minecraft/world/entity/animal/horse/TraderLlama
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	gh	isTraderLlama
	m	()Lbjr;	gm	makeBabyLlama
	m	()V	gr	maybeDespawn
	m	()Z	gs	canDespawn
	m	()Z	gt	isLeashedToWanderingTrader
	m	()Z	gu	isLeashedToSomethingOtherThanTheWanderingTrader
	m	(Lboj;)V	h	doPlayerRide
	m	()V	u	registerGoals
	m	(I)V	w	setDespawnDelay
	m	()V	w_	aiStep
	f	I	cl	despawnDelay
c	bjw$a	net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbjr;	a	llama
	f	Laxy;	b	ownerLastHurtBy
	f	I	c	timestamp
c	bjx	net/minecraft/world/entity/animal/horse/Variant
	m	()I	a	getId
	m	(I)Lbjx;	a	byId
	m	()[Lbjx;	b	$values
	m	(I)[Lbjx;	b	lambda$static$0
	f	Lbjx;	a	WHITE
	f	Lbjx;	b	CREAMY
	f	Lbjx;	c	CHESTNUT
	f	Lbjx;	d	BROWN
	f	Lbjx;	e	BLACK
	f	Lbjx;	f	GRAY
	f	Lbjx;	g	DARKBROWN
	f	[Lbjx;	h	BY_ID
	f	I	i	id
	f	[Lbjx;	j	$VALUES
c	bjy	net/minecraft/world/entity/animal/horse/ZombieHorse
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Layd;	er	getMobType
	m	()V	fI	addBehaviourGoals
	m	()V	q	randomizeAttributes
	m	()Lahj;	r	getAmbientSound
	m	()Layy$a;	t	createAttributes
	m	()Lahj;	x_	getDeathSound
c	bjz	net/minecraft/world/entity/animal/horse/package-info
c	bka	net/minecraft/world/entity/animal/package-info
c	bkb	net/minecraft/world/entity/boss/EnderDragonPart
	m	()Lrc;	S	getAddEntityPacket
	m	(Lawu;F)Z	a	hurt
	m	(Layk;)Laxl;	a	getDimensions
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	bh	isPickable
	m	()Z	ds	shouldBeSaved
	m	(Laxk;)Z	q	is
	f	Lbkd;	b	parentMob
	f	Ljava/lang/String;	c	name
	f	Laxl;	d	size
c	bkc	net/minecraft/world/entity/boss/enderdragon/EndCrystal
	m	()Lrc;	S	getAddEntityPacket
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(Lawu;)V	a	onDestroyedBy
	m	(Lawu;F)Z	a	hurt
	m	(Lgj;)V	a	setBeamTarget
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Z)V	a	setShowBottom
	m	()Laxk$b;	aN	getMovementEmission
	m	()V	a_	defineSynchedData
	m	()V	ag	kill
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	bh	isPickable
	m	()Lbuw;	dk	getPickResult
	m	()Lgj;	h	getBeamTarget
	m	()Z	i	showsBottom
	m	()V	k	tick
	f	I	b	time
	f	Lyb;	c	DATA_BEAM_TARGET
	f	Lyb;	d	DATA_SHOW_BOTTOM
c	bkd	net/minecraft/world/entity/boss/enderdragon/EnderDragon
	m	(IF)[D	a	getLatencyPos
	m	(IILdjl;)Ldjn;	a	findPath
	m	(I[D[D)F	a	getHeadPartYOffset
	m	(Lawu;F)Z	a	hurt
	m	(Lbkb;DDD)V	a	tickPart
	m	(Lbkb;Lawu;F)Z	a	hurt
	m	(Lbkc;Lgj;Lawu;)V	a	onCrystalDestroyed
	m	(Ldjl;Ldjl;)Ldjn;	a	reconstructPath
	m	(Ljava/util/List;)V	a	knockBack
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lri;)V	a	recreateFromPacket
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	()V	aJ	onFlap
	m	()Z	aK	isFlapping
	m	()V	a_	defineSynchedData
	m	()V	ag	kill
	m	(Laxe;Laxk;)Z	b	addEffect
	m	(Ldpj;)Z	b	checkWalls
	m	(Ljava/util/List;)V	b	hurt
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	bh	isPickable
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxy;)Z	c	canAttack
	m	()Lahl;	cO	getSoundSource
	m	()Z	ci	canChangeDimensions
	m	()V	dH	tickDeath
	m	()V	dj	checkDespawn
	m	()F	ev	getSoundVolume
	m	()V	fA	checkCrystals
	m	()Lbku;	fx	getPhaseManager
	m	()Lcsb;	fy	getDragonFight
	m	()F	fz	getHeadYOffset
	m	(Lawu;F)Z	g	reallyHurt
	m	(D)F	i	rotWrap
	m	(Laxk;)Z	l	canRide
	m	()Layy$a;	n	createAttributes
	m	()I	q	findClosestNode
	m	(DDD)I	q	findClosestNode
	m	()Lahj;	r	getAmbientSound
	m	()[Lbkb;	t	getSubEntities
	m	()V	w_	aiStep
	m	(F)Ldpo;	y	getHeadLookVector
	f	Lyb;	b	DATA_PHASE
	f	F	bU	oFlapTime
	f	F	bV	flapTime
	f	Z	bW	inWall
	f	I	bX	dragonDeathTime
	f	F	bY	yRotA
	f	Lbkc;	bZ	nearestCrystal
	f	[[D	c	positions
	f	Lorg/slf4j/Logger;	ca	LOGGER
	f	Lbhf;	cb	CRYSTAL_DESTROY_TARGETING
	f	I	cc	GROWL_INTERVAL_MIN
	f	I	cd	GROWL_INTERVAL_MAX
	f	F	ce	SITTING_ALLOWED_DAMAGE_PERCENTAGE
	f	Ljava/lang/String;	cf	DRAGON_DEATH_TIME_KEY
	f	Ljava/lang/String;	cg	DRAGON_PHASE_KEY
	f	[Lbkb;	ch	subEntities
	f	Lbkb;	ci	neck
	f	Lbkb;	cj	body
	f	Lbkb;	ck	tail1
	f	Lbkb;	cl	tail2
	f	Lbkb;	cm	tail3
	f	Lbkb;	cn	wing1
	f	Lbkb;	co	wing2
	f	Lcsb;	cp	dragonFight
	f	Lbku;	cq	phaseManager
	f	I	cr	growlTime
	f	F	cs	sittingDamageReceived
	f	[Ldjl;	ct	nodes
	f	[I	cu	nodeAdjacency
	f	Ldji;	cv	openSet
	f	I	d	posPointer
	f	Lbkb;	e	head
c	bke	net/minecraft/world/entity/boss/enderdragon/package-info
c	bkf	net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance
	m	()Z	a	isSitting
	m	(Lawu;F)F	a	onHurt
	m	(Lbkc;Lgj;Lawu;Lboj;)V	a	onCrystalDestroyed
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()V	e	end
	m	()F	f	getFlySpeed
	m	()Ldpo;	g	getFlyTargetLocation
	m	()F	h	getTurnSpeed
	f	Lbkd;	a	dragon
c	bkg	net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase
	m	()Z	a	isSitting
	m	(Lawu;F)F	a	onHurt
c	bkh	net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase
	m	(Ldpo;)V	a	setTarget
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Ldpo;	g	getFlyTargetLocation
	m	()Lbkt;	i	getPhase
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	CHARGE_RECOVERY_TIME
	f	Ldpo;	d	targetLocation
	f	I	e	timeSinceCharge
c	bki	net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Ldpo;	g	getFlyTargetLocation
	m	()Lbkt;	i	getPhase
	f	Ldpo;	b	targetLocation
	f	I	c	time
c	bkj	net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase
	m	(Lbkc;Lgj;Lawu;Lboj;)V	a	onCrystalDestroyed
	m	(Lboj;)V	a	strafePlayer
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Ldpo;	g	getFlyTargetLocation
	m	()Lbkt;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Lbhf;	b	NEW_TARGET_TARGETING
	f	Ldjn;	c	currentPath
	f	Ldpo;	d	targetLocation
	f	Z	e	clockwise
c	bkk	net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase
	m	()Z	a	isSitting
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Ldpo;	g	getFlyTargetLocation
	m	()Lbkt;	i	getPhase
	f	Ldpo;	b	targetLocation
c	bkl	net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Ldpo;	g	getFlyTargetLocation
	m	()Lbkt;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Lbhf;	b	NEAR_EGG_TARGETING
	f	Ldjn;	c	currentPath
	f	Ldpo;	d	targetLocation
c	bkm	net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Ldpo;	g	getFlyTargetLocation
	m	()F	h	getTurnSpeed
	m	()Lbkt;	i	getPhase
	f	Ldpo;	b	targetLocation
c	bkn	net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance
	m	()Z	a	isSitting
	m	(Lawu;F)F	a	onHurt
	m	(Lbkc;Lgj;Lawu;Lboj;)V	a	onCrystalDestroyed
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()V	e	end
	m	()F	f	getFlySpeed
	m	()Ldpo;	g	getFlyTargetLocation
	m	()F	h	getTurnSpeed
	m	()Lbkt;	i	getPhase
c	bko	net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lbkt;	i	getPhase
	f	I	b	ROAR_DURATION
	f	I	c	attackingTicks
c	bkp	net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()V	e	end
	m	()Lbkt;	i	getPhase
	m	()V	j	resetFlameCount
	f	I	b	FLAME_DURATION
	f	I	c	SITTING_FLAME_ATTACKS_COUNT
	f	I	d	WARMUP_TIME
	f	I	e	flameTicks
	f	I	f	flameCount
	f	Laxj;	g	flame
c	bkq	net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase
	m	(Lbkd;Laxy;)Z	a	lambda$new$0
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lbkt;	i	getPhase
	f	I	b	SITTING_SCANNING_IDLE_TICKS
	f	I	c	SITTING_ATTACK_Y_VIEW_RANGE
	f	I	d	SITTING_ATTACK_VIEW_RANGE
	f	I	e	SITTING_CHARGE_VIEW_RANGE
	f	Lbhf;	f	CHARGE_TARGETING
	f	Lbhf;	g	scanTargeting
	f	I	h	scanningTime
c	bkr	net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase
	m	(Laxy;)V	a	setTarget
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Ldpo;	g	getFlyTargetLocation
	m	()Lbkt;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	FIREBALL_CHARGE_AMOUNT
	f	I	d	fireballCharge
	f	Ldjn;	e	currentPath
	f	Ldpo;	f	targetLocation
	f	Laxy;	g	attackTarget
	f	Z	h	holdingPatternClockwise
c	bks	net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Ldpo;	g	getFlyTargetLocation
	m	()Lbkt;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Z	b	firstTick
	f	Ldjn;	c	currentPath
	f	Ldpo;	d	targetLocation
c	bkt	net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase
	m	()Ljava/lang/reflect/Constructor;	a	getConstructor
	m	(I)Lbkt;	a	getById
	m	(Lbkd;)Lbkn;	a	createInstance
	m	(Ljava/lang/Class;Ljava/lang/String;)Lbkt;	a	create
	m	()I	b	getId
	m	()I	c	getCount
	f	Lbkt;	a	HOLDING_PATTERN
	f	Lbkt;	b	STRAFE_PLAYER
	f	Lbkt;	c	LANDING_APPROACH
	f	Lbkt;	d	LANDING
	f	Lbkt;	e	TAKEOFF
	f	Lbkt;	f	SITTING_FLAMING
	f	Lbkt;	g	SITTING_SCANNING
	f	Lbkt;	h	SITTING_ATTACKING
	f	Lbkt;	i	CHARGING_PLAYER
	f	Lbkt;	j	DYING
	f	Lbkt;	k	HOVERING
	f	[Lbkt;	l	phases
	f	Ljava/lang/Class;	m	instanceClass
	f	I	n	id
	f	Ljava/lang/String;	o	name
c	bku	net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager
	m	()Lbkn;	a	getCurrentPhase
	m	(Lbkt;)V	a	setPhase
	m	(Lbkt;)Lbkn;	b	getPhase
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lbkd;	b	dragon
	f	[Lbkn;	c	phases
	f	Lbkn;	d	currentPhase
c	bkv	net/minecraft/world/entity/boss/enderdragon/phases/package-info
c	bkw	net/minecraft/world/entity/boss/package-info
c	bkx	net/minecraft/world/entity/boss/wither/WitherBoss
	m	()V	R	customServerAiStep
	m	()Z	a	isPowered
	m	(FFF)F	a	rotlerp
	m	(FFLawu;)Z	a	causeFallDamage
	m	(I)F	a	getHeadYRot
	m	(IDDDZ)V	a	performRangedAttack
	m	(II)V	a	setAlternativeTarget
	m	(ILaxy;)V	a	performRangedAttack
	m	(Lawu;F)Z	a	hurt
	m	(Lawu;IZ)V	a	dropCustomDeathLoot
	m	(Laxy;F)V	a	performRangedAttack
	m	(Lcav;)Lbgf;	a	createNavigation
	m	(Lcov;Ldpo;)V	a	makeStuckInBlock
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lqk;)V	a	setCustomName
	m	()V	a_	defineSynchedData
	m	(I)F	b	getHeadXRot
	m	(Laxe;Laxk;)Z	b	addEffect
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Ladx;)V	c	startSeenByPlayer
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxe;)Z	c	canBeAffected
	m	(Lcov;)Z	c	canDestroy
	m	()Z	ci	canChangeDimensions
	m	(Ladx;)V	d	stopSeenByPlayer
	m	()V	dj	checkDespawn
	m	()Layd;	er	getMobType
	m	(Laxy;)Z	j	lambda$static$0
	m	(Laxk;)Z	l	canRide
	m	()V	n	makeInvulnerable
	m	()Layy$a;	q	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	(I)V	r	setInvulnerableTicks
	m	(I)I	s	getAlternativeTarget
	m	()I	t	getInvulnerableTicks
	m	(I)D	t	getHeadX
	m	()V	u	registerGoals
	m	(I)D	u	getHeadY
	m	(I)D	v	getHeadZ
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	f	Lyb;	b	DATA_TARGET_A
	f	Lyb;	bV	DATA_ID_INV
	f	I	bW	INVULNERABLE_TICKS
	f	[F	bX	xRotHeads
	f	[F	bY	yRotHeads
	f	[F	bZ	xRotOHeads
	f	Lyb;	c	DATA_TARGET_B
	f	[F	ca	yRotOHeads
	f	[I	cb	nextHeadUpdate
	f	[I	cc	idleHeadUpdates
	f	I	cd	destroyBlocksTick
	f	Ladt;	ce	bossEvent
	f	Ljava/util/function/Predicate;	cf	LIVING_ENTITY_SELECTOR
	f	Lbhf;	cg	TARGETING_CONDITIONS
	f	Lyb;	d	DATA_TARGET_C
	f	Ljava/util/List;	e	DATA_TARGETS
c	bkx$a	net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal
	m	()Z	a	canUse
	f	Lbkx;	a	this$0
c	bky	net/minecraft/world/entity/boss/wither/package-info
c	bkz	net/minecraft/world/entity/decoration/ArmorStand
	m	()Lhe;	A	getRightLegPose
	m	(Laxk;)V	A	doPush
	m	()Z	C	hasPhysics
	m	()Lok;	D	writePose
	m	()V	E	showBreakingParticles
	m	()V	F	updateInvisibilityStatus
	m	()V	G	playBrokenSound
	m	(B)V	a	handleEntityEvent
	m	(BIZ)B	a	setBit
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(Ladw;Laxx;)V	a	thunderHit
	m	(Lawu;F)Z	a	hurt
	m	(Laxk;)Z	a	lambda$static$0
	m	(Laxp;Lbuw;)V	a	setItemSlot
	m	(Layk;)Laxl;	a	getDimensions
	m	(Lboj;Laxp;Lbuw;Lawg;)Z	a	swapItem
	m	(Lboj;Ldpo;Lawg;)Lawh;	a	interactAt
	m	(Lhe;)V	a	setHeadPose
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	(Z)V	a	setSmall
	m	()V	a_	defineSynchedData
	m	()V	ag	kill
	m	(Laxp;)Lbuw;	b	getItemBySlot
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lhe;)V	b	setBodyPose
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Ljava/lang/Iterable;	bB	getHandSlots
	m	()Ljava/lang/Iterable;	bC	getArmorSlots
	m	()Z	bh	isPickable
	m	()Z	bi	isPushable
	m	()D	bp	getMyRidingOffset
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lhe;)V	c	setLeftArmPose
	m	(Lok;)V	c	readPose
	m	()Z	cC	ignoreExplosion
	m	()Ldjd;	c_	getPistonPushReaction
	m	(Laxp;)Z	d	isDisabled
	m	(Lhe;)V	d	setRightArmPose
	m	()Z	dU	canBeSeenByAnyone
	m	()Lbuw;	dk	getPickResult
	m	(FF)F	e	tickHeadTurn
	m	(Lhe;)V	e	setLeftLegPose
	m	()V	eG	pushEntities
	m	()Z	eI	isEffectiveAi
	m	()Laxt;	eL	getMainArm
	m	()Z	eX	isAffectedByPotions
	m	()Z	eY	attackable
	m	()Laxy$a;	eg	getFallSounds
	m	(Lhe;)V	f	setRightLegPose
	m	(Lawu;)V	g	brokenByPlayer
	m	(Lawu;F)V	g	causeDamage
	m	(Lbuw;)Z	g	canTakeItem
	m	(Lawu;)V	h	brokenByAnything
	m	(Ldpo;)V	h	travel
	m	(F)Ldpo;	j	getLightProbePosition
	m	(Ldpo;)Laxp;	j	getClickedSlot
	m	(Z)V	j	setInvisible
	m	()V	k	tick
	m	(F)V	l	setYHeadRot
	m	(F)V	m	setYBodyRot
	m	()Z	n	isSmall
	m	()Z	q	isShowArms
	m	()Z	r	isNoBasePlate
	m	(Laxk;)Z	r	skipAttackInteraction
	m	(Z)V	r	setShowArms
	m	(Z)V	s	setNoBasePlate
	m	()Z	t	isMarker
	m	(Z)V	t	setMarker
	m	()Lhe;	u	getHeadPose
	m	(Z)Laxl;	u	getDimensionsMarker
	m	()Lhe;	w	getBodyPose
	m	()Lhe;	x	getLeftArmPose
	m	()Lahj;	x_	getDeathSound
	m	()Lhe;	y	getRightArmPose
	m	()Z	y_	isBaby
	m	()Lhe;	z	getLeftLegPose
	m	()V	z_	refreshDimensions
	f	I	bE	CLIENT_FLAG_NO_BASEPLATE
	f	I	bF	CLIENT_FLAG_MARKER
	f	Lyb;	bG	DATA_CLIENT_FLAGS
	f	Lyb;	bH	DATA_HEAD_POSE
	f	I	b	WOBBLE_TIME
	f	Lyb;	bI	DATA_BODY_POSE
	f	Lyb;	bJ	DATA_LEFT_ARM_POSE
	f	Lyb;	bK	DATA_RIGHT_ARM_POSE
	f	Lyb;	bL	DATA_LEFT_LEG_POSE
	f	Lyb;	bM	DATA_RIGHT_LEG_POSE
	f	J	bN	lastHit
	f	Z	bO	ENABLE_ARMS
	f	Lhe;	bP	DEFAULT_HEAD_POSE
	f	Lhe;	bQ	DEFAULT_BODY_POSE
	f	Lhe;	bR	DEFAULT_LEFT_ARM_POSE
	f	Lhe;	bS	DEFAULT_RIGHT_ARM_POSE
	f	Lhe;	bT	DEFAULT_LEFT_LEG_POSE
	f	Lhe;	bU	DEFAULT_RIGHT_LEG_POSE
	f	Laxl;	bV	MARKER_DIMENSIONS
	f	Laxl;	bW	BABY_DIMENSIONS
	f	D	bX	FEET_OFFSET
	f	D	bY	CHEST_OFFSET
	f	D	bZ	LEGS_OFFSET
	f	I	c	DISABLE_TAKING_OFFSET
	f	D	ca	HEAD_OFFSET
	f	Ljava/util/function/Predicate;	cb	RIDABLE_MINECARTS
	f	Lgx;	cc	handItems
	f	Lgx;	cd	armorItems
	f	Z	ce	invisible
	f	I	cf	disabledSlots
	f	Lhe;	cg	headPose
	f	Lhe;	ch	bodyPose
	f	Lhe;	ci	leftArmPose
	f	Lhe;	cj	rightArmPose
	f	Lhe;	ck	leftLegPose
	f	Lhe;	cl	rightLegPose
	f	I	d	DISABLE_PUTTING_OFFSET
	f	I	e	CLIENT_FLAG_SMALL
	f	I	f	CLIENT_FLAG_SHOW_ARMS
c	bkz$1	net/minecraft/world/entity/decoration/ArmorStand$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
c	bla	net/minecraft/world/entity/decoration/GlowItemFrame
	m	()Lahj;	h	getRemoveItemSound
	m	()Lahj;	i	getBreakSound
	m	()Lahj;	j	getPlaceSound
	m	()Lahj;	l	getAddItemSound
	m	()Lahj;	n	getRotateItemSound
	m	()Lbuw;	o	getFrameItemStack
c	blb	net/minecraft/world/entity/decoration/HangingEntity
	m	(I)D	a	offs
	m	(Ladw;Laxx;)V	a	thunderHit
	m	(Lawu;F)Z	a	hurt
	m	(Laxk;)V	a	dropItem
	m	(Laye;Ldpo;)V	a	move
	m	(Lbuw;F)Lbli;	a	spawnAtLocation
	m	(Lchz;)F	a	mirror
	m	(Lcjm;)F	a	rotate
	m	(Lgo;)V	a	setDirection
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Laxk;)Z	b	lambda$static$0
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	bh	isPickable
	m	()Z	bj	repositionEntityAfterLoad
	m	()Lgo;	ct	getDirection
	m	(DDD)V	e	setPos
	m	(DDD)V	i	push
	m	()V	k	tick
	m	()V	q	recalculateBoundingBox
	m	()Z	r	survives
	m	(Laxk;)Z	r	skipAttackInteraction
	m	()I	s	getWidth
	m	()I	t	getHeight
	m	()V	u	playPlacementSound
	m	()Lgj;	w	getPos
	m	()V	z_	refreshDimensions
	f	Ljava/util/function/Predicate;	b	HANGING_ENTITY
	f	Lgj;	c	pos
	f	Lgo;	d	direction
	f	I	e	checkInterval
c	blb$1	net/minecraft/world/entity/decoration/HangingEntity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
c	blc	net/minecraft/world/entity/decoration/ItemFrame
	m	()Lrc;	S	getAddEntityPacket
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(I)V	a	setRotation
	m	(IZ)V	a	setRotation
	m	(Lawu;F)Z	a	hurt
	m	(Laxk;)V	a	dropItem
	m	(Laye;Ldpo;)V	a	move
	m	(Layk;Laxl;)F	a	getEyeHeight
	m	(Lboj;Lawg;)Lawh;	a	interact
	m	(Lbuw;)V	a	setItem
	m	(Lbuw;Z)V	a	setItem
	m	(Lgo;)V	a	setDirection
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lrg;)V	a	recreateFromPacket
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	()V	a_	defineSynchedData
	m	()V	ag	kill
	m	(Laxk;Z)V	b	dropItem
	m	(Lok;)V	b	addAdditionalSaveData
	m	()F	bu	getPickRadius
	m	(Lbuw;)V	c	removeFramedMap
	m	()Lbuw;	dk	getPickResult
	m	()Lahj;	h	getRemoveItemSound
	m	()Lahj;	i	getBreakSound
	m	(DDD)V	i	push
	m	()Lahj;	j	getPlaceSound
	m	(I)Layp;	k	getSlot
	m	()Lahj;	l	getAddItemSound
	m	()Lahj;	n	getRotateItemSound
	m	()Lbuw;	o	getFrameItemStack
	m	()V	q	recalculateBoundingBox
	m	()Z	r	survives
	m	()I	s	getWidth
	m	()I	t	getHeight
	m	()V	u	playPlacementSound
	m	()Lbuw;	x	getItem
	m	()I	y	getRotation
	m	()I	z	getAnalogOutput
	f	Lyb;	ao	DATA_ITEM
	f	Lyb;	ap	DATA_ROTATION
	f	F	aq	dropChance
	f	Z	ar	fixed
	f	I	e	NUM_ROTATIONS
	f	Lorg/slf4j/Logger;	f	LOGGER
c	blc$1	net/minecraft/world/entity/decoration/ItemFrame$1
	m	()Lbuw;	a	get
	m	(Lbuw;)Z	a	set
	f	Lblc;	b	this$0
c	blc$2	net/minecraft/world/entity/decoration/ItemFrame$2
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	bld	net/minecraft/world/entity/decoration/LeashFenceKnotEntity
	m	()Lrc;	S	getAddEntityPacket
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(Laxk;)V	a	dropItem
	m	(Layk;Laxl;)F	a	getEyeHeight
	m	(Lboj;Lawg;)Lawh;	a	interact
	m	(Lgo;)V	a	setDirection
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lcav;Lgj;)Lbld;	b	getOrCreateKnot
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Lbuw;	dk	getPickResult
	m	(F)Ldpo;	n	getRopeHoldPosition
	m	()V	q	recalculateBoundingBox
	m	()Z	r	survives
	m	()I	s	getWidth
	m	()I	t	getHeight
	m	()V	u	playPlacementSound
	f	D	e	OFFSET_Y
c	ble	net/minecraft/world/entity/decoration/Motive
	m	()I	a	getWidth
	m	(Ljava/lang/String;II)Lble;	a	register
	m	()I	b	getHeight
	f	I	A	width
	f	I	B	height
	f	Lble;	a	KEBAB
	f	Lble;	b	AZTEC
	f	Lble;	c	ALBAN
	f	Lble;	d	AZTEC2
	f	Lble;	e	BOMB
	f	Lble;	f	PLANT
	f	Lble;	g	WASTELAND
	f	Lble;	h	POOL
	f	Lble;	i	COURBET
	f	Lble;	j	SEA
	f	Lble;	k	SUNSET
	f	Lble;	l	CREEBET
	f	Lble;	m	WANDERER
	f	Lble;	n	GRAHAM
	f	Lble;	o	MATCH
	f	Lble;	p	BUST
	f	Lble;	q	STAGE
	f	Lble;	r	VOID
	f	Lble;	s	SKULL_AND_ROSES
	f	Lble;	t	WITHER
	f	Lble;	u	FIGHTERS
	f	Lble;	v	POINTER
	f	Lble;	w	PIGSCENE
	f	Lble;	x	BURNING_SKULL
	f	Lble;	y	SKELETON
	f	Lble;	z	DONKEY_KONG
c	blf	net/minecraft/world/entity/decoration/Painting
	m	()Lrc;	S	getAddEntityPacket
	m	(DDDFFIZ)V	a	lerpTo
	m	(Laxk;)V	a	dropItem
	m	(Lok;)V	a	readAdditionalSaveData
	m	(DDDFF)V	b	moveTo
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Lbuw;	dk	getPickResult
	m	()I	s	getWidth
	m	()I	t	getHeight
	m	()V	u	playPlacementSound
	f	Lble;	e	motive
c	blg	net/minecraft/world/entity/decoration/package-info
c	blh	net/minecraft/world/entity/item/FallingBlockEntity
	m	()Lrc;	S	getAddEntityPacket
	m	(FFLawu;)Z	a	causeFallDamage
	m	(Lawu;FLaxk;)V	a	lambda$causeFallDamage$0
	m	(Lcav;Lgj;Lcov;)Lblh;	a	fall
	m	(Lcdq;Lgj;)V	a	callOnBrokenAfterFall
	m	(Lgj;)V	a	setStartPos
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lr;)V	a	fillCrashReportCategory
	m	(Lrg;)V	a	recreateFromPacket
	m	()Laxk$b;	aN	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(FI)V	b	setHurtsEntities
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	bh	isPickable
	m	()Z	cD	onlyOpCanSetNbt
	m	()Z	cf	isAttackable
	m	()Z	cl	displayFireAnimation
	m	()Lgj;	h	getStartPos
	m	()Lcov;	i	getBlockState
	m	()V	k	tick
	f	Lcov;	ao	blockState
	f	Z	ap	cancelDrop
	f	Z	aq	hurtEntities
	f	I	ar	fallDamageMax
	f	F	as	fallDamagePerDistance
	f	I	b	time
	f	Z	c	dropItem
	f	Lok;	d	blockData
	f	Lyb;	e	DATA_START_POS
	f	Lorg/slf4j/Logger;	f	LOGGER
c	bli	net/minecraft/world/entity/item/ItemEntity
	m	()Z	A	isMergable
	m	()Lrc;	S	getAddEntityPacket
	m	()Lqk;	X	getName
	m	(F)F	a	getSpin
	m	(I)V	a	setPickUpDelay
	m	(Lawu;F)Z	a	hurt
	m	(Lbli;)V	a	tryToMerge
	m	(Lbli;Lbuw;Lbli;Lbuw;)V	a	merge
	m	(Lbli;Lbuw;Lbuw;)V	a	merge
	m	(Lbuw;)V	a	setItem
	m	(Lbuw;Lbuw;)Z	a	areMergable
	m	(Lbuw;Lbuw;I)Lbuw;	a	merge
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	()Laxk$b;	aN	getMovementEmission
	m	()Z	aO	occludesVibrations
	m	()Z	aP	fireImmune
	m	()V	a_	defineSynchedData
	m	(Ladw;)Laxk;	b	changeDimension
	m	(Lbli;)Z	b	lambda$mergeWithNeighbours$0
	m	(Lboj;)V	b	playerTouch
	m	(Ljava/util/UUID;)V	b	setOwner
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Ljava/util/UUID;)V	c	setThrower
	m	()Lahl;	cO	getSoundSource
	m	()Z	cf	isAttackable
	m	()Lbuw;	h	getItem
	m	()Ljava/util/UUID;	i	getOwner
	m	()Ljava/util/UUID;	j	getThrower
	m	()V	k	tick
	m	()I	l	getAge
	m	()V	n	setDefaultPickUpDelay
	m	()V	o	setNoPickUpDelay
	m	()V	q	setNeverPickUp
	m	()Z	r	hasPickUpDelay
	m	()V	s	setUnlimitedLifetime
	m	()V	t	setExtendedLifetime
	m	()V	u	makeFakeItem
	m	()Lbli;	w	copy
	m	()V	x	setUnderwaterMovement
	m	()V	y	setUnderLavaMovement
	m	()V	z	mergeWithNeighbours
	f	I	ao	age
	f	I	ap	pickupDelay
	f	I	aq	health
	f	Ljava/util/UUID;	ar	thrower
	f	Ljava/util/UUID;	as	owner
	f	F	b	bobOffs
	f	Lyb;	c	DATA_ITEM
	f	I	d	LIFETIME
	f	I	e	INFINITE_PICKUP_DELAY
	f	I	f	INFINITE_LIFETIME
c	blj	net/minecraft/world/entity/item/PrimedTnt
	m	()Lrc;	S	getAddEntityPacket
	m	(I)V	a	setFuse
	m	(Layk;Laxl;)F	a	getEyeHeight
	m	(Lok;)V	a	readAdditionalSaveData
	m	()Laxk$b;	aN	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	bh	isPickable
	m	()Laxy;	h	getOwner
	m	()I	i	getFuse
	m	()V	j	explode
	m	()V	k	tick
	f	Lyb;	b	DATA_FUSE_ID
	f	I	c	DEFAULT_FUSE_TIME
	f	Laxy;	d	owner
c	blk	net/minecraft/world/entity/item/package-info
c	bll	net/minecraft/world/entity/monster/AbstractIllager
	m	(Laxy;)Z	c	canAttack
	m	()Layd;	er	getMobType
	m	()Lbll$a;	n	getArmPose
	m	()V	u	registerGoals
c	bll$a	net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose
	m	()[Lbll$a;	a	$values
	f	Lbll$a;	a	CROSSED
	f	Lbll$a;	b	ATTACKING
	f	Lbll$a;	c	SPELLCASTING
	f	Lbll$a;	d	BOW_AND_ARROW
	f	Lbll$a;	e	CROSSBOW_HOLD
	f	Lbll$a;	f	CROSSBOW_CHARGE
	f	Lbll$a;	g	CELEBRATING
	f	Lbll$a;	h	NEUTRAL
	f	[Lbll$a;	i	$VALUES
c	bll$b	net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal
	m	()Z	a	canUse
	f	Lbll;	a	this$0
c	blm	net/minecraft/world/entity/monster/AbstractSkeleton
	m	(Lawf;)V	a	populateDefaultEquipmentSlots
	m	(Laxp;Lbuw;)V	a	setItemSlot
	m	(Laxy;F)V	a	performRangedAttack
	m	(Lbvk;)Z	a	canFireProjectileWeapon
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lbuw;F)Lbon;	b	getArrow
	m	(Lgj;Lcov;)V	b	playStepSound
	m	()V	bo	rideTick
	m	()D	bp	getMyRidingOffset
	m	()Layd;	er	getMobType
	m	()Z	fz	isShaking
	m	()Layy$a;	n	createAttributes
	m	()Lahj;	q	getStepSound
	m	()V	t	reassessWeaponGoal
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	f	Lbes;	b	bowGoal
	f	Lbed;	c	meleeGoal
c	blm$1	net/minecraft/world/entity/monster/AbstractSkeleton$1
	m	()V	c	start
	m	()V	d	stop
	f	Lblm;	b	this$0
c	bln	net/minecraft/world/entity/monster/Blaze
	m	()V	R	customServerAiStep
	m	(FFLawu;)Z	a	causeFallDamage
	m	()V	a_	defineSynchedData
	m	()Z	bE	isOnFire
	m	()F	bd	getBrightness
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Z	eE	isSensitiveToWater
	m	()Layy$a;	n	createAttributes
	m	()Z	q	isCharged
	m	()Lahj;	r	getAmbientSound
	m	()V	u	registerGoals
	m	(Z)V	v	setCharged
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	f	F	b	allowedHeightOffset
	f	I	c	nextHeightOffsetChangeTick
	f	Lyb;	d	DATA_FLAGS_ID
c	bln$a	net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()D	h	getFollowDistance
	f	Lbln;	a	blaze
	f	I	b	attackStep
	f	I	c	attackTime
	f	I	d	lastSeen
c	blo	net/minecraft/world/entity/monster/CaveSpider
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	()Layy$a;	n	createCaveSpider
	m	(Laxk;)Z	z	doHurtTarget
c	blp	net/minecraft/world/entity/monster/Creeper
	m	()Z	a	isPowered
	m	(FFLawu;)Z	a	causeFallDamage
	m	(I)V	a	setSwellDir
	m	(Ladw;Laxx;)V	a	thunderHit
	m	(Lawg;Lboj;)V	a	lambda$mobInteract$0
	m	(Lawu;IZ)V	a	dropCustomDeathLoot
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()I	cj	getMaxFallDistance
	m	()Z	fA	canDropMobsSkull
	m	()V	fB	increaseDroppedSkulls
	m	()V	fC	explodeCreeper
	m	()V	fF	spawnLingeringCloud
	m	()V	fz	ignite
	m	(Laxy;)V	h	setTarget
	m	()V	k	tick
	m	()Layy$a;	n	createAttributes
	m	()I	q	getSwellDir
	m	()Z	t	isIgnited
	m	()V	u	registerGoals
	m	()Lahj;	x_	getDeathSound
	m	(F)F	z	getSwelling
	m	(Laxk;)Z	z	doHurtTarget
	f	Lyb;	b	DATA_SWELL_DIR
	f	I	bV	swell
	f	I	bW	maxSwell
	f	I	bX	explosionRadius
	f	I	bY	droppedSkulls
	f	Lyb;	c	DATA_IS_POWERED
	f	Lyb;	d	DATA_IS_IGNITED
	f	I	e	oldSwell
c	blq	net/minecraft/world/entity/monster/CrossbowAttackMob
	m	()Laxy;	G	getTarget
	m	()V	a	onCrossbowAttackPerformed
	m	(Laxy;Laxy;Lboz;FF)V	a	shootCrossbowProjectile
	m	(Laxy;Lbuw;Lboz;F)V	a	shootCrossbowProjectile
	m	(Laxy;Ldpo;F)Lk;	a	getProjectileShotVector
	m	(Laxy;F)V	b	performCrossbowAttack
	m	(Z)V	b	setChargingCrossbow
c	blr	net/minecraft/world/entity/monster/Drowned
	m	(Lawf;)V	a	populateDefaultEquipmentSlots
	m	(Laxo;Lcbk;Layc;Lgj;Ljava/util/Random;)Z	a	checkDrownedSpawnRules
	m	(Laxy;F)V	a	performRangedAttack
	m	(Lblr;)Z	a	access$100
	m	(Lblr;Lbgf;)Lbgf;	a	access$002
	m	(Lbuw;Lbuw;)Z	a	canReplaceCurrentItem
	m	(Lcaw;Lgj;)Z	a	isDeepEnoughToSpawn
	m	(Lcay;)Z	a	checkSpawnObstruction
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	()Lahj;	aF	getSwimSound
	m	()V	aV	updateSwimming
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Z	cp	isPushedByFluid
	m	()Z	fA	convertsInWater
	m	()Z	fB	closeToNextPos
	m	()Z	fJ	wantsToSwim
	m	()Lbuw;	fz	getSkull
	m	(Ldpo;)V	h	travel
	m	(Laxy;)Z	j	okTarget
	m	()V	n	addBehaviourGoals
	m	()Z	q	supportsBreakDoorGoal
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	t	getStepSound
	m	(Z)V	v	setSearchingForLand
	m	()Lahj;	x_	getDeathSound
	f	F	b	NAUTILUS_SHELL_CHANCE
	f	Z	bY	searchingForLand
	f	Lbgh;	c	waterNavigation
	f	Lbge;	d	groundNavigation
c	blr$a	net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lblr;	b	drowned
c	blr$b	net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal
	m	()Z	a	canUse
	m	(Lcay;Lgj;)Z	a	isValidTarget
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lblr;	g	drowned
c	blr$c	net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()Ldpo;	h	getWaterPos
	f	Layh;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
	f	Lcav;	f	level
c	blr$d	net/minecraft/world/entity/monster/Drowned$DrownedMoveControl
	m	()V	a	tick
	f	Lblr;	l	drowned
c	blr$e	net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lblr;	a	drowned
	f	D	b	speedModifier
	f	I	c	seaLevel
	f	Z	d	stuck
c	blr$f	net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	f	Lblr;	a	drowned
c	bls	net/minecraft/world/entity/monster/ElderGuardian
	m	()V	R	customServerAiStep
	m	(Ladx;)Z	b	lambda$customServerAiStep$0
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Layy$a;	n	createAttributes
	m	()I	q	getAttackDuration
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	t	getFlopSound
	m	()Lahj;	x_	getDeathSound
	f	F	b	ELDER_SIZE_SCALE
c	blt	net/minecraft/world/entity/monster/EnderMan
	m	()Z	O	requiresCustomPersistence
	m	()V	R	customServerAiStep
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
	m	(Lawu;F)Z	a	hurt
	m	(Lawu;IZ)V	a	dropCustomDeathLoot
	m	(Lawu;Lbpk;F)Z	a	hurtWithCleanWater
	m	(Laxk;)Z	a	teleportTowards
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lok;)V	b	addAdditionalSaveData
	m	()V	c	startPersistentAngerTimer
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lcov;)V	c	setCarriedBlock
	m	()Z	eE	isSensitiveToWater
	m	()Z	fA	isCreepy
	m	()Z	fB	hasBeenStaredAt
	m	()V	fC	setBeingStaredAt
	m	()Lcov;	fz	getCarriedBlock
	m	(Lboj;)Z	g	isLookingAtMe
	m	(Laxy;)V	h	setTarget
	m	()Layy$a;	n	createAttributes
	m	()V	q	playStareSound
	m	(DDD)Z	q	teleport
	m	()Lahj;	r	getAmbientSound
	m	()Z	t	teleport
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	f	I	bV	MIN_DEAGGRESSION_TIME
	f	Lyb;	bW	DATA_CARRY_STATE
	f	Lyb;	bX	DATA_CREEPY
	f	Lyb;	bY	DATA_STARED_AT
	f	I	bZ	lastStareSound
	f	Ljava/util/UUID;	c	SPEED_MODIFIER_ATTACKING_UUID
	f	I	ca	targetChangeTime
	f	Lavs;	cb	PERSISTENT_ANGER_TIME
	f	I	cc	remainingPersistentAngerTime
	f	Ljava/util/UUID;	cd	persistentAngerTarget
	f	Layx;	d	SPEED_MODIFIER_ATTACKING
	f	I	e	DELAY_BETWEEN_CREEPY_STARE_SOUND
c	blt$a	net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	f	Lblt;	a	enderman
	f	Laxy;	b	target
c	blt$b	net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal
	m	()Z	a	canUse
	m	(Lcav;Lgj;Lcov;Lcov;Lcov;Lgj;)Z	a	canPlaceBlock
	m	()V	e	tick
	f	Lblt;	a	enderman
c	blt$c	net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal
	m	()Z	a	canUse
	m	(Lblt;Laxy;)Z	a	lambda$new$0
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lblt;	i	enderman
	f	Lboj;	j	pendingTarget
	f	I	k	aggroTime
	f	I	l	teleportTime
	f	Lbhf;	m	startAggroTargetConditions
	f	Lbhf;	n	continueAggroTargetConditions
c	blt$d	net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lblt;	a	enderman
c	blu	net/minecraft/world/entity/monster/Endermite
	m	(Lok;)V	a	readAdditionalSaveData
	m	()Laxk$b;	aN	getMovementEmission
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	b	checkEndermiteSpawnRules
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	()D	bp	getMyRidingOffset
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Layd;	er	getMobType
	m	()V	k	tick
	m	(F)V	m	setYBodyRot
	m	()Layy$a;	n	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	f	I	b	MAX_LIFE
	f	I	c	life
c	blv	net/minecraft/world/entity/monster/Enemy
	f	I	c_	XP_REWARD_NONE
	f	I	d_	XP_REWARD_SMALL
	f	I	e_	XP_REWARD_MEDIUM
	f	I	f_	XP_REWARD_LARGE
	f	I	g_	XP_REWARD_HUGE
	f	I	h_	XP_REWARD_BOSS
c	blw	net/minecraft/world/entity/monster/Evoker
	m	()V	R	customServerAiStep
	m	(IZ)V	a	applyRaidBuffs
	m	(Lbix;)V	a	setWololoTarget
	m	(Lblw;)Ljava/util/Random;	a	access$000
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lblw;)Ljava/util/Random;	b	access$100
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lblw;)Ljava/util/Random;	c	access$200
	m	(Lblw;)Ljava/util/Random;	d	access$300
	m	(Lblw;)Ljava/util/Random;	e	access$400
	m	()Lbix;	fS	getWololoTarget
	m	()Lahj;	fz	getCastingSoundEvent
	m	(Laxk;)Z	p	isAlliedTo
	m	()Layy$a;	q	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	t	getCelebrateSound
	m	()V	u	registerGoals
	m	()Lahj;	x_	getDeathSound
	f	Lbix;	e	wololoTarget
c	blw$a	net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal
	m	(DDDDFI)V	a	createSpellEntity
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lahj;	l	getSpellPrepareSound
	m	()Lbmn$a;	m	getSpell
	f	Lblw;	a	this$0
c	blw$b	net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal
	m	()V	e	tick
	f	Lblw;	a	this$0
c	blw$c	net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal
	m	()Z	a	canUse
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lahj;	l	getSpellPrepareSound
	m	()Lbmn$a;	m	getSpell
	f	Lblw;	a	this$0
	f	Lbhf;	e	vexCountTargeting
c	blw$d	net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal
	m	()Z	a	canUse
	m	(Laxy;)Z	a	lambda$new$0
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lahj;	l	getSpellPrepareSound
	m	()Lbmn$a;	m	getSpell
	m	()I	n	getCastWarmupTime
	f	Lblw;	a	this$0
	f	Lbhf;	e	wololoTargeting
c	blx	net/minecraft/world/entity/monster/Ghast
	m	()Z	P	shouldDespawnInPeaceful
	m	(Lawu;F)Z	a	hurt
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	b	checkGhastSpawnRules
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Lahl;	cO	getSoundSource
	m	()F	ev	getSoundVolume
	m	()I	ff	getMaxSpawnClusterSize
	m	(Laxy;)Z	j	lambda$registerGoals$0
	m	()Z	n	isCharging
	m	()I	q	getExplosionPower
	m	()Lahj;	r	getAmbientSound
	m	()Layy$a;	t	createAttributes
	m	()V	u	registerGoals
	m	(Z)V	v	setCharging
	m	()Lahj;	x_	getDeathSound
	f	Lyb;	b	DATA_IS_CHARGING
	f	I	c	explosionPower
c	blx$a	net/minecraft/world/entity/monster/Ghast$GhastLookGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lblx;	a	ghast
c	blx$b	net/minecraft/world/entity/monster/Ghast$GhastMoveControl
	m	()V	a	tick
	m	(Ldpo;I)Z	a	canReach
	f	Lblx;	l	ghast
	f	I	m	floatDuration
c	blx$c	net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	chargeTime
	f	Lblx;	b	ghast
c	blx$d	net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lblx;	a	ghast
c	bly	net/minecraft/world/entity/monster/Giant
	m	(Lgj;Lcay;)F	a	getWalkTargetValue
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	()Layy$a;	n	createAttributes
c	blz	net/minecraft/world/entity/monster/Guardian
	m	(F)F	A	getSpikesAnimation
	m	(F)F	B	getAttackAnimationScale
	m	()I	J	getAmbientSoundInterval
	m	()I	T	getMaxHeadXRot
	m	(I)V	a	setActiveAttackTarget
	m	(Lawu;F)Z	a	hurt
	m	(Lcav;)Lbgf;	a	createNavigation
	m	(Lcay;)Z	a	checkSpawnObstruction
	m	(Lgj;Lcay;)F	a	getWalkTargetValue
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	()Laxk$b;	aN	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	b	checkGuardianSpawnRules
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Z	dx	canBreatheUnderwater
	m	()Layd;	er	getMobType
	m	()Z	fA	isMoving
	m	()Z	fB	hasActiveAttackTarget
	m	()Laxy;	fC	getActiveAttackTarget
	m	()Layy$a;	fz	createAttributes
	m	(Ldpo;)V	h	travel
	m	()I	q	getAttackDuration
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	t	getFlopSound
	m	()V	u	registerGoals
	m	(Z)V	v	setMoving
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	m	(F)F	z	getTailAnimation
	f	Lyb;	b	DATA_ID_MOVING
	f	F	bV	clientSideTailAnimation
	f	F	bW	clientSideTailAnimationO
	f	F	bX	clientSideTailAnimationSpeed
	f	F	bY	clientSideSpikesAnimation
	f	F	bZ	clientSideSpikesAnimationO
	f	I	c	ATTACK_TIME
	f	Laxy;	ca	clientSideCachedAttackTarget
	f	I	cb	clientSideAttackTime
	f	Z	cc	clientSideTouchedGround
	f	Lbep;	d	randomStrollGoal
	f	Lyb;	e	DATA_ID_ATTACK_TARGET
c	blz$a	net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lblz;	a	guardian
	f	I	b	attackTime
	f	Z	c	elder
c	blz$b	net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector
	m	(Laxy;)Z	a	test
	f	Lblz;	a	guardian
c	blz$c	net/minecraft/world/entity/monster/Guardian$GuardianMoveControl
	m	()V	a	tick
	f	Lblz;	l	guardian
c	bma	net/minecraft/world/entity/monster/Husk
	m	()Z	K_	isSunSensitive
	m	(Laxo;Lcbk;Layc;Lgj;Ljava/util/Random;)Z	a	checkHuskSpawnRules
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Z	fA	convertsInWater
	m	()V	fC	doUnderWaterConversion
	m	()Lbuw;	fz	getSkull
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	t	getStepSound
	m	()Lahj;	x_	getDeathSound
	m	(Laxk;)Z	z	doHurtTarget
c	bmb	net/minecraft/world/entity/monster/Illusioner
	m	(IZ)V	a	applyRaidBuffs
	m	(Laxy;F)V	a	performRangedAttack
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	()V	a_	defineSynchedData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Ldpj;	cx	getBoundingBoxForCulling
	m	()Lahj;	fz	getCastingSoundEvent
	m	()Lbll$a;	n	getArmPose
	m	(Laxk;)Z	p	isAlliedTo
	m	()Layy$a;	q	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	t	getCelebrateSound
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	m	(F)[Ldpo;	z	getIllusionOffsets
	f	I	bV	ILLUSION_TRANSITION_TICKS
	f	I	bW	ILLUSION_SPREAD
	f	I	bX	clientSideIllusionTicks
	f	[[Ldpo;	bY	clientSideIllusionOffsets
	f	I	e	NUM_ILLUSIONS
c	bmb$a	net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lahj;	l	getSpellPrepareSound
	m	()Lbmn$a;	m	getSpell
	f	Lbmb;	a	this$0
	f	I	e	lastTargetId
c	bmb$b	net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal
	m	()Z	a	canUse
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lahj;	l	getSpellPrepareSound
	m	()Lbmn$a;	m	getSpell
	f	Lbmb;	a	this$0
c	bmc	net/minecraft/world/entity/monster/MagmaCube
	m	()Lyt;	N	getDefaultLootTable
	m	(FFLawu;)Z	a	causeFallDamage
	m	(IZ)V	a	setSize
	m	(Lcay;)Z	a	checkSpawnObstruction
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	b	checkMagmaCubeSpawnRules
	m	()Z	bE	isOnFire
	m	()F	bd	getBrightness
	m	(Laif;)V	c	jumpInLiquid
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()V	eA	jumpFromGround
	m	()Lahj;	fA	getSquishSound
	m	()Lahj;	fB	getJumpSound
	m	()V	fx	decreaseSquish
	m	()Z	fy	isDealsDamage
	m	()F	fz	getAttackDamage
	m	()Layy$a;	n	createAttributes
	m	()Lia;	q	getParticleType
	m	()I	t	getJumpDelay
	m	()Lahj;	x_	getDeathSound
c	bmd	net/minecraft/world/entity/monster/Monster
	m	()Z	P	shouldDespawnInPeaceful
	m	(Lcbk;Lgj;Ljava/util/Random;)Z	a	isDarkEnoughToSpawn
	m	(Lgj;Lcay;)F	a	getWalkTargetValue
	m	()Lahj;	aF	getSwimSound
	m	()Lahj;	aG	getSwimSplashSound
	m	(Laxo;Lcbk;Layc;Lgj;Ljava/util/Random;)Z	b	checkMonsterSpawnRules
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	c	checkAnyLightMonsterSpawnRules
	m	()Lahl;	cO	getSoundSource
	m	()Z	dI	shouldDropExperience
	m	()Z	dJ	shouldDropLoot
	m	()Laxy$a;	eg	getFallSounds
	m	(Lboj;)Z	f	isPreventingPlayerRest
	m	()V	fD	updateNoActionTime
	m	()Layy$a;	fE	createMonsterAttributes
	m	(Lbuw;)Lbuw;	h	getProjectile
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
c	bme	net/minecraft/world/entity/monster/PatrollingMonster
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	b	checkPatrollingMonsterSpawnRules
	m	(Lok;)V	b	addAdditionalSaveData
	m	()D	bp	getMyRidingOffset
	m	()Z	fA	canBeLeader
	m	()Lgj;	fB	getPatrolTarget
	m	()Z	fC	hasPatrolTarget
	m	()Z	fF	isPatrolLeader
	m	()Z	fG	canJoinPatrol
	m	()V	fH	findPatrolTarget
	m	()Z	fI	isPatrolling
	m	(Lgj;)V	g	setPatrolTarget
	m	(D)Z	h	removeWhenFarAway
	m	()V	u	registerGoals
	m	(Z)V	v	setPatrolLeader
	m	(Z)V	w	setPatrolling
	f	Lgj;	b	patrolTarget
	f	Z	c	patrolLeader
	f	Z	d	patrolling
c	bme$a	net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal
	m	()Z	a	canUse
	m	(Lbme;)Z	a	lambda$findPatrolCompanions$0
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Ljava/util/List;	h	findPatrolCompanions
	m	()Z	i	moveRandomly
	f	I	a	NAVIGATION_FAILED_COOLDOWN
	f	Lbme;	b	mob
	f	D	c	speedModifier
	f	D	d	leaderSpeedModifier
	f	J	e	cooldownUntil
c	bmf	net/minecraft/world/entity/monster/Phantom
	m	()Z	P	shouldDespawnInPeaceful
	m	()V	R	customServerAiStep
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(I)V	a	setPhantomSize
	m	(Laxo;)Z	a	canAttackType
	m	(Layk;)Laxl;	a	getDimensions
	m	(Lbmf;)Ljava/util/Random;	a	access$000
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	()Z	aK	isFlapping
	m	()V	a_	defineSynchedData
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lbmf;)Ljava/util/Random;	b	access$100
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lbmf;)Ljava/util/Random;	c	access$200
	m	()Lahl;	cO	getSoundSource
	m	(Lbmf;)Ljava/util/Random;	d	access$300
	m	(Lbmf;)Ljava/util/Random;	e	access$400
	m	()Layd;	er	getMobType
	m	()F	ev	getSoundVolume
	m	(Lbmf;)Ljava/util/Random;	f	access$500
	m	(Lbmf;)Ljava/util/Random;	g	access$600
	m	(Lbmf;)Ljava/util/Random;	h	access$700
	m	(Lbmf;)Ljava/util/Random;	i	access$800
	m	(Lbmf;)Ljava/util/Random;	j	access$900
	m	()V	k	tick
	m	(Lbmf;)Ljava/util/Random;	k	access$1000
	m	(Lbmf;)Ljava/util/Random;	l	access$1100
	m	()I	n	getPhantomSize
	m	()I	q	getUniqueFlapTickOffset
	m	()Lahj;	r	getAmbientSound
	m	()V	t	updatePhantomSizeInfo
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	m	()Lbcr;	y	createBodyControl
	f	F	b	FLAP_DEGREES_PER_TICK
	f	Lgj;	bU	anchorPoint
	f	Lbmf$a;	bV	attackPhase
	f	I	c	TICKS_PER_FLAP
	f	Lyb;	d	ID_SIZE
	f	Ldpo;	e	moveTargetPoint
c	bmf$a	net/minecraft/world/entity/monster/Phantom$AttackPhase
	m	()[Lbmf$a;	a	$values
	f	Lbmf$a;	a	CIRCLE
	f	Lbmf$a;	b	SWOOP
	f	[Lbmf$a;	c	$VALUES
c	bmf$b	net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbmf;	a	this$0
	f	Lbhf;	b	attackTargeting
	f	I	c	nextScanTick
c	bmf$c	net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()V	h	setAnchorAboveTarget
	f	Lbmf;	a	this$0
	f	I	b	nextSweepTick
c	bmf$d	net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl
	m	()V	a	clientTick
	f	Lbmf;	a	this$0
c	bmf$e	net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	m	()V	i	selectNext
	f	Lbmf;	a	this$0
	f	F	c	angle
	f	F	d	distance
	f	F	e	height
	f	F	f	clockwise
c	bmf$f	net/minecraft/world/entity/monster/Phantom$PhantomLookControl
	m	()V	a	tick
	f	Lbmf;	h	this$0
c	bmf$g	net/minecraft/world/entity/monster/Phantom$PhantomMoveControl
	m	()V	a	tick
	f	Lbmf;	l	this$0
	f	F	m	speed
c	bmf$h	net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal
	m	()Z	h	touchingTarget
	f	Lbmf;	b	this$0
c	bmf$i	net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbmf;	a	this$0
	f	I	c	CAT_SEARCH_TICK_DELAY
	f	Z	d	isScaredOfCat
	f	I	e	catSearchTick
c	bmg	net/minecraft/world/entity/monster/Pillager
	m	()V	a	onCrossbowAttackPerformed
	m	(IZ)V	a	applyRaidBuffs
	m	(Lawf;)V	a	populateDefaultEquipmentSlots
	m	(Laxy;F)V	a	performRangedAttack
	m	(Laxy;Lbuw;Lboz;F)V	a	shootCrossbowProjectile
	m	(Lbvk;)Z	a	canFireProjectileWeapon
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lgj;Lcay;)F	a	getWalkTargetValue
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lbli;)V	b	pickUpItem
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Z)V	b	setChargingCrossbow
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Lawa;	fJ	getInventory
	m	()I	ff	getMaxSpawnClusterSize
	m	()Z	fz	isChargingCrossbow
	m	(I)Layp;	k	getSlot
	m	(Lbuw;)Z	m	wantsItem
	m	()Lbll$a;	n	getArmPose
	m	(Laxk;)Z	p	isAlliedTo
	m	()Layy$a;	q	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	t	getCelebrateSound
	m	()V	u	registerGoals
	m	(F)V	x	enchantSpawnedWeapon
	m	()Lahj;	x_	getDeathSound
	f	Lyb;	b	IS_CHARGING_CROSSBOW
	f	I	bV	SLOT_OFFSET
	f	F	bW	CROSSBOW_POWER
	f	Lawm;	bX	inventory
	f	I	e	INVENTORY_SIZE
c	bmh	net/minecraft/world/entity/monster/RangedAttackMob
	m	(Laxy;F)V	a	performRangedAttack
c	bmi	net/minecraft/world/entity/monster/Ravager
	m	(Laxk;)Z	B	hasLineOfSight
	m	()V	M	updateControlFlags
	m	()I	U	getMaxHeadYRot
	m	(B)V	a	handleEntityEvent
	m	(IZ)V	a	applyRaidBuffs
	m	(Laxk;)V	a	strongKnockback
	m	(Lcav;)Lbgf;	a	createNavigation
	m	(Lcay;)Z	a	checkSpawnObstruction
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Laxk;)Z	b	lambda$static$0
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	()D	bq	getPassengersRidingOffset
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Laxk;	cE	getControllingPassenger
	m	(Laxy;)V	e	blockedByShield
	m	()Z	ex	isImmobile
	m	()Z	fA	canBeLeader
	m	()I	fJ	getRoarTick
	m	()V	fK	stunEffect
	m	()V	fL	roar
	m	()Z	fg	canBeControlledByRider
	m	()I	fz	getStunnedTick
	m	(Laxy;)Z	j	lambda$registerGoals$1
	m	()Layy$a;	n	createAttributes
	m	()I	q	getAttackTick
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	t	getCelebrateSound
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	m	(Laxk;)Z	z	doHurtTarget
	f	I	b	STUN_DURATION
	f	D	bV	BASE_MOVEMENT_SPEED
	f	D	bW	ATTACK_MOVEMENT_SPEED
	f	I	bX	STUNNED_COLOR
	f	D	bY	STUNNED_COLOR_BLUE
	f	D	bZ	STUNNED_COLOR_GREEN
	f	D	ca	STUNNED_COLOR_RED
	f	I	cb	ATTACK_DURATION
	f	I	cc	attackTick
	f	I	cd	stunnedTick
	f	I	ce	roarTick
	f	Ljava/util/function/Predicate;	e	NO_RAVAGER_AND_ALIVE
c	bmi$a	net/minecraft/world/entity/monster/Ravager$RavagerMeleeAttackGoal
	m	(Laxy;)D	a	getAttackReachSqr
	f	Lbmi;	b	this$0
c	bmi$b	net/minecraft/world/entity/monster/Ravager$RavagerNavigation
	m	(I)Ldjp;	a	createPathFinder
c	bmi$c	net/minecraft/world/entity/monster/Ravager$RavagerNodeEvaluator
	m	(Lcab;ZZLgj;Ldjj;)Ldjj;	a	evaluateBlockPathType
c	bmj	net/minecraft/world/entity/monster/Shulker
	m	(F)Ljava/util/Optional;	A	getRenderPosition
	m	(F)F	B	getPhysicalPeek
	m	()V	K	playAmbientSound
	m	()I	T	getMaxHeadXRot
	m	()I	U	getMaxHeadYRot
	m	(DDDFFIZ)V	a	lerpTo
	m	(I)V	a	setRawPeekAmount
	m	(Lawu;F)Z	a	hurt
	m	(Laxk;)Z	a	lambda$onPeekAmountChange$1
	m	(Laxk;Z)Z	a	startRiding
	m	(Laye;Ldpo;)V	a	move
	m	(Lbmj;)Ljava/util/Random;	a	access$000
	m	(Lbts;)V	a	setColor
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lgj;Lgo;)Z	a	canStayAt
	m	(Lgo;)V	a	setAttachFace
	m	(Lgo;F)Ldpj;	a	getProgressAabb
	m	(Lgo;FF)Ldpj;	a	getProgressDeltaAabb
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lri;)V	a	recreateFromPacket
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	()Laxk$b;	aN	getMovementEmission
	m	()V	a_	defineSynchedData
	m	()Ldpj;	al	makeBoundingBox
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lbmj;)Ljava/util/Random;	b	access$100
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	bn	canBeCollidedWith
	m	()D	bp	getMyRidingOffset
	m	()F	bu	getPickRadius
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lbmj;)Ljava/util/Random;	c	access$200
	m	()Lahl;	cO	getSoundSource
	m	(Lbmj;)Ljava/util/Random;	d	access$300
	m	()Ldpo;	da	getDeltaMovement
	m	(DDD)V	e	setPos
	m	(Lbmj;)Ljava/util/Random;	e	access$400
	m	()V	fA	findNewAttachment
	m	()Z	fB	updatePeekAmount
	m	()V	fC	onPeekAmountChange
	m	()Z	fD	isClosed
	m	()V	fE	hitByShulkerBullet
	m	()I	fF	getRawPeekAmount
	m	()Lk;	fG	lambda$static$0
	m	()Lbts;	fz	getColor
	m	(Laxk;)V	g	push
	m	(Ldpo;)V	g	setDeltaMovement
	m	(Lgj;)Lgo;	g	findAttachableSurface
	m	(Lgj;)Z	h	isPositionBlocked
	m	()V	k	tick
	m	()Layy$a;	n	createAttributes
	m	()V	p	stopRiding
	m	()Z	q	teleportSomewhere
	m	()Lahj;	r	getAmbientSound
	m	()Lgo;	t	getAttachFace
	m	()V	u	registerGoals
	m	()Lahj;	x_	getDeathSound
	m	()Lbcr;	y	createBodyControl
	m	(F)F	z	getClientPeekAmount
	f	Lyb;	b	DATA_ATTACH_FACE_ID
	f	Layx;	bV	COVERED_ARMOR_MODIFIER
	f	I	bW	TELEPORT_STEPS
	f	B	bX	NO_COLOR
	f	B	bY	DEFAULT_COLOR
	f	I	bZ	MAX_TELEPORT_DISTANCE
	f	Lyb;	c	DATA_PEEK_ID
	f	I	ca	OTHER_SHULKER_SCAN_RADIUS
	f	I	cb	OTHER_SHULKER_LIMIT
	f	F	cc	PEEK_PER_TICK
	f	Lk;	cd	FORWARD
	f	F	ce	currentPeekAmountO
	f	F	cf	currentPeekAmount
	f	Lgj;	cg	clientOldAttachPosition
	f	I	ch	clientSideTeleportInterpolation
	f	F	ci	MAX_LID_OPEN
	f	Lyb;	d	DATA_COLOR_ID
	f	Ljava/util/UUID;	e	COVERED_ARMOR_MODIFIER_UUID
c	bmj$a	net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbmj;	a	this$0
	f	I	b	attackTime
c	bmj$b	net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl
	m	()V	a	clientTick
c	bmj$c	net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal
	m	()Z	a	canUse
	m	(D)Ldpj;	a	getTargetSearchArea
	m	(Laxy;)Z	b	lambda$new$0
c	bmj$d	net/minecraft/world/entity/monster/Shulker$ShulkerLookControl
	m	()V	b	clampHeadRotationToBody
	m	()Ljava/util/Optional;	h	getXRotD
	m	()Ljava/util/Optional;	i	getYRotD
	f	Lbmj;	h	this$0
c	bmj$e	net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal
	m	()Z	a	canUse
	m	(D)Ldpj;	a	getTargetSearchArea
	f	Lbmj;	i	this$0
c	bmj$f	net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbmj;	a	this$0
	f	I	b	peekTime
c	bmk	net/minecraft/world/entity/monster/Silverfish
	m	(Lawu;F)Z	a	hurt
	m	(Lgj;Lcay;)F	a	getWalkTargetValue
	m	()Laxk$b;	aN	getMovementEmission
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	b	checkSilverfishSpawnRules
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lgj;Lcov;)V	b	playStepSound
	m	()D	bp	getMyRidingOffset
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Layd;	er	getMobType
	m	()V	k	tick
	m	(F)V	m	setYBodyRot
	m	()Layy$a;	n	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	()V	u	registerGoals
	m	()Lahj;	x_	getDeathSound
	f	Lbmk$b;	b	friendsGoal
c	bmk$a	net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lgo;	i	selectedDirection
	f	Z	j	doMerge
c	bmk$b	net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal
	m	()Z	a	canUse
	m	()V	e	tick
	m	()V	h	notifyHurt
	f	Lbmk;	a	silverfish
	f	I	b	lookForFriends
c	bml	net/minecraft/world/entity/monster/Skeleton
	m	(I)V	a	startFreezeConversion
	m	(Lawu;IZ)V	a	dropCustomDeathLoot
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Z	dl	canFreeze
	m	()Z	fA	isFreezeConverting
	m	()V	fB	doFreezeConversion
	m	()Z	fz	isShaking
	m	()V	k	tick
	m	()Lahj;	q	getStepSound
	m	()Lahj;	r	getAmbientSound
	m	(Z)V	v	setFreezeConverting
	m	()Lahj;	x_	getDeathSound
	f	Ljava/lang/String;	b	CONVERSION_TAG
	f	Lyb;	c	DATA_STRAY_CONVERSION_ID
	f	I	d	inPowderSnowTime
	f	I	e	conversionTime
c	bmm	net/minecraft/world/entity/monster/Slime
	m	()Lyt;	N	getDefaultLootTable
	m	()Z	P	shouldDespawnInPeaceful
	m	()I	T	getMaxHeadXRot
	m	(IZ)V	a	setSize
	m	(Laxk$c;)V	a	remove
	m	(Layk;)Laxl;	a	getDimensions
	m	(Lbmm;)Z	a	access$000
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	()V	a_	defineSynchedData
	m	()Laxo;	ad	getType
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lboj;)V	b	playerTouch
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	c	checkSlimeSpawnRules
	m	()V	eA	jumpFromGround
	m	()F	ev	getSoundVolume
	m	()Lahj;	fA	getSquishSound
	m	()Lahj;	fB	getJumpSound
	m	()I	fC	getSize
	m	()Z	fD	isTiny
	m	()Z	fE	doPlayJumpSound
	m	()V	fx	decreaseSquish
	m	()Z	fy	isDealsDamage
	m	()F	fz	getAttackDamage
	m	(Laxk;)V	g	push
	m	(Laxy;)V	j	dealDamage
	m	()V	k	tick
	m	(Laxy;)Z	k	lambda$registerGoals$0
	m	()F	n	getSoundPitch
	m	()Lia;	q	getParticleType
	m	()I	t	getJumpDelay
	m	()V	u	registerGoals
	m	()Lahj;	x_	getDeathSound
	m	()V	z_	refreshDimensions
	f	I	b	MIN_SIZE
	f	F	bU	oSquish
	f	Lyb;	bV	ID_SIZE
	f	Z	bW	wasOnGround
	f	I	c	MAX_SIZE
	f	F	d	targetSquish
	f	F	e	squish
c	bmm$a	net/minecraft/world/entity/monster/Slime$SlimeAttackGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbmm;	a	slime
	f	I	b	growTiredTimer
c	bmm$b	net/minecraft/world/entity/monster/Slime$SlimeFloatGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbmm;	a	slime
c	bmm$c	net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbmm;	a	slime
c	bmm$d	net/minecraft/world/entity/monster/Slime$SlimeMoveControl
	m	()V	a	tick
	m	(D)V	a	setWantedMovement
	m	(FZ)V	a	setDirection
	f	F	l	yRot
	f	I	m	jumpDelay
	f	Lbmm;	n	slime
	f	Z	o	isAggressive
c	bmm$e	net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbmm;	a	slime
	f	F	b	chosenDegrees
	f	I	c	nextRandomizeTime
c	bmn	net/minecraft/world/entity/monster/SpellcasterIllager
	m	()V	R	customServerAiStep
	m	(Lbmn$a;)V	a	setIsCastingSpell
	m	(Lbmn;)Lbgf;	a	access$000
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	fJ	isCastingSpell
	m	()Lbmn$a;	fK	getCurrentSpell
	m	()I	fL	getSpellCastingTime
	m	()Lahj;	fz	getCastingSoundEvent
	m	()V	k	tick
	m	()Lbll$a;	n	getArmPose
	f	I	b	spellCastingTickCount
	f	Lbmn$a;	bV	currentSpell
	f	Lyb;	e	DATA_SPELL_CASTING_ID
c	bmn$a	net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell
	m	()[Lbmn$a;	a	$values
	m	(I)Lbmn$a;	a	byId
	f	Lbmn$a;	a	NONE
	f	Lbmn$a;	b	SUMMON_VEX
	f	Lbmn$a;	c	FANGS
	f	Lbmn$a;	d	WOLOLO
	f	Lbmn$a;	e	DISAPPEAR
	f	Lbmn$a;	f	BLINDNESS
	f	I	g	id
	f	[D	h	spellColor
	f	[Lbmn$a;	i	$VALUES
c	bmn$b	net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbmn;	b	this$0
c	bmn$c	net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lahj;	l	getSpellPrepareSound
	m	()Lbmn$a;	m	getSpell
	m	()I	n	getCastWarmupTime
	f	I	b	attackWarmupDelay
	f	I	c	nextAttackTickCount
	f	Lbmn;	d	this$0
c	bmo	net/minecraft/world/entity/monster/Spider
	m	(Lcav;)Lbgf;	a	createNavigation
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lcov;Ldpo;)V	a	makeStuckInBlock
	m	()V	a_	defineSynchedData
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lgj;Lcov;)V	b	playStepSound
	m	()Z	b_	onClimbable
	m	()D	bq	getPassengersRidingOffset
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxe;)Z	c	canBeAffected
	m	()Layd;	er	getMobType
	m	()V	k	tick
	m	()Layy$a;	q	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	()Z	t	isClimbing
	m	()V	u	registerGoals
	m	(Z)V	v	setClimbing
	m	()Lahj;	x_	getDeathSound
	f	Lyb;	b	DATA_FLAGS_ID
	f	F	c	SPIDER_SPECIAL_EFFECT_CHANCE
c	bmo$a	net/minecraft/world/entity/monster/Spider$SpiderAttackGoal
	m	()Z	a	canUse
	m	(Laxy;)D	a	getAttackReachSqr
	m	()Z	b	canContinueToUse
c	bmo$b	net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData
	m	(Ljava/util/Random;)V	a	setRandomEffect
	f	Laxc;	a	effect
c	bmo$c	net/minecraft/world/entity/monster/Spider$SpiderTargetGoal
	m	()Z	a	canUse
c	bmp	net/minecraft/world/entity/monster/Stray
	m	(Laxo;Lcbk;Layc;Lgj;Ljava/util/Random;)Z	a	checkStraySpawnRules
	m	(Lbuw;F)Lbon;	b	getArrow
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Lahj;	q	getStepSound
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	x_	getDeathSound
c	bmq	net/minecraft/world/entity/monster/Strider
	m	()Z	a	boost
	m	(DZLcov;Lgj;)V	a	checkFallDamage
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lahl;)V	a	equipSaddle
	m	(Lcav;)Lbgf;	a	createNavigation
	m	(Lcay;)Z	a	checkSpawnObstruction
	m	(Lcbk;Lawf;Laya;Layq;)Layq;	a	spawnJockey
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Ldix;)Z	a	canStandOnFluid
	m	(Ldpo;)V	a	travelWithInput
	m	(Lgj;Lcay;)F	a	getWalkTargetValue
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	()F	aE	nextStep
	m	()V	a_	defineSynchedData
	m	()F	b	getSteeringSpeed
	m	(Ladw;Laxi;)Lbmq;	b	getBreedOffspring
	m	(Laxy;)Ldpo;	b	getDismountLocationForPassenger
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	bE	isOnFire
	m	()D	bq	getPassengersRidingOffset
	m	()Z	c	isSaddleable
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	c	checkStriderSpawnRules
	m	()Laxk;	cE	getControllingPassenger
	m	()Ldpo;	cz	getLeashOffset
	m	()Z	d	isSaddled
	m	()Z	eE	isSensitiveToWater
	m	()V	ed	dropEquipment
	m	()Z	fA	isPanicking
	m	()Z	fB	isBeingTempted
	m	()V	fH	floatStrider
	m	()Z	fg	canBeControlledByRider
	m	()Layy$a;	fz	createAttributes
	m	(Ldpo;)V	h	travel
	m	()V	k	tick
	m	(Lbuw;)Z	n	isFood
	m	(Laxk;)Z	o	canAddPassenger
	m	()Z	q	isSuffocating
	m	()Lahj;	r	getAmbientSound
	m	()F	t	getMoveSpeed
	m	()V	u	registerGoals
	m	(Z)V	v	setSuffocating
	m	()Z	x	shouldPassengersInheritMalus
	m	()Lahj;	x_	getDeathSound
	f	F	bV	SUFFOCATE_STEERING_MODIFIER
	f	F	bW	SUFFOCATE_SPEED_MODIFIER
	f	F	bY	STEERING_MODIFIER
	f	Lbxl;	bZ	FOOD_ITEMS
	f	Lbxl;	ca	TEMPT_ITEMS
	f	Lyb;	cb	DATA_BOOST_TIME
	f	Lyb;	cc	DATA_SUFFOCATING
	f	Lyb;	cd	DATA_SADDLE_ID
	f	Laxu;	ce	steering
	f	Lbfa;	cf	temptGoal
	f	Lbem;	cg	panicGoal
c	bmq$a	net/minecraft/world/entity/monster/Strider$StriderGoToLavaGoal
	m	()Z	a	canUse
	m	(Lcay;Lgj;)Z	a	isValidTarget
	m	()Z	b	canContinueToUse
	m	()Lgj;	k	getMoveToTarget
	m	()Z	l	shouldRecalculatePath
	f	Lbmq;	g	strider
c	bmq$b	net/minecraft/world/entity/monster/Strider$StriderPathNavigation
	m	(I)Ldjp;	a	createPathFinder
	m	(Ldjj;)Z	a	hasValidPathType
	m	(Lgj;)Z	a	isStableDestination
c	bmr	net/minecraft/world/entity/monster/Vex
	m	(I)V	a	setLimitedLife
	m	(IZ)V	a	setVexFlag
	m	(Lawf;)V	a	populateDefaultEquipmentSlots
	m	(Laya;)V	a	setOwner
	m	(Laye;Ldpo;)V	a	move
	m	(Lbmr;)Ljava/util/Random;	a	access$000
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lok;)V	a	readAdditionalSaveData
	m	()Z	aK	isFlapping
	m	()V	a_	defineSynchedData
	m	(I)Z	b	getVexFlag
	m	(Lbmr;)Lbcw;	b	access$100
	m	(Lok;)V	b	addAdditionalSaveData
	m	()F	bd	getBrightness
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lbmr;)Lbcw;	c	access$200
	m	(Lbmr;)Ljava/util/Random;	d	access$300
	m	(Lbmr;)Ljava/util/Random;	e	access$400
	m	(Lbmr;)Ljava/util/Random;	f	access$500
	m	()Z	fz	isCharging
	m	(Lbmr;)Ljava/util/Random;	g	access$600
	m	(Lgj;)V	g	setBoundOrigin
	m	(Lbmr;)Lbcw;	h	access$700
	m	()V	k	tick
	m	()Layy$a;	n	createAttributes
	m	()Laya;	q	getOwner
	m	()Lahj;	r	getAmbientSound
	m	()Lgj;	t	getBoundOrigin
	m	()V	u	registerGoals
	m	(Z)V	v	setIsCharging
	m	()Lahj;	x_	getDeathSound
	f	F	b	FLAP_DEGREES_PER_TICK
	f	Laya;	bV	owner
	f	Lgj;	bW	boundOrigin
	f	Z	bX	hasLimitedLife
	f	I	bY	limitedLifeTicks
	f	I	c	TICKS_PER_FLAP
	f	Lyb;	d	DATA_FLAGS_ID
	f	I	e	FLAG_IS_CHARGING
c	bmr$a	net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbmr;	a	this$0
c	bmr$b	net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbmr;	a	this$0
	f	Lbhf;	b	copyOwnerTargeting
c	bmr$c	net/minecraft/world/entity/monster/Vex$VexMoveControl
	m	()V	a	tick
	f	Lbmr;	l	this$0
c	bmr$d	net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	f	Lbmr;	a	this$0
c	bms	net/minecraft/world/entity/monster/Vindicator
	m	()V	R	customServerAiStep
	m	(IZ)V	a	applyRaidBuffs
	m	(Lawe;)Z	a	lambda$static$0
	m	(Lawf;)V	a	populateDefaultEquipmentSlots
	m	(Lbms;)Ljava/util/Random;	a	access$000
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lqk;)V	a	setCustomName
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Lbll$a;	n	getArmPose
	m	(Laxk;)Z	p	isAlliedTo
	m	()Layy$a;	q	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	t	getCelebrateSound
	m	()V	u	registerGoals
	m	()Lahj;	x_	getDeathSound
	f	Ljava/lang/String;	b	TAG_JOHNNY
	f	Z	bV	isJohnny
	f	Ljava/util/function/Predicate;	e	DOOR_BREAKING_PREDICATE
c	bms$a	net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
c	bms$b	net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal
	m	()Z	a	canUse
	m	()V	c	start
c	bms$c	net/minecraft/world/entity/monster/Vindicator$VindicatorMeleeAttackGoal
	m	(Laxy;)D	a	getAttackReachSqr
	f	Lbms;	b	this$0
c	bmt	net/minecraft/world/entity/monster/Witch
	m	(B)V	a	handleEntityEvent
	m	(IZ)V	a	applyRaidBuffs
	m	(Laxy;F)V	a	performRangedAttack
	m	()V	a_	defineSynchedData
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lawu;F)F	e	getDamageAfterMagicAbsorb
	m	()Z	fA	canBeLeader
	m	(Laxy;)Z	j	lambda$registerGoals$0
	m	()Z	n	isDrinkingPotion
	m	()Layy$a;	q	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	t	getCelebrateSound
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	(Z)V	x	setUsingItem
	m	()Lahj;	x_	getDeathSound
	f	Ljava/util/UUID;	b	SPEED_MODIFIER_DRINKING_UUID
	f	Lyb;	bV	DATA_USING_ITEM
	f	I	bW	usingTime
	f	Lbfn;	bX	healRaidersGoal
	f	Lbfm;	bY	attackPlayersGoal
	f	Layx;	e	SPEED_MODIFIER_DRINKING
c	bmu	net/minecraft/world/entity/monster/WitherSkeleton
	m	(Lawf;)V	a	populateDefaultEquipmentSlots
	m	(Lawu;IZ)V	a	dropCustomDeathLoot
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lawf;)V	b	populateDefaultEquipmentEnchantments
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lbuw;F)Lbon;	b	getArrow
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxe;)Z	c	canBeAffected
	m	()Lahj;	q	getStepSound
	m	()Lahj;	r	getAmbientSound
	m	()V	u	registerGoals
	m	()Lahj;	x_	getDeathSound
	m	(Laxk;)Z	z	doHurtTarget
c	bmv	net/minecraft/world/entity/monster/Zoglin
	m	()V	Q	sendDebugPackets
	m	()V	R	customServerAiStep
	m	(B)V	a	handleEntityEvent
	m	(Lawu;F)Z	a	hurt
	m	(Layt;)V	a	initCoreActivity
	m	(Lboj;)Z	a	canBeLeashed
	m	(Lcom/mojang/serialization/Dynamic;)Layt;	a	makeBrain
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	(Z)V	a	setBaby
	m	()V	a_	defineSynchedData
	m	(Layt;)V	b	initIdleActivity
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	()D	bq	getPassengersRidingOffset
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Layt;)V	c	initFightActivity
	m	()Layt;	du	getBrain
	m	()Layt$b;	dv	brainProvider
	m	(Laxy;)V	e	blockedByShield
	m	()Layd;	er	getMobType
	m	()V	fA	playAngrySound
	m	()Ljava/util/Optional;	fB	findNearestValidAttackTarget
	m	()I	fz	getAttackAnimationRemainingTicks
	m	(Laxy;)Z	j	isTargetable
	m	(Laxy;)V	k	setAttackTarget
	m	()Layy$a;	n	createAttributes
	m	()Z	q	isAdult
	m	()Lahj;	r	getAmbientSound
	m	()V	t	updateActivity
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	m	()Z	y_	isBaby
	m	(Laxk;)Z	z	doHurtTarget
	f	Lcom/google/common/collect/ImmutableList;	b	SENSOR_TYPES
	f	I	bV	ATTACK_KNOCKBACK
	f	F	bW	KNOCKBACK_RESISTANCE
	f	I	bX	ATTACK_DAMAGE
	f	F	bY	BABY_ATTACK_DAMAGE
	f	I	bZ	ATTACK_INTERVAL
	f	Lcom/google/common/collect/ImmutableList;	c	MEMORY_TYPES
	f	I	ca	BABY_ATTACK_INTERVAL
	f	I	cb	ATTACK_DURATION
	f	F	cc	MOVEMENT_SPEED_WHEN_FIGHTING
	f	F	cd	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	ce	attackAnimationRemainingTicks
	f	Lyb;	d	DATA_BABY_ID
	f	I	e	MAX_HEALTH
c	bmw	net/minecraft/world/entity/monster/Zombie
	m	()Z	K_	isSunSensitive
	m	(I)V	a	startUnderWaterConversion
	m	(Ladw;Laxy;)V	a	killed
	m	(Lawe;)Z	a	lambda$static$0
	m	(Lawf;)V	a	populateDefaultEquipmentSlots
	m	(Lawu;F)Z	a	hurt
	m	(Lawu;IZ)V	a	dropCustomDeathLoot
	m	(Lbmw;)Ljava/util/Random;	a	access$000
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Ljava/util/Random;)Z	a	getSpawnAsBabyOdds
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	(Z)V	a	setBaby
	m	()V	a_	defineSynchedData
	m	(Laxo;)V	b	convertToZombieType
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	()D	bp	getMyRidingOffset
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lboj;)I	d	getExperienceReward
	m	()Layd;	er	getMobType
	m	()Z	fA	convertsInWater
	m	()V	fC	doUnderWaterConversion
	m	()Layy$a;	fF	createAttributes
	m	()Z	fG	isUnderWaterConverting
	m	()Z	fH	canBreakDoors
	m	()V	fI	randomizeReinforcementsChance
	m	()Lbuw;	fz	getSkull
	m	()V	k	tick
	m	(Lbuw;)Z	k	canHoldItem
	m	(Lbuw;)Z	l	wantsToPickUp
	m	()V	n	addBehaviourGoals
	m	()Z	q	supportsBreakDoorGoal
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	t	getStepSound
	m	()V	u	registerGoals
	m	(Z)V	w	setCanBreakDoors
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	m	()Z	y_	isBaby
	m	(F)V	z	handleAttributes
	m	(Laxk;)Z	z	doHurtTarget
	f	Ljava/util/UUID;	b	SPEED_MODIFIER_BABY_UUID
	f	I	bV	REINFORCEMENT_ATTEMPTS
	f	I	bW	REINFORCEMENT_RANGE_MAX
	f	I	bX	REINFORCEMENT_RANGE_MIN
	f	Lyb;	bY	DATA_SPECIAL_TYPE_ID
	f	Lyb;	bZ	DATA_DROWNED_CONVERSION_ID
	f	Layx;	c	SPEED_MODIFIER_BABY
	f	F	ca	BREAK_DOOR_CHANCE
	f	Ljava/util/function/Predicate;	cb	DOOR_BREAKING_PREDICATE
	f	Lbdd;	cc	breakDoorGoal
	f	Z	cd	canBreakDoors
	f	I	ce	inWaterTime
	f	I	cf	conversionTime
	f	Lyb;	d	DATA_BABY_ID
	f	F	e	ZOMBIE_LEADER_CHANCE
c	bmw$a	net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal
	m	(Lcav;Lgj;)V	a	playBreakSound
	m	(Lcaw;Lgj;)V	a	playDestroyProgressSound
	m	()D	i	acceptedDistance
	f	Lbmw;	g	this$0
c	bmw$b	net/minecraft/world/entity/monster/Zombie$ZombieGroupData
	f	Z	a	isBaby
	f	Z	b	canSpawnJockey
c	bmx	net/minecraft/world/entity/monster/ZombieVillager
	m	(B)V	a	handleEntityEvent
	m	(I)V	a	setVillagerXp
	m	(Lbnx;)V	a	setVillagerData
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lgs;)V	a	lambda$new$0
	m	(Ljava/util/UUID;I)V	a	startConverting
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lok;Lpd;)V	a	lambda$addAdditionalSaveData$1
	m	(Lpd;)V	a	setGossips
	m	()V	a_	defineSynchedData
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Ladw;)V	c	finishConversion
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lok;)V	c	setTradeOffers
	m	()F	ew	getVoicePitch
	m	()Z	fA	convertsInWater
	m	()Z	fJ	isConverting
	m	()Lbnx;	fK	getVillagerData
	m	()I	fL	getVillagerXp
	m	()I	fM	getConversionProgress
	m	()Lbuw;	fz	getSkull
	m	(D)Z	h	removeWhenFarAway
	m	()V	k	tick
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	t	getStepSound
	m	()Lahj;	x_	getDeathSound
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	bY	VILLAGER_CONVERSION_WAIT_MIN
	f	I	bZ	VILLAGER_CONVERSION_WAIT_MAX
	f	Lyb;	c	DATA_CONVERTING_ID
	f	I	ca	MAX_SPECIAL_BLOCKS_COUNT
	f	I	cb	SPECIAL_BLOCK_RADIUS
	f	I	cc	villagerConversionTime
	f	Ljava/util/UUID;	cd	conversionStarter
	f	Lpd;	ce	gossips
	f	Lok;	cf	tradeOffers
	f	I	cg	villagerXp
	f	Lyb;	d	DATA_VILLAGER_DATA
c	bmy	net/minecraft/world/entity/monster/ZombifiedPiglin
	m	()V	R	customServerAiStep
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
	m	(Lawf;)V	a	populateDefaultEquipmentSlots
	m	(Lbmy;)V	a	lambda$alertOthers$3
	m	(Lcay;)Z	a	checkSpawnObstruction
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
	m	(Lok;)V	a	readAdditionalSaveData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	b	checkZombifiedPiglinSpawnRules
	m	(Lbmy;)Z	b	lambda$alertOthers$2
	m	(Lok;)V	b	addAdditionalSaveData
	m	()D	bp	getMyRidingOffset
	m	()V	c	startPersistentAngerTimer
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lbmy;)Z	c	lambda$alertOthers$1
	m	(Lbmy;)Z	d	lambda$alertOthers$0
	m	(Lboj;)Z	f	isPreventingPlayerRest
	m	()Z	fA	convertsInWater
	m	()V	fI	randomizeReinforcementsChance
	m	()Layy$a;	fJ	createAttributes
	m	()V	fK	maybePlayFirstAngerSound
	m	()V	fL	maybeAlertOthers
	m	()V	fM	alertOthers
	m	()V	fN	playAngerSound
	m	()Lbuw;	fz	getSkull
	m	(Laxy;)V	h	setTarget
	m	(Lbuw;)Z	l	wantsToPickUp
	m	()V	n	addBehaviourGoals
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	x_	getDeathSound
	f	Lavs;	bY	FIRST_ANGER_SOUND_DELAY
	f	I	bZ	playFirstAngerSoundIn
	f	Ljava/util/UUID;	c	SPEED_MODIFIER_ATTACKING_UUID
	f	Lavs;	ca	PERSISTENT_ANGER_TIME
	f	I	cb	remainingPersistentAngerTime
	f	Ljava/util/UUID;	cc	persistentAngerTarget
	f	I	cd	ALERT_RANGE_Y
	f	Lavs;	ce	ALERT_INTERVAL
	f	I	cf	ticksUntilNextAlert
	f	Layx;	d	SPEED_MODIFIER_ATTACKING
c	bmz	net/minecraft/world/entity/monster/hoglin/Hoglin
	m	()V	Q	sendDebugPackets
	m	()V	R	customServerAiStep
	m	(B)V	a	handleEntityEvent
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lahj;)V	a	playSound
	m	(Lawu;F)Z	a	hurt
	m	(Lboj;)Z	a	canBeLeashed
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lcom/mojang/serialization/Dynamic;)Layt;	a	makeBrain
	m	(Lgj;Lcay;)F	a	getWalkTargetValue
	m	(Lok;)V	a	readAdditionalSaveData
	m	()Lahj;	aF	getSwimSound
	m	()Lahj;	aG	getSwimSplashSound
	m	()V	a_	defineSynchedData
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	()D	bq	getPassengersRidingOffset
	m	(Ladw;)V	c	finishConversion
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	c	checkHoglinSpawnRules
	m	()Lahl;	cO	getSoundSource
	m	(Lboj;)I	d	getExperienceReward
	m	()Z	dI	shouldDropExperience
	m	()Layt;	du	getBrain
	m	()Layt$b;	dv	brainProvider
	m	(Laxy;)V	e	blockedByShield
	m	()Z	fA	isConverting
	m	()Z	fB	canBeHunted
	m	()Z	fC	canFallInLove
	m	()Z	fH	isImmuneToZombification
	m	()I	fz	getAttackAnimationRemainingTicks
	m	(D)Z	h	removeWhenFarAway
	m	()V	n	ageBoundaryReached
	m	(Lbuw;)Z	n	isFood
	m	()Layy$a;	q	createAttributes
	m	()Lahj;	r	getAmbientSound
	m	()Z	t	isAdult
	m	(Z)V	v	setImmuneToZombification
	m	(Z)V	w	setCannotBeHunted
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	m	(Laxk;)Z	z	doHurtTarget
	f	Lcom/google/common/collect/ImmutableList;	bV	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bW	MEMORY_TYPES
	f	Lyb;	bY	DATA_IMMUNE_TO_ZOMBIFICATION
	f	F	bZ	PROBABILITY_OF_SPAWNING_AS_BABY
	f	I	ca	MAX_HEALTH
	f	F	cb	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	cc	ATTACK_KNOCKBACK
	f	F	cd	KNOCKBACK_RESISTANCE
	f	I	ce	ATTACK_DAMAGE
	f	F	cf	BABY_ATTACK_DAMAGE
	f	I	cg	CONVERSION_TIME
	f	I	ch	attackAnimationRemainingTicks
	f	I	ci	timeInOverworld
	f	Z	cj	cannotBeHunted
c	bna	net/minecraft/world/entity/monster/hoglin/HoglinAi
	m	()Lbbe;	a	createIdleMovementBehaviors
	m	(Laxy;Lbmz;)V	a	lambda$broadcastAttackTarget$1
	m	(Layt;)Layt;	a	makeBrain
	m	(Lbmz;)V	a	updateActivity
	m	(Lbmz;Laxy;)V	a	onHitTarget
	m	(Lbmz;Lbps;)Lahj;	a	getSoundForActivity
	m	(Lbmz;Lgj;)Z	a	isPosNearNearestRepellent
	m	(Laxy;Lbmz;)V	b	lambda$broadcastRetreat$0
	m	(Layt;)V	b	initCoreActivity
	m	(Lbmz;)Ljava/util/Optional;	b	getSoundForCurrentActivity
	m	(Lbmz;Laxy;)V	b	wasHurtBy
	m	(Lbmz;Lbps;)Lahj;	b	lambda$getSoundForCurrentActivity$2
	m	(Layt;)V	c	initIdleActivity
	m	(Lbmz;)Z	c	isPacified
	m	(Lbmz;Laxy;)V	c	broadcastRetreat
	m	(Layt;)V	d	initFightActivity
	m	(Lbmz;)Ljava/util/Optional;	d	findNearestValidAttackTarget
	m	(Lbmz;Laxy;)V	d	retreatFromNearestTarget
	m	(Layt;)V	e	initRetreatActivity
	m	(Lbmz;)Z	e	wantsToStopFleeing
	m	(Lbmz;Laxy;)V	e	setAvoidTarget
	m	(Lbmz;)Z	f	piglinsOutnumberHoglins
	m	(Lbmz;Laxy;)V	f	maybeRetaliate
	m	(Lbmz;)Ljava/util/List;	g	getVisibleAdultHoglins
	m	(Lbmz;Laxy;)V	g	setAttackTarget
	m	(Lbmz;)Z	h	isNearRepellent
	m	(Lbmz;Laxy;)V	h	broadcastAttackTarget
	m	(Lbmz;)Z	i	isBreeding
	m	(Lbmz;Laxy;)V	i	setAttackTargetIfCloserThanCurrent
	f	I	a	REPELLENT_DETECTION_RANGE_HORIZONTAL
	f	I	b	REPELLENT_DETECTION_RANGE_VERTICAL
	f	Lavs;	c	RETREAT_DURATION
	f	I	d	ATTACK_DURATION
	f	I	e	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_IDLING
	f	I	f	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_RETREATING
	f	I	g	ATTACK_INTERVAL
	f	I	h	BABY_ATTACK_INTERVAL
	f	I	i	REPELLENT_PACIFY_TIME
	f	Lavs;	j	ADULT_FOLLOW_RANGE
	f	F	k	SPEED_MULTIPLIER_WHEN_AVOIDING_REPELLENT
	f	F	l	SPEED_MULTIPLIER_WHEN_RETREATING
	f	F	m	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	n	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	o	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
c	bnb	net/minecraft/world/entity/monster/hoglin/HoglinBase
	m	(Laxy;Laxy;)Z	a	hurtAndThrowTarget
	m	(Laxy;Laxy;)V	b	throwTarget
	m	()I	fz	getAttackAnimationRemainingTicks
	f	I	i_	ATTACK_ANIMATION_DURATION
c	bnc	net/minecraft/world/entity/monster/hoglin/package-info
c	bnd	net/minecraft/world/entity/monster/package-info
c	bne	net/minecraft/world/entity/monster/piglin/AbstractPiglin
	m	()Laxy;	G	getTarget
	m	()V	K	playAmbientSound
	m	()V	Q	sendDebugPackets
	m	()V	R	customServerAiStep
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lok;)V	b	addAdditionalSaveData
	m	()D	bp	getMyRidingOffset
	m	(Ladw;)V	c	finishConversion
	m	()Lbnh;	fA	getArmPose
	m	()Z	fB	isHoldingMeleeWeapon
	m	()V	fC	playConvertedSound
	m	()V	fF	applyOpenDoorsAbility
	m	()Z	fz	isAdult
	m	()Z	n	canHunt
	m	()Z	q	isImmuneToZombification
	m	()Z	t	isConverting
	m	(Z)V	v	setImmuneToZombification
	f	Lyb;	b	DATA_IMMUNE_TO_ZOMBIFICATION
	f	I	c	CONVERSION_TIME
	f	I	d	timeInOverworld
c	bnf	net/minecraft/world/entity/monster/piglin/Piglin
	m	()Z	P	shouldDespawnInPeaceful
	m	()V	R	customServerAiStep
	m	()V	a	onCrossbowAttackPerformed
	m	(Lahj;)V	a	playSound
	m	(Lawf;)V	a	populateDefaultEquipmentSlots
	m	(Lawu;F)Z	a	hurt
	m	(Lawu;IZ)V	a	dropCustomDeathLoot
	m	(Laxk;Z)Z	a	startRiding
	m	(Laxy;F)V	a	performRangedAttack
	m	(Laxy;Lbuw;Lboz;F)V	a	shootCrossbowProjectile
	m	(Lbuw;Lbuw;)Z	a	canReplaceCurrentItem
	m	(Lbvk;)Z	a	canFireProjectileWeapon
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lcom/mojang/serialization/Dynamic;)Layt;	a	makeBrain
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	(Z)V	a	setBaby
	m	()V	a_	defineSynchedData
	m	(Laxk;I)Laxk;	b	getTopPassenger
	m	(Laxo;Lcaw;Layc;Lgj;Ljava/util/Random;)Z	b	checkPiglinSpawnRules
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lbli;)V	b	pickUpItem
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Z)V	b	setChargingCrossbow
	m	()D	bq	getPassengersRidingOffset
	m	(Ladw;)V	c	finishConversion
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Laxp;Lbuw;)V	c	maybeWearArmor
	m	(Lboj;)I	d	getExperienceReward
	m	()Layt;	du	getBrain
	m	()Layt$b;	dv	brainProvider
	m	()Lbnh;	fA	getArmPose
	m	()V	fC	playConvertedSound
	m	()Layy$a;	fF	createAttributes
	m	()Z	fG	isDancing
	m	()Lbuw;	fH	createSpawnWeapon
	m	()Z	fI	isChargingCrossbow
	m	()Lawa;	fJ	getInventory
	m	(D)Z	h	removeWhenFarAway
	m	(Lbuw;)Z	l	wantsToPickUp
	m	(Lbuw;)Lbuw;	m	addToInventory
	m	()Z	n	canHunt
	m	(Lbuw;)Z	n	canAddToInventory
	m	(Lbuw;)V	o	holdInMainHand
	m	(Lbuw;)V	p	holdInOffHand
	m	(Lbuw;)Z	q	canReplaceCurrentItem
	m	()Lahj;	r	getAmbientSound
	m	(Z)V	w	setDancing
	m	(Z)V	x	setCannotHunt
	m	()Lahj;	x_	getDeathSound
	m	()Z	y_	isBaby
	f	Lcom/google/common/collect/ImmutableList;	bV	MEMORY_TYPES
	f	Lyb;	bW	DATA_BABY_ID
	f	Lyb;	bX	DATA_IS_CHARGING_CROSSBOW
	f	Lyb;	bY	DATA_IS_DANCING
	f	Ljava/util/UUID;	bZ	SPEED_MODIFIER_BABY_UUID
	f	Layx;	ca	SPEED_MODIFIER_BABY
	f	I	cb	MAX_HEALTH
	f	F	cc	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	cd	ATTACK_DAMAGE
	f	F	ce	CROSSBOW_POWER
	f	F	cf	CHANCE_OF_WEARING_EACH_ARMOUR_ITEM
	f	I	cg	MAX_PASSENGERS_ON_ONE_HOGLIN
	f	F	ch	PROBABILITY_OF_SPAWNING_AS_BABY
	f	F	ci	BABY_EYE_HEIGHT_ADJUSTMENT
	f	D	cj	PROBABILITY_OF_SPAWNING_WITH_CROSSBOW_INSTEAD_OF_SWORD
	f	Lawm;	ck	inventory
	f	Z	cl	cannotHunt
	f	Lcom/google/common/collect/ImmutableList;	e	SENSOR_TYPES
c	bng	net/minecraft/world/entity/monster/piglin/PiglinAi
	m	(Lbnf;)Z	A	lambda$initCelebrateActivity$1
	m	()Lbbe;	a	createIdleLookBehaviors
	m	(Laxo;)Z	a	isZombified
	m	(Laxy;)Z	a	isWearingGold
	m	(Laxy;Laxy;)Z	a	wantsToDance
	m	(Laxy;Layt;Laxy;)V	a	lambda$wasHurtBy$5
	m	(Laxy;Lbne;)V	a	lambda$broadcastRetreat$12
	m	(Layt;)V	a	initCoreActivity
	m	(Lbli;)Lbuw;	a	removeOneItemFromItemEntity
	m	(Lbne;)V	a	broadcastUniversalAnger
	m	(Lbne;Laxy;)V	a	maybeRetaliate
	m	(Lbne;Lboj;)V	a	lambda$broadcastUniversalAnger$9
	m	(Lbnf;)V	a	initMemories
	m	(Lbnf;Laxk;)Z	a	wantsToStopRiding
	m	(Lbnf;Laxy;)V	a	wasHurtBy
	m	(Lbnf;Layt;)Layt;	a	makeBrain
	m	(Lbnf;Lbli;)V	a	pickUpItem
	m	(Lbnf;Lboj;Lawg;)Lawh;	a	mobInteract
	m	(Lbnf;Lboj;Ljava/util/List;)V	a	throwItemsTowardPlayer
	m	(Lbnf;Lbps;)Lahj;	a	getSoundForActivity
	m	(Lbnf;Lbuw;)Z	a	wantsToPickup
	m	(Lbnf;Ljava/util/List;)V	a	throwItems
	m	(Lbnf;Ljava/util/List;Ldpo;)V	a	throwItemsTowardPos
	m	(Lbnf;Z)V	a	stopHoldingOffHandItem
	m	(Lboj;Lbnf;)V	a	lambda$angerNearbyPiglins$4
	m	(Lboj;Z)V	a	angerNearbyPiglins
	m	(Lbuw;)Z	a	isLovedItem
	m	(ZLboj;Lbnf;)Z	a	lambda$angerNearbyPiglins$3
	m	()Lbbe;	b	createIdleMovementBehaviors
	m	(Laxy;)Z	b	isPlayerHoldingLovedItem
	m	(Laxy;Laxy;)Z	b	lambda$isNearestValidAttackTarget$2
	m	(Laxy;Lbne;)V	b	lambda$broadcastAngerTarget$8
	m	(Layt;)V	b	initIdleActivity
	m	(Lbne;)Ljava/util/Optional;	b	getNearestVisibleTargetablePlayer
	m	(Lbne;Laxy;)V	b	broadcastAngerTarget
	m	(Lbnf;)V	b	updateActivity
	m	(Lbnf;Laxy;)Z	b	isNearestValidAttackTarget
	m	(Lbnf;Layt;)V	b	initFightActivity
	m	(Lbnf;Lbps;)Lahj;	b	lambda$getSoundForCurrentActivity$6
	m	(Lbnf;Lbuw;)Z	b	canAdmire
	m	(Lbnf;Ljava/util/List;)V	b	throwItemsTowardRandomPos
	m	(Lbuw;)Z	b	isBarterCurrency
	m	()Lbbl;	c	avoidRepellent
	m	(Laxy;)Z	c	hasCrossbow
	m	(Layt;)V	c	initCelebrateActivity
	m	(Lbne;)V	c	dontKillAnyMoreHoglinsForAWhile
	m	(Lbne;Laxy;)V	c	setAngerTarget
	m	(Lbnf;)V	c	cancelAdmiring
	m	(Lbnf;Laxy;)V	c	broadcastRetreat
	m	(Lbnf;Lbuw;)V	c	holdInOffhand
	m	(Lbuw;)Z	c	isFood
	m	()Lazo;	d	babyAvoidNemesis
	m	(Laxy;)V	d	admireGoldItem
	m	(Layt;)V	d	initAdmireItemActivity
	m	(Lbne;)Z	d	isIdle
	m	(Lbne;Laxy;)V	d	setAngerTargetToNearestTargetablePlayerIfFound
	m	(Lbnf;)Ljava/util/Optional;	d	getSoundForCurrentActivity
	m	(Lbnf;Laxy;)V	d	retreatFromNearestTarget
	m	(Lbnf;Lbuw;)V	d	putInInventory
	m	()Lazo;	e	avoidZombified
	m	(Laxy;)Z	e	seesPlayerHoldingLovedItem
	m	(Layt;)V	e	initRetreatActivity
	m	(Lbne;)Ljava/util/List;	e	getAdultPiglins
	m	(Lbne;Laxy;)V	e	setAngerTargetIfCloserThanCurrent
	m	(Lbnf;)Z	e	hasAnyoneNearbyHuntedRecently
	m	(Lbnf;Laxy;)V	e	setAvoidTargetAndDontHuntForAWhile
	m	()Lbbf;	f	babySometimesRideBabyHoglin
	m	(Laxy;)Z	f	doesntSeeAnyPlayerHoldingLovedItem
	m	(Layt;)V	f	initRideHoglinActivity
	m	(Lbne;)Ljava/util/Optional;	f	getAngerTarget
	m	(Lbnf;)V	f	broadcastDontKillAnyMoreHoglinsForAWhile
	m	(Lbnf;Laxy;)Z	f	lambda$initFightActivity$0
	m	(Laxy;)Z	g	wasHurtRecently
	m	(Lbne;)Z	g	lambda$broadcastRetreat$11
	m	(Lbnf;)Ljava/util/Optional;	g	getAvoidTarget
	m	(Lbne;)V	h	lambda$broadcastUniversalAnger$10
	m	(Lbnf;)Z	h	isBabyRidingBaby
	m	(Lbne;)Z	i	lambda$hasAnyoneNearbyHuntedRecently$7
	m	(Lbnf;)Ljava/util/List;	i	getBarterResponseItems
	m	(Lbnf;)Z	j	isNearZombified
	m	(Lbnf;)Ljava/util/Optional;	k	findNearestValidAttackTarget
	m	(Lbnf;)Z	l	isNearAvoidTarget
	m	(Lbnf;)Ljava/util/List;	m	getVisibleAdultPiglins
	m	(Lbnf;)V	n	stopWalking
	m	(Lbnf;)Z	o	wantsToStopFleeing
	m	(Lbnf;)Z	p	piglinsEqualOrOutnumberHoglins
	m	(Lbnf;)Z	q	hoglinsOutnumberPiglins
	m	(Lbnf;)Z	r	seesPlayerHoldingWantedItem
	m	(Lbnf;)V	s	eat
	m	(Lbnf;)Ldpo;	t	getRandomNearbyPos
	m	(Lbnf;)Z	u	hasEatenRecently
	m	(Lbnf;)Z	v	isAdmiringItem
	m	(Lbnf;)Z	w	isNearRepellent
	m	(Lbnf;)Z	x	isAdmiringDisabled
	m	(Lbnf;)Z	y	isHoldingItemInOffHand
	m	(Lbnf;)Z	z	isNotHoldingLovedItemInOffHand
	f	Lavs;	A	AVOID_ZOMBIFIED_DURATION
	f	Lavs;	B	BABY_AVOID_NEMESIS_DURATION
	f	F	C	PROBABILITY_OF_CELEBRATION_DANCE
	f	F	D	SPEED_MULTIPLIER_WHEN_AVOIDING
	f	F	E	SPEED_MULTIPLIER_WHEN_RETREATING
	f	F	F	SPEED_MULTIPLIER_WHEN_MOUNTING
	f	F	G	SPEED_MULTIPLIER_WHEN_GOING_TO_WANTED_ITEM
	f	F	H	SPEED_MULTIPLIER_WHEN_GOING_TO_CELEBRATE_LOCATION
	f	F	I	SPEED_MULTIPLIER_WHEN_DANCING
	f	F	J	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	a	REPELLENT_DETECTION_RANGE_HORIZONTAL
	f	I	b	REPELLENT_DETECTION_RANGE_VERTICAL
	f	Lbus;	c	BARTERING_ITEM
	f	I	d	PLAYER_ANGER_RANGE
	f	I	e	ANGER_DURATION
	f	I	f	ADMIRE_DURATION
	f	I	g	MAX_DISTANCE_TO_WALK_TO_ITEM
	f	I	h	MAX_TIME_TO_WALK_TO_ITEM
	f	I	i	HOW_LONG_TIME_TO_DISABLE_ADMIRE_WALKING_IF_CANT_REACH_ITEM
	f	I	j	CELEBRATION_TIME
	f	Lavs;	k	TIME_BETWEEN_HUNTS
	f	I	l	BABY_FLEE_DURATION_AFTER_GETTING_HIT
	f	I	m	HIT_BY_PLAYER_MEMORY_TIMEOUT
	f	I	n	MAX_WALK_DISTANCE_TO_START_RIDING
	f	Lavs;	o	RIDE_START_INTERVAL
	f	Lavs;	p	RIDE_DURATION
	f	Lavs;	q	RETREAT_DURATION
	f	I	r	MELEE_ATTACK_COOLDOWN
	f	I	s	EAT_COOLDOWN
	f	I	t	DESIRED_DISTANCE_FROM_ENTITY_WHEN_AVOIDING
	f	I	u	MAX_LOOK_DIST
	f	I	v	MAX_LOOK_DIST_FOR_PLAYER_HOLDING_LOVED_ITEM
	f	I	w	INTERACTION_RANGE
	f	I	x	MIN_DESIRED_DIST_FROM_TARGET_WHEN_HOLDING_CROSSBOW
	f	F	y	SPEED_WHEN_STRAFING_BACK_FROM_TARGET
	f	I	z	DESIRED_DISTANCE_FROM_ZOMBIFIED
c	bnh	net/minecraft/world/entity/monster/piglin/PiglinArmPose
	m	()[Lbnh;	a	$values
	f	Lbnh;	a	ATTACKING_WITH_MELEE_WEAPON
	f	Lbnh;	b	CROSSBOW_HOLD
	f	Lbnh;	c	CROSSBOW_CHARGE
	f	Lbnh;	d	ADMIRING_ITEM
	f	Lbnh;	e	DANCING
	f	Lbnh;	f	DEFAULT
	f	[Lbnh;	g	$VALUES
c	bni	net/minecraft/world/entity/monster/piglin/PiglinBrute
	m	()V	R	customServerAiStep
	m	(Lawf;)V	a	populateDefaultEquipmentSlots
	m	(Lawu;F)Z	a	hurt
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lcom/mojang/serialization/Dynamic;)Layt;	a	makeBrain
	m	(Lgj;Lcov;)V	b	playStepSound
	m	(Lawu;)Lahj;	c	getHurtSound
	m	()Layt;	du	getBrain
	m	()Layt$b;	dv	brainProvider
	m	()Lbnh;	fA	getArmPose
	m	()V	fC	playConvertedSound
	m	()Layy$a;	fF	createAttributes
	m	()V	fG	playAngrySound
	m	(Lbuw;)Z	l	wantsToPickUp
	m	()Z	n	canHunt
	m	()Lahj;	r	getAmbientSound
	m	()Lahj;	x_	getDeathSound
	f	Lcom/google/common/collect/ImmutableList;	bV	MEMORY_TYPES
	f	I	bW	MAX_HEALTH
	f	F	bX	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	bY	ATTACK_DAMAGE
	f	Lcom/google/common/collect/ImmutableList;	e	SENSOR_TYPES
c	bnj	net/minecraft/world/entity/monster/piglin/PiglinBruteAi
	m	()Lbbe;	a	createIdleLookBehaviors
	m	(Laxy;Laxy;)Z	a	lambda$isNearestValidAttackTarget$1
	m	(Lbne;)Ljava/util/Optional;	a	findNearestValidAttackTarget
	m	(Lbne;Laxy;)Z	a	isNearestValidAttackTarget
	m	(Lbne;Lbfy;)Ljava/util/Optional;	a	getTargetIfWithinRange
	m	(Lbni;)V	a	initMemories
	m	(Lbni;Laxy;)V	a	wasHurtBy
	m	(Lbni;Layt;)Layt;	a	makeBrain
	m	(Lbni;Lbps;)V	a	lambda$playActivitySound$3
	m	()Lbbe;	b	createIdleMovementBehaviors
	m	(Lbne;Laxy;)Z	b	lambda$getTargetIfWithinRange$2
	m	(Lbni;)V	b	updateActivity
	m	(Lbni;Laxy;)V	b	setAngerTarget
	m	(Lbni;Layt;)V	b	initCoreActivity
	m	(Lbni;)V	c	maybePlayActivitySound
	m	(Lbni;Laxy;)Z	c	lambda$initFightActivity$0
	m	(Lbni;Layt;)V	c	initIdleActivity
	m	(Lbni;)V	d	playActivitySound
	m	(Lbni;Layt;)V	d	initFightActivity
	f	I	a	ANGER_DURATION
	f	I	b	MELEE_ATTACK_COOLDOWN
	f	D	c	ACTIVITY_SOUND_LIKELIHOOD_PER_TICK
	f	I	d	MAX_LOOK_DIST
	f	I	e	INTERACTION_RANGE
	f	D	f	TARGETING_RANGE
	f	F	g	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	h	HOME_CLOSE_ENOUGH_DISTANCE
	f	I	i	HOME_TOO_FAR_DISTANCE
	f	I	j	HOME_STROLL_AROUND_DISTANCE
c	bnk	net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnf;J)V	a	start
	m	(Lbnf;)Z	a	isAttackTargetDeadHoglin
c	bnl	net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnf;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnf;J)V	a	start
	f	I	a	admireDuration
c	bnm	net/minecraft/world/entity/monster/piglin/StartHuntingHoglin
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnf;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnf;J)V	a	start
c	bnn	net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnf;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnf;J)V	a	start
	f	I	a	maxDistanceToItem
c	bno	net/minecraft/world/entity/monster/piglin/StopAdmiringIfTiredOfTryingToReachItem
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnf;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnf;J)V	a	start
	f	I	a	maxTimeToReachItem
	f	I	c	disableTime
c	bnp	net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring
	m	(Ladw;Laxy;)Z	a	checkExtraStartConditions
	m	(Ladw;Laxy;J)V	a	start
	m	(Ladw;Lbnf;)Z	a	checkExtraStartConditions
	m	(Ladw;Lbnf;J)V	a	start
c	bnq	net/minecraft/world/entity/monster/piglin/package-info
c	bnr	net/minecraft/world/entity/npc/AbstractVillager
	m	(Lawu;)V	a	die
	m	(Lboj;)Z	a	canBeLeashed
	m	(Lbzt;)V	a	notifyTrade
	m	(Lbzu;)V	a	overrideOffers
	m	(Lbzu;[Lboa$f;I)V	a	addOffersFromItemListings
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lia;)V	a	addParticlesAroundSelf
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Ladw;)Laxk;	b	changeDimension
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lbzt;)V	b	rewardTradeXp
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lboj;)V	f	setTradingPlayer
	m	()Z	fA	isTrading
	m	()Lbzu;	fB	getOffers
	m	()Z	fC	showProgressBar
	m	()Lahj;	fD	getNotifyTradeSound
	m	()V	fE	playCelebrateSound
	m	()V	fF	stopTrading
	m	()Lawm;	fG	getInventory
	m	()V	fH	updateTrades
	m	()Z	fI	isClientSide
	m	()Lawa;	fJ	getInventory
	m	()Lboj;	fz	getTradingPlayer
	m	(I)Layp;	k	getSlot
	m	(Lbuw;)V	m	notifyTradeUpdated
	m	(F)Ldpo;	n	getRopeHoldPosition
	m	()I	q	getUnhappyCounter
	m	(I)V	r	setUnhappyCounter
	m	(I)V	s	overrideXp
	m	()I	t	getVillagerXp
	m	(Z)Lahj;	v	getTradeUpdatedSound
	f	I	bV	VILLAGER_SLOT_OFFSET
	f	Lbzu;	bW	offers
	f	Lyb;	bX	DATA_UNHAPPY_COUNTER
	f	I	bY	VILLAGER_INVENTORY_SIZE
	f	Lboj;	bZ	tradingPlayer
	f	Lawm;	ca	inventory
c	bns	net/minecraft/world/entity/npc/CatSpawner
	m	(Ladw;Lgj;)I	a	spawnInVillage
	m	(Ladw;Lgj;Lcwr;)Z	a	lambda$tick$0
	m	(Ladw;ZZ)I	a	tick
	m	(Lgj;Ladw;)I	a	spawnCat
	m	(Ladw;Lgj;)I	b	spawnInHut
	f	I	a	TICK_DELAY
	f	I	b	nextTick
c	bnt	net/minecraft/world/entity/npc/ClientSideMerchant
	m	(Lbzt;)V	a	notifyTrade
	m	(Lbzu;)V	a	overrideOffers
	m	(Lboj;)V	f	setTradingPlayer
	m	()Lbzu;	fB	getOffers
	m	()Z	fC	showProgressBar
	m	()Lahj;	fD	getNotifyTradeSound
	m	()Z	fI	isClientSide
	m	()Lboj;	fz	getTradingPlayer
	m	(Lbuw;)V	m	notifyTradeUpdated
	m	(I)V	s	overrideXp
	m	()I	t	getVillagerXp
	f	Lboj;	a	source
	f	Lbzu;	b	offers
	f	I	c	xp
c	bnu	net/minecraft/world/entity/npc/InventoryCarrier
	m	()Lawa;	fJ	getInventory
c	bnv	net/minecraft/world/entity/npc/Npc
c	bnw	net/minecraft/world/entity/npc/Villager
	m	()V	Q	sendDebugPackets
	m	()V	R	customServerAiStep
	m	(B)V	a	handleEntityEvent
	m	(J)Z	a	wantsToSpawnGolem
	m	(JLbnw;)Z	a	lambda$spawnGolemIfNeeded$9
	m	(Ladw;JI)V	a	spawnGolemIfNeeded
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Ladw;Laxk;Laxy;)V	a	lambda$tellWitnessesThatIWasMurdered$5
	m	(Ladw;Laxx;)V	a	thunderHit
	m	(Ladw;Lbnw;J)V	a	gossip
	m	(Lawm;Ljava/util/Map$Entry;)I	a	lambda$countFoodPointsInInventory$8
	m	(Lawu;)V	a	die
	m	(Laxk;)V	a	tellWitnessesThatIWasMurdered
	m	(Laxy;)V	a	setLastHurtByMob
	m	(Layt;)V	a	registerBrainGoals
	m	(Lbfv;)Z	a	lambda$getPlayerReputation$7
	m	(Lbfy;)V	a	releasePoi
	m	(Lbhp;Laxk;)V	a	onReputationEventFrom
	m	(Lbnw;Lbhv;)Z	a	lambda$static$3
	m	(Lbnx;)V	a	setVillagerData
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lcom/mojang/serialization/Dynamic;)Layt;	a	makeBrain
	m	(Lgj;DD)Lgj;	a	findSpawnPositionForGolemInColumn
	m	(Lnet/minecraft/server/MinecraftServer;Lbfy;Lgr;)V	a	lambda$releasePoi$6
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lok;Lpd;)V	a	lambda$addAdditionalSaveData$4
	m	(Lpd;)V	a	setGossips
	m	()V	a_	defineSynchedData
	m	(J)Z	b	golemSpawnConditionsMet
	m	(Ladw;Laxi;)Lbnw;	b	getBreedOffspring
	m	(Lbli;)V	b	pickUpItem
	m	(Lbnw;Lbhv;)Z	b	lambda$static$2
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lbzt;)V	b	rewardTradeXp
	m	(Lbzu;)V	b	setOffers
	m	(Lgj;)V	b	startSleeping
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Ladw;)V	c	refreshBrain
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lbnw;Lbhv;)Z	c	lambda$static$1
	m	()Lqk;	cd	getTypeName
	m	(Ladw;)Lbin;	d	trySpawnGolem
	m	(Lbnw;Lbhv;)Z	d	lambda$static$0
	m	()Layt;	du	getBrain
	m	()Layt$b;	dv	brainProvider
	m	(Lboj;)V	f	setTradingPlayer
	m	()V	fF	stopTrading
	m	()V	fH	updateTrades
	m	()Z	fI	isClientSide
	m	()Lbnx;	fK	getVillagerData
	m	()Layy$a;	fL	createAttributes
	m	()Z	fM	assignProfessionWhenSpawned
	m	()Z	fN	canRestock
	m	()V	fO	restock
	m	()Z	fP	shouldRestock
	m	()V	fQ	playWorkSound
	m	()Z	fR	isChasing
	m	()V	fS	eatAndDigestFood
	m	()Z	fT	hasExcessFood
	m	()Z	fU	wantsMoreFood
	m	()Z	fV	hasFarmSeeds
	m	()Lbfu;	fW	getGossips
	m	()V	fX	setUnhappy
	m	()V	fY	resetSpecialPrices
	m	()Z	fZ	needsToRestock
	m	()V	fd	stopSleeping
	m	()Z	g	canBreed
	m	(Lboj;)I	g	getPlayerReputation
	m	()Z	ga	allowedToRestock
	m	()V	gb	catchUpDemand
	m	()V	gc	updateDemand
	m	()V	gd	releaseAllPois
	m	()Z	ge	hungry
	m	()V	gf	eatUntilFull
	m	()Z	gg	shouldIncreaseLevel
	m	()V	gh	increaseMerchantCareer
	m	()I	gi	countFoodPointsInInventory
	m	()V	gj	maybeDecayGossip
	m	()V	gk	resetNumberOfRestocks
	m	(D)Z	h	removeWhenFarAway
	m	(Lboj;)V	h	startTrading
	m	(Lboj;)V	i	updateSpecialPrices
	m	()V	k	tick
	m	(Lbuw;)Z	l	wantsToPickUp
	m	()V	n	ageBoundaryReached
	m	()Lahj;	r	getAmbientSound
	m	()I	t	getVillagerXp
	m	(I)V	t	setVillagerXp
	m	(I)V	u	digestFood
	m	(Z)V	w	setChasing
	m	()Lahj;	x_	getDeathSound
	f	I	bX	BREEDING_FOOD_THRESHOLD
	f	Ljava/util/Map;	bY	FOOD_POINTS
	f	F	bZ	SPEED_MODIFIER
	f	Lcom/google/common/collect/ImmutableList;	cA	SENSOR_TYPES
	f	Ljava/util/Map;	ca	POI_MEMORIES
	f	Lorg/slf4j/Logger;	cb	LOGGER
	f	Lyb;	cc	DATA_VILLAGER_DATA
	f	I	cd	TRADES_PER_LEVEL
	f	Ljava/util/Set;	ce	WANTED_ITEMS
	f	I	cf	MAX_GOSSIP_TOPICS
	f	I	cg	GOSSIP_COOLDOWN
	f	I	ch	GOSSIP_DECAY_INTERVAL
	f	I	ci	REPUTATION_CHANGE_PER_EVENT
	f	I	cj	HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS
	f	I	ck	HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM
	f	J	cl	TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING
	f	I	cm	updateMerchantTimer
	f	Z	cn	increaseProfessionLevelOnUpdate
	f	Lboj;	co	lastTradedPlayer
	f	Z	cp	chasing
	f	I	cq	foodLevel
	f	Lbfu;	cr	gossips
	f	J	cs	lastGossipTime
	f	J	ct	lastGossipDecayTime
	f	I	cu	villagerXp
	f	J	cv	lastRestockGameTime
	f	I	cw	numberOfRestocksToday
	f	J	cx	lastRestockCheckDayTime
	f	Z	cy	assignProfessionWhenSpawned
	f	Lcom/google/common/collect/ImmutableList;	cz	MEMORY_TYPES
c	bnx	net/minecraft/world/entity/npc/VillagerData
	m	()Lbob;	a	getType
	m	(I)Lbnx;	a	setLevel
	m	(Lbnx;)Ljava/lang/Integer;	a	lambda$static$4
	m	(Lbnz;)Lbnx;	a	setProfession
	m	(Lbob;)Lbnx;	a	setType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	()Lbnz;	b	getProfession
	m	(I)I	b	getMinXpPerLevel
	m	(Lbnx;)Lbnz;	b	lambda$static$3
	m	()I	c	getLevel
	m	(I)I	c	getMaxXpPerLevel
	m	(Lbnx;)Lbob;	c	lambda$static$1
	m	()Lbnz;	d	lambda$static$2
	m	(I)Z	d	canLevelUp
	m	()Lbob;	e	lambda$static$0
	f	I	a	MIN_VILLAGER_LEVEL
	f	I	b	MAX_VILLAGER_LEVEL
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	[I	d	NEXT_LEVEL_XP_THRESHOLDS
	f	Lbob;	e	type
	f	Lbnz;	f	profession
	f	I	g	level
c	bny	net/minecraft/world/entity/npc/VillagerDataHolder
	m	(Lbnx;)V	a	setVillagerData
	m	()Lbnx;	fK	getVillagerData
c	bnz	net/minecraft/world/entity/npc/VillagerProfession
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;Lbhv;Lahj;)Lbnz;	a	register
	m	(Ljava/lang/String;Lbhv;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lahj;)Lbnz;	a	register
	m	()Lbhv;	b	getJobPoiType
	m	()Lcom/google/common/collect/ImmutableSet;	c	getRequestedItems
	m	()Lcom/google/common/collect/ImmutableSet;	d	getSecondaryPoi
	m	()Lahj;	e	getWorkSound
	f	Lbnz;	a	NONE
	f	Lbnz;	b	ARMORER
	f	Lbnz;	c	BUTCHER
	f	Lbnz;	d	CARTOGRAPHER
	f	Lbnz;	e	CLERIC
	f	Lbnz;	f	FARMER
	f	Lbnz;	g	FISHERMAN
	f	Lbnz;	h	FLETCHER
	f	Lbnz;	i	LEATHERWORKER
	f	Lbnz;	j	LIBRARIAN
	f	Lbnz;	k	MASON
	f	Lbnz;	l	NITWIT
	f	Lbnz;	m	SHEPHERD
	f	Lbnz;	n	TOOLSMITH
	f	Lbnz;	o	WEAPONSMITH
	f	Ljava/lang/String;	p	name
	f	Lbhv;	q	jobPoiType
	f	Lcom/google/common/collect/ImmutableSet;	r	requestedItems
	f	Lcom/google/common/collect/ImmutableSet;	s	secondaryPoi
	f	Lahj;	t	workSound
c	boa	net/minecraft/world/entity/npc/VillagerTrades
	m	(Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	toIntMap
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	f	Ljava/util/Map;	a	TRADES
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	WANDERING_TRADER_TRADES
	f	I	c	DEFAULT_SUPPLY
	f	I	d	COMMON_ITEMS_SUPPLY
	f	I	e	UNCOMMON_ITEMS_SUPPLY
	f	I	f	XP_LEVEL_1_SELL
	f	I	g	XP_LEVEL_1_BUY
	f	I	h	XP_LEVEL_2_SELL
	f	I	i	XP_LEVEL_2_BUY
	f	I	j	XP_LEVEL_3_SELL
	f	I	k	XP_LEVEL_3_BUY
	f	I	l	XP_LEVEL_4_SELL
	f	I	m	XP_LEVEL_4_BUY
	f	I	n	XP_LEVEL_5_TRADE
	f	F	o	LOW_TIER_PRICE_MULTIPLIER
	f	F	p	HIGH_TIER_PRICE_MULTIPLIER
c	boa$a	net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds
	m	(Laxk;Ljava/util/Random;)Lbzt;	a	getOffer
	m	(Ljava/util/Random;)Lbtt;	a	getRandomDye
	f	Lbus;	a	item
	f	I	b	value
	f	I	c	maxUses
	f	I	d	villagerXp
c	boa$b	net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems
	m	(Laxk;Ljava/util/Random;)Lbzt;	a	getOffer
	f	Lbus;	a	item
	f	I	b	cost
	f	I	c	maxUses
	f	I	d	villagerXp
	f	F	e	priceMultiplier
c	boa$c	net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem
	m	(Laxk;Ljava/util/Random;)Lbzt;	a	getOffer
	m	(Lbob;)V	a	lambda$new$1
	m	(Ljava/util/Map;Lbob;)Z	a	lambda$new$0
	f	Ljava/util/Map;	a	trades
	f	I	b	cost
	f	I	c	maxUses
	f	I	d	villagerXp
c	boa$d	net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds
	m	(Laxk;Ljava/util/Random;)Lbzt;	a	getOffer
	f	I	a	villagerXp
c	boa$e	net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds
	m	(Laxk;Ljava/util/Random;)Lbzt;	a	getOffer
	f	Lbuw;	a	itemStack
	f	I	b	baseEmeraldCost
	f	I	c	maxUses
	f	I	d	villagerXp
	f	F	e	priceMultiplier
c	boa$f	net/minecraft/world/entity/npc/VillagerTrades$ItemListing
	m	(Laxk;Ljava/util/Random;)Lbzt;	a	getOffer
c	boa$g	net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems
	m	(Laxk;Ljava/util/Random;)Lbzt;	a	getOffer
	f	Lbuw;	a	fromItem
	f	I	b	fromCount
	f	I	c	emeraldCost
	f	Lbuw;	d	toItem
	f	I	e	toCount
	f	I	f	maxUses
	f	I	g	villagerXp
	f	F	h	priceMultiplier
c	boa$h	net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds
	m	(Laxk;Ljava/util/Random;)Lbzt;	a	getOffer
	f	Lbuw;	a	itemStack
	f	I	b	emeraldCost
	f	I	c	numberOfItems
	f	I	d	maxUses
	f	I	e	villagerXp
	f	F	f	priceMultiplier
c	boa$i	net/minecraft/world/entity/npc/VillagerTrades$SuspiciousStewForEmerald
	m	(Laxk;Ljava/util/Random;)Lbzt;	a	getOffer
	f	Laxc;	a	effect
	f	I	b	duration
	f	I	c	xp
	f	F	d	priceMultiplier
c	boa$j	net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds
	m	(Laxk;Ljava/util/Random;)Lbzt;	a	getOffer
	m	(Lbwr;)Z	a	lambda$getOffer$0
	f	Lbuw;	a	toItem
	f	I	b	toCount
	f	I	c	emeraldCost
	f	I	d	maxUses
	f	I	e	villagerXp
	f	Lbus;	f	fromItem
	f	I	g	fromCount
	f	F	h	priceMultiplier
c	boa$k	net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds
	m	(Laxk;Ljava/util/Random;)Lbzt;	a	getOffer
	f	I	a	emeraldCost
	f	Laif;	b	destination
	f	Ljava/lang/String;	c	displayName
	f	Ldkc$a;	d	destinationType
	f	I	e	maxUses
	f	I	f	villagerXp
c	bob	net/minecraft/world/entity/npc/VillagerType
	m	(Lgs;)Lbob;	a	byBiome
	m	(Ljava/lang/String;)Lbob;	a	register
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	f	Lbob;	a	DESERT
	f	Lbob;	b	JUNGLE
	f	Lbob;	c	PLAINS
	f	Lbob;	d	SAVANNA
	f	Lbob;	e	SNOW
	f	Lbob;	f	SWAMP
	f	Lbob;	g	TAIGA
	f	Ljava/lang/String;	h	name
	f	Ljava/util/Map;	i	BY_BIOME
c	boc	net/minecraft/world/entity/npc/WanderingTrader
	m	(Ladw;Laxi;)Laxi;	a	getBreedOffspring
	m	(Lboc;)Lbgf;	a	access$000
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lboc;)Lbgf;	b	access$100
	m	(Lboj;Lawg;)Lawh;	b	mobInteract
	m	(Lbzt;)V	b	rewardTradeXp
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lboc;)Lbgf;	c	access$200
	m	(Lboc;)Lbgf;	d	access$300
	m	(Lbuw;)Lahj;	d	getDrinkingSound
	m	(Lboc;)Z	e	lambda$registerGoals$1
	m	(Lboc;)Z	f	lambda$registerGoals$0
	m	()Z	fC	showProgressBar
	m	()Lahj;	fD	getNotifyTradeSound
	m	()V	fH	updateTrades
	m	()I	fK	getDespawnDelay
	m	()V	fL	maybeDespawn
	m	()Lgj;	fM	getWanderTarget
	m	(Lgj;)V	g	setWanderTarget
	m	(D)Z	h	removeWhenFarAway
	m	()Lahj;	r	getAmbientSound
	m	(I)V	t	setDespawnDelay
	m	()V	u	registerGoals
	m	(Z)Lahj;	v	getTradeUpdatedSound
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	f	I	bX	NUMBER_OF_TRADE_OFFERS
	f	Lgj;	bY	wanderTarget
	f	I	bZ	despawnDelay
c	boc$a	net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal
	m	()Z	a	canUse
	m	(Lgj;D)Z	a	isTooFarAway
	m	()V	d	stop
	m	()V	e	tick
	f	Lboc;	a	trader
	f	D	b	stopDistance
	f	D	c	speedModifier
	f	Lboc;	d	this$0
c	bod	net/minecraft/world/entity/npc/WanderingTraderSpawner
	m	(Ladw;)Z	a	spawn
	m	(Ladw;Lboc;I)V	a	tryToSpawnLlamaFor
	m	(Ladw;ZZ)I	a	tick
	m	(Lcab;Lgj;)Z	a	hasEnoughSpace
	m	(Lcay;Lgj;I)Lgj;	a	findSpawnPositionNear
	m	(Lgj;)Z	a	lambda$spawn$0
	f	I	a	DEFAULT_SPAWN_DELAY
	f	I	b	DEFAULT_TICK_DELAY
	f	I	c	MIN_SPAWN_CHANCE
	f	I	d	MAX_SPAWN_CHANCE
	f	I	e	SPAWN_CHANCE_INCREASE
	f	I	f	SPAWN_ONE_IN_X_CHANCE
	f	I	g	NUMBER_OF_SPAWN_ATTEMPTS
	f	Ljava/util/Random;	h	random
	f	Ldku;	i	serverLevelData
	f	I	j	tickDelay
	f	I	k	spawnDelay
	f	I	l	spawnChance
c	boe	net/minecraft/world/entity/npc/package-info
c	bof	net/minecraft/world/entity/package-info
c	bog	net/minecraft/world/entity/player/Abilities
	m	()F	a	getFlyingSpeed
	m	(F)V	a	setFlyingSpeed
	m	(Lok;)V	a	addSaveData
	m	()F	b	getWalkingSpeed
	m	(F)V	b	setWalkingSpeed
	m	(Lok;)V	b	loadSaveData
	f	Z	a	invulnerable
	f	Z	b	flying
	f	Z	c	mayfly
	f	Z	d	instabuild
	f	Z	e	mayBuild
	f	F	f	flyingSpeed
	f	F	g	walkingSpeed
c	boh	net/minecraft/world/entity/player/ChatVisiblity
	m	()I	a	getId
	m	(I)Lboh;	a	byId
	m	()Ljava/lang/String;	b	getKey
	m	(I)[Lboh;	b	lambda$static$0
	m	()[Lboh;	c	$values
	f	Lboh;	a	FULL
	f	Lboh;	b	SYSTEM
	f	Lboh;	c	HIDDEN
	f	[Lboh;	d	BY_ID
	f	I	e	id
	f	Ljava/lang/String;	f	key
	f	[Lboh;	g	$VALUES
c	boi	net/minecraft/world/entity/player/Inventory
	m	()Lqk;	X	getName
	m	()V	a	clearContent
	m	(D)V	a	swapPaint
	m	(I)Lbuw;	a	getItem
	m	(II)Lbuw;	a	removeItem
	m	(ILboj;)V	a	lambda$hurtArmor$1
	m	(ILbuw;)V	a	setItem
	m	(Laif;)Z	a	contains
	m	(Lawu;F[I)V	a	hurtArmor
	m	(Lboi;)V	a	replaceWith
	m	(Lboj;)Z	a	stillValid
	m	(Lbol;)V	a	fillStackedContents
	m	(Lbuw;)V	a	setPickedItem
	m	(Lbuw;Lbuw;)Z	a	hasRemainingSpaceForItem
	m	(Lbuw;Z)V	a	placeItemBackInInventory
	m	(Lcov;)F	a	getDestroySpeed
	m	(Ljava/util/function/Predicate;ILawa;)I	a	clearOrCountMatchingItems
	m	(Loq;)Loq;	a	save
	m	(Z)Lbuw;	a	removeFromSelected
	m	()I	b	getContainerSize
	m	(I)Lbuw;	b	removeItemNoUpdate
	m	(Lbuw;)I	b	findSlotMatchingItem
	m	(Loq;)V	b	load
	m	()Z	c	isEmpty
	m	(I)V	c	pickSlot
	m	(ILbuw;)Z	c	add
	m	(Lbuw;)I	c	findSlotMatchingUnusedItem
	m	(I)Z	d	isHotbarSlot
	m	(ILbuw;)I	d	addResource
	m	(Lbuw;)I	d	getSlotWithRemainingSpace
	m	()V	e	setChanged
	m	(I)Lbuw;	e	getArmor
	m	(Lbuw;)Z	e	add
	m	()Lbuw;	f	getSelected
	m	(Lbuw;)V	f	placeItemBackInInventory
	m	()I	g	getSelectionSize
	m	(Lbuw;)V	g	removeItem
	m	()I	h	getFreeSlot
	m	(Lbuw;)Z	h	contains
	m	()I	i	getSuitableHotbarSlot
	m	(Lbuw;)I	i	addResource
	m	()V	j	tick
	m	(Lbuw;)Ljava/lang/String;	j	lambda$add$0
	m	()V	k	dropAll
	m	()I	l	getTimesChanged
	f	I	b	POP_TIME_DURATION
	f	I	c	INVENTORY_SIZE
	f	I	d	SLOT_OFFHAND
	f	I	e	NOT_FOUND_INDEX
	f	[I	f	ALL_ARMOR_SLOTS
	f	[I	g	HELMET_SLOT_ONLY
	f	Lgx;	h	items
	f	Lgx;	i	armor
	f	Lgx;	j	offhand
	f	I	k	selected
	f	Lboj;	l	player
	f	I	m	SELECTION_SIZE
	f	Ljava/util/List;	n	compartments
	f	I	o	timesChanged
c	boj	net/minecraft/world/entity/player/Player
	m	()Z	B_	isSpectator
	m	(Laxk;)V	C	lambda$respawnEntityOnShoulder$3
	m	()Lqk;	C_	getDisplayName
	m	()Lqk;	X	getName
	m	(B)V	a	handleEntityEvent
	m	(FFLawu;)Z	a	causeFallDamage
	m	(ILbzu;IIZZ)V	a	sendMerchantOffers
	m	(Ladw;Laxy;)V	a	killed
	m	(Ladw;Lgj;FZZ)Ljava/util/Optional;	a	findRespawnPositionAndUseSpawnBlock
	m	(Lahj;FF)V	a	playSound
	m	(Lahj;Lahl;FF)V	a	playNotifySound
	m	(Lahr;)V	a	resetStat
	m	(Lahr;I)V	a	awardStat
	m	(Lawg;Lboj;)V	a	lambda$hurtCurrentlyUsedShield$2
	m	(Lawk;)Ljava/util/OptionalInt;	a	openMenu
	m	(Lawu;)V	a	die
	m	(Lawu;F)Z	a	hurt
	m	(Laxk$c;)V	a	remove
	m	(Laxk;)V	a	crit
	m	(Laxk;Lawg;)Lawh;	a	interactOn
	m	(Laxp;Lbuw;)V	a	setItemSlot
	m	(Laxt;)V	a	setMainArm
	m	(Layk;)Laxl;	a	getDimensions
	m	(Lbjo;Lawa;)V	a	openHorseInventory
	m	(Lboj;)Z	a	canHarmPlayer
	m	(Lbok;)Z	a	isModelPartShown
	m	(Lbuw;I)V	a	onEnchantmentPerformed
	m	(Lbuw;Lawg;)V	a	openItemGui
	m	(Lbuw;Lbuw;Lbqx;)V	a	updateTutorialInventoryAction
	m	(Lbuw;Z)Lbli;	a	drop
	m	(Lbuw;ZZ)Lbli;	a	drop
	m	(Lbzw;)V	a	openMinecartCommandBlock
	m	(Lcav;Lbuw;)Lbuw;	a	eat
	m	(Lcav;Lgj;Lcas;)Z	a	blockActionRestricted
	m	(Lcmy;)V	a	openCommandBlock
	m	(Lcnk;)V	a	openJigsawBlock
	m	(Lcnr;)V	a	openTextEdit
	m	(Lcnv;)V	a	openStructureBlock
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID;	a	createPlayerUUID
	m	(Lcov;Ldpo;)V	a	makeStuckInBlock
	m	(Ldpo;Laye;)Ldpo;	a	maybeBackOffFromEdge
	m	(Lgj;)Lcom/mojang/datafixers/util/Either;	a	startSleepInBed
	m	(Lgj;Lgo;Lbuw;)Z	a	mayUseItemAt
	m	(Lia;)V	a	addParticlesAroundSelf
	m	(Ljava/lang/String;Lqu;)Lqu;	a	lambda$decorateDisplayNameComponent$4
	m	(Ljava/util/Collection;)I	a	awardRecipes
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lqk;Z)V	a	displayClientMessage
	m	(Lqq;)Lqq;	a	decorateDisplayNameComponent
	m	(Lyt;)V	a	awardStat
	m	(Lyt;I)V	a	awardStat
	m	(ZZ)V	a	stopSleepInBed
	m	([Lyt;)V	a	awardRecipesByKey
	m	()F	aC	getBlockSpeedFactor
	m	()Lahj;	aF	getSwimSound
	m	()Lahj;	aG	getSwimSplashSound
	m	()Lahj;	aH	getSwimHighSpeedSplashSound
	m	()Laxk$b;	aN	getMovementEmission
	m	()V	aV	updateSwimming
	m	()V	aY	doWaterSplashEffect
	m	()V	a_	defineSynchedData
	m	()I	ar	getPortalWaitTime
	m	(Lahr;)V	b	awardStat
	m	(Lawu;)Z	b	isInvulnerableTo
	m	(Lawu;F)V	b	hurtArmor
	m	(Laxk;)V	b	magicCrit
	m	(Laxo;)V	b	lambda$playShoulderEntityAmbientSound$1
	m	(Laxp;)Lbuw;	b	getItemBySlot
	m	(Layk;Laxl;)F	b	getStandingEyeHeight
	m	(Lcov;)Z	b	shouldRemoveSoulSpeed
	m	(Ljava/util/Collection;)I	b	resetRecipes
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Ljava/lang/Iterable;	bB	getHandSlots
	m	()Ljava/lang/Iterable;	bC	getArmorSlots
	m	()Z	bP	isSwimming
	m	()V	bo	rideTick
	m	()D	bp	getMyRidingOffset
	m	()V	bt	removeVehicle
	m	()I	bz	getDimensionChangingDelay
	m	(I)V	c	giveExperienceLevels
	m	(Lawu;)Lahj;	c	getHurtSound
	m	(Lawu;F)V	c	hurtHelmet
	m	(Laxk;)V	c	touch
	m	(Laxo;)Z	c	lambda$playShoulderEntityAmbientSound$0
	m	(Lcov;)F	c	getDestroySpeed
	m	(Ljava/lang/String;)Ljava/util/UUID;	c	createPlayerUUID
	m	(Lok;)V	c	playShoulderEntityAmbientSound
	m	()Lahl;	cO	getSoundSource
	m	()I	cP	getFireImmuneTicks
	m	()Ljava/lang/String;	co	getScoreboardName
	m	()Z	cp	isPushedByFluid
	m	()Z	cs	shouldShowName
	m	(I)V	d	giveExperiencePoints
	m	(Laxk;)V	d	attack
	m	(Laxy;)V	d	blockUsingShield
	m	(Lboj;)I	d	getExperienceReward
	m	(Lcov;)Z	d	hasCorrectToolForDrops
	m	()Z	dA	onSoulSpeedBlock
	m	()Z	dG	isAffectedByFluids
	m	()Z	dK	isAlwaysExperienceDropper
	m	()Z	dT	canBeSeenAsEnemy
	m	()Z	ds	shouldBeSaved
	m	()Z	dt	isAlwaysTicking
	m	()V	eA	jumpFromGround
	m	()F	eD	getSpeed
	m	()V	eF	serverAiStep
	m	()F	eJ	getAbsorptionAmount
	m	()Laxt;	eL	getMainArm
	m	()Lcom/google/common/collect/ImmutableList;	eZ	getDismountPoses
	m	()V	ed	dropEquipment
	m	()Laxy$a;	eg	getFallSounds
	m	()Z	ex	isImmobile
	m	()Z	f	isCreative
	m	(Lawu;F)V	f	actuallyHurt
	m	(Lgj;)Z	f	freeAt
	m	()Lbql;	fA	getFoodData
	m	()Z	fB	isHurt
	m	()Z	fC	mayBuild
	m	()Lbrx;	fD	getEnderChestInventory
	m	()V	fE	removeEntitiesOnShoulder
	m	()Ldqm;	fF	getScoreboard
	m	()Z	fG	isReducedDebugInfo
	m	()Lok;	fH	getShoulderEntityLeft
	m	()Lok;	fI	getShoulderEntityRight
	m	()F	fJ	getCurrentItemAttackStrengthDelay
	m	()V	fK	resetAttackStrengthTicker
	m	()Lbut;	fL	getCooldowns
	m	()F	fM	getLuck
	m	()Z	fN	canUseGameMasterBlocks
	m	()Z	fO	isScoping
	m	()V	fd	stopSleeping
	m	()Layy$a;	ff	createAttributes
	m	()Z	fg	isSecondaryUseActive
	m	()Z	fh	wantsToStopRiding
	m	()Z	fi	isStayingOnGroundSurface
	m	()Z	fj	updateIsUnderwater
	m	()V	fk	updatePlayerPose
	m	()I	fl	getScore
	m	()V	fm	destroyVanishingCursedItems
	m	()V	fn	sweepAttack
	m	()V	fo	respawn
	m	()Z	fp	isLocalPlayer
	m	()Lcom/mojang/authlib/GameProfile;	fq	getGameProfile
	m	()Lboi;	fr	getInventory
	m	()Lbog;	fs	getAbilities
	m	()Z	ft	isSleepingLongEnough
	m	()I	fu	getSleepTimer
	m	()Z	fv	tryToStartFallFlying
	m	()V	fw	startFallFlying
	m	()V	fx	stopFallFlying
	m	()I	fy	getEnchantmentSeed
	m	()I	fz	getXpNeededForNextLevel
	m	(I)V	g	setRemainingFireTicks
	m	(Laxy;)V	g	doAutoAttackOnTouch
	m	(Lbuw;)Z	g	canTakeItem
	m	(Lbuw;)Lbuw;	h	getProjectile
	m	(Ldpo;)V	h	travel
	m	(Lok;)Z	h	setEntityOnShoulder
	m	(Lok;)V	i	setShoulderEntityLeft
	m	()Lbut;	j	createItemCooldowns
	m	(Lbuw;)Z	j	addItem
	m	(Lok;)V	j	setShoulderEntityRight
	m	()V	k	tick
	m	(I)Layp;	k	getSlot
	m	(Lok;)V	k	respawnEntityOnShoulder
	m	()V	n	turtleHelmetTick
	m	(F)Ldpo;	n	getRopeHoldPosition
	m	()V	q	closeContainer
	m	(DDD)V	q	checkMovementStatistics
	m	(F)V	q	hurtCurrentlyUsedShield
	m	()V	r	moveCloak
	m	(DDD)V	r	checkRidingStatistics
	m	(I)V	r	setScore
	m	(Z)V	r	disableShield
	m	(I)V	s	increaseScore
	m	(Z)Z	s	canEat
	m	()Z	t	isAboveGround
	m	(F)V	t	setAbsorptionAmount
	m	(I)V	t	startAutoSpinAttack
	m	(Z)V	t	setReducedDebugInfo
	m	(F)V	u	causeFoodExhaustion
	m	(F)F	v	getAttackStrengthScale
	m	()V	w	onUpdateAbilities
	m	()V	w_	aiStep
	m	()Lahj;	x_	getDeathSound
	f	Ljava/lang/String;	bE	UUID_PREFIX_OFFLINE_PLAYER
	f	I	bF	MAX_NAME_LENGTH
	f	I	bG	MAX_HEALTH
	f	I	bH	SLEEP_DURATION
	f	I	bI	WAKE_UP_DURATION
	f	I	bJ	ENDER_SLOT_OFFSET
	f	F	bK	CROUCH_BB_HEIGHT
	f	F	bL	SWIMMING_BB_WIDTH
	f	Ljava/util/Map;	b	POSES
	f	F	bM	SWIMMING_BB_HEIGHT
	f	F	bN	DEFAULT_EYE_HEIGHT
	f	Laxl;	bO	STANDING_DIMENSIONS
	f	Lyb;	bP	DATA_PLAYER_MODE_CUSTOMISATION
	f	Lyb;	bQ	DATA_PLAYER_MAIN_HAND
	f	Lyb;	bR	DATA_SHOULDER_LEFT
	f	Lyb;	bS	DATA_SHOULDER_RIGHT
	f	Lbrx;	bT	enderChestInventory
	f	Lbro;	bU	inventoryMenu
	f	Lbqp;	bV	containerMenu
	f	Lbql;	bW	foodData
	f	I	bX	jumpTriggerTime
	f	F	bY	oBob
	f	F	bZ	bob
	f	I	c	FLY_ACHIEVEMENT_SPEED
	f	I	ca	takeXpDelay
	f	D	cb	xCloakO
	f	D	cc	yCloakO
	f	D	cd	zCloakO
	f	D	ce	xCloak
	f	D	cf	yCloak
	f	D	cg	zCloak
	f	Z	ch	wasUnderwater
	f	I	ci	experienceLevel
	f	I	cj	totalExperience
	f	F	ck	experienceProgress
	f	I	cl	enchantmentSeed
	f	F	cm	defaultFlySpeed
	f	Lbov;	cn	fishing
	f	Lboi;	co	inventory
	f	I	cp	sleepCounter
	f	Lbog;	cq	abilities
	f	I	cr	lastLevelUpTime
	f	Lcom/mojang/authlib/GameProfile;	cs	gameProfile
	f	Z	ct	reducedDebugInfo
	f	Lbuw;	cu	lastItemInMainHand
	f	Lbut;	cv	cooldowns
	f	Lyb;	d	DATA_PLAYER_ABSORPTION_ID
	f	Lyb;	e	DATA_SCORE_ID
	f	J	f	timeEntitySatOnShoulder
c	boj$1	net/minecraft/world/entity/player/Player$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Pose
c	boj$a	net/minecraft/world/entity/player/Player$BedSleepingProblem
	m	()Lqk;	a	getMessage
	m	()[Lboj$a;	b	$values
	f	Lboj$a;	a	NOT_POSSIBLE_HERE
	f	Lboj$a;	b	NOT_POSSIBLE_NOW
	f	Lboj$a;	c	TOO_FAR_AWAY
	f	Lboj$a;	d	OBSTRUCTED
	f	Lboj$a;	e	OTHER_PROBLEM
	f	Lboj$a;	f	NOT_SAFE
	f	Lqk;	g	message
	f	[Lboj$a;	h	$VALUES
c	bok	net/minecraft/world/entity/player/PlayerModelPart
	m	()I	a	getMask
	m	()I	b	getBit
	m	()Ljava/lang/String;	c	getId
	m	()Lqk;	d	getName
	m	()[Lbok;	e	$values
	f	Lbok;	a	CAPE
	f	Lbok;	b	JACKET
	f	Lbok;	c	LEFT_SLEEVE
	f	Lbok;	d	RIGHT_SLEEVE
	f	Lbok;	e	LEFT_PANTS_LEG
	f	Lbok;	f	RIGHT_PANTS_LEG
	f	Lbok;	g	HAT
	f	I	h	bit
	f	I	i	mask
	f	Ljava/lang/String;	j	id
	f	Lqk;	k	name
	f	[Lbok;	l	$VALUES
c	bol	net/minecraft/world/entity/player/StackedContents
	m	()V	a	clear
	m	(I)Lbuw;	a	fromStackingIndex
	m	(II)I	a	take
	m	(Lbuw;)V	a	accountSimpleStack
	m	(Lbuw;I)V	a	accountStack
	m	(Lbxo;ILit/unimi/dsi/fastutil/ints/IntList;)I	a	getBiggestCraftableStack
	m	(Lbxo;Lit/unimi/dsi/fastutil/ints/IntList;)Z	a	canCraft
	m	(Lbxo;Lit/unimi/dsi/fastutil/ints/IntList;I)Z	a	canCraft
	m	(I)Z	b	has
	m	(II)V	b	put
	m	(Lbuw;)V	b	accountStack
	m	(Lbxo;Lit/unimi/dsi/fastutil/ints/IntList;)I	b	getBiggestCraftableStack
	m	(Lbuw;)I	c	getStackingIndex
	f	Lit/unimi/dsi/fastutil/ints/Int2IntMap;	a	contents
	f	I	b	EMPTY
c	bol$a	net/minecraft/world/entity/player/StackedContents$RecipePicker
	m	()[I	a	getUniqueAvailableIngredientItems
	m	(I)Z	a	dfs
	m	(ILit/unimi/dsi/fastutil/ints/IntList;)Z	a	tryPick
	m	(ZI)V	a	visit
	m	(ZII)Z	a	hasConnection
	m	()I	b	getMinIngredientCount
	m	(I)Z	b	isSatisfied
	m	(ILit/unimi/dsi/fastutil/ints/IntList;)I	b	tryPickAll
	m	(ZI)Z	b	hasVisited
	m	(ZII)Z	b	hasResidual
	m	(I)V	c	setSatisfied
	m	(ZI)I	c	getVisitedIndex
	m	(ZII)V	c	toggleResidual
	m	(I)I	d	getSatisfiedIndex
	m	(ZII)I	d	getIndex
	f	Lbol;	a	this$0
	f	Lbxo;	b	recipe
	f	Ljava/util/List;	c	ingredients
	f	I	d	ingredientCount
	f	[I	e	items
	f	I	f	itemCount
	f	Ljava/util/BitSet;	g	data
	f	Lit/unimi/dsi/fastutil/ints/IntList;	h	path
c	bom	net/minecraft/world/entity/player/package-info
c	bon	net/minecraft/world/entity/projectile/AbstractArrow
	m	()V	A	startFalling
	m	()V	C	resetPiercedEntities
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(DDDFFIZ)V	a	lerpTo
	m	(I)V	a	setKnockback
	m	(IZ)V	a	setFlag
	m	(Lahj;)V	a	setSoundEvent
	m	(Laxk;)Z	a	canHitEntity
	m	(Laxy;)V	a	doPostHurtEffects
	m	(Laxy;F)V	a	setEnchantmentEffectsFromEntity
	m	(Laye;Ldpo;)V	a	move
	m	(Layk;Laxl;)F	a	getEyeHeight
	m	(Lboj;)Z	a	tryPickup
	m	(Ldpk;)V	a	onHitBlock
	m	(Ldpl;)V	a	onHitEntity
	m	(Ldpo;Ldpo;)Ldpl;	a	findHitEntity
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Z)V	a	setCritArrow
	m	()Laxk$b;	aN	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(B)V	b	setPierceLevel
	m	(Laxk;)V	b	setOwner
	m	(Lboj;)V	b	playerTouch
	m	(Lok;)V	b	addAdditionalSaveData
	m	(DDDFF)V	c	shoot
	m	()Z	cf	isAttackable
	m	()V	h	tickDespawn
	m	(D)V	h	setBaseDamage
	m	()Lahj;	i	getDefaultHitGroundSoundEvent
	m	()Lahj;	j	getHitGroundSoundEvent
	m	()V	k	tick
	m	(DDD)V	k	lerpMotion
	m	()Lbuw;	l	getPickupItem
	m	()D	n	getBaseDamage
	m	()I	o	getKnockback
	m	(Z)V	p	setNoPhysics
	m	()Z	q	isCritArrow
	m	(Z)V	q	setShotFromCrossbow
	m	()Z	r	shotFromCrossbow
	m	()B	s	getPierceLevel
	m	()F	t	getWaterInertia
	m	()Z	u	isNoPhysics
	m	()Z	w	shouldFall
	f	Lyb;	ao	ID_FLAGS
	f	Lyb;	ap	PIERCE_LEVEL
	f	I	aq	FLAG_CRIT
	f	I	ar	FLAG_NOPHYSICS
	f	I	as	FLAG_CROSSBOW
	f	Lcov;	at	lastState
	f	I	au	life
	f	D	av	baseDamage
	f	I	aw	knockback
	f	Lahj;	ax	soundEvent
	f	Lit/unimi/dsi/fastutil/ints/IntOpenHashSet;	ay	piercingIgnoreEntityIds
	f	Ljava/util/List;	az	piercedAndKilledEntities
	f	Z	b	inGround
	f	I	c	inGroundTime
	f	Lbon$a;	d	pickup
	f	I	e	shakeTime
	f	D	f	ARROW_BASE_DAMAGE
c	bon$1	net/minecraft/world/entity/projectile/AbstractArrow$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$projectile$AbstractArrow$Pickup
c	bon$a	net/minecraft/world/entity/projectile/AbstractArrow$Pickup
	m	()[Lbon$a;	a	$values
	m	(I)Lbon$a;	a	byOrdinal
	f	Lbon$a;	a	DISALLOWED
	f	Lbon$a;	b	ALLOWED
	f	Lbon$a;	c	CREATIVE_ONLY
	f	[Lbon$a;	d	$VALUES
c	boo	net/minecraft/world/entity/projectile/AbstractHurtingProjectile
	m	()Z	L_	shouldBurn
	m	()Lrc;	S	getAddEntityPacket
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(Lawu;F)Z	a	hurt
	m	(Laxk;)Z	a	canHitEntity
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lrg;)V	a	recreateFromPacket
	m	()V	a_	defineSynchedData
	m	(Lok;)V	b	addAdditionalSaveData
	m	()F	bd	getBrightness
	m	()Z	bh	isPickable
	m	()F	bu	getPickRadius
	m	()Lia;	i	getTrailParticle
	m	()F	j	getInertia
	m	()V	k	tick
	f	D	b	xPower
	f	D	c	yPower
	f	D	d	zPower
c	bop	net/minecraft/world/entity/projectile/Arrow
	m	()V	A	updateColor
	m	(B)V	a	handleEntityEvent
	m	(Laxe;)V	a	addEffect
	m	(Laxy;)V	a	doPostHurtEffects
	m	(Lbuw;)V	a	setEffectsFromItem
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(I)V	b	makeParticle
	m	(Lok;)V	b	addAdditionalSaveData
	m	(I)V	c	setFixedColor
	m	(Lbuw;)I	c	getCustomColor
	m	()V	k	tick
	m	()Lbuw;	l	getPickupItem
	m	()I	w	getColor
	f	I	ao	NO_EFFECT_COLOR
	f	Lyb;	ap	ID_EFFECT_COLOR
	f	B	aq	EVENT_POTION_PUFF
	f	Lbwr;	ar	potion
	f	Ljava/util/Set;	as	effects
	f	Z	at	fixedColor
	f	I	f	EXPOSED_POTION_DECAY_TIME
c	boq	net/minecraft/world/entity/projectile/DragonFireball
	m	()Z	L_	shouldBurn
	m	(Lawu;F)Z	a	hurt
	m	(Ldpm;)V	a	onHit
	m	()Z	bh	isPickable
	m	()Lia;	i	getTrailParticle
	f	F	e	SPLASH_RANGE
c	bor	net/minecraft/world/entity/projectile/EvokerFangs
	m	()Lrc;	S	getAddEntityPacket
	m	(B)V	a	handleEntityEvent
	m	(F)F	a	getAnimationProgress
	m	(Laxy;)V	a	setOwner
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Laxy;)V	c	dealDamageTo
	m	()Laxy;	h	getOwner
	m	()V	k	tick
	f	I	ao	lifeTicks
	f	Z	ap	clientSideAttackStarted
	f	Laxy;	aq	owner
	f	Ljava/util/UUID;	ar	ownerUUID
	f	I	b	ATTACK_DURATION
	f	I	c	LIFE_OFFSET
	f	I	d	ATTACK_TRIGGER_TICKS
	f	I	e	warmupDelayTicks
	f	Z	f	sentSpikeEvent
c	bos	net/minecraft/world/entity/projectile/EyeOfEnder
	m	()Lrc;	S	getAddEntityPacket
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(Lbuw;)V	a	setItem
	m	(Lgj;)V	a	signalTo
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lok;)V	b	addAdditionalSaveData
	m	()F	bd	getBrightness
	m	(Lbuw;)V	c	lambda$setItem$0
	m	()Z	cf	isAttackable
	m	()Lbuw;	h	getItem
	m	()Lbuw;	i	getItemRaw
	m	()V	k	tick
	m	(DDD)V	k	lerpMotion
	f	Z	ao	surviveAfterDeath
	f	Lyb;	b	DATA_ITEM_STACK
	f	D	c	tx
	f	D	d	ty
	f	D	e	tz
	f	I	f	life
c	bot	net/minecraft/world/entity/projectile/Fireball
	m	(Lbuw;)V	a	setItem
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lbuw;)V	c	lambda$setItem$0
	m	()Lbuw;	h	getItem
	m	()Lbuw;	l	getItemRaw
	f	Lyb;	e	DATA_ITEM_STACK
c	bou	net/minecraft/world/entity/projectile/FireworkRocketEntity
	m	(B)V	a	handleEntityEvent
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(I)V	a	lambda$tick$0
	m	(Ldpk;)V	a	onHitBlock
	m	(Ldpl;)V	a	onHitEntity
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	cf	isAttackable
	m	()Lbuw;	h	getItem
	m	()Z	i	isShotAtAngle
	m	()V	j	explode
	m	(DDD)Z	j	shouldRender
	m	()V	k	tick
	m	()Z	l	hasExplosion
	m	()V	n	dealExplosionDamage
	m	()Z	o	isAttachedToEntity
	f	Laxy;	ao	attachedToEntity
	f	Lyb;	b	DATA_ID_FIREWORKS_ITEM
	f	Lyb;	c	DATA_ATTACHED_TO_TARGET
	f	Lyb;	d	DATA_SHOT_AT_ANGLE
	f	I	e	life
	f	I	f	lifetime
c	bov	net/minecraft/world/entity/projectile/FishingHook
	m	()Lrc;	S	getAddEntityPacket
	m	(B)V	a	handleEntityEvent
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(DDDFFIZ)V	a	lerpTo
	m	(Laxk$c;)V	a	remove
	m	(Laxk;)Z	a	canHitEntity
	m	(Lboj;)Z	a	shouldStopFishing
	m	(Lbov$b;Lbov$b;)Lbov$b;	a	lambda$getOpenWaterTypeForArea$0
	m	(Lbov;)V	a	updateOwnerInfo
	m	(Lbuw;)I	a	retrieve
	m	(Ldpk;)V	a	onHitBlock
	m	(Ldpl;)V	a	onHitEntity
	m	(Lgj;)V	a	catchingFish
	m	(Lgj;Lgj;)Lbov$b;	a	getOpenWaterTypeForArea
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lrg;)V	a	recreateFromPacket
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	()Laxk$b;	aN	getMovementEmission
	m	()V	a_	defineSynchedData
	m	()V	aj	onClientRemoval
	m	(Laxk;)V	b	setOwner
	m	(Lgj;)Z	b	calculateOpenWater
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Laxk;)V	c	pullEntity
	m	(Lgj;)Lbov$b;	c	getOpenWaterTypeForBlock
	m	()Z	ci	canChangeDimensions
	m	()Z	h	isOpenWaterFishing
	m	()Lboj;	i	getPlayerOwner
	m	()Laxk;	j	getHookedIn
	m	()V	k	tick
	m	()V	l	checkCollision
	m	(Laxk;)V	x	setHookedEntity
	f	Lyb;	ao	DATA_HOOKED_ENTITY
	f	Lyb;	ap	DATA_BITING
	f	I	aq	life
	f	I	ar	nibble
	f	I	as	timeUntilLured
	f	I	at	timeUntilHooked
	f	F	au	fishAngle
	f	Z	av	openWater
	f	Laxk;	aw	hookedIn
	f	Lbov$a;	ax	currentState
	f	I	ay	luck
	f	I	az	lureSpeed
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Random;	c	syncronizedRandom
	f	Z	d	biting
	f	I	e	outOfWaterTime
	f	I	f	MAX_OUT_OF_WATER_TIME
c	bov$1	net/minecraft/world/entity/projectile/FishingHook$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$projectile$FishingHook$OpenWaterType
c	bov$a	net/minecraft/world/entity/projectile/FishingHook$FishHookState
	m	()[Lbov$a;	a	$values
	f	Lbov$a;	a	FLYING
	f	Lbov$a;	b	HOOKED_IN_ENTITY
	f	Lbov$a;	c	BOBBING
	f	[Lbov$a;	d	$VALUES
c	bov$b	net/minecraft/world/entity/projectile/FishingHook$OpenWaterType
	m	()[Lbov$b;	a	$values
	f	Lbov$b;	a	ABOVE_WATER
	f	Lbov$b;	b	INSIDE_WATER
	f	Lbov$b;	c	INVALID
	f	[Lbov$b;	d	$VALUES
c	bow	net/minecraft/world/entity/projectile/ItemSupplier
	m	()Lbuw;	h	getItem
c	box	net/minecraft/world/entity/projectile/LargeFireball
	m	(Ldpl;)V	a	onHitEntity
	m	(Ldpm;)V	a	onHit
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lok;)V	b	addAdditionalSaveData
	f	I	e	explosionPower
c	boy	net/minecraft/world/entity/projectile/LlamaSpit
	m	(Ldpk;)V	a	onHitBlock
	m	(Ldpl;)V	a	onHitEntity
	m	(Lrg;)V	a	recreateFromPacket
	m	()V	a_	defineSynchedData
	m	()V	k	tick
c	boz	net/minecraft/world/entity/projectile/Projectile
	m	()Lrc;	S	getAddEntityPacket
	m	(Laxk;)Z	a	canHitEntity
	m	(Laxk;FFFFF)V	a	shootFromRotation
	m	(Lcav;Lgj;)Z	a	mayInteract
	m	(Ldpk;)V	a	onHitBlock
	m	(Ldpl;)V	a	onHitEntity
	m	(Ldpm;)V	a	onHit
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lrg;)V	a	recreateFromPacket
	m	(Laxk;)V	b	setOwner
	m	(Lok;)V	b	addAdditionalSaveData
	m	(DDDFF)V	c	shoot
	m	(Laxk;)Z	c	lambda$checkLeftOwner$0
	m	(FF)F	d	lerpRotation
	m	(Laxk;)Z	d	ownedBy
	m	()Z	i	checkLeftOwner
	m	()V	k	tick
	m	(DDD)V	k	lerpMotion
	m	()Laxk;	x	getOwner
	m	()Laxk;	y	getEffectSource
	m	()V	z	updateRotation
	f	Ljava/util/UUID;	b	ownerUUID
	f	Laxk;	c	cachedOwner
	f	Z	d	leftOwner
	f	Z	e	hasBeenShot
c	bpa	net/minecraft/world/entity/projectile/ProjectileUtil
	m	(Laxk;F)V	a	rotateTowardsMovement
	m	(Laxk;Ldpo;Ldpo;Ldpj;Ljava/util/function/Predicate;D)Ldpl;	a	getEntityHitResult
	m	(Laxk;Ljava/util/function/Predicate;)Ldpm;	a	getHitResult
	m	(Laxy;Lbus;)Lawg;	a	getWeaponHoldingHand
	m	(Laxy;Lbuw;F)Lbon;	a	getMobArrow
	m	(Lcav;Laxk;Ldpo;Ldpo;Ldpj;Ljava/util/function/Predicate;)Ldpl;	a	getEntityHitResult
	m	(Lcav;Laxk;Ldpo;Ldpo;Ldpj;Ljava/util/function/Predicate;F)Ldpl;	a	getEntityHitResult
c	bpb	net/minecraft/world/entity/projectile/ShulkerBullet
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(Lawu;F)Z	a	hurt
	m	(Laxk;)Z	a	canHitEntity
	m	(Ldpk;)V	a	onHitBlock
	m	(Ldpl;)V	a	onHitEntity
	m	(Ldpm;)V	a	onHit
	m	(Lgo$a;)V	a	selectNextMoveDirection
	m	(Lgo;)V	a	setMoveDirection
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lrg;)V	a	recreateFromPacket
	m	()V	a_	defineSynchedData
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	bE	isOnFire
	m	()F	bd	getBrightness
	m	()Z	bh	isPickable
	m	()Lahl;	cO	getSoundSource
	m	()V	dj	checkDespawn
	m	()Lgo;	h	getMoveDirection
	m	()V	k	tick
	f	D	ao	targetDeltaY
	f	D	ap	targetDeltaZ
	f	Ljava/util/UUID;	aq	targetId
	f	D	b	SPEED
	f	Laxk;	c	finalTarget
	f	Lgo;	d	currentMoveDirection
	f	I	e	flightSteps
	f	D	f	targetDeltaX
c	bpc	net/minecraft/world/entity/projectile/SmallFireball
	m	(Lawu;F)Z	a	hurt
	m	(Ldpk;)V	a	onHitBlock
	m	(Ldpl;)V	a	onHitEntity
	m	(Ldpm;)V	a	onHit
	m	()Z	bh	isPickable
c	bpd	net/minecraft/world/entity/projectile/Snowball
	m	(B)V	a	handleEntityEvent
	m	(Ldpl;)V	a	onHitEntity
	m	(Ldpm;)V	a	onHit
	m	()Lbus;	i	getDefaultItem
	m	()Lia;	n	getParticle
c	bpe	net/minecraft/world/entity/projectile/SpectralArrow
	m	(Laxy;)V	a	doPostHurtEffects
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lok;)V	b	addAdditionalSaveData
	m	()V	k	tick
	m	()Lbuw;	l	getPickupItem
	f	I	f	duration
c	bpf	net/minecraft/world/entity/projectile/ThrowableItemProjectile
	m	(Lbuw;)V	a	setItem
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lbuw;)V	c	lambda$setItem$0
	m	()Lbuw;	h	getItem
	m	()Lbus;	i	getDefaultItem
	m	()Lbuw;	j	getItemRaw
	f	Lyb;	b	DATA_ITEM_STACK
c	bpg	net/minecraft/world/entity/projectile/ThrowableProjectile
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	()V	k	tick
	m	()F	l	getGravity
c	bph	net/minecraft/world/entity/projectile/ThrownEgg
	m	(B)V	a	handleEntityEvent
	m	(Ldpl;)V	a	onHitEntity
	m	(Ldpm;)V	a	onHit
	m	()Lbus;	i	getDefaultItem
c	bpi	net/minecraft/world/entity/projectile/ThrownEnderpearl
	m	(Ldpl;)V	a	onHitEntity
	m	(Ldpm;)V	a	onHit
	m	(Ladw;)Laxk;	b	changeDimension
	m	()Lbus;	i	getDefaultItem
	m	()V	k	tick
c	bpj	net/minecraft/world/entity/projectile/ThrownExperienceBottle
	m	(Ldpm;)V	a	onHit
	m	()Lbus;	i	getDefaultItem
	m	()F	l	getGravity
c	bpk	net/minecraft/world/entity/projectile/ThrownPotion
	m	(Lbuw;Lbwr;)V	a	makeAreaOfEffectCloud
	m	(Ldpk;)V	a	onHitBlock
	m	(Ldpm;)V	a	onHit
	m	(Lgj;)V	a	dowseFire
	m	(Ljava/util/List;Laxk;)V	a	applySplash
	m	()Lbus;	i	getDefaultItem
	m	()F	l	getGravity
	m	()V	n	applyWater
	m	()Z	o	isLingering
	f	D	b	SPLASH_RANGE
	f	Ljava/util/function/Predicate;	c	WATER_SENSITIVE
	f	D	d	SPLASH_RANGE_SQ
c	bpl	net/minecraft/world/entity/projectile/ThrownTrident
	m	()Z	A	isChanneling
	m	()Z	C	isAcceptibleReturnOwner
	m	(Lboj;)Z	a	tryPickup
	m	(Ldpl;)V	a	onHitEntity
	m	(Ldpo;Ldpo;)Ldpl;	a	findHitEntity
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lboj;)V	b	playerTouch
	m	(Lok;)V	b	addAdditionalSaveData
	m	()V	h	tickDespawn
	m	()Lahj;	i	getDefaultHitGroundSoundEvent
	m	(DDD)Z	j	shouldRender
	m	()V	k	tick
	m	()Lbuw;	l	getPickupItem
	m	()F	t	getWaterInertia
	m	()Z	w	isFoil
	f	Lyb;	ao	ID_LOYALTY
	f	Lyb;	ap	ID_FOIL
	f	Lbuw;	aq	tridentItem
	f	Z	ar	dealtDamage
	f	I	f	clientSideReturnTridentTickCount
c	bpm	net/minecraft/world/entity/projectile/WitherSkull
	m	()Z	L_	shouldBurn
	m	(Lawu;F)Z	a	hurt
	m	(Lcan;Lcab;Lgj;Lcov;Ldix;F)F	a	getBlockExplosionResistance
	m	(Ldpl;)V	a	onHitEntity
	m	(Ldpm;)V	a	onHit
	m	(Z)V	a	setDangerous
	m	()V	a_	defineSynchedData
	m	()Z	bE	isOnFire
	m	()Z	bh	isPickable
	m	()F	j	getInertia
	m	()Z	l	isDangerous
	f	Lyb;	e	DATA_DANGEROUS
c	bpn	net/minecraft/world/entity/projectile/package-info
c	bpo	net/minecraft/world/entity/raid/Raid
	m	()Z	A	hasMoreWaves
	m	()Z	B	isFinalWave
	m	()Z	C	hasBonusWave
	m	()Z	D	hasSpawnedBonusWave
	m	()Z	E	shouldSpawnBonusGroup
	m	()V	F	updateRaiders
	m	()Z	G	shouldSpawnGroup
	m	()V	H	setDirty
	m	()Z	a	isOver
	m	(I)V	a	setBadOmenLevel
	m	(II)Lgj;	a	findRandomSpawnPos
	m	(ILbpp;)V	a	setLeader
	m	(ILbpp;Lgj;Z)V	a	joinRaid
	m	(ILbpp;Z)Z	a	addWaveMob
	m	(Ladx;)Z	a	lambda$validPlayer$0
	m	(Lawe;)I	a	getNumGroups
	m	(Laxk;)V	a	addHeroOfTheVillage
	m	(Lboj;)V	a	absorbBadOmen
	m	(Lbpo$b;IZ)I	a	getDefaultNumSpawns
	m	(Lbpo$b;Ljava/util/Random;ILawf;Z)I	a	getPotentialBonusSpawns
	m	(Lbpp;Z)V	a	removeFromRaid
	m	(Lgj;)V	a	playSound
	m	(Ljava/lang/Integer;)Ljava/util/Set;	a	lambda$addWaveMob$2
	m	(Lok;)Lok;	a	save
	m	()Z	b	isBetweenWaves
	m	(I)Lbpp;	b	getLeader
	m	(ILbpp;)Z	b	addWaveMob
	m	(Lgj;)V	b	spawnGroup
	m	()Z	c	hasFirstWaveSpawned
	m	(I)V	c	removeLeader
	m	(Lgj;)V	c	setCenter
	m	()Z	d	isStopped
	m	(I)Ljava/util/Optional;	d	getValidSpawnPos
	m	(Lgj;)D	d	lambda$moveRaidCenterToNearbyVillageSection$1
	m	()Z	e	isVictory
	m	()Z	f	isLoss
	m	()F	g	getTotalHealth
	m	()Ljava/util/Set;	h	getAllRaiders
	m	()Lcav;	i	getLevel
	m	()Z	j	isStarted
	m	()I	k	getGroupsSpawned
	m	()I	l	getMaxBadOmenLevel
	m	()I	m	getBadOmenLevel
	m	()V	n	stop
	m	()V	o	tick
	m	()V	p	updateBossbar
	m	()F	q	getHealthOfLivingRaiders
	m	()I	r	getTotalRaidersAlive
	m	()Lbuw;	s	getLeaderBannerInstance
	m	()Lgj;	t	getCenter
	m	()I	u	getId
	m	()Z	v	isActive
	m	()F	w	getEnchantOdds
	m	()Ljava/util/function/Predicate;	x	validPlayer
	m	()V	y	updatePlayers
	m	()V	z	moveRaidCenterToNearbyVillageSection
	f	Ljava/util/Map;	A	groupToLeaderMap
	f	Ljava/util/Map;	B	groupRaiderMap
	f	Ljava/util/Set;	C	heroesOfTheVillage
	f	J	D	ticksActive
	f	Lgj;	E	center
	f	Ladw;	F	level
	f	Z	G	started
	f	I	H	id
	f	F	I	totalHealth
	f	I	J	badOmenLevel
	f	Z	K	active
	f	I	L	groupsSpawned
	f	Ladt;	M	raidEvent
	f	I	N	postRaidTicks
	f	I	O	raidCooldownTicks
	f	Ljava/util/Random;	P	random
	f	I	Q	numGroups
	f	Lbpo$a;	R	status
	f	I	S	celebrationTicks
	f	Ljava/util/Optional;	T	waveSpawnPos
	f	I	a	VILLAGE_RADIUS_BUFFER
	f	I	b	MAX_NO_ACTION_TIME
	f	I	c	MAX_CELEBRATION_TICKS
	f	I	d	TICKS_PER_DAY
	f	I	e	DEFAULT_MAX_BAD_OMEN_LEVEL
	f	I	f	VALID_RAID_RADIUS_SQR
	f	I	g	RAID_REMOVAL_THRESHOLD_SQR
	f	I	h	SECTION_RADIUS_FOR_FINDING_NEW_VILLAGE_CENTER
	f	I	i	ATTEMPT_RAID_FARTHEST
	f	I	j	ATTEMPT_RAID_CLOSE
	f	I	k	ATTEMPT_RAID_INSIDE
	f	I	l	VILLAGE_SEARCH_RADIUS
	f	I	m	RAID_TIMEOUT_TICKS
	f	I	n	NUM_SPAWN_ATTEMPTS
	f	Ljava/lang/String;	o	OMINOUS_BANNER_PATTERN_NAME
	f	Ljava/lang/String;	p	RAIDERS_REMAINING
	f	I	q	POST_RAID_TICK_LIMIT
	f	I	r	DEFAULT_PRE_RAID_TICKS
	f	I	s	OUTSIDE_RAID_BOUNDS_TIMEOUT
	f	I	t	LOW_MOB_THRESHOLD
	f	Lqk;	u	RAID_NAME_COMPONENT
	f	Lqk;	v	VICTORY
	f	Lqk;	w	DEFEAT
	f	Lqk;	x	RAID_BAR_VICTORY_COMPONENT
	f	Lqk;	y	RAID_BAR_DEFEAT_COMPONENT
	f	I	z	HERO_OF_THE_VILLAGE_DURATION
c	bpo$1	net/minecraft/world/entity/raid/Raid$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$raid$Raid$RaiderType
	f	[I	b	$SwitchMap$net$minecraft$world$Difficulty
c	bpo$a	net/minecraft/world/entity/raid/Raid$RaidStatus
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lbpo$a;	a	getByName
	m	()[Lbpo$a;	b	$values
	f	Lbpo$a;	a	ONGOING
	f	Lbpo$a;	b	VICTORY
	f	Lbpo$a;	c	LOSS
	f	Lbpo$a;	d	STOPPED
	f	[Lbpo$a;	e	VALUES
	f	[Lbpo$a;	f	$VALUES
c	bpo$b	net/minecraft/world/entity/raid/Raid$RaiderType
	m	()[Lbpo$b;	a	$values
	f	Lbpo$b;	a	VINDICATOR
	f	Lbpo$b;	b	EVOKER
	f	Lbpo$b;	c	PILLAGER
	f	Lbpo$b;	d	WITCH
	f	Lbpo$b;	e	RAVAGER
	f	[Lbpo$b;	f	VALUES
	f	Laxo;	g	entityType
	f	[I	h	spawnsPerWaveBeforeBonus
	f	[Lbpo$b;	i	$VALUES
c	bpp	net/minecraft/world/entity/raid/Raider
	m	()Z	O	requiresCustomPersistence
	m	(I)V	a	setWave
	m	(IZ)V	a	applyRaidBuffs
	m	(Lawu;)V	a	die
	m	(Lawu;F)Z	a	hurt
	m	(Lbpo;)V	a	setCurrentRaid
	m	(Lbpp;)Ljava/util/Random;	a	access$000
	m	(Lcbk;Lawf;Layc;Layq;Lok;)Layq;	a	finalizeSpawn
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(I)V	b	setTicksOutsideRaid
	m	(Lbli;)V	b	pickUpItem
	m	(Lbpp;)F	b	access$100
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lbli;)Z	c	lambda$static$0
	m	(Lbpp;)Ljava/util/Random;	c	access$200
	m	(Lbpp;)Z	d	access$300
	m	(Lbpp;)Ljava/util/Random;	e	access$400
	m	(Lbpp;)Ljava/util/Random;	f	access$500
	m	()V	fD	updateNoActionTime
	m	()Z	fG	canJoinPatrol
	m	()Z	fM	canJoinRaid
	m	()Lbpo;	fN	getCurrentRaid
	m	()Z	fO	hasActiveRaid
	m	()I	fP	getWave
	m	()Z	fQ	isCelebrating
	m	()I	fR	getTicksOutsideRaid
	m	(D)Z	h	removeWhenFarAway
	m	()Lahj;	t	getCelebrateSound
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	(Z)V	y	setCanJoinRaid
	m	(Z)V	z	setCelebrating
	f	Ljava/util/function/Predicate;	b	ALLOWED_ITEMS
	f	Z	bV	canJoinRaid
	f	I	bW	ticksOutsideRaid
	f	Lyb;	c	IS_CELEBRATING
	f	Lbpo;	d	raid
	f	I	e	wave
c	bpp$a	net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbhf;	a	shoutTargeting
	f	Lbpp;	b	this$0
	f	Lbpp;	c	mob
	f	F	d	hostileRadiusSqr
c	bpp$b	net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbpp;	a	this$0
	f	Lbpp;	b	mob
c	bpp$c	net/minecraft/world/entity/raid/Raider$RaiderCelebration
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbpp;	a	this$0
	f	Lbpp;	b	mob
c	bpp$d	net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal
	m	()Z	a	canUse
	m	(Lbhv;)Z	a	lambda$hasSuitablePoi$0
	m	(Lgj;)Z	a	hasNotVisited
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	isValidRaid
	m	()Z	i	hasSuitablePoi
	m	()V	k	updateVisited
	f	Lbpp;	a	raider
	f	D	b	speedModifier
	f	Lgj;	c	poiPos
	f	Ljava/util/List;	d	visited
	f	I	e	distanceToPoi
	f	Z	f	stuck
c	bpq	net/minecraft/world/entity/raid/Raids
	m	()V	a	tick
	m	(I)Lbpo;	a	get
	m	(Ladw;Lgj;)Lbpo;	a	getOrCreateRaid
	m	(Ladw;Lok;)Lbpq;	a	load
	m	(Ladx;)Lbpo;	a	createOrExtendRaid
	m	(Lbpp;Lbpo;)Z	a	canJoinRaid
	m	(Lgj;I)Lbpo;	a	getNearbyRaid
	m	(Lgs;)Ljava/lang/String;	a	getFileId
	m	(Lok;)Lok;	a	save
	m	()I	d	getUniqueId
	f	Ljava/lang/String;	a	RAID_FILE_ID
	f	Ljava/util/Map;	b	raidMap
	f	Ladw;	c	level
	f	I	d	nextAvailableID
	f	I	e	tick
c	bpr	net/minecraft/world/entity/raid/package-info
c	bps	net/minecraft/world/entity/schedule/Activity
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lbps;	a	register
	f	Lbps;	a	CORE
	f	Lbps;	b	IDLE
	f	Lbps;	c	WORK
	f	Lbps;	d	PLAY
	f	Lbps;	e	REST
	f	Lbps;	f	MEET
	f	Lbps;	g	PANIC
	f	Lbps;	h	RAID
	f	Lbps;	i	PRE_RAID
	f	Lbps;	j	HIDE
	f	Lbps;	k	FIGHT
	f	Lbps;	l	CELEBRATE
	f	Lbps;	m	ADMIRE_ITEM
	f	Lbps;	n	AVOID
	f	Lbps;	o	RIDE
	f	Lbps;	p	PLAY_DEAD
	f	Lbps;	q	LONG_JUMP
	f	Lbps;	r	RAM
	f	Ljava/lang/String;	s	name
	f	I	t	hashCode
c	bpt	net/minecraft/world/entity/schedule/Keyframe
	m	()I	a	getTimeStamp
	m	()F	b	getValue
	f	I	a	timeStamp
	f	F	b	value
c	bpu	net/minecraft/world/entity/schedule/Schedule
	m	(I)Lbps;	a	getActivityAt
	m	(ILjava/util/Map$Entry;)D	a	lambda$getActivityAt$1
	m	(Lbps;)V	a	ensureTimelineExistsFor
	m	(Lbps;Ljava/util/Map$Entry;)Z	a	lambda$getAllTimelinesExceptFor$0
	m	(Ljava/lang/String;)Lbpv;	a	register
	m	(Lbps;)Lbpw;	b	getTimelineFor
	m	(Lbps;)Ljava/util/List;	c	getAllTimelinesExceptFor
	f	I	a	WORK_START_TIME
	f	I	b	TOTAL_WORK_TIME
	f	Lbpu;	c	EMPTY
	f	Lbpu;	d	SIMPLE
	f	Lbpu;	e	VILLAGER_BABY
	f	Lbpu;	f	VILLAGER_DEFAULT
	f	Ljava/util/Map;	g	timelines
c	bpv	net/minecraft/world/entity/schedule/ScheduleBuilder
	m	()Lbpu;	a	build
	m	(ILbps;)Lbpv;	a	changeActivityAt
	m	(Lbpv$a;)V	a	lambda$build$1
	m	(Lbpv$a;Lbpw;)V	a	lambda$build$0
	f	Lbpu;	a	schedule
	f	Ljava/util/List;	b	transitions
c	bpv$a	net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition
	m	()I	a	getTime
	m	()Lbps;	b	getActivity
	f	I	a	time
	f	Lbps;	b	activity
c	bpw	net/minecraft/world/entity/schedule/Timeline
	m	()Lcom/google/common/collect/ImmutableList;	a	getKeyframes
	m	(I)F	a	getValueAt
	m	(IF)Lbpw;	a	addKeyframe
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectSortedMap;Lbpt;)V	a	lambda$sortAndDeduplicateKeyframes$0
	m	(Ljava/util/Collection;)Lbpw;	a	addKeyframes
	m	()V	b	sortAndDeduplicateKeyframes
	f	Ljava/util/List;	a	keyframes
	f	I	b	previousIndex
c	bpx	net/minecraft/world/entity/schedule/package-info
c	bpy	net/minecraft/world/entity/vehicle/AbstractMinecart
	m	()Lrc;	S	getAddEntityPacket
	m	(DDDD)Ldpo;	a	getPosOffs
	m	(DDDFFIZ)V	a	lerpTo
	m	(F)V	a	setDamage
	m	(IIIZ)V	a	activateMinecart
	m	(Lawu;)V	a	destroy
	m	(Lawu;F)Z	a	hurt
	m	(Lcav;DDDLbpy$a;)Lbpy;	a	createMinecart
	m	(Lcpz;)Lcom/mojang/datafixers/util/Pair;	a	exits
	m	(Lgj$a;)Ldqh;	a	lambda$getDismountLocationForPassenger$0
	m	(Lgj;)Z	a	isRedstoneConductor
	m	(Lgo$a;Ln$a;)Ldpo;	a	getRelativePortalPosition
	m	(Ljava/util/EnumMap;)V	a	lambda$static$2
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Z)V	a	setCustomDisplay
	m	()F	aC	getBlockSpeedFactor
	m	()Laxk$b;	aN	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(Laxy;)Ldpo;	b	getDismountLocationForPassenger
	m	(Lcov;)V	b	setDisplayBlockState
	m	(Lgj;)Ldqh;	b	lambda$getDismountLocationForPassenger$1
	m	(Lok;)V	b	addAdditionalSaveData
	m	()V	bA	animateHurt
	m	()Z	bh	isPickable
	m	()Z	bi	isPushable
	m	()D	bq	getPassengersRidingOffset
	m	(I)V	c	setHurtTime
	m	(Lgj;Lcov;)V	c	moveAlongTrack
	m	()Lgo;	cu	getMotionDirection
	m	()Ldpj;	cx	getBoundingBoxForCulling
	m	(I)V	d	setHurtDir
	m	()Lbuw;	dk	getPickResult
	m	(Laxk;)V	g	push
	m	()D	h	getMaxSpeed
	m	(Laxk;)Z	h	canCollideWith
	m	()V	i	comeOffTrack
	m	()V	j	applyNaturalSlowdown
	m	()V	k	tick
	m	(DDD)V	k	lerpMotion
	m	()F	l	getDamage
	m	(I)V	m	setDisplayOffset
	m	()I	n	getHurtTime
	m	()I	o	getHurtDir
	m	(DDD)Ldpo;	p	getPos
	m	()Lbpy$a;	q	getMinecartType
	m	()Lcov;	r	getDisplayBlockState
	m	()Lcov;	s	getDefaultDisplayBlockState
	m	()I	t	getDisplayOffset
	m	()I	u	getDefaultDisplayOffset
	m	()Z	w	hasCustomDisplay
	f	D	aA	lyd
	f	D	aB	lzd
	f	Lyb;	ao	DATA_ID_DISPLAY_OFFSET
	f	Lyb;	ap	DATA_ID_CUSTOM_DISPLAY
	f	Lcom/google/common/collect/ImmutableMap;	aq	POSE_DISMOUNT_HEIGHTS
	f	Z	ar	flipped
	f	Ljava/util/Map;	as	EXITS
	f	I	at	lSteps
	f	D	au	lx
	f	D	av	ly
	f	D	aw	lz
	f	D	ax	lyr
	f	D	ay	lxr
	f	D	az	lxd
	f	F	b	WATER_SLOWDOWN_FACTOR
	f	Lyb;	c	DATA_ID_HURT
	f	Lyb;	d	DATA_ID_HURTDIR
	f	Lyb;	e	DATA_ID_DAMAGE
	f	Lyb;	f	DATA_ID_DISPLAY_BLOCK
c	bpy$1	net/minecraft/world/entity/vehicle/AbstractMinecart$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$entity$vehicle$AbstractMinecart$Type
c	bpy$a	net/minecraft/world/entity/vehicle/AbstractMinecart$Type
	m	()[Lbpy$a;	a	$values
	f	Lbpy$a;	a	RIDEABLE
	f	Lbpy$a;	b	CHEST
	f	Lbpy$a;	c	FURNACE
	f	Lbpy$a;	d	TNT
	f	Lbpy$a;	e	SPAWNER
	f	Lbpy$a;	f	HOPPER
	f	Lbpy$a;	g	COMMAND_BLOCK
	f	[Lbpy$a;	h	$VALUES
c	bpz	net/minecraft/world/entity/vehicle/AbstractMinecartContainer
	m	()V	a	clearContent
	m	(I)Lbuw;	a	getItem
	m	(II)Lbuw;	a	removeItem
	m	(ILboi;)Lbqp;	a	createMenu
	m	(ILbuw;)V	a	setItem
	m	(Lawu;)V	a	destroy
	m	(Laxk$c;)V	a	remove
	m	(Lboj;)Z	a	stillValid
	m	(Lboj;Lawg;)Lawh;	a	interact
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lyt;J)V	a	setLootTable
	m	(I)Lbuw;	b	removeItemNoUpdate
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	c	isEmpty
	m	(Lboj;)V	d	unpackLootTable
	m	()V	e	setChanged
	m	()V	j	applyNaturalSlowdown
	m	(I)Layp;	k	getSlot
	f	Lgx;	c	itemStacks
	f	Lyt;	d	lootTable
	f	J	e	lootTableSeed
c	bpz$1	net/minecraft/world/entity/vehicle/AbstractMinecartContainer$1
	m	()Lbuw;	a	get
	m	(Lbuw;)Z	a	set
	f	I	b	val$slot
	f	Lbpz;	c	this$0
c	bqa	net/minecraft/world/entity/vehicle/Boat
	m	()I	A	getBubbleTime
	m	()Lrc;	S	getAddEntityPacket
	m	(DDDFFIZ)V	a	lerpTo
	m	(DZLcov;Lgj;)V	a	checkFallDamage
	m	(F)V	a	setDamage
	m	(I)Z	a	getPaddleState
	m	(IF)F	a	getRowingTime
	m	(Lawu;F)Z	a	hurt
	m	(Laxk;)V	a	clampRotation
	m	(Laxk;Laxk;)Z	a	canVehicleCollide
	m	(Layk;Laxl;)F	a	getEyeHeight
	m	(Lboj;Lawg;)Lawh;	a	interact
	m	(Lbqa$b;)V	a	setType
	m	(Lgo$a;Ln$a;)Ldpo;	a	getRelativePortalPosition
	m	(Lok;)V	a	readAdditionalSaveData
	m	(ZZ)V	a	setPaddleState
	m	(ZZZZ)V	a	setInput
	m	()Laxk$b;	aN	getMovementEmission
	m	()Z	aU	isUnderWater
	m	()V	a_	defineSynchedData
	m	(F)F	b	getBubbleAngle
	m	(I)V	b	setHurtTime
	m	(Laxk;)Z	b	lambda$tickBubbleColumn$0
	m	(Laxy;)Ldpo;	b	getDismountLocationForPassenger
	m	(Lok;)V	b	addAdditionalSaveData
	m	()V	bA	animateHurt
	m	()Z	bh	isPickable
	m	()Z	bi	isPushable
	m	()Z	bn	canBeCollidedWith
	m	()D	bq	getPassengersRidingOffset
	m	(I)V	c	setHurtDir
	m	()Laxk;	cE	getControllingPassenger
	m	()Lgo;	cu	getMotionDirection
	m	(I)V	d	setBubbleTime
	m	()Lbuw;	dk	getPickResult
	m	(Laxk;)V	g	push
	m	()Lbus;	h	getDropItem
	m	(Laxk;)Z	h	canCollideWith
	m	()Lahj;	i	getPaddleSound
	m	(Laxk;)V	i	positionRider
	m	()F	j	getWaterLevelAbove
	m	(Laxk;)V	j	onPassengerTurned
	m	()V	k	tick
	m	(Z)V	k	onAboveBubbleCol
	m	()F	l	getGroundFriction
	m	()F	n	getDamage
	m	()I	o	getHurtTime
	m	(Laxk;)Z	o	canAddPassenger
	m	()I	q	getHurtDir
	m	()Lbqa$b;	r	getBoatType
	m	()V	s	tickBubbleColumn
	m	()V	t	tickLerp
	m	()Lbqa$a;	u	getStatus
	m	()Z	w	checkInWater
	m	()Lbqa$a;	x	isUnderwater
	m	()V	y	floatBoat
	m	()V	z	controlBoat
	f	I	aA	lerpSteps
	f	D	aB	lerpX
	f	D	aC	lerpY
	f	D	aD	lerpZ
	f	D	aE	lerpYRot
	f	D	aF	lerpXRot
	f	Z	aG	inputLeft
	f	Z	aH	inputRight
	f	Z	aI	inputUp
	f	Z	aJ	inputDown
	f	D	aK	waterLevel
	f	F	aL	landFriction
	f	Lbqa$a;	aM	status
	f	Lbqa$a;	aN	oldStatus
	f	D	aO	lastYd
	f	Z	aP	isAboveBubbleColumn
	f	Z	aQ	bubbleColumnDirectionIsDown
	f	F	aR	bubbleMultiplier
	f	F	aS	bubbleAngle
	f	F	aT	bubbleAngleO
	f	Lyb;	ao	DATA_ID_HURTDIR
	f	Lyb;	ap	DATA_ID_DAMAGE
	f	Lyb;	aq	DATA_ID_TYPE
	f	Lyb;	ar	DATA_ID_PADDLE_LEFT
	f	Lyb;	as	DATA_ID_PADDLE_RIGHT
	f	Lyb;	at	DATA_ID_BUBBLE_TIME
	f	I	au	TIME_TO_EJECT
	f	F	av	PADDLE_SPEED
	f	[F	aw	paddlePositions
	f	F	ax	invFriction
	f	F	ay	outOfControlTicks
	f	F	az	deltaRotation
	f	I	b	PADDLE_LEFT
	f	I	c	PADDLE_RIGHT
	f	D	d	PADDLE_SOUND_TIME
	f	I	e	BUBBLE_TIME
	f	Lyb;	f	DATA_ID_HURT
c	bqa$1	net/minecraft/world/entity/vehicle/Boat$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type
	f	[I	b	$SwitchMap$net$minecraft$world$entity$vehicle$Boat$Status
c	bqa$a	net/minecraft/world/entity/vehicle/Boat$Status
	m	()[Lbqa$a;	a	$values
	f	Lbqa$a;	a	IN_WATER
	f	Lbqa$a;	b	UNDER_WATER
	f	Lbqa$a;	c	UNDER_FLOWING_WATER
	f	Lbqa$a;	d	ON_LAND
	f	Lbqa$a;	e	IN_AIR
	f	[Lbqa$a;	f	$VALUES
c	bqa$b	net/minecraft/world/entity/vehicle/Boat$Type
	m	()Ljava/lang/String;	a	getName
	m	(I)Lbqa$b;	a	byId
	m	(Ljava/lang/String;)Lbqa$b;	a	byName
	m	()Lcdq;	b	getPlanks
	m	()[Lbqa$b;	c	$values
	f	Lbqa$b;	a	OAK
	f	Lbqa$b;	b	SPRUCE
	f	Lbqa$b;	c	BIRCH
	f	Lbqa$b;	d	JUNGLE
	f	Lbqa$b;	e	ACACIA
	f	Lbqa$b;	f	DARK_OAK
	f	Ljava/lang/String;	g	name
	f	Lcdq;	h	planks
	f	[Lbqa$b;	i	$VALUES
c	bqb	net/minecraft/world/entity/vehicle/DismountHelper
	m	(D)Z	a	isBlockFloorValid
	m	(Laxo;Lcaf;Lgj;Z)Ldpo;	a	findSafeDismountLocation
	m	(Lcab;Lgj;)Ldqh;	a	nonClimbableShape
	m	(Lcaf;Laxy;Ldpj;)Z	a	canDismountTo
	m	(Lcaf;Ldpo;Laxy;Layk;)Z	a	canDismountTo
	m	(Lcaf;Lgj;)Ldqh;	a	lambda$findSafeDismountLocation$0
	m	(Lgj;ILjava/util/function/Function;)D	a	findCeilingFrom
	m	(Lgo;)[[I	a	offsetsForDirection
c	bqc	net/minecraft/world/entity/vehicle/Minecart
	m	(IIIZ)V	a	activateMinecart
	m	(Lboj;Lawg;)Lawh;	a	interact
	m	()Lbpy$a;	q	getMinecartType
c	bqd	net/minecraft/world/entity/vehicle/MinecartChest
	m	(ILboi;)Lbqp;	a	createMenu
	m	(Lawu;)V	a	destroy
	m	()I	b	getContainerSize
	m	()Lbpy$a;	q	getMinecartType
	m	()Lcov;	s	getDefaultDisplayBlockState
	m	()I	u	getDefaultDisplayOffset
c	bqe	net/minecraft/world/entity/vehicle/MinecartCommandBlock
	m	(IIIZ)V	a	activateMinecart
	m	(Lboj;Lawg;)Lawh;	a	interact
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lyb;)V	a	onSyncedDataUpdated
	m	()V	a_	defineSynchedData
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	cD	onlyOpCanSetNbt
	m	()Lbpy$a;	q	getMinecartType
	m	()Lcov;	s	getDefaultDisplayBlockState
	m	()Lbzw;	x	getCommandBlock
	f	I	ao	lastActivated
	f	Lyb;	c	DATA_ID_COMMAND_NAME
	f	Lyb;	d	DATA_ID_LAST_OUTPUT
	f	Lbzw;	e	commandBlock
	f	I	f	ACTIVATION_DELAY
c	bqe$a	net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase
	m	()Ladw;	e	getLevel
	m	()V	f	onUpdated
	m	()Ldpo;	g	getPosition
	m	()Lbqe;	h	getMinecart
	m	()Ldm;	i	createCommandSourceStack
	f	Lbqe;	b	this$0
c	bqf	net/minecraft/world/entity/vehicle/MinecartFurnace
	m	(Lawu;)V	a	destroy
	m	(Lboj;Lawg;)Lawh;	a	interact
	m	(Lok;)V	a	readAdditionalSaveData
	m	()V	a_	defineSynchedData
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lgj;Lcov;)V	c	moveAlongTrack
	m	()D	h	getMaxSpeed
	m	()V	j	applyNaturalSlowdown
	m	()V	k	tick
	m	(Z)V	p	setHasFuel
	m	()Lbpy$a;	q	getMinecartType
	m	()Lcov;	s	getDefaultDisplayBlockState
	m	()Z	x	hasFuel
	f	Lbxl;	ao	INGREDIENT
	f	D	c	xPush
	f	D	d	zPush
	f	Lyb;	e	DATA_ID_FUEL
	f	I	f	fuel
c	bqg	net/minecraft/world/entity/vehicle/MinecartHopper
	m	()D	A	getLevelZ
	m	()Z	C	suckInItems
	m	()Z	D	isOnCooldown
	m	(IIIZ)V	a	activateMinecart
	m	(ILboi;)Lbqp;	a	createMenu
	m	(Lawu;)V	a	destroy
	m	(Lok;)V	a	readAdditionalSaveData
	m	()I	b	getContainerSize
	m	(Lok;)V	b	addAdditionalSaveData
	m	()V	k	tick
	m	(I)V	n	setCooldown
	m	(Z)V	p	setEnabled
	m	()Lbpy$a;	q	getMinecartType
	m	()Lcov;	s	getDefaultDisplayBlockState
	m	()I	u	getDefaultDisplayOffset
	m	()Z	x	isEnabled
	m	()D	y	getLevelX
	m	()D	z	getLevelY
	f	I	ao	cooldownTime
	f	Lgj;	ap	lastPosition
	f	I	c	MOVE_ITEM_SPEED
	f	Z	f	enabled
c	bqh	net/minecraft/world/entity/vehicle/MinecartSpawner
	m	(B)V	a	handleEntityEvent
	m	(Lcav;)Ljava/lang/Runnable;	a	createTicker
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lcav;)V	b	lambda$createTicker$1
	m	(Lok;)V	b	addAdditionalSaveData
	m	(Lcav;)V	c	lambda$createTicker$0
	m	()Z	cD	onlyOpCanSetNbt
	m	()V	k	tick
	m	()Lbpy$a;	q	getMinecartType
	m	()Lcov;	s	getDefaultDisplayBlockState
	m	()Lbzx;	x	getSpawner
	f	Lbzx;	c	spawner
	f	Ljava/lang/Runnable;	d	ticker
c	bqh$1	net/minecraft/world/entity/vehicle/MinecartSpawner$1
	m	(Lcav;Lgj;I)V	a	broadcastEvent
	f	Lbqh;	a	this$0
c	bqi	net/minecraft/world/entity/vehicle/MinecartTNT
	m	(B)V	a	handleEntityEvent
	m	(FFLawu;)Z	a	causeFallDamage
	m	(IIIZ)V	a	activateMinecart
	m	(Lawu;)V	a	destroy
	m	(Lawu;F)Z	a	hurt
	m	(Lcan;Lcab;Lgj;Lcov;F)Z	a	shouldBlockExplode
	m	(Lcan;Lcab;Lgj;Lcov;Ldix;F)F	a	getBlockExplosionResistance
	m	(Lok;)V	a	readAdditionalSaveData
	m	(Lok;)V	b	addAdditionalSaveData
	m	(D)V	h	explode
	m	()V	k	tick
	m	()Lbpy$a;	q	getMinecartType
	m	()Lcov;	s	getDefaultDisplayBlockState
	m	()V	x	primeFuse
	m	()I	y	getFuse
	m	()Z	z	isPrimed
	f	B	c	EVENT_PRIME
	f	I	d	fuse
c	bqj	net/minecraft/world/entity/vehicle/package-info
c	bqk	net/minecraft/world/food/FoodConstants
	f	I	a	MAX_FOOD
	f	F	b	MAX_SATURATION
	f	F	c	START_SATURATION
	f	F	d	SATURATION_FLOOR
	f	F	e	EXHAUSTION_DROP
	f	I	f	HEALTH_TICK_COUNT
	f	I	g	HEALTH_TICK_COUNT_SATURATED
	f	I	h	HEAL_LEVEL
	f	I	i	SPRINT_LEVEL
	f	I	j	STARVE_LEVEL
	f	F	k	FOOD_SATURATION_POOR
	f	F	l	FOOD_SATURATION_LOW
	f	F	m	FOOD_SATURATION_NORMAL
	f	F	n	FOOD_SATURATION_GOOD
	f	F	o	FOOD_SATURATION_MAX
	f	F	p	FOOD_SATURATION_SUPERNATURAL
	f	F	q	EXHAUSTION_HEAL
	f	F	r	EXHAUSTION_JUMP
	f	F	s	EXHAUSTION_SPRINT_JUMP
	f	F	t	EXHAUSTION_MINE
	f	F	u	EXHAUSTION_ATTACK
	f	F	v	EXHAUSTION_DAMAGE
	f	F	w	EXHAUSTION_WALK
	f	F	x	EXHAUSTION_CROUCH
	f	F	y	EXHAUSTION_SPRINT
	f	F	z	EXHAUSTION_SWIM
c	bql	net/minecraft/world/food/FoodData
	m	()I	a	getFoodLevel
	m	(F)V	a	addExhaustion
	m	(I)V	a	setFoodLevel
	m	(IF)V	a	eat
	m	(Lboj;)V	a	tick
	m	(Lbus;Lbuw;)V	a	eat
	m	(Lok;)V	a	readAdditionalSaveData
	m	()I	b	getLastFoodLevel
	m	(F)V	b	setSaturation
	m	(Lok;)V	b	addAdditionalSaveData
	m	()Z	c	needsFood
	m	(F)V	c	setExhaustion
	m	()F	d	getExhaustionLevel
	m	()F	e	getSaturationLevel
	f	I	a	foodLevel
	f	F	b	saturationLevel
	f	F	c	exhaustionLevel
	f	I	d	tickTimer
	f	I	e	lastFoodLevel
c	bqm	net/minecraft/world/food/FoodProperties
	m	()I	a	getNutrition
	m	()F	b	getSaturationModifier
	m	()Z	c	isMeat
	m	()Z	d	canAlwaysEat
	m	()Z	e	isFastFood
	m	()Ljava/util/List;	f	getEffects
	f	I	a	nutrition
	f	F	b	saturationModifier
	f	Z	c	isMeat
	f	Z	d	canAlwaysEat
	f	Z	e	fastFood
	f	Ljava/util/List;	f	effects
c	bqm$a	net/minecraft/world/food/FoodProperties$Builder
	m	()Lbqm$a;	a	meat
	m	(F)Lbqm$a;	a	saturationMod
	m	(I)Lbqm$a;	a	nutrition
	m	(Laxe;F)Lbqm$a;	a	effect
	m	()Lbqm$a;	b	alwaysEat
	m	()Lbqm$a;	c	fast
	m	()Lbqm;	d	build
	f	I	a	nutrition
	f	F	b	saturationModifier
	f	Z	c	isMeat
	f	Z	d	canAlwaysEat
	f	Z	e	fastFood
	f	Ljava/util/List;	f	effects
c	bqn	net/minecraft/world/food/Foods
	m	(I)Lbqm$a;	a	stew
	f	Lbqm;	A	POISONOUS_POTATO
	f	Lbqm;	B	PORKCHOP
	f	Lbqm;	C	POTATO
	f	Lbqm;	D	PUFFERFISH
	f	Lbqm;	E	PUMPKIN_PIE
	f	Lbqm;	F	RABBIT
	f	Lbqm;	G	RABBIT_STEW
	f	Lbqm;	H	ROTTEN_FLESH
	f	Lbqm;	I	SALMON
	f	Lbqm;	J	SPIDER_EYE
	f	Lbqm;	K	SUSPICIOUS_STEW
	f	Lbqm;	L	SWEET_BERRIES
	f	Lbqm;	M	GLOW_BERRIES
	f	Lbqm;	N	TROPICAL_FISH
	f	Lbqm;	a	APPLE
	f	Lbqm;	b	BAKED_POTATO
	f	Lbqm;	c	BEEF
	f	Lbqm;	d	BEETROOT
	f	Lbqm;	e	BEETROOT_SOUP
	f	Lbqm;	f	BREAD
	f	Lbqm;	g	CARROT
	f	Lbqm;	h	CHICKEN
	f	Lbqm;	i	CHORUS_FRUIT
	f	Lbqm;	j	COD
	f	Lbqm;	k	COOKED_BEEF
	f	Lbqm;	l	COOKED_CHICKEN
	f	Lbqm;	m	COOKED_COD
	f	Lbqm;	n	COOKED_MUTTON
	f	Lbqm;	o	COOKED_PORKCHOP
	f	Lbqm;	p	COOKED_RABBIT
	f	Lbqm;	q	COOKED_SALMON
	f	Lbqm;	r	COOKIE
	f	Lbqm;	s	DRIED_KELP
	f	Lbqm;	t	ENCHANTED_GOLDEN_APPLE
	f	Lbqm;	u	GOLDEN_APPLE
	f	Lbqm;	v	GOLDEN_CARROT
	f	Lbqm;	w	HONEY_BOTTLE
	f	Lbqm;	x	MELON_SLICE
	f	Lbqm;	y	MUSHROOM_STEW
	f	Lbqm;	z	MUTTON
c	bqo	net/minecraft/world/food/package-info
c	bqp	net/minecraft/world/inventory/AbstractContainerMenu
	m	()Lbrt;	a	getType
	m	(I)Z	a	isValidSlotIndex
	m	(II)V	a	setData
	m	(IILbqy;Lboj;)V	a	clicked
	m	(IILbuw;)V	a	setItem
	m	(ILboj;)Z	a	isValidQuickcraftType
	m	(ILbuw;)V	a	setRemoteSlot
	m	(ILbuw;Ljava/util/function/Supplier;)V	a	triggerSlotListeners
	m	(ILjava/util/List;Lbuw;)V	a	initializeContents
	m	(Lawa;)V	a	slotsChanged
	m	(Lawa;I)V	a	checkContainerSize
	m	(Lboj;)Z	a	stillValid
	m	(Lboj;I)Z	a	clickMenuButton
	m	(Lboj;Lawa;)V	a	clearContainer
	m	(Lbqp;)V	a	transferState
	m	(Lbqz;)V	a	addDataSlots
	m	(Lbqz;I)V	a	checkContainerDataCount
	m	(Lbra;Lboj;Lcdq;)Z	a	stillValid
	m	(Lbrb;)V	a	addSlotListener
	m	(Lbrc;)V	a	setSynchronizer
	m	(Lbrf;)Lbrf;	a	addDataSlot
	m	(Lbsg;)Lbsg;	a	addSlot
	m	(Lbsg;Lboj;Lbuw;)V	a	lambda$doClick$3
	m	(Lbsg;Lbuw;Z)Z	a	canItemQuickReplace
	m	(Lbuw;)V	a	setRemoteCarried
	m	(Lbuw;IIZ)Z	a	moveItemStackTo
	m	(Lbuw;Lbsg;)Z	a	canTakeItemForPickAll
	m	(Lbuw;Lbsg;Lboj;Lbuw;)V	a	lambda$doClick$4
	m	(Lcdq;Lboj;Lcav;Lgj;)Ljava/lang/Boolean;	a	lambda$stillValid$0
	m	(Lcmr;)I	a	getRedstoneSignalFromBlockEntity
	m	(Ljava/util/Set;ILbuw;I)V	a	getQuickCraftSlotCount
	m	()V	b	sendAllDataToRemote
	m	(I)Lbsg;	b	getSlot
	m	(II)I	b	getQuickcraftMask
	m	(IILbqy;Lboj;)V	b	doClick
	m	(ILbuw;)V	b	setRemoteSlotNoCopy
	m	(ILbuw;Ljava/util/function/Supplier;)V	b	synchronizeSlotToRemote
	m	(Lawa;)I	b	getRedstoneSignalFromContainer
	m	(Lawa;I)Ljava/util/OptionalInt;	b	findSlot
	m	(Lboj;)V	b	removed
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	m	(Lbrb;)V	b	removeSlotListener
	m	(Lbsg;)Z	b	canDragTo
	m	(Lbuw;)V	b	setCarried
	m	()Lgx;	c	getItems
	m	(I)I	c	getQuickcraftType
	m	(II)V	c	updateDataSlotListeners
	m	()V	d	broadcastChanges
	m	(I)I	d	getQuickcraftHeader
	m	(II)V	d	synchronizeDataSlotToRemote
	m	()V	e	broadcastFullState
	m	()V	f	resetQuickCraft
	m	()Lbuw;	g	getCarried
	m	()V	h	suppressRemoteUpdates
	m	()V	i	resumeRemoteUpdates
	m	()I	j	getStateId
	m	()I	k	incrementStateId
	m	()V	l	synchronizeCarriedToRemote
	m	()Layp;	m	createCarriedSlotAccess
	m	()Ljava/lang/String;	n	lambda$clicked$2
	m	()Ljava/lang/String;	o	lambda$clicked$1
	f	I	a	SLOT_CLICKED_OUTSIDE
	f	I	b	QUICKCRAFT_TYPE_CHARITABLE
	f	I	c	QUICKCRAFT_TYPE_GREEDY
	f	I	d	QUICKCRAFT_TYPE_CLONE
	f	I	e	QUICKCRAFT_HEADER_START
	f	I	f	QUICKCRAFT_HEADER_CONTINUE
	f	I	g	QUICKCRAFT_HEADER_END
	f	I	h	CARRIED_SLOT_SIZE
	f	Lgx;	i	slots
	f	I	j	containerId
	f	Lorg/slf4j/Logger;	k	LOGGER
	f	Lgx;	l	lastSlots
	f	Ljava/util/List;	m	dataSlots
	f	Lbuw;	n	carried
	f	Lgx;	o	remoteSlots
	f	Lit/unimi/dsi/fastutil/ints/IntList;	p	remoteDataSlots
	f	Lbuw;	q	remoteCarried
	f	I	r	stateId
	f	Lbrt;	s	menuType
	f	I	t	quickcraftType
	f	I	u	quickcraftStatus
	f	Ljava/util/Set;	v	quickcraftSlots
	f	Ljava/util/List;	w	containerListeners
	f	Lbrc;	x	synchronizer
	f	Z	y	suppressRemoteUpdates
c	bqp$1	net/minecraft/world/inventory/AbstractContainerMenu$1
	m	()Lbuw;	a	get
	m	(Lbuw;)Z	a	set
	f	Lbqp;	b	this$0
c	bqq	net/minecraft/world/inventory/AbstractFurnaceMenu
	m	(Lboj;)Z	a	stillValid
	m	(Lbol;)V	a	fillCraftSlotsStackedContents
	m	(Lbxo;)Z	a	recipeMatches
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	m	(Lbuw;)Z	c	canSmelt
	m	(Lbuw;)Z	d	isFuel
	m	(I)Z	e	shouldMoveToInventory
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()I	q	getBurnProgress
	m	()I	r	getLitProgress
	m	()Z	s	isLit
	m	()Lbrz;	t	getRecipeBookType
	f	I	k	INGREDIENT_SLOT
	f	I	l	FUEL_SLOT
	f	I	m	RESULT_SLOT
	f	I	n	SLOT_COUNT
	f	I	o	DATA_COUNT
	f	Lcav;	p	level
	f	I	q	INV_SLOT_START
	f	I	r	INV_SLOT_END
	f	I	s	USE_ROW_SLOT_START
	f	I	t	USE_ROW_SLOT_END
	f	Lawa;	u	container
	f	Lbqz;	v	data
	f	Lbxr;	w	recipeType
	f	Lbrz;	x	recipeBookType
c	bqr	net/minecraft/world/inventory/AnvilMenu
	m	(Lboj;Lbuw;)V	a	onTake
	m	(Lboj;Lcav;Lgj;)V	a	lambda$onTake$0
	m	(Lboj;Z)Z	a	mayPickup
	m	(Lcov;)Z	a	isValidBlock
	m	(Ljava/lang/String;)V	a	setItemName
	m	(I)I	e	calculateIncreasedRepairCost
	m	()V	l	createResult
	m	()I	m	getCost
	f	I	A	COST_REPAIR_MATERIAL
	f	I	B	COST_REPAIR_SACRIFICE
	f	I	C	COST_INCOMPATIBLE_PENALTY
	f	I	D	COST_RENAME
	f	I	k	MAX_NAME_LENGTH
	f	Lorg/slf4j/Logger;	s	LOGGER
	f	Z	t	DEBUG_COST
	f	I	u	repairItemCountCost
	f	Ljava/lang/String;	v	itemName
	f	Lbrf;	w	cost
	f	I	x	COST_FAIL
	f	I	y	COST_BASE
	f	I	z	COST_ADDED_BASE
c	bqr$1	net/minecraft/world/inventory/AnvilMenu$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$enchantment$Enchantment$Rarity
c	bqs	net/minecraft/world/inventory/BeaconMenu
	m	(II)V	a	setData
	m	(Lboj;)Z	a	stillValid
	m	(Lboj;)V	b	removed
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	m	(II)V	c	updateEffects
	m	()I	l	getLevels
	m	()Laxc;	m	getPrimaryEffect
	m	()Laxc;	n	getSecondaryEffect
	m	()Z	o	hasPayment
	f	I	k	PAYMENT_SLOT
	f	I	l	SLOT_COUNT
	f	I	m	DATA_COUNT
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	Lawa;	r	beacon
	f	Lbqs$a;	s	paymentSlot
	f	Lbra;	t	access
	f	Lbqz;	u	beaconData
c	bqs$1	net/minecraft/world/inventory/BeaconMenu$1
	m	()I	N_	getMaxStackSize
	m	(ILbuw;)Z	b	canPlaceItem
	f	Lbqs;	b	this$0
c	bqs$a	net/minecraft/world/inventory/BeaconMenu$PaymentSlot
	m	()I	a	getMaxStackSize
	m	(Lbuw;)Z	a	mayPlace
	f	Lbqs;	a	this$0
c	bqt	net/minecraft/world/inventory/BlastFurnaceMenu
c	bqu	net/minecraft/world/inventory/BrewingStandMenu
	m	(Lboj;)Z	a	stillValid
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	m	()I	l	getFuel
	m	()I	m	getBrewingTicks
	f	I	k	BOTTLE_SLOT_START
	f	I	l	BOTTLE_SLOT_END
	f	I	m	INGREDIENT_SLOT
	f	I	n	FUEL_SLOT
	f	I	o	SLOT_COUNT
	f	I	p	DATA_COUNT
	f	I	q	INV_SLOT_START
	f	I	r	INV_SLOT_END
	f	I	s	USE_ROW_SLOT_START
	f	I	t	USE_ROW_SLOT_END
	f	Lawa;	u	brewingStand
	f	Lbqz;	v	brewingStandData
	f	Lbsg;	w	ingredientSlot
c	bqu$a	net/minecraft/world/inventory/BrewingStandMenu$FuelSlot
	m	()I	a	getMaxStackSize
	m	(Lbuw;)Z	a	mayPlace
	m	(Lbuw;)Z	b	mayPlaceItem
c	bqu$b	net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot
	m	()I	a	getMaxStackSize
	m	(Lbuw;)Z	a	mayPlace
c	bqu$c	net/minecraft/world/inventory/BrewingStandMenu$PotionSlot
	m	()I	a	getMaxStackSize
	m	(Lboj;Lbuw;)V	a	onTake
	m	(Lbuw;)Z	a	mayPlace
	m	(Lbuw;)Z	b	mayPlaceItem
c	bqv	net/minecraft/world/inventory/CartographyTableMenu
	m	(Lawa;)V	a	slotsChanged
	m	(Lboj;)Z	a	stillValid
	m	(Lboj;Lcav;Lgj;)V	a	lambda$removed$1
	m	(Lbuw;Lbsg;)Z	a	canTakeItemForPickAll
	m	(Lbuw;Lbuw;Lbuw;)V	a	setupResultSlot
	m	(Lbuw;Lbuw;Lbuw;Lcav;Lgj;)V	a	lambda$setupResultSlot$0
	m	(Lboj;)V	b	removed
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	f	I	k	MAP_SLOT
	f	I	l	ADDITIONAL_SLOT
	f	I	m	RESULT_SLOT
	f	Lawa;	n	container
	f	I	o	INV_SLOT_START
	f	I	p	INV_SLOT_END
	f	I	q	USE_ROW_SLOT_START
	f	I	r	USE_ROW_SLOT_END
	f	Lbra;	s	access
	f	J	t	lastSoundTime
	f	Lbsb;	u	resultContainer
c	bqv$1	net/minecraft/world/inventory/CartographyTableMenu$1
	m	()V	e	setChanged
	f	Lbqv;	b	this$0
c	bqv$2	net/minecraft/world/inventory/CartographyTableMenu$2
	m	()V	e	setChanged
	f	Lbqv;	b	this$0
c	bqv$3	net/minecraft/world/inventory/CartographyTableMenu$3
	m	(Lbuw;)Z	a	mayPlace
	f	Lbqv;	a	this$0
c	bqv$4	net/minecraft/world/inventory/CartographyTableMenu$4
	m	(Lbuw;)Z	a	mayPlace
	f	Lbqv;	a	this$0
c	bqv$5	net/minecraft/world/inventory/CartographyTableMenu$5
	m	(Lboj;Lbuw;)V	a	onTake
	m	(Lbuw;)Z	a	mayPlace
	m	(Lcav;Lgj;)V	a	lambda$onTake$0
	f	Lbra;	a	val$access
	f	Lbqv;	b	this$0
c	bqw	net/minecraft/world/inventory/ChestMenu
	m	(ILboi;)Lbqw;	a	oneRow
	m	(ILboi;Lawa;)Lbqw;	a	threeRows
	m	(Lboj;)Z	a	stillValid
	m	(ILboi;)Lbqw;	b	twoRows
	m	(ILboi;Lawa;)Lbqw;	b	sixRows
	m	(Lboj;)V	b	removed
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	m	(ILboi;)Lbqw;	c	threeRows
	m	(ILboi;)Lbqw;	d	fourRows
	m	(ILboi;)Lbqw;	e	fiveRows
	m	(ILboi;)Lbqw;	f	sixRows
	m	()Lawa;	l	getContainer
	m	()I	m	getRowCount
	f	I	k	SLOTS_PER_ROW
	f	Lawa;	l	container
	f	I	m	containerRows
c	bqx	net/minecraft/world/inventory/ClickAction
	m	()[Lbqx;	a	$values
	f	Lbqx;	a	PRIMARY
	f	Lbqx;	b	SECONDARY
	f	[Lbqx;	c	$VALUES
c	bqy	net/minecraft/world/inventory/ClickType
	m	()[Lbqy;	a	$values
	f	Lbqy;	a	PICKUP
	f	Lbqy;	b	QUICK_MOVE
	f	Lbqy;	c	SWAP
	f	Lbqy;	d	CLONE
	f	Lbqy;	e	THROW
	f	Lbqy;	f	QUICK_CRAFT
	f	Lbqy;	g	PICKUP_ALL
	f	[Lbqy;	h	$VALUES
c	bqz	net/minecraft/world/inventory/ContainerData
	m	()I	a	getCount
	m	(I)I	a	get
	m	(II)V	a	set
c	bra	net/minecraft/world/inventory/ContainerLevelAccess
	m	(Lcav;Lgj;)Lbra;	a	create
	m	(Ljava/util/function/BiConsumer;)V	a	execute
	m	(Ljava/util/function/BiConsumer;Lcav;Lgj;)Ljava/util/Optional;	a	lambda$execute$0
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
	m	(Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object;	a	evaluate
	f	Lbra;	a	NULL
c	bra$1	net/minecraft/world/inventory/ContainerLevelAccess$1
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
c	bra$2	net/minecraft/world/inventory/ContainerLevelAccess$2
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
	f	Lcav;	b	val$level
	f	Lgj;	c	val$pos
c	brb	net/minecraft/world/inventory/ContainerListener
	m	(Lbqp;II)V	a	dataChanged
	m	(Lbqp;ILbuw;)V	a	slotChanged
c	brc	net/minecraft/world/inventory/ContainerSynchronizer
	m	(Lbqp;II)V	a	sendDataChange
	m	(Lbqp;ILbuw;)V	a	sendSlotChange
	m	(Lbqp;Lbuw;)V	a	sendCarriedChange
	m	(Lbqp;Lgx;Lbuw;[I)V	a	sendInitialData
c	brd	net/minecraft/world/inventory/CraftingContainer
	m	()V	a	clearContent
	m	(I)Lbuw;	a	getItem
	m	(II)Lbuw;	a	removeItem
	m	(ILbuw;)V	a	setItem
	m	(Lboj;)Z	a	stillValid
	m	(Lbol;)V	a	fillStackedContents
	m	()I	b	getContainerSize
	m	(I)Lbuw;	b	removeItemNoUpdate
	m	()Z	c	isEmpty
	m	()V	e	setChanged
	m	()I	f	getHeight
	m	()I	g	getWidth
	f	Lgx;	b	items
	f	I	c	width
	f	I	d	height
	f	Lbqp;	e	menu
c	bre	net/minecraft/world/inventory/CraftingMenu
	m	(Lawa;)V	a	slotsChanged
	m	(Lboj;)Z	a	stillValid
	m	(Lboj;Lcav;Lgj;)V	a	lambda$removed$1
	m	(Lbol;)V	a	fillCraftSlotsStackedContents
	m	(Lbqp;Lcav;Lboj;Lbrd;Lbsb;)V	a	slotChangedCraftingGrid
	m	(Lbuw;Lboj;Lcav;Lgj;)V	a	lambda$quickMoveStack$2
	m	(Lbuw;Lbsg;)Z	a	canTakeItemForPickAll
	m	(Lbxo;)Z	a	recipeMatches
	m	(Lcav;Lgj;)V	a	lambda$slotsChanged$0
	m	(Lboj;)V	b	removed
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	m	(I)Z	e	shouldMoveToInventory
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()Lbrz;	t	getRecipeBookType
	f	I	k	RESULT_SLOT
	f	I	l	CRAFT_SLOT_START
	f	I	m	CRAFT_SLOT_END
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	Lbrd;	r	craftSlots
	f	Lbsb;	s	resultSlots
	f	Lbra;	t	access
	f	Lboj;	u	player
c	brf	net/minecraft/world/inventory/DataSlot
	m	()Lbrf;	a	standalone
	m	(I)V	a	set
	m	(Lbqz;I)Lbrf;	a	forContainer
	m	([II)Lbrf;	a	shared
	m	()I	b	get
	m	()Z	c	checkAndClearUpdateFlag
	f	I	a	prevValue
c	brf$1	net/minecraft/world/inventory/DataSlot$1
	m	(I)V	a	set
	m	()I	b	get
	f	Lbqz;	a	val$container
	f	I	b	val$dataId
c	brf$2	net/minecraft/world/inventory/DataSlot$2
	m	(I)V	a	set
	m	()I	b	get
	f	[I	a	val$storage
	f	I	b	val$index
c	brf$3	net/minecraft/world/inventory/DataSlot$3
	m	(I)V	a	set
	m	()I	b	get
	f	I	a	value
c	brg	net/minecraft/world/inventory/DispenserMenu
	m	(Lboj;)Z	a	stillValid
	m	(Lboj;)V	b	removed
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	f	I	k	SLOT_COUNT
	f	I	l	INV_SLOT_START
	f	I	m	INV_SLOT_END
	f	I	n	USE_ROW_SLOT_START
	f	I	o	USE_ROW_SLOT_END
	f	Lawa;	p	dispenser
c	brh	net/minecraft/world/inventory/EnchantmentMenu
	m	(Lawa;)V	a	slotsChanged
	m	(Lboj;)Z	a	stillValid
	m	(Lboj;I)Z	a	clickMenuButton
	m	(Lboj;Lcav;Lgj;)V	a	lambda$removed$2
	m	(Lbuw;II)Ljava/util/List;	a	getEnchantmentList
	m	(Lbuw;ILboj;ILbuw;Lcav;Lgj;)V	a	lambda$clickMenuButton$1
	m	(Lbuw;Lcav;Lgj;)V	a	lambda$slotsChanged$0
	m	(Lboj;)V	b	removed
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	m	()I	l	getGoldCount
	m	()I	m	getEnchantmentSeed
	f	[I	k	costs
	f	[I	l	enchantClue
	f	[I	m	levelClue
	f	Lawa;	n	enchantSlots
	f	Lbra;	o	access
	f	Ljava/util/Random;	p	random
	f	Lbrf;	q	enchantmentSeed
c	brh$1	net/minecraft/world/inventory/EnchantmentMenu$1
	m	()V	e	setChanged
	f	Lbrh;	b	this$0
c	brh$2	net/minecraft/world/inventory/EnchantmentMenu$2
	m	()I	a	getMaxStackSize
	m	(Lbuw;)Z	a	mayPlace
	f	Lbrh;	a	this$0
c	brh$3	net/minecraft/world/inventory/EnchantmentMenu$3
	m	(Lbuw;)Z	a	mayPlace
	f	Lbrh;	a	this$0
c	bri	net/minecraft/world/inventory/FurnaceFuelSlot
	m	(Lbuw;)Z	a	mayPlace
	m	(Lbuw;)I	a_	getMaxStackSize
	m	(Lbuw;)Z	c	isBucket
	f	Lbqq;	a	menu
c	brj	net/minecraft/world/inventory/FurnaceMenu
c	brk	net/minecraft/world/inventory/FurnaceResultSlot
	m	(I)Lbuw;	a	remove
	m	(Lboj;Lbuw;)V	a	onTake
	m	(Lbuw;)Z	a	mayPlace
	m	(Lbuw;I)V	a	onQuickCraft
	m	(Lbuw;)V	b_	checkTakeAchievements
	f	Lboj;	a	player
	f	I	b	removeCount
c	brl	net/minecraft/world/inventory/GrindstoneMenu
	m	(Lawa;)V	a	slotsChanged
	m	(Lboj;)Z	a	stillValid
	m	(Lboj;Lcav;Lgj;)V	a	lambda$removed$1
	m	(Lbuw;II)Lbuw;	a	removeNonCurses
	m	(Lbuw;Lbuw;)Lbuw;	a	mergeEnchants
	m	(Ljava/util/Map$Entry;)Z	a	lambda$removeNonCurses$0
	m	(Lboj;)V	b	removed
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	m	()V	l	createResult
	f	I	k	MAX_NAME_LENGTH
	f	I	l	INPUT_SLOT
	f	I	m	ADDITIONAL_SLOT
	f	I	n	RESULT_SLOT
	f	I	o	INV_SLOT_START
	f	I	p	INV_SLOT_END
	f	I	q	USE_ROW_SLOT_START
	f	I	r	USE_ROW_SLOT_END
	f	Lawa;	s	resultSlots
	f	Lawa;	t	repairSlots
	f	Lbra;	u	access
c	brl$1	net/minecraft/world/inventory/GrindstoneMenu$1
	m	()V	e	setChanged
	f	Lbrl;	b	this$0
c	brl$2	net/minecraft/world/inventory/GrindstoneMenu$2
	m	(Lbuw;)Z	a	mayPlace
	f	Lbrl;	a	this$0
c	brl$3	net/minecraft/world/inventory/GrindstoneMenu$3
	m	(Lbuw;)Z	a	mayPlace
	f	Lbrl;	a	this$0
c	brl$4	net/minecraft/world/inventory/GrindstoneMenu$4
	m	(Lboj;Lbuw;)V	a	onTake
	m	(Lbuw;)Z	a	mayPlace
	m	(Lcav;)I	a	getExperienceAmount
	m	(Lcav;Lgj;)V	a	lambda$onTake$0
	m	(Lbuw;)I	f	getExperienceFromItem
	f	Lbra;	a	val$access
	f	Lbrl;	b	this$0
c	brm	net/minecraft/world/inventory/HopperMenu
	m	(Lboj;)Z	a	stillValid
	m	(Lboj;)V	b	removed
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	f	I	k	CONTAINER_SIZE
	f	Lawa;	l	hopper
c	brn	net/minecraft/world/inventory/HorseInventoryMenu
	m	(Lbjo;)Z	a	hasChest
	m	(Lboj;)Z	a	stillValid
	m	(Lboj;)V	b	removed
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	f	Lawa;	k	horseContainer
	f	Lbjo;	l	horse
c	brn$1	net/minecraft/world/inventory/HorseInventoryMenu$1
	m	(Lbuw;)Z	a	mayPlace
	m	()Z	b	isActive
	f	Lbjo;	a	val$horse
	f	Lbrn;	b	this$0
c	brn$2	net/minecraft/world/inventory/HorseInventoryMenu$2
	m	()I	a	getMaxStackSize
	m	(Lbuw;)Z	a	mayPlace
	m	()Z	b	isActive
	f	Lbjo;	a	val$horse
	f	Lbrn;	b	this$0
c	bro	net/minecraft/world/inventory/InventoryMenu
	m	(Lawa;)V	a	slotsChanged
	m	(Lboj;)Z	a	stillValid
	m	(Lbol;)V	a	fillCraftSlotsStackedContents
	m	(Lbuw;Lbsg;)Z	a	canTakeItemForPickAll
	m	(Lbxo;)Z	a	recipeMatches
	m	(Lboj;)V	b	removed
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	m	(I)Z	e	shouldMoveToInventory
	m	(I)Z	f	isHotbarSlot
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()Lbrd;	q	getCraftSlots
	m	()Lbrz;	t	getRecipeBookType
	f	Lyt;	A	EMPTY_ARMOR_SLOT_SHIELD
	f	Z	B	active
	f	[Lyt;	C	TEXTURE_EMPTY_SLOTS
	f	[Laxp;	D	SLOT_IDS
	f	Lbrd;	E	craftSlots
	f	Lbsb;	F	resultSlots
	f	Lboj;	G	owner
	f	I	k	CONTAINER_ID
	f	I	l	RESULT_SLOT
	f	I	m	CRAFT_SLOT_START
	f	I	n	CRAFT_SLOT_END
	f	I	o	ARMOR_SLOT_START
	f	I	p	ARMOR_SLOT_END
	f	I	q	INV_SLOT_START
	f	I	r	INV_SLOT_END
	f	I	s	USE_ROW_SLOT_START
	f	I	t	USE_ROW_SLOT_END
	f	I	u	SHIELD_SLOT
	f	Lyt;	v	BLOCK_ATLAS
	f	Lyt;	w	EMPTY_ARMOR_SLOT_HELMET
	f	Lyt;	x	EMPTY_ARMOR_SLOT_CHESTPLATE
	f	Lyt;	y	EMPTY_ARMOR_SLOT_LEGGINGS
	f	Lyt;	z	EMPTY_ARMOR_SLOT_BOOTS
c	bro$1	net/minecraft/world/inventory/InventoryMenu$1
	m	()I	a	getMaxStackSize
	m	(Lboj;)Z	a	mayPickup
	m	(Lbuw;)Z	a	mayPlace
	m	()Lcom/mojang/datafixers/util/Pair;	c	getNoItemIcon
	f	Laxp;	a	val$slot
	f	Lbro;	b	this$0
c	bro$2	net/minecraft/world/inventory/InventoryMenu$2
	m	()Lcom/mojang/datafixers/util/Pair;	c	getNoItemIcon
	f	Lbro;	a	this$0
c	brp	net/minecraft/world/inventory/ItemCombinerMenu
	m	(Lawa;)V	a	slotsChanged
	m	(Lboj;)Z	a	stillValid
	m	(Lboj;Lbuw;)V	a	onTake
	m	(Lboj;Lcav;Lgj;)Ljava/lang/Boolean;	a	lambda$stillValid$1
	m	(Lboj;Z)Z	a	mayPickup
	m	(Lcov;)Z	a	isValidBlock
	m	(Lboj;)V	b	removed
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	m	(Lboj;Lcav;Lgj;)V	b	lambda$removed$0
	m	(Lbuw;)Z	c	shouldQuickMoveToAdditionalSlot
	m	()V	l	createResult
	f	I	k	INV_SLOT_START
	f	I	l	INPUT_SLOT
	f	I	m	ADDITIONAL_SLOT
	f	I	n	RESULT_SLOT
	f	Lbsb;	o	resultSlots
	f	Lawa;	p	inputSlots
	f	Lbra;	q	access
	f	Lboj;	r	player
	f	I	s	INV_SLOT_END
	f	I	t	USE_ROW_SLOT_START
	f	I	u	USE_ROW_SLOT_END
c	brp$1	net/minecraft/world/inventory/ItemCombinerMenu$1
	m	()V	e	setChanged
	f	Lbrp;	b	this$0
c	brp$2	net/minecraft/world/inventory/ItemCombinerMenu$2
	m	(Lboj;)Z	a	mayPickup
	m	(Lboj;Lbuw;)V	a	onTake
	m	(Lbuw;)Z	a	mayPlace
	f	Lbrp;	a	this$0
c	brq	net/minecraft/world/inventory/LecternMenu
	m	(II)V	a	setData
	m	(Lboj;)Z	a	stillValid
	m	(Lboj;I)Z	a	clickMenuButton
	m	()Lbuw;	l	getBook
	m	()I	m	getPage
	f	I	k	BUTTON_PREV_PAGE
	f	I	l	BUTTON_NEXT_PAGE
	f	I	m	BUTTON_TAKE_BOOK
	f	I	n	BUTTON_PAGE_JUMP_RANGE_START
	f	I	o	DATA_COUNT
	f	I	p	SLOT_COUNT
	f	Lawa;	q	lectern
	f	Lbqz;	r	lecternData
c	brq$1	net/minecraft/world/inventory/LecternMenu$1
	m	()V	d	setChanged
	f	Lbrq;	a	this$0
c	brr	net/minecraft/world/inventory/LoomMenu
	m	(Lawa;)V	a	slotsChanged
	m	(Lboj;)Z	a	stillValid
	m	(Lboj;I)Z	a	clickMenuButton
	m	(Lboj;Lcav;Lgj;)V	a	lambda$removed$1
	m	(Ljava/lang/Runnable;)V	a	registerUpdateListener
	m	(Lboj;)V	b	removed
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	m	()I	l	getSelectedBannerPatternIndex
	m	()Lbsg;	m	getBannerSlot
	m	()Lbsg;	n	getDyeSlot
	m	()Lbsg;	o	getPatternSlot
	m	()Lbsg;	p	getResultSlot
	m	()V	q	setupResultSlot
	m	()V	r	lambda$new$0
	f	I	k	INV_SLOT_START
	f	I	l	INV_SLOT_END
	f	I	m	USE_ROW_SLOT_START
	f	I	n	USE_ROW_SLOT_END
	f	Lbra;	o	access
	f	Lbrf;	p	selectedBannerPatternIndex
	f	Ljava/lang/Runnable;	q	slotUpdateListener
	f	Lbsg;	r	bannerSlot
	f	Lbsg;	s	dyeSlot
	f	Lbsg;	t	patternSlot
	f	Lbsg;	u	resultSlot
	f	J	v	lastSoundTime
	f	Lawa;	w	inputContainer
	f	Lawa;	x	outputContainer
c	brr$1	net/minecraft/world/inventory/LoomMenu$1
	m	()V	e	setChanged
	f	Lbrr;	b	this$0
c	brr$2	net/minecraft/world/inventory/LoomMenu$2
	m	()V	e	setChanged
	f	Lbrr;	b	this$0
c	brr$3	net/minecraft/world/inventory/LoomMenu$3
	m	(Lbuw;)Z	a	mayPlace
	f	Lbrr;	a	this$0
c	brr$4	net/minecraft/world/inventory/LoomMenu$4
	m	(Lbuw;)Z	a	mayPlace
	f	Lbrr;	a	this$0
c	brr$5	net/minecraft/world/inventory/LoomMenu$5
	m	(Lbuw;)Z	a	mayPlace
	f	Lbrr;	a	this$0
c	brr$6	net/minecraft/world/inventory/LoomMenu$6
	m	(Lboj;Lbuw;)V	a	onTake
	m	(Lbuw;)Z	a	mayPlace
	m	(Lcav;Lgj;)V	a	lambda$onTake$0
	f	Lbra;	a	val$access
	f	Lbrr;	b	this$0
c	brs	net/minecraft/world/inventory/MenuConstructor
c	brt	net/minecraft/world/inventory/MenuType
	m	(ILboi;)Lbqp;	a	create
	m	(Ljava/lang/String;Lbrt$a;)Lbrt;	a	register
	m	(ILboi;)Lbrq;	b	lambda$static$0
	f	Lbrt;	a	GENERIC_9x1
	f	Lbrt;	b	GENERIC_9x2
	f	Lbrt;	c	GENERIC_9x3
	f	Lbrt;	d	GENERIC_9x4
	f	Lbrt;	e	GENERIC_9x5
	f	Lbrt;	f	GENERIC_9x6
	f	Lbrt;	g	GENERIC_3x3
	f	Lbrt;	h	ANVIL
	f	Lbrt;	i	BEACON
	f	Lbrt;	j	BLAST_FURNACE
	f	Lbrt;	k	BREWING_STAND
	f	Lbrt;	l	CRAFTING
	f	Lbrt;	m	ENCHANTMENT
	f	Lbrt;	n	FURNACE
	f	Lbrt;	o	GRINDSTONE
	f	Lbrt;	p	HOPPER
	f	Lbrt;	q	LECTERN
	f	Lbrt;	r	LOOM
	f	Lbrt;	s	MERCHANT
	f	Lbrt;	t	SHULKER_BOX
	f	Lbrt;	u	SMITHING
	f	Lbrt;	v	SMOKER
	f	Lbrt;	w	CARTOGRAPHY_TABLE
	f	Lbrt;	x	STONECUTTER
	f	Lbrt$a;	y	constructor
c	brt$a	net/minecraft/world/inventory/MenuType$MenuSupplier
c	bru	net/minecraft/world/inventory/MerchantContainer
	m	()V	a	clearContent
	m	(I)Lbuw;	a	getItem
	m	(II)Lbuw;	a	removeItem
	m	(ILbuw;)V	a	setItem
	m	(Lboj;)Z	a	stillValid
	m	()I	b	getContainerSize
	m	(I)Lbuw;	b	removeItemNoUpdate
	m	()Z	c	isEmpty
	m	(I)V	c	setSelectionHint
	m	(I)Z	d	isPaymentSlot
	m	()V	e	setChanged
	m	()V	f	updateSellItem
	m	()Lbzt;	g	getActiveOffer
	m	()I	h	getFutureXp
	f	Lbzs;	b	merchant
	f	Lgx;	c	itemStacks
	f	Lbzt;	d	activeOffer
	f	I	e	selectionHint
	f	I	f	futureXp
c	brv	net/minecraft/world/inventory/MerchantMenu
	m	(Lawa;)V	a	slotsChanged
	m	(Lboj;)Z	a	stillValid
	m	(Lbuw;Lbsg;)Z	a	canTakeItemForPickAll
	m	(Lbzu;)V	a	setOffers
	m	(Z)V	a	setShowProgressBar
	m	(Lboj;)V	b	removed
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	m	(Z)V	b	setCanRestock
	m	(ILbuw;)V	c	moveFromInventoryToPaymentSlot
	m	(I)V	e	setSelectionHint
	m	(I)V	f	setXp
	m	(I)V	g	setMerchantLevel
	m	(I)V	h	tryMoveItems
	m	()I	l	getTraderXp
	m	()I	m	getFutureTraderXp
	m	()I	n	getTraderLevel
	m	()Z	o	canRestock
	m	()Lbzu;	p	getOffers
	m	()Z	q	showProgressBar
	m	()V	r	playTradeSound
	f	I	k	PAYMENT1_SLOT
	f	I	l	PAYMENT2_SLOT
	f	I	m	RESULT_SLOT
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	I	r	SELLSLOT1_X
	f	I	s	SELLSLOT2_X
	f	I	t	BUYSLOT_X
	f	I	u	ROW_Y
	f	Lbzs;	v	trader
	f	Lbru;	w	tradeContainer
	f	I	x	merchantLevel
	f	Z	y	showProgressBar
	f	Z	z	canRestock
c	brw	net/minecraft/world/inventory/MerchantResultSlot
	m	(I)Lbuw;	a	remove
	m	(Lboj;Lbuw;)V	a	onTake
	m	(Lbuw;)Z	a	mayPlace
	m	(Lbuw;I)V	a	onQuickCraft
	m	(Lbuw;)V	b_	checkTakeAchievements
	f	Lbru;	a	slots
	f	Lboj;	b	player
	f	I	g	removeCount
	f	Lbzs;	h	merchant
c	brx	net/minecraft/world/inventory/PlayerEnderChestContainer
	m	(Lboj;)Z	a	stillValid
	m	(Lcng;)V	a	setActiveChest
	m	(Loq;)V	a	fromTag
	m	(Lcng;)Z	b	isActiveChest
	m	(Lboj;)V	b_	startOpen
	m	(Lboj;)V	c_	stopOpen
	m	()Loq;	g	createTag
	f	Lcng;	b	activeChest
c	bry	net/minecraft/world/inventory/RecipeBookMenu
	m	(Lbol;)V	a	fillCraftSlotsStackedContents
	m	(Lbxo;)Z	a	recipeMatches
	m	(ZLbxo;Ladx;)V	a	handlePlacement
	m	(I)Z	e	shouldMoveToInventory
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()Lbrz;	t	getRecipeBookType
c	brz	net/minecraft/world/inventory/RecipeBookType
	m	()[Lbrz;	a	$values
	f	Lbrz;	a	CRAFTING
	f	Lbrz;	b	FURNACE
	f	Lbrz;	c	BLAST_FURNACE
	f	Lbrz;	d	SMOKER
	f	[Lbrz;	e	$VALUES
c	bsa	net/minecraft/world/inventory/RecipeHolder
	m	(Lbxo;)V	a	setRecipeUsed
	m	(Lcav;Ladx;Lbxo;)Z	a	setRecipeUsed
	m	(Lboj;)V	b	awardUsedRecipes
	m	()Lbxo;	d	getRecipeUsed
c	bsb	net/minecraft/world/inventory/ResultContainer
	m	()V	a	clearContent
	m	(I)Lbuw;	a	getItem
	m	(II)Lbuw;	a	removeItem
	m	(ILbuw;)V	a	setItem
	m	(Lboj;)Z	a	stillValid
	m	(Lbxo;)V	a	setRecipeUsed
	m	()I	b	getContainerSize
	m	(I)Lbuw;	b	removeItemNoUpdate
	m	()Z	c	isEmpty
	m	()Lbxo;	d	getRecipeUsed
	m	()V	e	setChanged
	f	Lgx;	b	itemStacks
	f	Lbxo;	c	recipeUsed
c	bsc	net/minecraft/world/inventory/ResultSlot
	m	(I)Lbuw;	a	remove
	m	(Lboj;Lbuw;)V	a	onTake
	m	(Lbuw;)Z	a	mayPlace
	m	(Lbuw;I)V	a	onQuickCraft
	m	(I)V	b	onSwapCraft
	m	(Lbuw;)V	b_	checkTakeAchievements
	f	Lbrd;	a	craftSlots
	f	Lboj;	b	player
	f	I	g	removeCount
c	bsd	net/minecraft/world/inventory/ShulkerBoxMenu
	m	(Lboj;)Z	a	stillValid
	m	(Lboj;)V	b	removed
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	f	I	k	CONTAINER_SIZE
	f	Lawa;	l	container
c	bse	net/minecraft/world/inventory/ShulkerBoxSlot
	m	(Lbuw;)Z	a	mayPlace
c	bsf	net/minecraft/world/inventory/SimpleContainerData
	m	()I	a	getCount
	m	(I)I	a	get
	m	(II)V	a	set
	f	[I	a	ints
c	bsg	net/minecraft/world/inventory/Slot
	m	()I	a	getMaxStackSize
	m	(I)Lbuw;	a	remove
	m	(IILboj;)Ljava/util/Optional;	a	tryRemove
	m	(Lboj;)Z	a	mayPickup
	m	(Lboj;Lbuw;)V	a	onTake
	m	(Lbuw;)Z	a	mayPlace
	m	(Lbuw;I)V	a	onQuickCraft
	m	(Lbuw;Lbuw;)V	a	onQuickCraft
	m	(Lbuw;)I	a_	getMaxStackSize
	m	()Z	b	isActive
	m	(I)V	b	onSwapCraft
	m	(IILboj;)Lbuw;	b	safeTake
	m	(Lboj;)Z	b	allowModification
	m	(Lboj;Lbuw;)V	b	lambda$safeTake$0
	m	(Lbuw;I)Lbuw;	b	safeInsert
	m	(Lbuw;)V	b_	checkTakeAchievements
	m	()Lcom/mojang/datafixers/util/Pair;	c	getNoItemIcon
	m	()V	d	setChanged
	m	(Lbuw;)V	d	set
	m	()Lbuw;	e	getItem
	m	(Lbuw;)Lbuw;	e	safeInsert
	m	()Z	f	hasItem
	m	()I	g	getContainerSlot
	f	I	a	slot
	f	Lawa;	c	container
	f	I	d	index
	f	I	e	x
	f	I	f	y
c	bsh	net/minecraft/world/inventory/SmithingMenu
	m	(Lboj;Lbuw;)V	a	onTake
	m	(Lboj;Z)Z	a	mayPickup
	m	(Lbuw;Lbsg;)Z	a	canTakeItemForPickAll
	m	(Lbuw;Lbyf;)Z	a	lambda$shouldQuickMoveToAdditionalSlot$1
	m	(Lcav;Lgj;)V	a	lambda$onTake$0
	m	(Lcov;)Z	a	isValidBlock
	m	(Lbuw;)Z	c	shouldQuickMoveToAdditionalSlot
	m	(I)V	e	shrinkStackInSlot
	m	()V	l	createResult
	f	Lcav;	k	level
	f	Lbyf;	s	selectedRecipe
	f	Ljava/util/List;	t	recipes
c	bsi	net/minecraft/world/inventory/SmokerMenu
c	bsj	net/minecraft/world/inventory/StackedContentsCompatible
	m	(Lbol;)V	a	fillStackedContents
c	bsk	net/minecraft/world/inventory/StonecutterMenu
	m	()Lbrt;	a	getType
	m	(Lawa;)V	a	slotsChanged
	m	(Lawa;Lbuw;)V	a	setupRecipeList
	m	(Lboj;)Z	a	stillValid
	m	(Lboj;I)Z	a	clickMenuButton
	m	(Lboj;Lcav;Lgj;)V	a	lambda$removed$1
	m	(Lbuw;Lbsg;)Z	a	canTakeItemForPickAll
	m	(Ljava/lang/Runnable;)V	a	registerUpdateListener
	m	(Lboj;)V	b	removed
	m	(Lboj;I)Lbuw;	b	quickMoveStack
	m	(I)Z	e	isValidRecipeIndex
	m	()I	l	getSelectedRecipeIndex
	m	()Ljava/util/List;	m	getRecipes
	m	()I	n	getNumRecipes
	m	()Z	o	hasInputItem
	m	()V	p	setupResultSlot
	m	()V	q	lambda$new$0
	f	Lbsb;	A	resultContainer
	f	I	k	INPUT_SLOT
	f	I	l	RESULT_SLOT
	f	Lbsg;	m	inputSlot
	f	Lbsg;	n	resultSlot
	f	Lawa;	o	container
	f	I	p	INV_SLOT_START
	f	I	q	INV_SLOT_END
	f	I	r	USE_ROW_SLOT_START
	f	I	s	USE_ROW_SLOT_END
	f	Lbra;	t	access
	f	Lbrf;	u	selectedRecipeIndex
	f	Lcav;	v	level
	f	Ljava/util/List;	w	recipes
	f	Lbuw;	x	input
	f	J	y	lastSoundTime
	f	Ljava/lang/Runnable;	z	slotUpdateListener
c	bsk$1	net/minecraft/world/inventory/StonecutterMenu$1
	m	()V	e	setChanged
	f	Lbsk;	b	this$0
c	bsk$2	net/minecraft/world/inventory/StonecutterMenu$2
	m	(Lboj;Lbuw;)V	a	onTake
	m	(Lbuw;)Z	a	mayPlace
	m	(Lcav;Lgj;)V	a	lambda$onTake$0
	f	Lbra;	a	val$access
	f	Lbsk;	b	this$0
c	bsl	net/minecraft/world/inventory/package-info
c	bsm	net/minecraft/world/inventory/tooltip/BundleTooltip
	m	()Lgx;	a	getItems
	m	()I	b	getWeight
	f	Lgx;	a	items
	f	I	b	weight
c	bsn	net/minecraft/world/inventory/tooltip/TooltipComponent
c	bso	net/minecraft/world/inventory/tooltip/package-info
c	bsp	net/minecraft/world/item/AdventureModeCheck
	m	(Lbuw;Lhb;Lcoz;)Z	a	test
	m	(Lcoz;Lcoz;Z)Z	a	areSameBlocks
	f	Let;	a	PREDICATE_PARSER
	f	Ljava/lang/String;	b	tagName
	f	Lcoz;	c	lastCheckedBlock
	f	Z	d	lastResult
	f	Z	e	checksBlockEntity
c	bsq	net/minecraft/world/item/AirItem
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	f	Lcdq;	a	block
c	bsr	net/minecraft/world/item/ArmorItem
	m	(Laxp;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
	m	(Lbuw;Lbuw;)Z	a	isValidRepairItem
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	(Lgk;Lbuw;)Z	a	dispenseArmor
	m	()Laxp;	b	getSlot
	m	()I	c	getEnchantmentValue
	m	()Lbss;	d	getMaterial
	m	()I	e	getDefense
	m	()F	f	getToughness
	m	()Lahj;	g	getEquipSound
	f	Lho;	a	DISPENSE_ITEM_BEHAVIOR
	f	Laxp;	b	slot
	f	F	c	knockbackResistance
	f	Lbss;	d	material
	f	[Ljava/util/UUID;	e	ARMOR_MODIFIER_UUID_PER_SLOT
	f	I	f	defense
	f	F	g	toughness
	f	Lcom/google/common/collect/Multimap;	h	defaultModifiers
c	bsr$1	net/minecraft/world/item/ArmorItem$1
	m	(Lgk;Lbuw;)Lbuw;	a	execute
c	bss	net/minecraft/world/item/ArmorMaterial
	m	()I	a	getEnchantmentValue
	m	(Laxp;)I	a	getDurabilityForSlot
	m	()Lahj;	b	getEquipSound
	m	(Laxp;)I	b	getDefenseForSlot
	m	()Lbxl;	c	getRepairIngredient
	m	()Ljava/lang/String;	d	getName
	m	()F	e	getToughness
	m	()F	f	getKnockbackResistance
c	bst	net/minecraft/world/item/ArmorMaterials
	m	()I	a	getEnchantmentValue
	m	(Laxp;)I	a	getDurabilityForSlot
	m	()Lahj;	b	getEquipSound
	m	(Laxp;)I	b	getDefenseForSlot
	m	()Lbxl;	c	getRepairIngredient
	m	()Ljava/lang/String;	d	getName
	m	()F	e	getToughness
	m	()F	f	getKnockbackResistance
	m	()Lbxl;	g	lambda$static$6
	m	()Lbxl;	h	lambda$static$5
	m	()Lbxl;	i	lambda$static$4
	m	()Lbxl;	j	lambda$static$3
	m	()Lbxl;	k	lambda$static$2
	m	()Lbxl;	l	lambda$static$1
	m	()Lbxl;	m	lambda$static$0
	m	()[Lbst;	n	$values
	f	Lbst;	a	LEATHER
	f	Lbst;	b	CHAIN
	f	Lbst;	c	IRON
	f	Lbst;	d	GOLD
	f	Lbst;	e	DIAMOND
	f	Lbst;	f	TURTLE
	f	Lbst;	g	NETHERITE
	f	[I	h	HEALTH_PER_SLOT
	f	Ljava/lang/String;	i	name
	f	I	j	durabilityMultiplier
	f	[I	k	slotProtections
	f	I	l	enchantmentValue
	f	Lahj;	m	sound
	f	F	n	toughness
	f	F	o	knockbackResistance
	f	Lajg;	p	repairIngredient
	f	[Lbst;	q	$VALUES
c	bsu	net/minecraft/world/item/ArmorStandItem
	m	(Lbkz;Ljava/util/Random;)V	a	randomizePose
	m	(Lbwy;)Lawh;	a	useOn
c	bsv	net/minecraft/world/item/ArrowItem
	m	(Lcav;Lbuw;Laxy;)Lbon;	a	createArrow
c	bsw	net/minecraft/world/item/AxeItem
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lbwy;Lboj;)V	a	lambda$useOn$1
	m	(Lcov;Lcdq;)Lcov;	a	lambda$getStripped$2
	m	(Lcov;)Ljava/util/Optional;	b	getStripped
	m	(Lcov;Lcdq;)Lcov;	b	lambda$useOn$0
	f	Ljava/util/Map;	a	STRIPPABLES
c	bsx	net/minecraft/world/item/BannerItem
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lbuw;Ljava/util/List;)V	a	appendHoverTextFromBannerBlockEntityTag
	m	()Lbts;	b	getColor
	f	Ljava/lang/String;	b	PATTERN_PREFIX
c	bsy	net/minecraft/world/item/BannerPatternItem
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	()Lcmj;	b	getBannerPattern
	m	()Lqq;	d	getDisplayName
	f	Lcmj;	a	bannerPattern
c	bsz	net/minecraft/world/item/BedItem
	m	(Lbww;Lcov;)Z	a	placeBlock
c	bta	net/minecraft/world/item/BlockItem
	m	()Z	R_	canFitInsideContainerItems
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lbli;)V	a	onDestroyed
	m	(Lbtm;Lgx;)V	a	fillItemCategory
	m	(Lbuw;)Lok;	a	getBlockEntityData
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lbuw;Lcmt;Lok;)V	a	setBlockEntityData
	m	(Lbww;)Lawh;	a	place
	m	(Lbww;Lcov;)Z	a	placeBlock
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lcav;Lboj;Lgj;Lbuw;)Z	a	updateCustomBlockEntityTag
	m	(Lcov;)Lahj;	a	getPlaceSound
	m	(Lcov;Lcpy;Ljava/lang/Comparable;)Lcov;	a	lambda$updateState$0
	m	(Lcov;Lcpy;Ljava/lang/String;)Lcov;	a	updateState
	m	(Lgj;Lcav;Lboj;Lbuw;Lcov;)Z	a	updateCustomBlockEntityTag
	m	(Lgj;Lcav;Lbuw;Lcov;)Lcov;	a	updateBlockStateFromTag
	m	(Ljava/util/Map;Lbus;)V	a	registerBlocks
	m	(Lbww;)Lbww;	b	updatePlacementContext
	m	(Lbww;Lcov;)Z	b	canPlace
	m	(Lbww;)Lcov;	c	getPlacementState
	m	()Z	d	mustSurvive
	m	()Lcdq;	e	getBlock
	f	Ljava/lang/String;	a	BLOCK_STATE_TAG
	f	Ljava/lang/String;	b	BLOCK_ENTITY_TAG
	f	Lcdq;	c	block
c	btb	net/minecraft/world/item/BoatItem
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	f	Ljava/util/function/Predicate;	a	ENTITY_PREDICATE
	f	Lbqa$b;	b	type
c	btc	net/minecraft/world/item/BoneMealItem
	m	(Lbuw;Lcav;Lgj;)Z	a	growCrop
	m	(Lbuw;Lcav;Lgj;Lgo;)Z	a	growWaterPlant
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lcav;Lgt$c;)Ljava/util/Optional;	a	lambda$growWaterPlant$2
	m	(Lcaw;Lgj;I)V	a	addGrowthParticles
	m	(Lcou$a;)Z	a	lambda$growWaterPlant$4
	m	(Lgs;)Lcov;	a	lambda$growWaterPlant$3
	m	(Lcav;Lgt$c;)Ljava/util/Optional;	b	lambda$growWaterPlant$0
	m	(Lgs;)Lcov;	b	lambda$growWaterPlant$1
	f	I	a	GRASS_SPREAD_WIDTH
	f	I	b	GRASS_SPREAD_HEIGHT
	f	I	c	GRASS_COUNT_MULTIPLIER
c	btd	net/minecraft/world/item/BookItem
	m	()I	c	getEnchantmentValue
	m	(Lbuw;)Z	c_	isEnchantable
c	bte	net/minecraft/world/item/BottleItem
	m	(Laxj;)Z	a	lambda$use$0
	m	(Lbuw;Lboj;Lbuw;)Lbuw;	a	turnBottleIntoItem
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
c	btf	net/minecraft/world/item/BowItem
	m	(I)F	a	getPowerForTime
	m	(Lboj;Lboj;)V	a	lambda$releaseUsing$0
	m	(Lbuw;Lcav;Laxy;I)V	a	releaseUsing
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	()Ljava/util/function/Predicate;	b	getAllSupportedProjectiles
	m	(Lbuw;)I	b	getUseDuration
	m	(Lbuw;)Lbwl;	c	getUseAnimation
	m	()I	d	getDefaultProjectileRange
	f	I	a	MAX_DRAW_DURATION
	f	I	b	DEFAULT_RANGE
c	btg	net/minecraft/world/item/BowlFoodItem
	m	(Lbuw;Lcav;Laxy;)Lbuw;	a	finishUsingItem
c	bth	net/minecraft/world/item/BucketItem
	m	(Lboj;Lahj;)V	a	lambda$use$0
	m	(Lboj;Lcav;Lbuw;Lgj;)V	a	checkExtraContent
	m	(Lboj;Lcav;Lgj;Ldpk;)Z	a	emptyContents
	m	(Lboj;Lcaw;Lgj;)V	a	playEmptySound
	m	(Lbuw;Lboj;)Lbuw;	a	getEmptySuccessItem
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	f	Ldiw;	a	content
c	bti	net/minecraft/world/item/BundleItem
	m	(Laxk;)V	a	playRemoveOneSound
	m	(Lbli;)V	a	onDestroyed
	m	(Lboj;Layp;Lbuw;)V	a	lambda$overrideOtherStackedOnMe$1
	m	(Lbuw;Lboj;)Z	a	dropContents
	m	(Lbuw;Lbsg;Lbqx;Lboj;)Z	a	overrideStackedOnOther
	m	(Lbuw;Lbsg;Lbuw;)V	a	lambda$overrideStackedOnOther$0
	m	(Lbuw;Lbuw;Lbsg;Lbqx;Lboj;Layp;)Z	a	overrideOtherStackedOnMe
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lbuw;Lok;)Z	a	lambda$getMatchingItem$2
	m	(Lbuw;Loq;)Ljava/util/Optional;	a	getMatchingItem
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	(Laxk;)V	b	playInsertSound
	m	(Lbuw;Lbuw;)I	b	add
	m	(Laxk;)V	c	playDropContentsSound
	m	(Lbuw;)F	d	getFullnessDisplay
	m	(Lbuw;)Z	e	isBarVisible
	m	(Lbuw;)I	f	getBarWidth
	m	(Lbuw;)I	g	getBarColor
	m	(Lbuw;)Ljava/util/Optional;	h	getTooltipImage
	m	(Lbuw;)I	k	getWeight
	m	(Lbuw;)I	o	getContentWeight
	m	(Lbuw;)Ljava/util/Optional;	p	removeOne
	m	(Lbuw;)Ljava/util/stream/Stream;	q	getContents
	m	(Lbuw;)I	r	lambda$getContentWeight$3
	f	I	a	MAX_WEIGHT
	f	Ljava/lang/String;	b	TAG_ITEMS
	f	I	c	BUNDLE_IN_BUNDLE_WEIGHT
	f	I	d	BAR_COLOR
c	btj	net/minecraft/world/item/ChorusFruitItem
	m	(Lbuw;Lcav;Laxy;)Lbuw;	a	finishUsingItem
c	btk	net/minecraft/world/item/CompassItem
	m	(Lbuw;Lcav;Laxk;IZ)V	a	inventoryTick
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lok;)Ljava/util/Optional;	a	getLodestoneDimension
	m	(Lok;Lpd;)V	a	lambda$addLodestoneTags$0
	m	(Lys;Lgj;Lok;)V	a	addLodestoneTags
	m	(Lbuw;)Z	d	isLodestoneCompass
	m	(Lbuw;)Z	i	isFoil
	m	(Lbuw;)Ljava/lang/String;	j	getDescriptionId
	f	Ljava/lang/String;	a	TAG_LODESTONE_POS
	f	Ljava/lang/String;	b	TAG_LODESTONE_DIMENSION
	f	Ljava/lang/String;	c	TAG_LODESTONE_TRACKED
	f	Lorg/slf4j/Logger;	d	LOGGER
c	btl	net/minecraft/world/item/ComplexItem
	m	()Z	O_	isComplex
	m	(Lbuw;Lcav;Lboj;)Lrc;	a	getUpdatePacket
c	btm	net/minecraft/world/item/CreativeModeTab
	m	()I	a	getId
	m	(Lbyr;)Z	a	hasEnchantmentCategory
	m	(Lgx;)V	a	fillItemList
	m	(Ljava/lang/String;)Lbtm;	a	setBackgroundSuffix
	m	([Lbyr;)Lbtm;	a	setEnchantmentCategories
	m	()Ljava/lang/String;	b	getRecipeFolderName
	m	(Ljava/lang/String;)Lbtm;	b	setRecipeFolderName
	m	()Lqk;	c	getDisplayName
	m	()Lbuw;	d	getIconItem
	m	()Lbuw;	e	makeIcon
	m	()Ljava/lang/String;	f	getBackgroundSuffix
	m	()Z	g	showTitle
	m	()Lbtm;	h	hideTitle
	m	()Z	i	canScroll
	m	()Lbtm;	j	hideScroll
	m	()I	k	getColumn
	m	()Z	l	isTopRow
	m	()Z	m	isAlignedRight
	m	()[Lbyr;	n	getEnchantmentCategories
	f	[Lbtm;	a	TABS
	f	Lbtm;	b	TAB_BUILDING_BLOCKS
	f	Lbtm;	c	TAB_DECORATIONS
	f	Lbtm;	d	TAB_REDSTONE
	f	Lbtm;	e	TAB_TRANSPORTATION
	f	Lbtm;	f	TAB_MISC
	f	Lbtm;	g	TAB_SEARCH
	f	Lbtm;	h	TAB_FOOD
	f	Lbtm;	i	TAB_TOOLS
	f	Lbtm;	j	TAB_COMBAT
	f	Lbtm;	k	TAB_BREWING
	f	Lbtm;	l	TAB_MATERIALS
	f	Lbtm;	m	TAB_HOTBAR
	f	Lbtm;	n	TAB_INVENTORY
	f	I	o	id
	f	Ljava/lang/String;	p	langId
	f	Lqk;	q	displayName
	f	Ljava/lang/String;	r	recipeFolderName
	f	Ljava/lang/String;	s	backgroundSuffix
	f	Z	t	canScroll
	f	Z	u	showTitle
	f	[Lbyr;	v	enchantmentCategories
	f	Lbuw;	w	iconItemStack
c	btm$1	net/minecraft/world/item/CreativeModeTab$1
	m	()Lbuw;	e	makeIcon
c	btm$2	net/minecraft/world/item/CreativeModeTab$10
	m	()Lbuw;	e	makeIcon
c	btm$3	net/minecraft/world/item/CreativeModeTab$11
	m	(Lgx;)V	a	fillItemList
	m	()Lbuw;	e	makeIcon
	m	()Z	m	isAlignedRight
c	btm$4	net/minecraft/world/item/CreativeModeTab$12
	m	()Lbuw;	e	makeIcon
c	btm$5	net/minecraft/world/item/CreativeModeTab$2
	m	()Lbuw;	e	makeIcon
c	btm$6	net/minecraft/world/item/CreativeModeTab$3
	m	()Lbuw;	e	makeIcon
c	btm$7	net/minecraft/world/item/CreativeModeTab$4
	m	()Lbuw;	e	makeIcon
c	btm$8	net/minecraft/world/item/CreativeModeTab$5
	m	()Lbuw;	e	makeIcon
c	btm$9	net/minecraft/world/item/CreativeModeTab$6
	m	()Lbuw;	e	makeIcon
c	btm$10	net/minecraft/world/item/CreativeModeTab$7
	m	()Lbuw;	e	makeIcon
c	btm$11	net/minecraft/world/item/CreativeModeTab$8
	m	()Lbuw;	e	makeIcon
c	btm$12	net/minecraft/world/item/CreativeModeTab$9
	m	()Lbuw;	e	makeIcon
c	btn	net/minecraft/world/item/CrossbowItem
	m	(I)Lahj;	a	getStartSound
	m	(ILbuw;)F	a	getPowerForTime
	m	(Lawg;Laxy;)V	a	lambda$shootProjectile$1
	m	(Laxy;Lbuw;)Z	a	tryLoadProjectiles
	m	(Laxy;Lbuw;Lbuw;ZZ)Z	a	loadProjectile
	m	(Lbus;Lbuw;)Z	a	lambda$containsChargedProjectile$0
	m	(Lbuw;Lbus;)Z	a	containsChargedProjectile
	m	(Lbuw;Lcav;Laxy;I)V	a	releaseUsing
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lbuw;Z)V	a	setCharged
	m	(Lcav;Laxy;Lawg;Lbuw;FF)V	a	performShooting
	m	(Lcav;Laxy;Lawg;Lbuw;Lbuw;FZFFF)V	a	shootProjectile
	m	(Lcav;Laxy;Lbuw;)V	a	onCrossbowShot
	m	(Lcav;Laxy;Lbuw;I)V	a	onUseTick
	m	(Lcav;Laxy;Lbuw;Lbuw;)Lbon;	a	getArrow
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	(Ljava/util/Random;)[F	a	getShotPitches
	m	(ZLjava/util/Random;)F	a	getRandomShotPitch
	m	()Ljava/util/function/Predicate;	b	getAllSupportedProjectiles
	m	(Lbuw;)I	b	getUseDuration
	m	(Lbuw;Lbuw;)V	b	addChargedProjectile
	m	(Lbuw;)Lbwl;	c	getUseAnimation
	m	()I	d	getDefaultProjectileRange
	m	(Lbuw;)Z	d	isCharged
	m	()Ljava/util/function/Predicate;	e	getSupportedHeldProjectiles
	m	(Lbuw;)I	k	getChargeDuration
	m	(Lbuw;)Z	l	useOnRelease
	m	(Lbuw;)F	o	getShootingPower
	m	(Lbuw;)Ljava/util/List;	p	getChargedProjectiles
	m	(Lbuw;)V	q	clearChargedProjectiles
	f	I	a	DEFAULT_RANGE
	f	Ljava/lang/String;	b	TAG_CHARGED
	f	Ljava/lang/String;	e	TAG_CHARGED_PROJECTILES
	f	I	f	MAX_CHARGE_DURATION
	f	Z	g	startSoundPlayed
	f	Z	h	midLoadSoundPlayed
	f	F	i	START_SOUND_PERCENT
	f	F	j	MID_SOUND_PERCENT
	f	F	r	ARROW_POWER
	f	F	s	FIREWORK_POWER
c	bto	net/minecraft/world/item/DebugStickItem
	m	(Lboj;Lcov;Lcaw;Lgj;ZLbuw;)Z	a	handleInteraction
	m	(Lboj;Lqk;)V	a	message
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lcov;Lcav;Lgj;Lboj;)Z	a	canAttackBlock
	m	(Lcov;Lcpy;)Ljava/lang/String;	a	getNameHelper
	m	(Lcov;Lcpy;Z)Lcov;	a	cycleState
	m	(Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object;	a	getRelative
	m	(Lbuw;)Z	i	isFoil
c	btp	net/minecraft/world/item/DiggerItem
	m	(Laxp;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
	m	(Laxy;)V	a	lambda$mineBlock$1
	m	(Lbuw;Laxy;Laxy;)Z	a	hurtEnemy
	m	(Lbuw;Lcav;Lcov;Lgj;Laxy;)Z	a	mineBlock
	m	(Lbuw;Lcov;)F	a	getDestroySpeed
	m	(Lcov;)Z	a_	isCorrectToolForDrops
	m	(Laxy;)V	b	lambda$hurtEnemy$0
	m	()F	d	getAttackDamage
	f	Laif;	a	blocks
	f	F	b	speed
	f	F	c	attackDamageBaseline
	f	Lcom/google/common/collect/Multimap;	d	defaultModifiers
c	btq	net/minecraft/world/item/DispensibleContainerItem
	m	(Lboj;Lcav;Lbuw;Lgj;)V	a	checkExtraContent
	m	(Lboj;Lcav;Lgj;Ldpk;)Z	a	emptyContents
c	btr	net/minecraft/world/item/DoubleHighBlockItem
	m	(Lbww;Lcov;)Z	a	placeBlock
c	bts	net/minecraft/world/item/DyeColor
	m	()I	a	getId
	m	(I)Lbts;	a	byId
	m	(Lbts;)Lbts;	a	lambda$static$2
	m	(Ljava/lang/String;Lbts;)Lbts;	a	byName
	m	()Ljava/lang/String;	b	getName
	m	(I)Lbts;	b	byFireworkColor
	m	(Lbts;)Ljava/lang/Integer;	b	lambda$static$1
	m	()Ljava/lang/String;	c	getSerializedName
	m	(I)[Lbts;	c	lambda$static$0
	m	()[F	d	getTextureDiffuseColors
	m	()Ldjc;	e	getMaterialColor
	m	()I	f	getFireworkColor
	m	()I	g	getTextColor
	m	()[Lbts;	h	$values
	f	Lbts;	a	WHITE
	f	Lbts;	b	ORANGE
	f	Lbts;	c	MAGENTA
	f	Lbts;	d	LIGHT_BLUE
	f	Lbts;	e	YELLOW
	f	Lbts;	f	LIME
	f	Lbts;	g	PINK
	f	Lbts;	h	GRAY
	f	Lbts;	i	LIGHT_GRAY
	f	Lbts;	j	CYAN
	f	Lbts;	k	PURPLE
	f	Lbts;	l	BLUE
	f	Lbts;	m	BROWN
	f	Lbts;	n	GREEN
	f	Lbts;	o	RED
	f	Lbts;	p	BLACK
	f	[Lbts;	q	BY_ID
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;	r	BY_FIREWORK_COLOR
	f	I	s	id
	f	Ljava/lang/String;	t	name
	f	Ldjc;	u	color
	f	[F	v	textureDiffuseColors
	f	I	w	fireworkColor
	f	I	x	textColor
	f	[Lbts;	y	$VALUES
c	btt	net/minecraft/world/item/DyeItem
	m	(Lbts;)Lbtt;	a	byColor
	m	(Lbuw;Lboj;Laxy;Lawg;)Lawh;	a	interactLivingEntity
	m	()Lbts;	d	getDyeColor
	f	Ljava/util/Map;	a	ITEM_BY_COLOR
	f	Lbts;	b	dyeColor
c	btu	net/minecraft/world/item/DyeableArmorItem
c	btv	net/minecraft/world/item/DyeableHorseArmorItem
c	btw	net/minecraft/world/item/DyeableLeatherItem
	m	(Lbuw;)Z	a	hasCustomColor
	m	(Lbuw;I)V	a	setColor
	m	(Lbuw;Ljava/util/List;)Lbuw;	a	dyeArmor
	m	(Lbuw;)I	d_	getColor
	m	(Lbuw;)V	e_	clearColor
	f	Ljava/lang/String;	l_	TAG_COLOR
	f	Ljava/lang/String;	m_	TAG_DISPLAY
	f	I	n_	DEFAULT_LEATHER_COLOR
c	btx	net/minecraft/world/item/EggItem
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
c	bty	net/minecraft/world/item/ElytraItem
	m	(Lbuw;Lbuw;)Z	a	isValidRepairItem
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	(Lbuw;)Z	d	isFlyEnabled
	m	()Lahj;	g	getEquipSound
c	btz	net/minecraft/world/item/EmptyMapItem
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
c	bua	net/minecraft/world/item/EnchantedBookItem
	m	(Lbtm;Lgx;)V	a	fillItemCategory
	m	(Lbuw;Lbyt;)V	a	addEnchantment
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lbyt;)Lbuw;	a	createForEnchantment
	m	(Lbuw;)Z	c_	isEnchantable
	m	(Lbuw;)Loq;	d	getEnchantments
	m	(Lbuw;)Z	i	isFoil
	f	Ljava/lang/String;	a	TAG_STORED_ENCHANTMENTS
c	bub	net/minecraft/world/item/EnchantedGoldenAppleItem
	m	(Lbuw;)Z	i	isFoil
c	buc	net/minecraft/world/item/EndCrystalItem
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lbuw;)Z	i	isFoil
c	bud	net/minecraft/world/item/EnderEyeItem
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
c	bue	net/minecraft/world/item/EnderpearlItem
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
c	buf	net/minecraft/world/item/ExperienceBottleItem
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	(Lbuw;)Z	i	isFoil
c	bug	net/minecraft/world/item/FireChargeItem
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lcav;Lgj;)V	a	playSound
c	buh	net/minecraft/world/item/FireworkRocketItem
	m	()Lbuw;	P_	getDefaultInstance
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	f	Ljava/lang/String;	a	TAG_FIREWORKS
	f	Ljava/lang/String;	b	TAG_EXPLOSION
	f	Ljava/lang/String;	c	TAG_EXPLOSIONS
	f	Ljava/lang/String;	d	TAG_FLIGHT
	f	Ljava/lang/String;	e	TAG_EXPLOSION_TYPE
	f	Ljava/lang/String;	f	TAG_EXPLOSION_TRAIL
	f	Ljava/lang/String;	g	TAG_EXPLOSION_FLICKER
	f	Ljava/lang/String;	h	TAG_EXPLOSION_COLORS
	f	Ljava/lang/String;	i	TAG_EXPLOSION_FADECOLORS
	f	D	j	ROCKET_PLACEMENT_OFFSET
c	buh$a	net/minecraft/world/item/FireworkRocketItem$Shape
	m	()I	a	getId
	m	(I)Lbuh$a;	a	byId
	m	(Lbuh$a;)I	a	lambda$static$0
	m	()Ljava/lang/String;	b	getName
	m	(I)[Lbuh$a;	b	lambda$static$1
	m	()[Lbuh$a;	c	$values
	f	Lbuh$a;	a	SMALL_BALL
	f	Lbuh$a;	b	LARGE_BALL
	f	Lbuh$a;	c	STAR
	f	Lbuh$a;	d	CREEPER
	f	Lbuh$a;	e	BURST
	f	[Lbuh$a;	f	BY_ID
	f	I	g	id
	f	Ljava/lang/String;	h	name
	f	[Lbuh$a;	i	$VALUES
c	bui	net/minecraft/world/item/FireworkStarItem
	m	(I)Lqk;	a	getColorName
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lok;Ljava/util/List;)V	a	appendHoverText
	m	(Lqq;[I)Lqk;	a	appendColors
c	buj	net/minecraft/world/item/FishingRodItem
	m	(Lawg;Lboj;)V	a	lambda$use$0
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	()I	c	getEnchantmentValue
c	buk	net/minecraft/world/item/FlintAndSteelItem
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lbwy;Lboj;)V	a	lambda$useOn$1
	m	(Lbwy;Lboj;)V	b	lambda$useOn$0
c	bul	net/minecraft/world/item/FoodOnAStickItem
	m	(Lawg;Lboj;)V	a	lambda$use$0
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	f	Laxo;	a	canInteractWith
	f	I	b	consumeItemDamage
c	bum	net/minecraft/world/item/GameMasterBlockItem
	m	(Lbww;)Lcov;	c	getPlacementState
c	bun	net/minecraft/world/item/HangingEntityItem
	m	(Lboj;Lgo;Lbuw;Lgj;)Z	a	mayPlace
	m	(Lbwy;)Lawh;	a	useOn
	f	Laxo;	a	type
c	buo	net/minecraft/world/item/HoeItem
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lbwy;Lboj;)V	a	lambda$useOn$1
	m	(Lcov;Lbwy;)V	a	lambda$changeIntoState$2
	m	(Lcov;Lcau;)Ljava/util/function/Consumer;	a	changeIntoStateAndDropItem
	m	(Lcov;Lcau;Lbwy;)V	a	lambda$changeIntoStateAndDropItem$3
	m	(Lbwy;)Z	b	onlyIfAirAbove
	m	(Lcov;)Ljava/util/function/Consumer;	b	changeIntoState
	m	(Lbwy;)Z	c	lambda$static$0
	f	Ljava/util/Map;	a	TILLABLES
c	bup	net/minecraft/world/item/HoneyBottleItem
	m	()Lahj;	Q_	getDrinkingSound
	m	(Lbuw;Lcav;Laxy;)Lbuw;	a	finishUsingItem
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	(Lbuw;)I	b	getUseDuration
	m	(Lbuw;)Lbwl;	c	getUseAnimation
	m	()Lahj;	h	getEatingSound
	f	I	a	DRINK_DURATION
c	buq	net/minecraft/world/item/HoneycombItem
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lbwy;Lgj;Lcav;Lcov;)Lawh;	a	lambda$useOn$2
	m	(Lcov;Lcdq;)Lcov;	a	lambda$getWaxed$3
	m	(Lcov;)Ljava/util/Optional;	b	getWaxed
	m	()Lcom/google/common/collect/BiMap;	i	lambda$static$1
	m	()Lcom/google/common/collect/BiMap;	j	lambda$static$0
	f	Ljava/util/function/Supplier;	a	WAXABLES
	f	Ljava/util/function/Supplier;	b	WAX_OFF_BY_BLOCK
c	bur	net/minecraft/world/item/HorseArmorItem
	m	()Lyt;	i	getTexture
	m	()I	j	getProtection
	f	Ljava/lang/String;	a	TEX_FOLDER
	f	I	b	protection
	f	Ljava/lang/String;	c	texture
c	bus	net/minecraft/world/item/Item
	m	()Z	O_	isComplex
	m	()Lbuw;	P_	getDefaultInstance
	m	()Lahj;	Q_	getDrinkingSound
	m	()Z	R_	canFitInsideContainerItems
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lawu;)Z	a	canBeHurtBy
	m	(Laxp;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
	m	(Lbli;)V	a	onDestroyed
	m	(Lbtm;)Z	a	allowdedIn
	m	(Lbtm;Lgx;)V	a	fillItemCategory
	m	(Lbus;)I	a	getId
	m	(Lbuw;Laxy;Laxy;)Z	a	hurtEnemy
	m	(Lbuw;Lboj;Laxy;Lawg;)Lawh;	a	interactLivingEntity
	m	(Lbuw;Lbsg;Lbqx;Lboj;)Z	a	overrideStackedOnOther
	m	(Lbuw;Lbuw;)Z	a	isValidRepairItem
	m	(Lbuw;Lbuw;Lbsg;Lbqx;Lboj;Layp;)Z	a	overrideOtherStackedOnMe
	m	(Lbuw;Lcav;Laxk;IZ)V	a	inventoryTick
	m	(Lbuw;Lcav;Laxy;)Lbuw;	a	finishUsingItem
	m	(Lbuw;Lcav;Laxy;I)V	a	releaseUsing
	m	(Lbuw;Lcav;Lcov;Lgj;Laxy;)Z	a	mineBlock
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lbuw;Lcov;)F	a	getDestroySpeed
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lcav;Laxy;Lbuw;I)V	a	onUseTick
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	(Lcav;Lboj;Lcae$b;)Ldpk;	a	getPlayerPOVHitResult
	m	(Lcdq;)Lbus;	a	byBlock
	m	(Lcov;Lcav;Lgj;Lboj;)Z	a	canAttackBlock
	m	(Lcov;)Z	a_	isCorrectToolForDrops
	m	(I)Lbus;	b	byId
	m	(Lbuw;)I	b	getUseDuration
	m	(Lbuw;Lcav;Lboj;)V	b	onCraftedBy
	m	(Lok;)V	b	verifyTagAfterLoad
	m	()I	c	getEnchantmentValue
	m	(Lbuw;)Lbwl;	c	getUseAnimation
	m	(Lbuw;)Z	c_	isEnchantable
	m	(Lbuw;)Z	e	isBarVisible
	m	(Lbuw;)I	f	getBarWidth
	m	()Lahj;	g	getEquipSound
	m	(Lbuw;)I	g	getBarColor
	m	()Lahj;	h	getEatingSound
	m	(Lbuw;)Ljava/util/Optional;	h	getTooltipImage
	m	(Lbuw;)Z	i	isFoil
	m	(Lbuw;)Ljava/lang/String;	j	getDescriptionId
	m	()Lgs$c;	k	builtInRegistryHolder
	m	()Lbus;	l	asItem
	m	(Lbuw;)Z	l	useOnRelease
	m	()I	m	getMaxStackSize
	m	(Lbuw;)Lqk;	m	getName
	m	()I	n	getMaxDamage
	m	(Lbuw;)Lbvl;	n	getRarity
	m	()Z	o	canBeDepleted
	m	()Lqk;	p	getDescription
	m	()Ljava/lang/String;	q	getOrCreateDescriptionId
	m	()Z	r	shouldOverrideMultiplayerNbt
	m	()Lbus;	s	getCraftingRemainingItem
	m	()Z	t	hasCraftingRemainingItem
	m	()Lbtm;	u	getItemCategory
	m	()Z	v	isEdible
	m	()Lbqm;	w	getFoodProperties
	m	()Z	x	isFireResistant
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lgs$c;	b	builtInRegistryHolder
	f	Lbvl;	c	rarity
	f	I	d	maxStackSize
	f	I	e	maxDamage
	f	Z	f	isFireResistant
	f	Lbus;	g	craftingRemainingItem
	f	Ljava/lang/String;	h	descriptionId
	f	Lbqm;	i	foodProperties
	f	Ljava/util/Map;	k	BY_BLOCK
	f	Ljava/util/UUID;	l	BASE_ATTACK_DAMAGE_UUID
	f	Ljava/util/UUID;	m	BASE_ATTACK_SPEED_UUID
	f	I	n	MAX_STACK_SIZE
	f	I	o	EAT_DURATION
	f	I	p	MAX_BAR_WIDTH
	f	Lbtm;	q	category
c	bus$1	net/minecraft/world/item/Item$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$Rarity
c	bus$a	net/minecraft/world/item/Item$Properties
	m	()Lbus$a;	a	fireResistant
	m	(I)Lbus$a;	a	stacksTo
	m	(Lbqm;)Lbus$a;	a	food
	m	(Lbtm;)Lbus$a;	a	tab
	m	(Lbus;)Lbus$a;	a	craftRemainder
	m	(Lbvl;)Lbus$a;	a	rarity
	m	(I)Lbus$a;	b	defaultDurability
	m	(I)Lbus$a;	c	durability
	f	I	a	maxStackSize
	f	I	b	maxDamage
	f	Lbus;	c	craftingRemainingItem
	f	Lbtm;	d	category
	f	Lbvl;	e	rarity
	f	Lbqm;	f	foodProperties
	f	Z	g	isFireResistant
c	but	net/minecraft/world/item/ItemCooldowns
	m	()V	a	tick
	m	(Lbus;)Z	a	isOnCooldown
	m	(Lbus;F)F	a	getCooldownPercent
	m	(Lbus;I)V	a	addCooldown
	m	(Lbus;)V	b	removeCooldown
	m	(Lbus;I)V	b	onCooldownStarted
	m	(Lbus;)V	c	onCooldownEnded
	f	Ljava/util/Map;	a	cooldowns
	f	I	b	tickCount
c	but$a	net/minecraft/world/item/ItemCooldowns$CooldownInstance
	f	I	a	startTime
	f	I	b	endTime
c	buu	net/minecraft/world/item/ItemFrameItem
	m	(Lboj;Lgo;Lbuw;Lgj;)Z	a	mayPlace
c	buv	net/minecraft/world/item/ItemNameBlockItem
	m	()Ljava/lang/String;	a	getDescriptionId
c	buw	net/minecraft/world/item/ItemStack
	m	()Lbvl;	A	getRarity
	m	()Z	B	isEnchantable
	m	()Z	C	isEnchanted
	m	()Z	D	isFramed
	m	()Lblc;	E	getFrame
	m	()Laxk;	F	getEntityRepresentation
	m	()I	G	getBaseRepairCost
	m	()Lqk;	H	getDisplayName
	m	()I	I	getPopTime
	m	()I	J	getCount
	m	()Z	K	isEdible
	m	()Lahj;	L	getDrinkingSound
	m	()Lahj;	M	getEatingSound
	m	()Lahj;	N	getEquipSound
	m	()V	O	updateEmptyCacheFlag
	m	()I	P	getHideFlags
	m	()Ljava/util/Optional;	a	getTooltipImage
	m	(I)Lbuw;	a	split
	m	(ILaxy;Ljava/util/function/Consumer;)V	a	hurtAndBreak
	m	(ILbuw$a;)Z	a	shouldShowInTooltip
	m	(ILjava/util/Random;Ladx;)Z	a	hurt
	m	(Laif;)Z	a	is
	m	(Laxk;)V	a	setEntityRepresentation
	m	(Laxp;)Lcom/google/common/collect/Multimap;	a	getAttributeModifiers
	m	(Laxy;Lboj;)V	a	hurtEnemy
	m	(Layu;Layx;Laxp;)V	a	addAttributeModifier
	m	(Lbli;)V	a	onDestroyed
	m	(Lboj;Laxy;Lawg;)Lawh;	a	interactLivingEntity
	m	(Lboj;Lbwj;)Ljava/util/List;	a	getTooltipLines
	m	(Lbsg;Lbqx;Lboj;)Z	a	overrideStackedOnOther
	m	(Lbus;)Z	a	is
	m	(Lbuw$a;)V	a	hideTooltipPart
	m	(Lbuw;)Z	a	sameItem
	m	(Lbuw;Lbsg;Lbqx;Lboj;Layp;)Z	a	overrideOtherStackedOnMe
	m	(Lbuw;Lbuw;)Z	a	tagMatches
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lbyq;I)V	a	enchant
	m	(Lcav;Laxk;IZ)V	a	inventoryTick
	m	(Lcav;Laxy;)Lbuw;	a	finishUsingItem
	m	(Lcav;Laxy;I)V	a	releaseUsing
	m	(Lcav;Lboj;I)V	a	onCraftedBy
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	(Lcav;Lcov;Lgj;Lboj;)V	a	mineBlock
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lcov;)F	a	getDestroySpeed
	m	(Lgs;)Lqq;	a	lambda$expandBlockState$6
	m	(Lhb;Lcoz;)Z	a	hasAdventureModePlaceTagForBlock
	m	(Ljava/lang/String;)Lok;	a	getOrCreateTagElement
	m	(Ljava/lang/String;Lpd;)V	a	addTagElement
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$4
	m	(Ljava/util/List;Lok;Lbyq;)V	a	lambda$appendEnchantmentNames$5
	m	(Ljava/util/List;Loq;)V	a	appendEnchantmentNames
	m	(Lok;)Lbuw;	a	of
	m	(Lqk;)Lbuw;	a	setHoverName
	m	(Lqq;)Lqq;	a	lambda$expandBlockState$7
	m	(Lqu;)Lqu;	a	lambda$getDisplayName$8
	m	()Z	b	isEmpty
	m	(I)V	b	setDamageValue
	m	(Lbuw;)Z	b	sameItemStackIgnoreDurability
	m	(Lbuw;Lbuw;)Z	b	matches
	m	(Lcav;Laxy;I)V	b	onUseTick
	m	(Lcov;)Z	b	isCorrectToolForDrops
	m	(Lhb;Lcoz;)Z	b	hasAdventureModeBreakTagForBlock
	m	(Ljava/lang/String;)Lok;	b	getTagElement
	m	(Lok;)Lok;	b	save
	m	()Lbus;	c	getItem
	m	(I)V	c	setRepairCost
	m	(Lbuw;)Z	c	matches
	m	(Lbuw;Lbuw;)Z	c	isSame
	m	(Ljava/lang/String;)V	c	removeTagKey
	m	(Lok;)V	c	setTag
	m	()Ljava/util/stream/Stream;	d	getTags
	m	(I)V	d	setPopTime
	m	(Lbuw;)Ljava/util/Optional;	d	lambda$static$2
	m	(Lbuw;Lbuw;)Z	d	isSameIgnoreDurability
	m	(Ljava/lang/String;)Ljava/util/Collection;	d	expandBlockState
	m	()I	e	getMaxStackSize
	m	(I)V	e	setCount
	m	(Lbuw;)Ljava/lang/Integer;	e	lambda$static$1
	m	(Lbuw;Lbuw;)Z	e	isSameItemSameTags
	m	()Z	f	isStackable
	m	(I)V	f	grow
	m	(Lbuw;)Lbus;	f	lambda$static$0
	m	()Z	g	isDamageableItem
	m	(I)V	g	shrink
	m	()Z	h	isDamaged
	m	()I	i	getDamageValue
	m	()I	j	getMaxDamage
	m	()Z	k	isBarVisible
	m	()I	l	getBarWidth
	m	()I	m	getBarColor
	m	()Lbuw;	n	copy
	m	()Ljava/lang/String;	o	getDescriptionId
	m	()I	p	getUseDuration
	m	()Lbwl;	q	getUseAnimation
	m	()Z	r	useOnRelease
	m	()Z	s	hasTag
	m	()Lok;	t	getTag
	m	()Lok;	u	getOrCreateTag
	m	()Loq;	v	getEnchantmentTags
	m	()Lqk;	w	getHoverName
	m	()V	x	resetHoverName
	m	()Z	y	hasCustomHoverName
	m	()Z	z	hasFoil
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbuw;	b	EMPTY
	f	Ljava/text/DecimalFormat;	c	ATTRIBUTE_MODIFIER_FORMAT
	f	Ljava/lang/String;	d	TAG_ENCH
	f	Ljava/lang/String;	e	TAG_DISPLAY
	f	Ljava/lang/String;	f	TAG_DISPLAY_NAME
	f	Ljava/lang/String;	g	TAG_LORE
	f	Ljava/lang/String;	h	TAG_DAMAGE
	f	Ljava/lang/String;	i	TAG_COLOR
	f	Lorg/slf4j/Logger;	j	LOGGER
	f	Ljava/lang/String;	k	TAG_UNBREAKABLE
	f	Ljava/lang/String;	l	TAG_REPAIR_COST
	f	Ljava/lang/String;	m	TAG_CAN_DESTROY_BLOCK_LIST
	f	Ljava/lang/String;	n	TAG_CAN_PLACE_ON_BLOCK_LIST
	f	Ljava/lang/String;	o	TAG_HIDE_FLAGS
	f	I	p	DONT_HIDE_TOOLTIP
	f	Lqu;	q	LORE_STYLE
	f	I	r	count
	f	I	s	popTime
	f	Lbus;	t	item
	f	Lok;	u	tag
	f	Z	v	emptyCacheFlag
	f	Laxk;	w	entityRepresentation
	f	Lbsp;	x	adventureBreakCheck
	f	Lbsp;	y	adventurePlaceCheck
c	buw$a	net/minecraft/world/item/ItemStack$TooltipPart
	m	()I	a	getMask
	m	()[Lbuw$a;	b	$values
	f	Lbuw$a;	a	ENCHANTMENTS
	f	Lbuw$a;	b	MODIFIERS
	f	Lbuw$a;	c	UNBREAKABLE
	f	Lbuw$a;	d	CAN_DESTROY
	f	Lbuw$a;	e	CAN_PLACE
	f	Lbuw$a;	f	ADDITIONAL
	f	Lbuw$a;	g	DYE
	f	I	h	mask
	f	[Lbuw$a;	i	$VALUES
c	bux	net/minecraft/world/item/ItemUtils
	m	(Lbli;Ljava/util/stream/Stream;)V	a	onContainerDestroyed
	m	(Lbuw;Lboj;Lbuw;)Lbuw;	a	createFilledResult
	m	(Lbuw;Lboj;Lbuw;Z)Lbuw;	a	createFilledResult
	m	(Lcav;Lbli;Lbuw;)V	a	lambda$onContainerDestroyed$0
	m	(Lcav;Lboj;Lawg;)Lawi;	a	startUsingInstantly
c	buy	net/minecraft/world/item/Items
	m	(Lbta;)Lbus;	a	registerBlock
	m	(Lcdq;)Lbus;	a	registerBlock
	m	(Lcdq;Lbtm;)Lbus;	a	registerBlock
	m	(Lcdq;Lbtm;[Lcdq;)Lbus;	a	registerBlock
	m	(Lcdq;Lbus;)Lbus;	a	registerBlock
	m	(Lcdq;Ljava/util/Optional;)Lbus;	a	registerBlock
	m	(Ljava/lang/Object;)Ljava/util/Optional;	a	ifPart2
	m	(Ljava/lang/String;Lbus;)Lbus;	a	registerItem
	m	(Lyt;Lbus;)Lbus;	a	registerItem
	m	(Lcdq;)Lbus;	b	lambda$registerBlock$1
	m	(Lcdq;Lbtm;)Lbus;	b	lambda$registerBlock$0
	f	Lbus;	A	ACACIA_PLANKS
	f	Lbus;	B	DARK_OAK_PLANKS
	f	Lbus;	C	CRIMSON_PLANKS
	f	Lbus;	D	WARPED_PLANKS
	f	Lbus;	E	OAK_SAPLING
	f	Lbus;	F	SPRUCE_SAPLING
	f	Lbus;	G	BIRCH_SAPLING
	f	Lbus;	H	JUNGLE_SAPLING
	f	Lbus;	I	ACACIA_SAPLING
	f	Lbus;	J	DARK_OAK_SAPLING
	f	Lbus;	K	BEDROCK
	f	Lbus;	L	SAND
	f	Lbus;	M	RED_SAND
	f	Lbus;	N	GRAVEL
	f	Lbus;	O	COAL_ORE
	f	Lbus;	P	DEEPSLATE_COAL_ORE
	f	Lbus;	Q	IRON_ORE
	f	Lbus;	R	DEEPSLATE_IRON_ORE
	f	Lbus;	S	COPPER_ORE
	f	Lbus;	T	DEEPSLATE_COPPER_ORE
	f	Lbus;	U	GOLD_ORE
	f	Lbus;	V	DEEPSLATE_GOLD_ORE
	f	Lbus;	W	REDSTONE_ORE
	f	Lbus;	X	DEEPSLATE_REDSTONE_ORE
	f	Lbus;	Y	EMERALD_ORE
	f	Lbus;	Z	DEEPSLATE_EMERALD_ORE
	f	Lbus;	aA	EXPOSED_CUT_COPPER_STAIRS
	f	Lbus;	aB	WEATHERED_CUT_COPPER_STAIRS
	f	Lbus;	aC	OXIDIZED_CUT_COPPER_STAIRS
	f	Lbus;	aD	CUT_COPPER_SLAB
	f	Lbus;	aE	EXPOSED_CUT_COPPER_SLAB
	f	Lbus;	aF	WEATHERED_CUT_COPPER_SLAB
	f	Lbus;	aG	OXIDIZED_CUT_COPPER_SLAB
	f	Lbus;	aH	WAXED_COPPER_BLOCK
	f	Lbus;	aI	WAXED_EXPOSED_COPPER
	f	Lbus;	aJ	WAXED_WEATHERED_COPPER
	f	Lbus;	aK	WAXED_OXIDIZED_COPPER
	f	Lbus;	aL	WAXED_CUT_COPPER
	f	Lbus;	a	AIR
	f	Lbus;	aM	WAXED_EXPOSED_CUT_COPPER
	f	Lbus;	aN	WAXED_WEATHERED_CUT_COPPER
	f	Lbus;	aO	WAXED_OXIDIZED_CUT_COPPER
	f	Lbus;	aP	WAXED_CUT_COPPER_STAIRS
	f	Lbus;	aQ	WAXED_EXPOSED_CUT_COPPER_STAIRS
	f	Lbus;	aR	WAXED_WEATHERED_CUT_COPPER_STAIRS
	f	Lbus;	aS	WAXED_OXIDIZED_CUT_COPPER_STAIRS
	f	Lbus;	aT	WAXED_CUT_COPPER_SLAB
	f	Lbus;	aU	WAXED_EXPOSED_CUT_COPPER_SLAB
	f	Lbus;	aV	WAXED_WEATHERED_CUT_COPPER_SLAB
	f	Lbus;	aW	WAXED_OXIDIZED_CUT_COPPER_SLAB
	f	Lbus;	aX	OAK_LOG
	f	Lbus;	aY	SPRUCE_LOG
	f	Lbus;	aZ	BIRCH_LOG
	f	Lbus;	aa	LAPIS_ORE
	f	Lbus;	ab	DEEPSLATE_LAPIS_ORE
	f	Lbus;	ac	DIAMOND_ORE
	f	Lbus;	ad	DEEPSLATE_DIAMOND_ORE
	f	Lbus;	ae	NETHER_GOLD_ORE
	f	Lbus;	af	NETHER_QUARTZ_ORE
	f	Lbus;	ag	ANCIENT_DEBRIS
	f	Lbus;	ah	COAL_BLOCK
	f	Lbus;	ai	RAW_IRON_BLOCK
	f	Lbus;	aj	RAW_COPPER_BLOCK
	f	Lbus;	ak	RAW_GOLD_BLOCK
	f	Lbus;	al	AMETHYST_BLOCK
	f	Lbus;	am	BUDDING_AMETHYST
	f	Lbus;	an	IRON_BLOCK
	f	Lbus;	ao	COPPER_BLOCK
	f	Lbus;	ap	GOLD_BLOCK
	f	Lbus;	aq	DIAMOND_BLOCK
	f	Lbus;	ar	NETHERITE_BLOCK
	f	Lbus;	as	EXPOSED_COPPER
	f	Lbus;	at	WEATHERED_COPPER
	f	Lbus;	au	OXIDIZED_COPPER
	f	Lbus;	av	CUT_COPPER
	f	Lbus;	aw	EXPOSED_CUT_COPPER
	f	Lbus;	ax	WEATHERED_CUT_COPPER
	f	Lbus;	ay	OXIDIZED_CUT_COPPER
	f	Lbus;	az	CUT_COPPER_STAIRS
	f	Lbus;	bA	DARK_OAK_WOOD
	f	Lbus;	bB	CRIMSON_HYPHAE
	f	Lbus;	bC	WARPED_HYPHAE
	f	Lbus;	bD	OAK_LEAVES
	f	Lbus;	bE	SPRUCE_LEAVES
	f	Lbus;	bF	BIRCH_LEAVES
	f	Lbus;	bG	JUNGLE_LEAVES
	f	Lbus;	bH	ACACIA_LEAVES
	f	Lbus;	bI	DARK_OAK_LEAVES
	f	Lbus;	bJ	AZALEA_LEAVES
	f	Lbus;	bK	FLOWERING_AZALEA_LEAVES
	f	Lbus;	bL	SPONGE
	f	Lbus;	b	STONE
	f	Lbus;	bM	WET_SPONGE
	f	Lbus;	bN	GLASS
	f	Lbus;	bO	TINTED_GLASS
	f	Lbus;	bP	LAPIS_BLOCK
	f	Lbus;	bQ	SANDSTONE
	f	Lbus;	bR	CHISELED_SANDSTONE
	f	Lbus;	bS	CUT_SANDSTONE
	f	Lbus;	bT	COBWEB
	f	Lbus;	bU	GRASS
	f	Lbus;	bV	FERN
	f	Lbus;	bW	AZALEA
	f	Lbus;	bX	FLOWERING_AZALEA
	f	Lbus;	bY	DEAD_BUSH
	f	Lbus;	bZ	SEAGRASS
	f	Lbus;	ba	JUNGLE_LOG
	f	Lbus;	bb	ACACIA_LOG
	f	Lbus;	bc	DARK_OAK_LOG
	f	Lbus;	bd	CRIMSON_STEM
	f	Lbus;	be	WARPED_STEM
	f	Lbus;	bf	STRIPPED_OAK_LOG
	f	Lbus;	bg	STRIPPED_SPRUCE_LOG
	f	Lbus;	bh	STRIPPED_BIRCH_LOG
	f	Lbus;	bi	STRIPPED_JUNGLE_LOG
	f	Lbus;	bj	STRIPPED_ACACIA_LOG
	f	Lbus;	bk	STRIPPED_DARK_OAK_LOG
	f	Lbus;	bl	STRIPPED_CRIMSON_STEM
	f	Lbus;	bm	STRIPPED_WARPED_STEM
	f	Lbus;	bn	STRIPPED_OAK_WOOD
	f	Lbus;	bo	STRIPPED_SPRUCE_WOOD
	f	Lbus;	bp	STRIPPED_BIRCH_WOOD
	f	Lbus;	bq	STRIPPED_JUNGLE_WOOD
	f	Lbus;	br	STRIPPED_ACACIA_WOOD
	f	Lbus;	bs	STRIPPED_DARK_OAK_WOOD
	f	Lbus;	bt	STRIPPED_CRIMSON_HYPHAE
	f	Lbus;	bu	STRIPPED_WARPED_HYPHAE
	f	Lbus;	bv	OAK_WOOD
	f	Lbus;	bw	SPRUCE_WOOD
	f	Lbus;	bx	BIRCH_WOOD
	f	Lbus;	by	JUNGLE_WOOD
	f	Lbus;	bz	ACACIA_WOOD
	f	Lbus;	cA	OXEYE_DAISY
	f	Lbus;	cB	CORNFLOWER
	f	Lbus;	cC	LILY_OF_THE_VALLEY
	f	Lbus;	cD	WITHER_ROSE
	f	Lbus;	cE	SPORE_BLOSSOM
	f	Lbus;	cF	BROWN_MUSHROOM
	f	Lbus;	cG	RED_MUSHROOM
	f	Lbus;	cH	CRIMSON_FUNGUS
	f	Lbus;	cI	WARPED_FUNGUS
	f	Lbus;	cJ	CRIMSON_ROOTS
	f	Lbus;	cK	WARPED_ROOTS
	f	Lbus;	cL	NETHER_SPROUTS
	f	Lbus;	c	GRANITE
	f	Lbus;	cM	WEEPING_VINES
	f	Lbus;	cN	TWISTING_VINES
	f	Lbus;	cO	SUGAR_CANE
	f	Lbus;	cP	KELP
	f	Lbus;	cQ	MOSS_CARPET
	f	Lbus;	cR	MOSS_BLOCK
	f	Lbus;	cS	HANGING_ROOTS
	f	Lbus;	cT	BIG_DRIPLEAF
	f	Lbus;	cU	SMALL_DRIPLEAF
	f	Lbus;	cV	BAMBOO
	f	Lbus;	cW	OAK_SLAB
	f	Lbus;	cX	SPRUCE_SLAB
	f	Lbus;	cY	BIRCH_SLAB
	f	Lbus;	cZ	JUNGLE_SLAB
	f	Lbus;	ca	SEA_PICKLE
	f	Lbus;	cb	WHITE_WOOL
	f	Lbus;	cc	ORANGE_WOOL
	f	Lbus;	cd	MAGENTA_WOOL
	f	Lbus;	ce	LIGHT_BLUE_WOOL
	f	Lbus;	cf	YELLOW_WOOL
	f	Lbus;	cg	LIME_WOOL
	f	Lbus;	ch	PINK_WOOL
	f	Lbus;	ci	GRAY_WOOL
	f	Lbus;	cj	LIGHT_GRAY_WOOL
	f	Lbus;	ck	CYAN_WOOL
	f	Lbus;	cl	PURPLE_WOOL
	f	Lbus;	cm	BLUE_WOOL
	f	Lbus;	cn	BROWN_WOOL
	f	Lbus;	co	GREEN_WOOL
	f	Lbus;	cp	RED_WOOL
	f	Lbus;	cq	BLACK_WOOL
	f	Lbus;	cr	DANDELION
	f	Lbus;	cs	POPPY
	f	Lbus;	ct	BLUE_ORCHID
	f	Lbus;	cu	ALLIUM
	f	Lbus;	cv	AZURE_BLUET
	f	Lbus;	cw	RED_TULIP
	f	Lbus;	cx	ORANGE_TULIP
	f	Lbus;	cy	WHITE_TULIP
	f	Lbus;	cz	PINK_TULIP
	f	Lbus;	dA	MOSSY_COBBLESTONE
	f	Lbus;	dB	OBSIDIAN
	f	Lbus;	dC	TORCH
	f	Lbus;	dD	END_ROD
	f	Lbus;	dE	CHORUS_PLANT
	f	Lbus;	dF	CHORUS_FLOWER
	f	Lbus;	dG	PURPUR_BLOCK
	f	Lbus;	dH	PURPUR_PILLAR
	f	Lbus;	dI	PURPUR_STAIRS
	f	Lbus;	dJ	SPAWNER
	f	Lbus;	dK	OAK_STAIRS
	f	Lbus;	dL	CHEST
	f	Lbus;	d	POLISHED_GRANITE
	f	Lbus;	dM	CRAFTING_TABLE
	f	Lbus;	dN	FARMLAND
	f	Lbus;	dO	FURNACE
	f	Lbus;	dP	LADDER
	f	Lbus;	dQ	COBBLESTONE_STAIRS
	f	Lbus;	dR	SNOW
	f	Lbus;	dS	ICE
	f	Lbus;	dT	SNOW_BLOCK
	f	Lbus;	dU	CACTUS
	f	Lbus;	dV	CLAY
	f	Lbus;	dW	JUKEBOX
	f	Lbus;	dX	OAK_FENCE
	f	Lbus;	dY	SPRUCE_FENCE
	f	Lbus;	dZ	BIRCH_FENCE
	f	Lbus;	da	ACACIA_SLAB
	f	Lbus;	db	DARK_OAK_SLAB
	f	Lbus;	dc	CRIMSON_SLAB
	f	Lbus;	dd	WARPED_SLAB
	f	Lbus;	de	STONE_SLAB
	f	Lbus;	df	SMOOTH_STONE_SLAB
	f	Lbus;	dg	SANDSTONE_SLAB
	f	Lbus;	dh	CUT_STANDSTONE_SLAB
	f	Lbus;	di	PETRIFIED_OAK_SLAB
	f	Lbus;	dj	COBBLESTONE_SLAB
	f	Lbus;	dk	BRICK_SLAB
	f	Lbus;	dl	STONE_BRICK_SLAB
	f	Lbus;	dm	NETHER_BRICK_SLAB
	f	Lbus;	dn	QUARTZ_SLAB
	f	Lbus;	do	RED_SANDSTONE_SLAB
	f	Lbus;	dp	CUT_RED_SANDSTONE_SLAB
	f	Lbus;	dq	PURPUR_SLAB
	f	Lbus;	dr	PRISMARINE_SLAB
	f	Lbus;	ds	PRISMARINE_BRICK_SLAB
	f	Lbus;	dt	DARK_PRISMARINE_SLAB
	f	Lbus;	du	SMOOTH_QUARTZ
	f	Lbus;	dv	SMOOTH_RED_SANDSTONE
	f	Lbus;	dw	SMOOTH_SANDSTONE
	f	Lbus;	dx	SMOOTH_STONE
	f	Lbus;	dy	BRICKS
	f	Lbus;	dz	BOOKSHELF
	f	Lbus;	eA	CHISELED_STONE_BRICKS
	f	Lbus;	eB	DEEPSLATE_BRICKS
	f	Lbus;	eC	CRACKED_DEEPSLATE_BRICKS
	f	Lbus;	eD	DEEPSLATE_TILES
	f	Lbus;	eE	CRACKED_DEEPSLATE_TILES
	f	Lbus;	eF	CHISELED_DEEPSLATE
	f	Lbus;	eG	BROWN_MUSHROOM_BLOCK
	f	Lbus;	eH	RED_MUSHROOM_BLOCK
	f	Lbus;	eI	MUSHROOM_STEM
	f	Lbus;	eJ	IRON_BARS
	f	Lbus;	eK	CHAIN
	f	Lbus;	eL	GLASS_PANE
	f	Lbus;	e	DIORITE
	f	Lbus;	eM	MELON
	f	Lbus;	eN	VINE
	f	Lbus;	eO	GLOW_LICHEN
	f	Lbus;	eP	BRICK_STAIRS
	f	Lbus;	eQ	STONE_BRICK_STAIRS
	f	Lbus;	eR	MYCELIUM
	f	Lbus;	eS	LILY_PAD
	f	Lbus;	eT	NETHER_BRICKS
	f	Lbus;	eU	CRACKED_NETHER_BRICKS
	f	Lbus;	eV	CHISELED_NETHER_BRICKS
	f	Lbus;	eW	NETHER_BRICK_FENCE
	f	Lbus;	eX	NETHER_BRICK_STAIRS
	f	Lbus;	eY	ENCHANTING_TABLE
	f	Lbus;	eZ	END_PORTAL_FRAME
	f	Lbus;	ea	JUNGLE_FENCE
	f	Lbus;	eb	ACACIA_FENCE
	f	Lbus;	ec	DARK_OAK_FENCE
	f	Lbus;	ed	CRIMSON_FENCE
	f	Lbus;	ee	WARPED_FENCE
	f	Lbus;	ef	PUMPKIN
	f	Lbus;	eg	CARVED_PUMPKIN
	f	Lbus;	eh	JACK_O_LANTERN
	f	Lbus;	ei	NETHERRACK
	f	Lbus;	ej	SOUL_SAND
	f	Lbus;	ek	SOUL_SOIL
	f	Lbus;	el	BASALT
	f	Lbus;	em	POLISHED_BASALT
	f	Lbus;	en	SMOOTH_BASALT
	f	Lbus;	eo	SOUL_TORCH
	f	Lbus;	ep	GLOWSTONE
	f	Lbus;	eq	INFESTED_STONE
	f	Lbus;	er	INFESTED_COBBLESTONE
	f	Lbus;	es	INFESTED_STONE_BRICKS
	f	Lbus;	et	INFESTED_MOSSY_STONE_BRICKS
	f	Lbus;	eu	INFESTED_CRACKED_STONE_BRICKS
	f	Lbus;	ev	INFESTED_CHISELED_STONE_BRICKS
	f	Lbus;	ew	INFESTED_DEEPSLATE
	f	Lbus;	ex	STONE_BRICKS
	f	Lbus;	ey	MOSSY_STONE_BRICKS
	f	Lbus;	ez	CRACKED_STONE_BRICKS
	f	Lbus;	fA	DIORITE_WALL
	f	Lbus;	fB	BLACKSTONE_WALL
	f	Lbus;	fC	POLISHED_BLACKSTONE_WALL
	f	Lbus;	fD	POLISHED_BLACKSTONE_BRICK_WALL
	f	Lbus;	fE	COBBLED_DEEPSLATE_WALL
	f	Lbus;	fF	POLISHED_DEEPSLATE_WALL
	f	Lbus;	fG	DEEPSLATE_BRICK_WALL
	f	Lbus;	fH	DEEPSLATE_TILE_WALL
	f	Lbus;	fI	ANVIL
	f	Lbus;	fJ	CHIPPED_ANVIL
	f	Lbus;	fK	DAMAGED_ANVIL
	f	Lbus;	fL	CHISELED_QUARTZ_BLOCK
	f	Lbus;	f	POLISHED_DIORITE
	f	Lbus;	fM	QUARTZ_BLOCK
	f	Lbus;	fN	QUARTZ_BRICKS
	f	Lbus;	fO	QUARTZ_PILLAR
	f	Lbus;	fP	QUARTZ_STAIRS
	f	Lbus;	fQ	WHITE_TERRACOTTA
	f	Lbus;	fR	ORANGE_TERRACOTTA
	f	Lbus;	fS	MAGENTA_TERRACOTTA
	f	Lbus;	fT	LIGHT_BLUE_TERRACOTTA
	f	Lbus;	fU	YELLOW_TERRACOTTA
	f	Lbus;	fV	LIME_TERRACOTTA
	f	Lbus;	fW	PINK_TERRACOTTA
	f	Lbus;	fX	GRAY_TERRACOTTA
	f	Lbus;	fY	LIGHT_GRAY_TERRACOTTA
	f	Lbus;	fZ	CYAN_TERRACOTTA
	f	Lbus;	fa	END_STONE
	f	Lbus;	fb	END_STONE_BRICKS
	f	Lbus;	fc	DRAGON_EGG
	f	Lbus;	fd	SANDSTONE_STAIRS
	f	Lbus;	fe	ENDER_CHEST
	f	Lbus;	ff	EMERALD_BLOCK
	f	Lbus;	fg	SPRUCE_STAIRS
	f	Lbus;	fh	BIRCH_STAIRS
	f	Lbus;	fi	JUNGLE_STAIRS
	f	Lbus;	fj	CRIMSON_STAIRS
	f	Lbus;	fk	WARPED_STAIRS
	f	Lbus;	fl	COMMAND_BLOCK
	f	Lbus;	fm	BEACON
	f	Lbus;	fn	COBBLESTONE_WALL
	f	Lbus;	fo	MOSSY_COBBLESTONE_WALL
	f	Lbus;	fp	BRICK_WALL
	f	Lbus;	fq	PRISMARINE_WALL
	f	Lbus;	fr	RED_SANDSTONE_WALL
	f	Lbus;	fs	MOSSY_STONE_BRICK_WALL
	f	Lbus;	ft	GRANITE_WALL
	f	Lbus;	fu	STONE_BRICK_WALL
	f	Lbus;	fv	NETHER_BRICK_WALL
	f	Lbus;	fw	ANDESITE_WALL
	f	Lbus;	fx	RED_NETHER_BRICK_WALL
	f	Lbus;	fy	SANDSTONE_WALL
	f	Lbus;	fz	END_STONE_BRICK_WALL
	f	Lbus;	gA	PACKED_ICE
	f	Lbus;	gB	ACACIA_STAIRS
	f	Lbus;	gC	DARK_OAK_STAIRS
	f	Lbus;	gD	DIRT_PATH
	f	Lbus;	gE	SUNFLOWER
	f	Lbus;	gF	LILAC
	f	Lbus;	gG	ROSE_BUSH
	f	Lbus;	gH	PEONY
	f	Lbus;	gI	TALL_GRASS
	f	Lbus;	gJ	LARGE_FERN
	f	Lbus;	gK	WHITE_STAINED_GLASS
	f	Lbus;	gL	ORANGE_STAINED_GLASS
	f	Lbus;	g	ANDESITE
	f	Lbus;	gM	MAGENTA_STAINED_GLASS
	f	Lbus;	gN	LIGHT_BLUE_STAINED_GLASS
	f	Lbus;	gO	YELLOW_STAINED_GLASS
	f	Lbus;	gP	LIME_STAINED_GLASS
	f	Lbus;	gQ	PINK_STAINED_GLASS
	f	Lbus;	gR	GRAY_STAINED_GLASS
	f	Lbus;	gS	LIGHT_GRAY_STAINED_GLASS
	f	Lbus;	gT	CYAN_STAINED_GLASS
	f	Lbus;	gU	PURPLE_STAINED_GLASS
	f	Lbus;	gV	BLUE_STAINED_GLASS
	f	Lbus;	gW	BROWN_STAINED_GLASS
	f	Lbus;	gX	GREEN_STAINED_GLASS
	f	Lbus;	gY	RED_STAINED_GLASS
	f	Lbus;	gZ	BLACK_STAINED_GLASS
	f	Lbus;	ga	PURPLE_TERRACOTTA
	f	Lbus;	gb	BLUE_TERRACOTTA
	f	Lbus;	gc	BROWN_TERRACOTTA
	f	Lbus;	gd	GREEN_TERRACOTTA
	f	Lbus;	ge	RED_TERRACOTTA
	f	Lbus;	gf	BLACK_TERRACOTTA
	f	Lbus;	gg	BARRIER
	f	Lbus;	gh	LIGHT
	f	Lbus;	gi	HAY_BLOCK
	f	Lbus;	gj	WHITE_CARPET
	f	Lbus;	gk	ORANGE_CARPET
	f	Lbus;	gl	MAGENTA_CARPET
	f	Lbus;	gm	LIGHT_BLUE_CARPET
	f	Lbus;	gn	YELLOW_CARPET
	f	Lbus;	go	LIME_CARPET
	f	Lbus;	gp	PINK_CARPET
	f	Lbus;	gq	GRAY_CARPET
	f	Lbus;	gr	LIGHT_GRAY_CARPET
	f	Lbus;	gs	CYAN_CARPET
	f	Lbus;	gt	PURPLE_CARPET
	f	Lbus;	gu	BLUE_CARPET
	f	Lbus;	gv	BROWN_CARPET
	f	Lbus;	gw	GREEN_CARPET
	f	Lbus;	gx	RED_CARPET
	f	Lbus;	gy	BLACK_CARPET
	f	Lbus;	gz	TERRACOTTA
	f	Lbus;	hA	RED_SANDSTONE_STAIRS
	f	Lbus;	hB	REPEATING_COMMAND_BLOCK
	f	Lbus;	hC	CHAIN_COMMAND_BLOCK
	f	Lbus;	hD	MAGMA_BLOCK
	f	Lbus;	hE	NETHER_WART_BLOCK
	f	Lbus;	hF	WARPED_WART_BLOCK
	f	Lbus;	hG	RED_NETHER_BRICKS
	f	Lbus;	hH	BONE_BLOCK
	f	Lbus;	hI	STRUCTURE_VOID
	f	Lbus;	hJ	SHULKER_BOX
	f	Lbus;	hK	WHITE_SHULKER_BOX
	f	Lbus;	hL	ORANGE_SHULKER_BOX
	f	Lbus;	h	POLISHED_ANDESITE
	f	Lbus;	hM	MAGENTA_SHULKER_BOX
	f	Lbus;	hN	LIGHT_BLUE_SHULKER_BOX
	f	Lbus;	hO	YELLOW_SHULKER_BOX
	f	Lbus;	hP	LIME_SHULKER_BOX
	f	Lbus;	hQ	PINK_SHULKER_BOX
	f	Lbus;	hR	GRAY_SHULKER_BOX
	f	Lbus;	hS	LIGHT_GRAY_SHULKER_BOX
	f	Lbus;	hT	CYAN_SHULKER_BOX
	f	Lbus;	hU	PURPLE_SHULKER_BOX
	f	Lbus;	hV	BLUE_SHULKER_BOX
	f	Lbus;	hW	BROWN_SHULKER_BOX
	f	Lbus;	hX	GREEN_SHULKER_BOX
	f	Lbus;	hY	RED_SHULKER_BOX
	f	Lbus;	hZ	BLACK_SHULKER_BOX
	f	Lbus;	ha	WHITE_STAINED_GLASS_PANE
	f	Lbus;	hb	ORANGE_STAINED_GLASS_PANE
	f	Lbus;	hc	MAGENTA_STAINED_GLASS_PANE
	f	Lbus;	hd	LIGHT_BLUE_STAINED_GLASS_PANE
	f	Lbus;	he	YELLOW_STAINED_GLASS_PANE
	f	Lbus;	hf	LIME_STAINED_GLASS_PANE
	f	Lbus;	hg	PINK_STAINED_GLASS_PANE
	f	Lbus;	hh	GRAY_STAINED_GLASS_PANE
	f	Lbus;	hi	LIGHT_GRAY_STAINED_GLASS_PANE
	f	Lbus;	hj	CYAN_STAINED_GLASS_PANE
	f	Lbus;	hk	PURPLE_STAINED_GLASS_PANE
	f	Lbus;	hl	BLUE_STAINED_GLASS_PANE
	f	Lbus;	hm	BROWN_STAINED_GLASS_PANE
	f	Lbus;	hn	GREEN_STAINED_GLASS_PANE
	f	Lbus;	ho	RED_STAINED_GLASS_PANE
	f	Lbus;	hp	BLACK_STAINED_GLASS_PANE
	f	Lbus;	hq	PRISMARINE
	f	Lbus;	hr	PRISMARINE_BRICKS
	f	Lbus;	hs	DARK_PRISMARINE
	f	Lbus;	ht	PRISMARINE_STAIRS
	f	Lbus;	hu	PRISMARINE_BRICK_STAIRS
	f	Lbus;	hv	DARK_PRISMARINE_STAIRS
	f	Lbus;	hw	SEA_LANTERN
	f	Lbus;	hx	RED_SANDSTONE
	f	Lbus;	hy	CHISELED_RED_SANDSTONE
	f	Lbus;	hz	CUT_RED_SANDSTONE
	f	Lbus;	iA	PURPLE_CONCRETE
	f	Lbus;	iB	BLUE_CONCRETE
	f	Lbus;	iC	BROWN_CONCRETE
	f	Lbus;	iD	GREEN_CONCRETE
	f	Lbus;	iE	RED_CONCRETE
	f	Lbus;	iF	BLACK_CONCRETE
	f	Lbus;	iG	WHITE_CONCRETE_POWDER
	f	Lbus;	iH	ORANGE_CONCRETE_POWDER
	f	Lbus;	iI	MAGENTA_CONCRETE_POWDER
	f	Lbus;	iJ	LIGHT_BLUE_CONCRETE_POWDER
	f	Lbus;	iK	YELLOW_CONCRETE_POWDER
	f	Lbus;	iL	LIME_CONCRETE_POWDER
	f	Lbus;	i	DEEPSLATE
	f	Lbus;	iM	PINK_CONCRETE_POWDER
	f	Lbus;	iN	GRAY_CONCRETE_POWDER
	f	Lbus;	iO	LIGHT_GRAY_CONCRETE_POWDER
	f	Lbus;	iP	CYAN_CONCRETE_POWDER
	f	Lbus;	iQ	PURPLE_CONCRETE_POWDER
	f	Lbus;	iR	BLUE_CONCRETE_POWDER
	f	Lbus;	iS	BROWN_CONCRETE_POWDER
	f	Lbus;	iT	GREEN_CONCRETE_POWDER
	f	Lbus;	iU	RED_CONCRETE_POWDER
	f	Lbus;	iV	BLACK_CONCRETE_POWDER
	f	Lbus;	iW	TURTLE_EGG
	f	Lbus;	iX	DEAD_TUBE_CORAL_BLOCK
	f	Lbus;	iY	DEAD_BRAIN_CORAL_BLOCK
	f	Lbus;	iZ	DEAD_BUBBLE_CORAL_BLOCK
	f	Lbus;	ia	WHITE_GLAZED_TERRACOTTA
	f	Lbus;	ib	ORANGE_GLAZED_TERRACOTTA
	f	Lbus;	ic	MAGENTA_GLAZED_TERRACOTTA
	f	Lbus;	id	LIGHT_BLUE_GLAZED_TERRACOTTA
	f	Lbus;	ie	YELLOW_GLAZED_TERRACOTTA
	f	Lbus;	if	LIME_GLAZED_TERRACOTTA
	f	Lbus;	ig	PINK_GLAZED_TERRACOTTA
	f	Lbus;	ih	GRAY_GLAZED_TERRACOTTA
	f	Lbus;	ii	LIGHT_GRAY_GLAZED_TERRACOTTA
	f	Lbus;	ij	CYAN_GLAZED_TERRACOTTA
	f	Lbus;	ik	PURPLE_GLAZED_TERRACOTTA
	f	Lbus;	il	BLUE_GLAZED_TERRACOTTA
	f	Lbus;	im	BROWN_GLAZED_TERRACOTTA
	f	Lbus;	in	GREEN_GLAZED_TERRACOTTA
	f	Lbus;	io	RED_GLAZED_TERRACOTTA
	f	Lbus;	ip	BLACK_GLAZED_TERRACOTTA
	f	Lbus;	iq	WHITE_CONCRETE
	f	Lbus;	ir	ORANGE_CONCRETE
	f	Lbus;	is	MAGENTA_CONCRETE
	f	Lbus;	it	LIGHT_BLUE_CONCRETE
	f	Lbus;	iu	YELLOW_CONCRETE
	f	Lbus;	iv	LIME_CONCRETE
	f	Lbus;	iw	PINK_CONCRETE
	f	Lbus;	ix	GRAY_CONCRETE
	f	Lbus;	iy	LIGHT_GRAY_CONCRETE
	f	Lbus;	iz	CYAN_CONCRETE
	f	Lbus;	jA	DEAD_HORN_CORAL_FAN
	f	Lbus;	jB	BLUE_ICE
	f	Lbus;	jC	CONDUIT
	f	Lbus;	jD	POLISHED_GRANITE_STAIRS
	f	Lbus;	jE	SMOOTH_RED_SANDSTONE_STAIRS
	f	Lbus;	jF	MOSSY_STONE_BRICK_STAIRS
	f	Lbus;	jG	POLISHED_DIORITE_STAIRS
	f	Lbus;	jH	MOSSY_COBBLESTONE_STAIRS
	f	Lbus;	jI	END_STONE_BRICK_STAIRS
	f	Lbus;	jJ	STONE_STAIRS
	f	Lbus;	jK	SMOOTH_SANDSTONE_STAIRS
	f	Lbus;	jL	SMOOTH_QUARTZ_STAIRS
	f	Lbus;	j	COBBLED_DEEPSLATE
	f	Lbus;	jM	GRANITE_STAIRS
	f	Lbus;	jN	ANDESITE_STAIRS
	f	Lbus;	jO	RED_NETHER_BRICK_STAIRS
	f	Lbus;	jP	POLISHED_ANDESITE_STAIRS
	f	Lbus;	jQ	DIORITE_STAIRS
	f	Lbus;	jR	COBBLED_DEEPSLATE_STAIRS
	f	Lbus;	jS	POLISHED_DEEPSLATE_STAIRS
	f	Lbus;	jT	DEEPSLATE_BRICK_STAIRS
	f	Lbus;	jU	DEEPSLATE_TILE_STAIRS
	f	Lbus;	jV	POLISHED_GRANITE_SLAB
	f	Lbus;	jW	SMOOTH_RED_SANDSTONE_SLAB
	f	Lbus;	jX	MOSSY_STONE_BRICK_SLAB
	f	Lbus;	jY	POLISHED_DIORITE_SLAB
	f	Lbus;	jZ	MOSSY_COBBLESTONE_SLAB
	f	Lbus;	ja	DEAD_FIRE_CORAL_BLOCK
	f	Lbus;	jb	DEAD_HORN_CORAL_BLOCK
	f	Lbus;	jc	TUBE_CORAL_BLOCK
	f	Lbus;	jd	BRAIN_CORAL_BLOCK
	f	Lbus;	je	BUBBLE_CORAL_BLOCK
	f	Lbus;	jf	FIRE_CORAL_BLOCK
	f	Lbus;	jg	HORN_CORAL_BLOCK
	f	Lbus;	jh	TUBE_CORAL
	f	Lbus;	ji	BRAIN_CORAL
	f	Lbus;	jj	BUBBLE_CORAL
	f	Lbus;	jk	FIRE_CORAL
	f	Lbus;	jl	HORN_CORAL
	f	Lbus;	jm	DEAD_BRAIN_CORAL
	f	Lbus;	jn	DEAD_BUBBLE_CORAL
	f	Lbus;	jo	DEAD_FIRE_CORAL
	f	Lbus;	jp	DEAD_HORN_CORAL
	f	Lbus;	jq	DEAD_TUBE_CORAL
	f	Lbus;	jr	TUBE_CORAL_FAN
	f	Lbus;	js	BRAIN_CORAL_FAN
	f	Lbus;	jt	BUBBLE_CORAL_FAN
	f	Lbus;	ju	FIRE_CORAL_FAN
	f	Lbus;	jv	HORN_CORAL_FAN
	f	Lbus;	jw	DEAD_TUBE_CORAL_FAN
	f	Lbus;	jx	DEAD_BRAIN_CORAL_FAN
	f	Lbus;	jy	DEAD_BUBBLE_CORAL_FAN
	f	Lbus;	jz	DEAD_FIRE_CORAL_FAN
	f	Lbus;	kA	LECTERN
	f	Lbus;	kB	TARGET
	f	Lbus;	kC	LEVER
	f	Lbus;	kD	LIGHTNING_ROD
	f	Lbus;	kE	DAYLIGHT_DETECTOR
	f	Lbus;	kF	SCULK_SENSOR
	f	Lbus;	kG	TRIPWIRE_HOOK
	f	Lbus;	kH	TRAPPED_CHEST
	f	Lbus;	kI	TNT
	f	Lbus;	kJ	REDSTONE_LAMP
	f	Lbus;	kK	NOTE_BLOCK
	f	Lbus;	kL	STONE_BUTTON
	f	Lbus;	k	POLISHED_DEEPSLATE
	f	Lbus;	kM	POLISHED_BLACKSTONE_BUTTON
	f	Lbus;	kN	OAK_BUTTON
	f	Lbus;	kO	SPRUCE_BUTTON
	f	Lbus;	kP	BIRCH_BUTTON
	f	Lbus;	kQ	JUNGLE_BUTTON
	f	Lbus;	kR	ACACIA_BUTTON
	f	Lbus;	kS	DARK_OAK_BUTTON
	f	Lbus;	kT	CRIMSON_BUTTON
	f	Lbus;	kU	WARPED_BUTTON
	f	Lbus;	kV	STONE_PRESSURE_PLATE
	f	Lbus;	kW	POLISHED_BLACKSTONE_PRESSURE_PLATE
	f	Lbus;	kX	LIGHT_WEIGHTED_PRESSURE_PLATE
	f	Lbus;	kY	HEAVY_WEIGHTED_PRESSURE_PLATE
	f	Lbus;	kZ	OAK_PRESSURE_PLATE
	f	Lbus;	ka	END_STONE_BRICK_SLAB
	f	Lbus;	kb	SMOOTH_SANDSTONE_SLAB
	f	Lbus;	kc	SMOOTH_QUARTZ_SLAB
	f	Lbus;	kd	GRANITE_SLAB
	f	Lbus;	ke	ANDESITE_SLAB
	f	Lbus;	kf	RED_NETHER_BRICK_SLAB
	f	Lbus;	kg	POLISHED_ANDESITE_SLAB
	f	Lbus;	kh	DIORITE_SLAB
	f	Lbus;	ki	COBBLED_DEEPSLATE_SLAB
	f	Lbus;	kj	POLISHED_DEEPSLATE_SLAB
	f	Lbus;	kk	DEEPSLATE_BRICK_SLAB
	f	Lbus;	kl	DEEPSLATE_TILE_SLAB
	f	Lbus;	km	SCAFFOLDING
	f	Lbus;	kn	REDSTONE
	f	Lbus;	ko	REDSTONE_TORCH
	f	Lbus;	kp	REDSTONE_BLOCK
	f	Lbus;	kq	REPEATER
	f	Lbus;	kr	COMPARATOR
	f	Lbus;	ks	PISTON
	f	Lbus;	kt	STICKY_PISTON
	f	Lbus;	ku	SLIME_BLOCK
	f	Lbus;	kv	HONEY_BLOCK
	f	Lbus;	kw	OBSERVER
	f	Lbus;	kx	HOPPER
	f	Lbus;	ky	DISPENSER
	f	Lbus;	kz	DROPPER
	f	Lbus;	lA	SPRUCE_FENCE_GATE
	f	Lbus;	lB	BIRCH_FENCE_GATE
	f	Lbus;	lC	JUNGLE_FENCE_GATE
	f	Lbus;	lD	ACACIA_FENCE_GATE
	f	Lbus;	lE	DARK_OAK_FENCE_GATE
	f	Lbus;	lF	CRIMSON_FENCE_GATE
	f	Lbus;	lG	WARPED_FENCE_GATE
	f	Lbus;	lH	POWERED_RAIL
	f	Lbus;	lI	DETECTOR_RAIL
	f	Lbus;	lJ	RAIL
	f	Lbus;	lK	ACTIVATOR_RAIL
	f	Lbus;	lL	SADDLE
	f	Lbus;	l	CALCITE
	f	Lbus;	lM	MINECART
	f	Lbus;	lN	CHEST_MINECART
	f	Lbus;	lO	FURNACE_MINECART
	f	Lbus;	lP	TNT_MINECART
	f	Lbus;	lQ	HOPPER_MINECART
	f	Lbus;	lR	CARROT_ON_A_STICK
	f	Lbus;	lS	WARPED_FUNGUS_ON_A_STICK
	f	Lbus;	lT	ELYTRA
	f	Lbus;	lU	OAK_BOAT
	f	Lbus;	lV	SPRUCE_BOAT
	f	Lbus;	lW	BIRCH_BOAT
	f	Lbus;	lX	JUNGLE_BOAT
	f	Lbus;	lY	ACACIA_BOAT
	f	Lbus;	lZ	DARK_OAK_BOAT
	f	Lbus;	la	SPRUCE_PRESSURE_PLATE
	f	Lbus;	lb	BIRCH_PRESSURE_PLATE
	f	Lbus;	lc	JUNGLE_PRESSURE_PLATE
	f	Lbus;	ld	ACACIA_PRESSURE_PLATE
	f	Lbus;	le	DARK_OAK_PRESSURE_PLATE
	f	Lbus;	lf	CRIMSON_PRESSURE_PLATE
	f	Lbus;	lg	WARPED_PRESSURE_PLATE
	f	Lbus;	lh	IRON_DOOR
	f	Lbus;	li	OAK_DOOR
	f	Lbus;	lj	SPRUCE_DOOR
	f	Lbus;	lk	BIRCH_DOOR
	f	Lbus;	ll	JUNGLE_DOOR
	f	Lbus;	lm	ACACIA_DOOR
	f	Lbus;	ln	DARK_OAK_DOOR
	f	Lbus;	lo	CRIMSON_DOOR
	f	Lbus;	lp	WARPED_DOOR
	f	Lbus;	lq	IRON_TRAPDOOR
	f	Lbus;	lr	OAK_TRAPDOOR
	f	Lbus;	ls	SPRUCE_TRAPDOOR
	f	Lbus;	lt	BIRCH_TRAPDOOR
	f	Lbus;	lu	JUNGLE_TRAPDOOR
	f	Lbus;	lv	ACACIA_TRAPDOOR
	f	Lbus;	lw	DARK_OAK_TRAPDOOR
	f	Lbus;	lx	CRIMSON_TRAPDOOR
	f	Lbus;	ly	WARPED_TRAPDOOR
	f	Lbus;	lz	OAK_FENCE_GATE
	f	Lbus;	mA	WOODEN_AXE
	f	Lbus;	mB	WOODEN_HOE
	f	Lbus;	mC	STONE_SWORD
	f	Lbus;	mD	STONE_SHOVEL
	f	Lbus;	mE	STONE_PICKAXE
	f	Lbus;	mF	STONE_AXE
	f	Lbus;	mG	STONE_HOE
	f	Lbus;	mH	GOLDEN_SWORD
	f	Lbus;	mI	GOLDEN_SHOVEL
	f	Lbus;	mJ	GOLDEN_PICKAXE
	f	Lbus;	mK	GOLDEN_AXE
	f	Lbus;	mL	GOLDEN_HOE
	f	Lbus;	m	TUFF
	f	Lbus;	mM	IRON_SWORD
	f	Lbus;	mN	IRON_SHOVEL
	f	Lbus;	mO	IRON_PICKAXE
	f	Lbus;	mP	IRON_AXE
	f	Lbus;	mQ	IRON_HOE
	f	Lbus;	mR	DIAMOND_SWORD
	f	Lbus;	mS	DIAMOND_SHOVEL
	f	Lbus;	mT	DIAMOND_PICKAXE
	f	Lbus;	mU	DIAMOND_AXE
	f	Lbus;	mV	DIAMOND_HOE
	f	Lbus;	mW	NETHERITE_SWORD
	f	Lbus;	mX	NETHERITE_SHOVEL
	f	Lbus;	mY	NETHERITE_PICKAXE
	f	Lbus;	mZ	NETHERITE_AXE
	f	Lbus;	ma	STRUCTURE_BLOCK
	f	Lbus;	mb	JIGSAW
	f	Lbus;	mc	TURTLE_HELMET
	f	Lbus;	md	SCUTE
	f	Lbus;	me	FLINT_AND_STEEL
	f	Lbus;	mf	APPLE
	f	Lbus;	mg	BOW
	f	Lbus;	mh	ARROW
	f	Lbus;	mi	COAL
	f	Lbus;	mj	CHARCOAL
	f	Lbus;	mk	DIAMOND
	f	Lbus;	ml	EMERALD
	f	Lbus;	mm	LAPIS_LAZULI
	f	Lbus;	mn	QUARTZ
	f	Lbus;	mo	AMETHYST_SHARD
	f	Lbus;	mp	RAW_IRON
	f	Lbus;	mq	IRON_INGOT
	f	Lbus;	mr	RAW_COPPER
	f	Lbus;	ms	COPPER_INGOT
	f	Lbus;	mt	RAW_GOLD
	f	Lbus;	mu	GOLD_INGOT
	f	Lbus;	mv	NETHERITE_INGOT
	f	Lbus;	mw	NETHERITE_SCRAP
	f	Lbus;	mx	WOODEN_SWORD
	f	Lbus;	my	WOODEN_SHOVEL
	f	Lbus;	mz	WOODEN_PICKAXE
	f	Lbus;	nA	GOLDEN_HELMET
	f	Lbus;	nB	GOLDEN_CHESTPLATE
	f	Lbus;	nC	GOLDEN_LEGGINGS
	f	Lbus;	nD	GOLDEN_BOOTS
	f	Lbus;	nE	NETHERITE_HELMET
	f	Lbus;	nF	NETHERITE_CHESTPLATE
	f	Lbus;	nG	NETHERITE_LEGGINGS
	f	Lbus;	nH	NETHERITE_BOOTS
	f	Lbus;	nI	FLINT
	f	Lbus;	nJ	PORKCHOP
	f	Lbus;	nK	COOKED_PORKCHOP
	f	Lbus;	nL	PAINTING
	f	Lbus;	n	DRIPSTONE_BLOCK
	f	Lbus;	nM	GOLDEN_APPLE
	f	Lbus;	nN	ENCHANTED_GOLDEN_APPLE
	f	Lbus;	nO	OAK_SIGN
	f	Lbus;	nP	SPRUCE_SIGN
	f	Lbus;	nQ	BIRCH_SIGN
	f	Lbus;	nR	JUNGLE_SIGN
	f	Lbus;	nS	ACACIA_SIGN
	f	Lbus;	nT	DARK_OAK_SIGN
	f	Lbus;	nU	CRIMSON_SIGN
	f	Lbus;	nV	WARPED_SIGN
	f	Lbus;	nW	BUCKET
	f	Lbus;	nX	WATER_BUCKET
	f	Lbus;	nY	LAVA_BUCKET
	f	Lbus;	nZ	POWDER_SNOW_BUCKET
	f	Lbus;	na	NETHERITE_HOE
	f	Lbus;	nb	STICK
	f	Lbus;	nc	BOWL
	f	Lbus;	nd	MUSHROOM_STEW
	f	Lbus;	ne	STRING
	f	Lbus;	nf	FEATHER
	f	Lbus;	ng	GUNPOWDER
	f	Lbus;	nh	WHEAT_SEEDS
	f	Lbus;	ni	WHEAT
	f	Lbus;	nj	BREAD
	f	Lbus;	nk	LEATHER_HELMET
	f	Lbus;	nl	LEATHER_CHESTPLATE
	f	Lbus;	nm	LEATHER_LEGGINGS
	f	Lbus;	nn	LEATHER_BOOTS
	f	Lbus;	no	CHAINMAIL_HELMET
	f	Lbus;	np	CHAINMAIL_CHESTPLATE
	f	Lbus;	nq	CHAINMAIL_LEGGINGS
	f	Lbus;	nr	CHAINMAIL_BOOTS
	f	Lbus;	ns	IRON_HELMET
	f	Lbus;	nt	IRON_CHESTPLATE
	f	Lbus;	nu	IRON_LEGGINGS
	f	Lbus;	nv	IRON_BOOTS
	f	Lbus;	nw	DIAMOND_HELMET
	f	Lbus;	nx	DIAMOND_CHESTPLATE
	f	Lbus;	ny	DIAMOND_LEGGINGS
	f	Lbus;	nz	DIAMOND_BOOTS
	f	Lbus;	oA	COOKED_SALMON
	f	Lbus;	oB	INK_SAC
	f	Lbus;	oC	GLOW_INK_SAC
	f	Lbus;	oD	COCOA_BEANS
	f	Lbus;	oE	WHITE_DYE
	f	Lbus;	oF	ORANGE_DYE
	f	Lbus;	oG	MAGENTA_DYE
	f	Lbus;	oH	LIGHT_BLUE_DYE
	f	Lbus;	oI	YELLOW_DYE
	f	Lbus;	oJ	LIME_DYE
	f	Lbus;	oK	PINK_DYE
	f	Lbus;	oL	GRAY_DYE
	f	Lbus;	o	GRASS_BLOCK
	f	Lbus;	oM	LIGHT_GRAY_DYE
	f	Lbus;	oN	CYAN_DYE
	f	Lbus;	oO	PURPLE_DYE
	f	Lbus;	oP	BLUE_DYE
	f	Lbus;	oQ	BROWN_DYE
	f	Lbus;	oR	GREEN_DYE
	f	Lbus;	oS	RED_DYE
	f	Lbus;	oT	BLACK_DYE
	f	Lbus;	oU	BONE_MEAL
	f	Lbus;	oV	BONE
	f	Lbus;	oW	SUGAR
	f	Lbus;	oX	CAKE
	f	Lbus;	oY	WHITE_BED
	f	Lbus;	oZ	ORANGE_BED
	f	Lbus;	oa	SNOWBALL
	f	Lbus;	ob	LEATHER
	f	Lbus;	oc	MILK_BUCKET
	f	Lbus;	od	PUFFERFISH_BUCKET
	f	Lbus;	oe	SALMON_BUCKET
	f	Lbus;	of	COD_BUCKET
	f	Lbus;	og	TROPICAL_FISH_BUCKET
	f	Lbus;	oh	AXOLOTL_BUCKET
	f	Lbus;	oi	BRICK
	f	Lbus;	oj	CLAY_BALL
	f	Lbus;	ok	DRIED_KELP_BLOCK
	f	Lbus;	ol	PAPER
	f	Lbus;	om	BOOK
	f	Lbus;	on	SLIME_BALL
	f	Lbus;	oo	EGG
	f	Lbus;	op	COMPASS
	f	Lbus;	oq	BUNDLE
	f	Lbus;	or	FISHING_ROD
	f	Lbus;	os	CLOCK
	f	Lbus;	ot	SPYGLASS
	f	Lbus;	ou	GLOWSTONE_DUST
	f	Lbus;	ov	COD
	f	Lbus;	ow	SALMON
	f	Lbus;	ox	TROPICAL_FISH
	f	Lbus;	oy	PUFFERFISH
	f	Lbus;	oz	COOKED_COD
	f	Lbus;	pA	ENDER_PEARL
	f	Lbus;	pB	BLAZE_ROD
	f	Lbus;	pC	GHAST_TEAR
	f	Lbus;	pD	GOLD_NUGGET
	f	Lbus;	pE	NETHER_WART
	f	Lbus;	pF	POTION
	f	Lbus;	pG	GLASS_BOTTLE
	f	Lbus;	pH	SPIDER_EYE
	f	Lbus;	pI	FERMENTED_SPIDER_EYE
	f	Lbus;	pJ	BLAZE_POWDER
	f	Lbus;	pK	MAGMA_CREAM
	f	Lbus;	pL	BREWING_STAND
	f	Lbus;	p	DIRT
	f	Lbus;	pM	CAULDRON
	f	Lbus;	pN	ENDER_EYE
	f	Lbus;	pO	GLISTERING_MELON_SLICE
	f	Lbus;	pP	AXOLOTL_SPAWN_EGG
	f	Lbus;	pQ	BAT_SPAWN_EGG
	f	Lbus;	pR	BEE_SPAWN_EGG
	f	Lbus;	pS	BLAZE_SPAWN_EGG
	f	Lbus;	pT	CAT_SPAWN_EGG
	f	Lbus;	pU	CAVE_SPIDER_SPAWN_EGG
	f	Lbus;	pV	CHICKEN_SPAWN_EGG
	f	Lbus;	pW	COD_SPAWN_EGG
	f	Lbus;	pX	COW_SPAWN_EGG
	f	Lbus;	pY	CREEPER_SPAWN_EGG
	f	Lbus;	pZ	DOLPHIN_SPAWN_EGG
	f	Lbus;	pa	MAGENTA_BED
	f	Lbus;	pb	LIGHT_BLUE_BED
	f	Lbus;	pc	YELLOW_BED
	f	Lbus;	pd	LIME_BED
	f	Lbus;	pe	PINK_BED
	f	Lbus;	pf	GRAY_BED
	f	Lbus;	pg	LIGHT_GRAY_BED
	f	Lbus;	ph	CYAN_BED
	f	Lbus;	pi	PURPLE_BED
	f	Lbus;	pj	BLUE_BED
	f	Lbus;	pk	BROWN_BED
	f	Lbus;	pl	GREEN_BED
	f	Lbus;	pm	RED_BED
	f	Lbus;	pn	BLACK_BED
	f	Lbus;	po	COOKIE
	f	Lbus;	pp	FILLED_MAP
	f	Lbus;	pq	SHEARS
	f	Lbus;	pr	MELON_SLICE
	f	Lbus;	ps	DRIED_KELP
	f	Lbus;	pt	PUMPKIN_SEEDS
	f	Lbus;	pu	MELON_SEEDS
	f	Lbus;	pv	BEEF
	f	Lbus;	pw	COOKED_BEEF
	f	Lbus;	px	CHICKEN
	f	Lbus;	py	COOKED_CHICKEN
	f	Lbus;	pz	ROTTEN_FLESH
	f	Lbus;	qA	POLAR_BEAR_SPAWN_EGG
	f	Lbus;	qB	PUFFERFISH_SPAWN_EGG
	f	Lbus;	qC	RABBIT_SPAWN_EGG
	f	Lbus;	qD	RAVAGER_SPAWN_EGG
	f	Lbus;	qE	SALMON_SPAWN_EGG
	f	Lbus;	qF	SHEEP_SPAWN_EGG
	f	Lbus;	qG	SHULKER_SPAWN_EGG
	f	Lbus;	qH	SILVERFISH_SPAWN_EGG
	f	Lbus;	qI	SKELETON_SPAWN_EGG
	f	Lbus;	qJ	SKELETON_HORSE_SPAWN_EGG
	f	Lbus;	qK	SLIME_SPAWN_EGG
	f	Lbus;	qL	SPIDER_SPAWN_EGG
	f	Lbus;	q	COARSE_DIRT
	f	Lbus;	qM	SQUID_SPAWN_EGG
	f	Lbus;	qN	STRAY_SPAWN_EGG
	f	Lbus;	qO	STRIDER_SPAWN_EGG
	f	Lbus;	qP	TRADER_LLAMA_SPAWN_EGG
	f	Lbus;	qQ	TROPICAL_FISH_SPAWN_EGG
	f	Lbus;	qR	TURTLE_SPAWN_EGG
	f	Lbus;	qS	VEX_SPAWN_EGG
	f	Lbus;	qT	VILLAGER_SPAWN_EGG
	f	Lbus;	qU	VINDICATOR_SPAWN_EGG
	f	Lbus;	qV	WANDERING_TRADER_SPAWN_EGG
	f	Lbus;	qW	WITCH_SPAWN_EGG
	f	Lbus;	qX	WITHER_SKELETON_SPAWN_EGG
	f	Lbus;	qY	WOLF_SPAWN_EGG
	f	Lbus;	qZ	ZOGLIN_SPAWN_EGG
	f	Lbus;	qa	DONKEY_SPAWN_EGG
	f	Lbus;	qb	DROWNED_SPAWN_EGG
	f	Lbus;	qc	ELDER_GUARDIAN_SPAWN_EGG
	f	Lbus;	qd	ENDERMAN_SPAWN_EGG
	f	Lbus;	qe	ENDERMITE_SPAWN_EGG
	f	Lbus;	qf	EVOKER_SPAWN_EGG
	f	Lbus;	qg	FOX_SPAWN_EGG
	f	Lbus;	qh	GHAST_SPAWN_EGG
	f	Lbus;	qi	GLOW_SQUID_SPAWN_EGG
	f	Lbus;	qj	GOAT_SPAWN_EGG
	f	Lbus;	qk	GUARDIAN_SPAWN_EGG
	f	Lbus;	ql	HOGLIN_SPAWN_EGG
	f	Lbus;	qm	HORSE_SPAWN_EGG
	f	Lbus;	qn	HUSK_SPAWN_EGG
	f	Lbus;	qo	LLAMA_SPAWN_EGG
	f	Lbus;	qp	MAGMA_CUBE_SPAWN_EGG
	f	Lbus;	qq	MOOSHROOM_SPAWN_EGG
	f	Lbus;	qr	MULE_SPAWN_EGG
	f	Lbus;	qs	OCELOT_SPAWN_EGG
	f	Lbus;	qt	PANDA_SPAWN_EGG
	f	Lbus;	qu	PARROT_SPAWN_EGG
	f	Lbus;	qv	PHANTOM_SPAWN_EGG
	f	Lbus;	qw	PIG_SPAWN_EGG
	f	Lbus;	qx	PIGLIN_SPAWN_EGG
	f	Lbus;	qy	PIGLIN_BRUTE_SPAWN_EGG
	f	Lbus;	qz	PILLAGER_SPAWN_EGG
	f	Lbus;	rA	FIREWORK_STAR
	f	Lbus;	rB	ENCHANTED_BOOK
	f	Lbus;	rC	NETHER_BRICK
	f	Lbus;	rD	PRISMARINE_SHARD
	f	Lbus;	rE	PRISMARINE_CRYSTALS
	f	Lbus;	rF	RABBIT
	f	Lbus;	rG	COOKED_RABBIT
	f	Lbus;	rH	RABBIT_STEW
	f	Lbus;	rI	RABBIT_FOOT
	f	Lbus;	rJ	RABBIT_HIDE
	f	Lbus;	rK	ARMOR_STAND
	f	Lbus;	rL	IRON_HORSE_ARMOR
	f	Lbus;	r	PODZOL
	f	Lbus;	rM	GOLDEN_HORSE_ARMOR
	f	Lbus;	rN	DIAMOND_HORSE_ARMOR
	f	Lbus;	rO	LEATHER_HORSE_ARMOR
	f	Lbus;	rP	LEAD
	f	Lbus;	rQ	NAME_TAG
	f	Lbus;	rR	COMMAND_BLOCK_MINECART
	f	Lbus;	rS	MUTTON
	f	Lbus;	rT	COOKED_MUTTON
	f	Lbus;	rU	WHITE_BANNER
	f	Lbus;	rV	ORANGE_BANNER
	f	Lbus;	rW	MAGENTA_BANNER
	f	Lbus;	rX	LIGHT_BLUE_BANNER
	f	Lbus;	rY	YELLOW_BANNER
	f	Lbus;	rZ	LIME_BANNER
	f	Lbus;	ra	ZOMBIE_SPAWN_EGG
	f	Lbus;	rb	ZOMBIE_HORSE_SPAWN_EGG
	f	Lbus;	rc	ZOMBIE_VILLAGER_SPAWN_EGG
	f	Lbus;	rd	ZOMBIFIED_PIGLIN_SPAWN_EGG
	f	Lbus;	re	EXPERIENCE_BOTTLE
	f	Lbus;	rf	FIRE_CHARGE
	f	Lbus;	rg	WRITABLE_BOOK
	f	Lbus;	rh	WRITTEN_BOOK
	f	Lbus;	ri	ITEM_FRAME
	f	Lbus;	rj	GLOW_ITEM_FRAME
	f	Lbus;	rk	FLOWER_POT
	f	Lbus;	rl	CARROT
	f	Lbus;	rm	POTATO
	f	Lbus;	rn	BAKED_POTATO
	f	Lbus;	ro	POISONOUS_POTATO
	f	Lbus;	rp	MAP
	f	Lbus;	rq	GOLDEN_CARROT
	f	Lbus;	rr	SKELETON_SKULL
	f	Lbus;	rs	WITHER_SKELETON_SKULL
	f	Lbus;	rt	PLAYER_HEAD
	f	Lbus;	ru	ZOMBIE_HEAD
	f	Lbus;	rv	CREEPER_HEAD
	f	Lbus;	rw	DRAGON_HEAD
	f	Lbus;	rx	NETHER_STAR
	f	Lbus;	ry	PUMPKIN_PIE
	f	Lbus;	rz	FIREWORK_ROCKET
	f	Lbus;	sA	DEBUG_STICK
	f	Lbus;	sB	MUSIC_DISC_13
	f	Lbus;	sC	MUSIC_DISC_CAT
	f	Lbus;	sD	MUSIC_DISC_BLOCKS
	f	Lbus;	sE	MUSIC_DISC_CHIRP
	f	Lbus;	sF	MUSIC_DISC_FAR
	f	Lbus;	sG	MUSIC_DISC_MALL
	f	Lbus;	sH	MUSIC_DISC_MELLOHI
	f	Lbus;	sI	MUSIC_DISC_STAL
	f	Lbus;	sJ	MUSIC_DISC_STRAD
	f	Lbus;	sK	MUSIC_DISC_WARD
	f	Lbus;	sL	MUSIC_DISC_11
	f	Lbus;	s	ROOTED_DIRT
	f	Lbus;	sM	MUSIC_DISC_WAIT
	f	Lbus;	sN	MUSIC_DISC_OTHERSIDE
	f	Lbus;	sO	MUSIC_DISC_PIGSTEP
	f	Lbus;	sP	TRIDENT
	f	Lbus;	sQ	PHANTOM_MEMBRANE
	f	Lbus;	sR	NAUTILUS_SHELL
	f	Lbus;	sS	HEART_OF_THE_SEA
	f	Lbus;	sT	CROSSBOW
	f	Lbus;	sU	SUSPICIOUS_STEW
	f	Lbus;	sV	LOOM
	f	Lbus;	sW	FLOWER_BANNER_PATTERN
	f	Lbus;	sX	CREEPER_BANNER_PATTERN
	f	Lbus;	sY	SKULL_BANNER_PATTERN
	f	Lbus;	sZ	MOJANG_BANNER_PATTERN
	f	Lbus;	sa	PINK_BANNER
	f	Lbus;	sb	GRAY_BANNER
	f	Lbus;	sc	LIGHT_GRAY_BANNER
	f	Lbus;	sd	CYAN_BANNER
	f	Lbus;	se	PURPLE_BANNER
	f	Lbus;	sf	BLUE_BANNER
	f	Lbus;	sg	BROWN_BANNER
	f	Lbus;	sh	GREEN_BANNER
	f	Lbus;	si	RED_BANNER
	f	Lbus;	sj	BLACK_BANNER
	f	Lbus;	sk	END_CRYSTAL
	f	Lbus;	sl	CHORUS_FRUIT
	f	Lbus;	sm	POPPED_CHORUS_FRUIT
	f	Lbus;	sn	BEETROOT
	f	Lbus;	so	BEETROOT_SEEDS
	f	Lbus;	sp	BEETROOT_SOUP
	f	Lbus;	sq	DRAGON_BREATH
	f	Lbus;	sr	SPLASH_POTION
	f	Lbus;	ss	SPECTRAL_ARROW
	f	Lbus;	st	TIPPED_ARROW
	f	Lbus;	su	LINGERING_POTION
	f	Lbus;	sv	SHIELD
	f	Lbus;	sw	TOTEM_OF_UNDYING
	f	Lbus;	sx	SHULKER_SHELL
	f	Lbus;	sy	IRON_NUGGET
	f	Lbus;	sz	KNOWLEDGE_BOOK
	f	Lbus;	tA	BLACKSTONE
	f	Lbus;	tB	BLACKSTONE_SLAB
	f	Lbus;	tC	BLACKSTONE_STAIRS
	f	Lbus;	tD	GILDED_BLACKSTONE
	f	Lbus;	tE	POLISHED_BLACKSTONE
	f	Lbus;	tF	POLISHED_BLACKSTONE_SLAB
	f	Lbus;	tG	POLISHED_BLACKSTONE_STAIRS
	f	Lbus;	tH	CHISELED_POLISHED_BLACKSTONE
	f	Lbus;	tI	POLISHED_BLACKSTONE_BRICKS
	f	Lbus;	tJ	POLISHED_BLACKSTONE_BRICK_SLAB
	f	Lbus;	tK	POLISHED_BLACKSTONE_BRICK_STAIRS
	f	Lbus;	tL	CRACKED_POLISHED_BLACKSTONE_BRICKS
	f	Lbus;	t	CRIMSON_NYLIUM
	f	Lbus;	tM	RESPAWN_ANCHOR
	f	Lbus;	tN	CANDLE
	f	Lbus;	tO	WHITE_CANDLE
	f	Lbus;	tP	ORANGE_CANDLE
	f	Lbus;	tQ	MAGENTA_CANDLE
	f	Lbus;	tR	LIGHT_BLUE_CANDLE
	f	Lbus;	tS	YELLOW_CANDLE
	f	Lbus;	tT	LIME_CANDLE
	f	Lbus;	tU	PINK_CANDLE
	f	Lbus;	tV	GRAY_CANDLE
	f	Lbus;	tW	LIGHT_GRAY_CANDLE
	f	Lbus;	tX	CYAN_CANDLE
	f	Lbus;	tY	PURPLE_CANDLE
	f	Lbus;	tZ	BLUE_CANDLE
	f	Lbus;	ta	GLOBE_BANNER_PATTERN
	f	Lbus;	tb	PIGLIN_BANNER_PATTERN
	f	Lbus;	tc	COMPOSTER
	f	Lbus;	td	BARREL
	f	Lbus;	te	SMOKER
	f	Lbus;	tf	BLAST_FURNACE
	f	Lbus;	tg	CARTOGRAPHY_TABLE
	f	Lbus;	th	FLETCHING_TABLE
	f	Lbus;	ti	GRINDSTONE
	f	Lbus;	tj	SMITHING_TABLE
	f	Lbus;	tk	STONECUTTER
	f	Lbus;	tl	BELL
	f	Lbus;	tm	LANTERN
	f	Lbus;	tn	SOUL_LANTERN
	f	Lbus;	to	SWEET_BERRIES
	f	Lbus;	tp	GLOW_BERRIES
	f	Lbus;	tq	CAMPFIRE
	f	Lbus;	tr	SOUL_CAMPFIRE
	f	Lbus;	ts	SHROOMLIGHT
	f	Lbus;	tt	HONEYCOMB
	f	Lbus;	tu	BEE_NEST
	f	Lbus;	tv	BEEHIVE
	f	Lbus;	tw	HONEY_BOTTLE
	f	Lbus;	tx	HONEYCOMB_BLOCK
	f	Lbus;	ty	LODESTONE
	f	Lbus;	tz	CRYING_OBSIDIAN
	f	Lbus;	u	WARPED_NYLIUM
	f	Lbus;	ua	BROWN_CANDLE
	f	Lbus;	ub	GREEN_CANDLE
	f	Lbus;	uc	RED_CANDLE
	f	Lbus;	ud	BLACK_CANDLE
	f	Lbus;	ue	SMALL_AMETHYST_BUD
	f	Lbus;	uf	MEDIUM_AMETHYST_BUD
	f	Lbus;	ug	LARGE_AMETHYST_BUD
	f	Lbus;	uh	AMETHYST_CLUSTER
	f	Lbus;	ui	POINTED_DRIPSTONE
	f	Lbus;	v	COBBLESTONE
	f	Lbus;	w	OAK_PLANKS
	f	Lbus;	x	SPRUCE_PLANKS
	f	Lbus;	y	BIRCH_PLANKS
	f	Lbus;	z	JUNGLE_PLANKS
c	buz	net/minecraft/world/item/KnowledgeBookItem
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	f	Ljava/lang/String;	a	RECIPE_TAG
	f	Lorg/slf4j/Logger;	b	LOGGER
c	bva	net/minecraft/world/item/LeadItem
	m	(Lboj;Lcav;Lgj;)Lawh;	a	bindPlayerMobs
	m	(Lbwy;)Lawh;	a	useOn
c	bvb	net/minecraft/world/item/LingeringPotionItem
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
c	bvc	net/minecraft/world/item/MapItem
	m	(I)Ljava/lang/String;	a	makeKey
	m	(Ladw;Lbuw;)V	a	renderBiomePreviewMap
	m	(Lbuw;I)V	a	storeMapData
	m	(Lbuw;Lcav;)Ldkf;	a	getSavedData
	m	(Lbuw;Lcav;I)V	a	scaleMap
	m	(Lbuw;Lcav;IIIZZLys;)V	a	createAndStoreSavedData
	m	(Lbuw;Lcav;Laxk;IZ)V	a	inventoryTick
	m	(Lbuw;Lcav;Lboj;)Lrc;	a	getUpdatePacket
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lcav;IIBZZ)Lbuw;	a	create
	m	(Lcav;IIIZZLys;)I	a	createNewSavedData
	m	(Lcav;Laxk;Ldkf;)V	a	update
	m	(Lcav;Lbuw;)V	a	lockMap
	m	(Lcav;Lcov;Lgj;)Lcov;	a	getCorrectStateForFluidBlock
	m	(Ljava/lang/Integer;Lcav;)Ldkf;	a	getSavedData
	m	([ZII)Z	a	isBiomeWatery
	m	(Lbuw;Lcav;Lboj;)V	b	onCraftedBy
	m	(Lbuw;)Ljava/lang/Integer;	d	getMapId
	m	(Lbuw;)I	k	getColor
	f	I	a	IMAGE_WIDTH
	f	I	b	IMAGE_HEIGHT
	f	I	c	DEFAULT_MAP_COLOR
	f	Ljava/lang/String;	d	TAG_MAP
c	bvd	net/minecraft/world/item/MilkBucketItem
	m	(Lbuw;Lcav;Laxy;)Lbuw;	a	finishUsingItem
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	(Lbuw;)I	b	getUseDuration
	m	(Lbuw;)Lbwl;	c	getUseAnimation
	f	I	a	DRINK_DURATION
c	bve	net/minecraft/world/item/MinecartItem
	m	(Lbwy;)Lawh;	a	useOn
	f	Lho;	a	DISPENSE_ITEM_BEHAVIOR
	f	Lbpy$a;	b	type
c	bve$1	net/minecraft/world/item/MinecartItem$1
	m	(Lgk;)V	a	playSound
	m	(Lgk;Lbuw;)Lbuw;	a	execute
	f	Lhn;	c	defaultDispenseItemBehavior
c	bvf	net/minecraft/world/item/MobBucketItem
	m	(Ladw;Lbuw;Lgj;)V	a	spawn
	m	(Lboj;Lcav;Lbuw;Lgj;)V	a	checkExtraContent
	m	(Lboj;Lcaw;Lgj;)V	a	playEmptySound
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	f	Laxo;	a	type
	f	Lahj;	b	emptySound
c	bvg	net/minecraft/world/item/NameTagItem
	m	(Lbuw;Lboj;Laxy;Lawg;)Lawh;	a	interactLivingEntity
c	bvh	net/minecraft/world/item/PickaxeItem
c	bvi	net/minecraft/world/item/PlayerHeadItem
	m	(Lok;Lcom/mojang/authlib/GameProfile;)V	a	lambda$verifyTagAfterLoad$0
	m	(Lok;)V	b	verifyTagAfterLoad
	m	(Lbuw;)Lqk;	m	getName
	f	Ljava/lang/String;	b	TAG_SKULL_OWNER
c	bvj	net/minecraft/world/item/PotionItem
	m	()Lbuw;	P_	getDefaultInstance
	m	(Lbtm;Lgx;)V	a	fillItemCategory
	m	(Lbuw;Lcav;Laxy;)Lbuw;	a	finishUsingItem
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	(Lbuw;)I	b	getUseDuration
	m	(Lbuw;)Lbwl;	c	getUseAnimation
	m	(Lbuw;)Z	i	isFoil
	m	(Lbuw;)Ljava/lang/String;	j	getDescriptionId
	f	I	a	DRINK_DURATION
c	bvk	net/minecraft/world/item/ProjectileWeaponItem
	m	(Laxy;Ljava/util/function/Predicate;)Lbuw;	a	getHeldProjectile
	m	()Ljava/util/function/Predicate;	b	getAllSupportedProjectiles
	m	()I	c	getEnchantmentValue
	m	()I	d	getDefaultProjectileRange
	m	(Lbuw;)Z	d	lambda$static$1
	m	()Ljava/util/function/Predicate;	e	getSupportedHeldProjectiles
	m	(Lbuw;)Z	k	lambda$static$0
	f	Ljava/util/function/Predicate;	c	ARROW_ONLY
	f	Ljava/util/function/Predicate;	d	ARROW_OR_FIREWORK
c	bvl	net/minecraft/world/item/Rarity
	m	()[Lbvl;	a	$values
	f	Lbvl;	a	COMMON
	f	Lbvl;	b	UNCOMMON
	f	Lbvl;	c	RARE
	f	Lbvl;	d	EPIC
	f	Lp;	e	color
	f	[Lbvl;	f	$VALUES
c	bvm	net/minecraft/world/item/RecordItem
	m	(Lahj;)Lbvm;	a	getBySound
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lbwy;)Lawh;	a	useOn
	m	()I	i	getAnalogOutput
	m	()Lqq;	j	getDisplayName
	m	()Lahj;	y	getSound
	f	Ljava/util/Map;	a	BY_NAME
	f	I	b	analogOutput
	f	Lahj;	c	sound
c	bvn	net/minecraft/world/item/SaddleItem
	m	(Lbuw;Lboj;Laxy;Lawg;)Lawh;	a	interactLivingEntity
c	bvo	net/minecraft/world/item/ScaffoldingBlockItem
	m	(Lbww;)Lbww;	b	updatePlacementContext
	m	()Z	d	mustSurvive
c	bvp	net/minecraft/world/item/ServerItemCooldowns
	m	(Lbus;I)V	b	onCooldownStarted
	m	(Lbus;)V	c	onCooldownEnded
	f	Ladx;	a	player
c	bvq	net/minecraft/world/item/ShearsItem
	m	(Laxy;)V	a	lambda$mineBlock$0
	m	(Lbuw;Lcav;Lcov;Lgj;Laxy;)Z	a	mineBlock
	m	(Lbuw;Lcov;)F	a	getDestroySpeed
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lbwy;Lboj;)V	a	lambda$useOn$1
	m	(Lcov;)Z	a_	isCorrectToolForDrops
c	bvr	net/minecraft/world/item/ShieldItem
	m	(Lbuw;Lbuw;)Z	a	isValidRepairItem
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	(Lbuw;)I	b	getUseDuration
	m	(Lbuw;)Lbwl;	c	getUseAnimation
	m	(Lbuw;)Lbts;	d	getColor
	m	(Lbuw;)Ljava/lang/String;	j	getDescriptionId
	f	I	a	EFFECTIVE_BLOCK_DELAY
	f	F	b	MINIMUM_DURABILITY_DAMAGE
	f	Ljava/lang/String;	c	TAG_BASE_COLOR
c	bvs	net/minecraft/world/item/ShovelItem
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lbwy;Lboj;)V	a	lambda$useOn$0
	f	Ljava/util/Map;	a	FLATTENABLES
c	bvt	net/minecraft/world/item/SignItem
	m	(Lgj;Lcav;Lboj;Lbuw;Lcov;)Z	a	updateCustomBlockEntityTag
c	bvu	net/minecraft/world/item/SimpleFoiledItem
	m	(Lbuw;)Z	i	isFoil
c	bvv	net/minecraft/world/item/SnowballItem
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
c	bvw	net/minecraft/world/item/SolidBucketItem
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lboj;Lcav;Lgj;Ldpk;)Z	a	emptyContents
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lcov;)Lahj;	a	getPlaceSound
	f	Lahj;	b	placeSound
c	bvx	net/minecraft/world/item/SpawnEggItem
	m	(I)I	a	getColor
	m	(Laxo;)Lbvx;	a	byId
	m	(Lboj;Laya;Laxo;Ladw;Ldpo;Lbuw;)Ljava/util/Optional;	a	spawnOffspringFromSpawnEgg
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	(Lok;)Laxo;	a	getType
	m	(Lok;Laxo;)Z	a	spawnsEntity
	m	()Ljava/lang/Iterable;	i	eggs
	f	Ljava/util/Map;	a	BY_ID
	f	I	b	backgroundColor
	f	I	c	highlightColor
	f	Laxo;	d	defaultType
c	bvy	net/minecraft/world/item/SpectralArrowItem
	m	(Lcav;Lbuw;Laxy;)Lbon;	a	createArrow
c	bvz	net/minecraft/world/item/SplashPotionItem
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
c	bwa	net/minecraft/world/item/SpyglassItem
	m	(Laxy;)V	a	stopUsing
	m	(Lbuw;Lcav;Laxy;)Lbuw;	a	finishUsingItem
	m	(Lbuw;Lcav;Laxy;I)V	a	releaseUsing
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	(Lbuw;)I	b	getUseDuration
	m	(Lbuw;)Lbwl;	c	getUseAnimation
	f	I	a	USE_DURATION
	f	F	b	ZOOM_FOV_MODIFIER
c	bwb	net/minecraft/world/item/StandingAndWallBlockItem
	m	(Ljava/util/Map;Lbus;)V	a	registerBlocks
	m	(Lbww;)Lcov;	c	getPlacementState
	f	Lcdq;	c	wallBlock
c	bwc	net/minecraft/world/item/SuspiciousStewItem
	m	(Lbuw;Laxc;I)V	a	saveMobEffect
	m	(Lbuw;Lcav;Laxy;)Lbuw;	a	finishUsingItem
	f	Ljava/lang/String;	a	EFFECTS_TAG
	f	Ljava/lang/String;	b	EFFECT_ID_TAG
	f	Ljava/lang/String;	c	EFFECT_DURATION_TAG
c	bwd	net/minecraft/world/item/SwordItem
	m	(Laxp;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
	m	(Laxy;)V	a	lambda$mineBlock$1
	m	(Lbuw;Laxy;Laxy;)Z	a	hurtEnemy
	m	(Lbuw;Lcav;Lcov;Lgj;Laxy;)Z	a	mineBlock
	m	(Lbuw;Lcov;)F	a	getDestroySpeed
	m	(Lcov;Lcav;Lgj;Lboj;)Z	a	canAttackBlock
	m	(Lcov;)Z	a_	isCorrectToolForDrops
	m	(Laxy;)V	b	lambda$hurtEnemy$0
	m	()F	i	getDamage
	f	F	a	attackDamage
	f	Lcom/google/common/collect/Multimap;	b	defaultModifiers
c	bwe	net/minecraft/world/item/ThrowablePotionItem
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
c	bwf	net/minecraft/world/item/Tier
	m	()I	a	getUses
	m	()F	b	getSpeed
	m	()F	c	getAttackDamageBonus
	m	()I	d	getLevel
	m	()I	e	getEnchantmentValue
	m	()Lbxl;	f	getRepairIngredient
c	bwg	net/minecraft/world/item/TieredItem
	m	(Lbuw;Lbuw;)Z	a	isValidRepairItem
	m	()I	c	getEnchantmentValue
	m	()Lbwf;	j	getTier
	f	Lbwf;	a	tier
c	bwh	net/minecraft/world/item/Tiers
	m	()I	a	getUses
	m	()F	b	getSpeed
	m	()F	c	getAttackDamageBonus
	m	()I	d	getLevel
	m	()I	e	getEnchantmentValue
	m	()Lbxl;	f	getRepairIngredient
	m	()Lbxl;	g	lambda$static$5
	m	()Lbxl;	h	lambda$static$4
	m	()Lbxl;	i	lambda$static$3
	m	()Lbxl;	j	lambda$static$2
	m	()Lbxl;	k	lambda$static$1
	m	()Lbxl;	l	lambda$static$0
	m	()[Lbwh;	m	$values
	f	Lbwh;	a	WOOD
	f	Lbwh;	b	STONE
	f	Lbwh;	c	IRON
	f	Lbwh;	d	DIAMOND
	f	Lbwh;	e	GOLD
	f	Lbwh;	f	NETHERITE
	f	I	g	level
	f	I	h	uses
	f	F	i	speed
	f	F	j	damage
	f	I	k	enchantmentValue
	f	Lajg;	l	repairIngredient
	f	[Lbwh;	m	$VALUES
c	bwi	net/minecraft/world/item/TippedArrowItem
	m	()Lbuw;	P_	getDefaultInstance
	m	(Lbtm;Lgx;)V	a	fillItemCategory
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lbuw;)Ljava/lang/String;	j	getDescriptionId
c	bwj	net/minecraft/world/item/TooltipFlag
	m	()Z	a	isAdvanced
c	bwj$a	net/minecraft/world/item/TooltipFlag$Default
	m	()Z	a	isAdvanced
	m	()[Lbwj$a;	b	$values
	f	Lbwj$a;	a	NORMAL
	f	Lbwj$a;	b	ADVANCED
	f	Z	c	advanced
	f	[Lbwj$a;	d	$VALUES
c	bwk	net/minecraft/world/item/TridentItem
	m	(Laxp;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
	m	(Laxy;)V	a	lambda$mineBlock$2
	m	(Laxy;Lboj;)V	a	lambda$releaseUsing$0
	m	(Lbuw;Laxy;Laxy;)Z	a	hurtEnemy
	m	(Lbuw;Lcav;Laxy;I)V	a	releaseUsing
	m	(Lbuw;Lcav;Lcov;Lgj;Laxy;)Z	a	mineBlock
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	(Lcov;Lcav;Lgj;Lboj;)Z	a	canAttackBlock
	m	(Laxy;)V	b	lambda$hurtEnemy$1
	m	(Lbuw;)I	b	getUseDuration
	m	()I	c	getEnchantmentValue
	m	(Lbuw;)Lbwl;	c	getUseAnimation
	f	I	a	THROW_THRESHOLD_TIME
	f	F	b	BASE_DAMAGE
	f	F	c	SHOOT_POWER
	f	Lcom/google/common/collect/Multimap;	d	defaultModifiers
c	bwl	net/minecraft/world/item/UseAnim
	m	()[Lbwl;	a	$values
	f	Lbwl;	a	NONE
	f	Lbwl;	b	EAT
	f	Lbwl;	c	DRINK
	f	Lbwl;	d	BLOCK
	f	Lbwl;	e	BOW
	f	Lbwl;	f	SPEAR
	f	Lbwl;	g	CROSSBOW
	f	Lbwl;	h	SPYGLASS
	f	[Lbwl;	i	$VALUES
c	bwm	net/minecraft/world/item/Vanishable
c	bwn	net/minecraft/world/item/WaterLilyBlockItem
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
c	bwo	net/minecraft/world/item/Wearable
c	bwp	net/minecraft/world/item/WritableBookItem
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	(Lok;)Z	a	makeSureTagIsValid
c	bwq	net/minecraft/world/item/WrittenBookItem
	m	(Lbuw;Lcav;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lbuw;Ldm;Lboj;)Z	a	resolveBookComponents
	m	(Lbwy;)Lawh;	a	useOn
	m	(Lcav;Lboj;Lawg;)Lawi;	a	use
	m	(Ldm;Lboj;Ljava/lang/String;)Ljava/lang/String;	a	resolvePage
	m	(Lok;)Z	a	makeSureTagIsValid
	m	(Lbuw;)I	d	getGeneration
	m	(Lbuw;)Z	i	isFoil
	m	(Lbuw;)I	k	getPageCount
	m	(Lbuw;)Lqk;	m	getName
	f	I	a	TITLE_LENGTH
	f	I	b	TITLE_MAX_LENGTH
	f	I	c	PAGE_EDIT_LENGTH
	f	I	d	PAGE_LENGTH
	f	I	e	MAX_PAGES
	f	I	f	MAX_GENERATION
	f	Ljava/lang/String;	g	TAG_TITLE
	f	Ljava/lang/String;	h	TAG_FILTERED_TITLE
	f	Ljava/lang/String;	i	TAG_AUTHOR
	f	Ljava/lang/String;	j	TAG_PAGES
	f	Ljava/lang/String;	r	TAG_FILTERED_PAGES
	f	Ljava/lang/String;	s	TAG_GENERATION
	f	Ljava/lang/String;	t	TAG_RESOLVED
c	bwr	net/minecraft/world/item/alchemy/Potion
	m	()Ljava/util/List;	a	getEffects
	m	(Ljava/lang/String;)Lbwr;	a	byName
	m	()Z	b	hasInstantEffects
	m	(Ljava/lang/String;)Ljava/lang/String;	b	getName
	f	Ljava/lang/String;	a	name
	f	Lcom/google/common/collect/ImmutableList;	b	effects
c	bws	net/minecraft/world/item/alchemy/PotionBrewing
	m	()V	a	bootStrap
	m	(Lbus;)V	a	addContainer
	m	(Lbus;Lbus;Lbus;)V	a	addContainerRecipe
	m	(Lbuw;)Z	a	isIngredient
	m	(Lbuw;Lbuw;)Z	a	hasMix
	m	(Lbwr;)Z	a	isBrewablePotion
	m	(Lbwr;Lbus;Lbwr;)V	a	addMix
	m	(Lbuw;)Z	b	isContainerIngredient
	m	(Lbuw;Lbuw;)Z	b	hasContainerMix
	m	(Lbuw;)Z	c	isPotionIngredient
	m	(Lbuw;Lbuw;)Z	c	hasPotionMix
	m	(Lbuw;)Z	d	lambda$static$0
	m	(Lbuw;Lbuw;)Lbuw;	d	mix
	f	I	a	BREWING_TIME_SECONDS
	f	Ljava/util/List;	b	POTION_MIXES
	f	Ljava/util/List;	c	CONTAINER_MIXES
	f	Ljava/util/List;	d	ALLOWED_CONTAINERS
	f	Ljava/util/function/Predicate;	e	ALLOWED_CONTAINER
c	bws$a	net/minecraft/world/item/alchemy/PotionBrewing$Mix
	f	Ljava/lang/Object;	a	from
	f	Lbxl;	b	ingredient
	f	Ljava/lang/Object;	c	to
c	bwt	net/minecraft/world/item/alchemy/PotionUtils
	m	(Lbuw;)Ljava/util/List;	a	getMobEffects
	m	(Lbuw;Lbwr;)Lbuw;	a	setPotion
	m	(Lbuw;Ljava/util/Collection;)Lbuw;	a	setCustomEffects
	m	(Lbuw;Ljava/util/List;F)V	a	addPotionTooltip
	m	(Lbwr;)I	a	getColor
	m	(Lbwr;Ljava/util/Collection;)Ljava/util/List;	a	getAllEffects
	m	(Ljava/util/Collection;)I	a	getColor
	m	(Lok;)Ljava/util/List;	a	getAllEffects
	m	(Lok;Ljava/util/List;)V	a	getCustomEffects
	m	(Lbuw;)Ljava/util/List;	b	getCustomEffects
	m	(Lok;)Ljava/util/List;	b	getCustomEffects
	m	(Lbuw;)I	c	getColor
	m	(Lok;)Lbwr;	c	getPotion
	m	(Lbuw;)Lbwr;	d	getPotion
	f	Ljava/lang/String;	a	TAG_CUSTOM_POTION_EFFECTS
	f	Ljava/lang/String;	b	TAG_CUSTOM_POTION_COLOR
	f	Ljava/lang/String;	c	TAG_POTION
	f	I	d	EMPTY_COLOR
	f	Lqk;	e	NO_EFFECT
c	bwu	net/minecraft/world/item/alchemy/Potions
	m	(Ljava/lang/String;Lbwr;)Lbwr;	a	register
	f	Lbwr;	A	STRONG_HEALING
	f	Lbwr;	B	HARMING
	f	Lbwr;	C	STRONG_HARMING
	f	Lbwr;	D	POISON
	f	Lbwr;	E	LONG_POISON
	f	Lbwr;	F	STRONG_POISON
	f	Lbwr;	G	REGENERATION
	f	Lbwr;	H	LONG_REGENERATION
	f	Lbwr;	I	STRONG_REGENERATION
	f	Lbwr;	J	STRENGTH
	f	Lbwr;	K	LONG_STRENGTH
	f	Lbwr;	L	STRONG_STRENGTH
	f	Lbwr;	M	WEAKNESS
	f	Lbwr;	N	LONG_WEAKNESS
	f	Lbwr;	O	LUCK
	f	Lbwr;	P	SLOW_FALLING
	f	Lbwr;	Q	LONG_SLOW_FALLING
	f	Lbwr;	a	EMPTY
	f	Lbwr;	b	WATER
	f	Lbwr;	c	MUNDANE
	f	Lbwr;	d	THICK
	f	Lbwr;	e	AWKWARD
	f	Lbwr;	f	NIGHT_VISION
	f	Lbwr;	g	LONG_NIGHT_VISION
	f	Lbwr;	h	INVISIBILITY
	f	Lbwr;	i	LONG_INVISIBILITY
	f	Lbwr;	j	LEAPING
	f	Lbwr;	k	LONG_LEAPING
	f	Lbwr;	l	STRONG_LEAPING
	f	Lbwr;	m	FIRE_RESISTANCE
	f	Lbwr;	n	LONG_FIRE_RESISTANCE
	f	Lbwr;	o	SWIFTNESS
	f	Lbwr;	p	LONG_SWIFTNESS
	f	Lbwr;	q	STRONG_SWIFTNESS
	f	Lbwr;	r	SLOWNESS
	f	Lbwr;	s	LONG_SLOWNESS
	f	Lbwr;	t	STRONG_SLOWNESS
	f	Lbwr;	u	TURTLE_MASTER
	f	Lbwr;	v	LONG_TURTLE_MASTER
	f	Lbwr;	w	STRONG_TURTLE_MASTER
	f	Lbwr;	x	WATER_BREATHING
	f	Lbwr;	y	LONG_WATER_BREATHING
	f	Lbwr;	z	HEALING
c	bwv	net/minecraft/world/item/alchemy/package-info
c	bww	net/minecraft/world/item/context/BlockPlaceContext
	m	()Lgj;	a	getClickedPos
	m	(Lbww;Lgj;Lgo;)Lbww;	a	at
	m	()Z	b	canPlace
	m	()Z	c	replacingClickedOnBlock
	m	()Lgo;	d	getNearestLookingDirection
	m	()Lgo;	e	getNearestLookingVerticalDirection
	m	()[Lgo;	f	getNearestLookingDirections
	f	Z	a	replaceClicked
	f	Lgj;	b	relativePos
c	bwx	net/minecraft/world/item/context/DirectionalPlaceContext
	m	()Lgj;	a	getClickedPos
	m	()Z	b	canPlace
	m	()Z	c	replacingClickedOnBlock
	m	()Lgo;	d	getNearestLookingDirection
	m	()[Lgo;	f	getNearestLookingDirections
	m	()Lgo;	g	getHorizontalDirection
	m	()Z	h	isSecondaryUseActive
	m	()F	i	getRotation
	f	Lgo;	b	direction
c	bwx$1	net/minecraft/world/item/context/DirectionalPlaceContext$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	bwy	net/minecraft/world/item/context/UseOnContext
	m	()Lgj;	a	getClickedPos
	m	()Lgo;	g	getHorizontalDirection
	m	()Z	h	isSecondaryUseActive
	m	()F	i	getRotation
	m	()Ldpk;	j	getHitResult
	m	()Lgo;	k	getClickedFace
	m	()Ldpo;	l	getClickLocation
	m	()Z	m	isInside
	m	()Lbuw;	n	getItemInHand
	m	()Lboj;	o	getPlayer
	m	()Lawg;	p	getHand
	m	()Lcav;	q	getLevel
	f	Lboj;	a	player
	f	Lawg;	b	hand
	f	Ldpk;	c	hitResult
	f	Lcav;	d	level
	f	Lbuw;	e	itemStack
c	bwz	net/minecraft/world/item/context/package-info
c	bxa	net/minecraft/world/item/crafting/AbstractCookingRecipe
	m	()Lgx;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	()F	b	getExperience
	m	()Lbuw;	c	getResultItem
	m	()Ljava/lang/String;	d	getGroup
	m	()I	e	getCookingTime
	m	()Lyt;	f	getId
	m	()Lbxr;	g	getType
	f	Lbxr;	a	type
	f	Lyt;	b	id
	f	Ljava/lang/String;	c	group
	f	Lbxl;	d	ingredient
	f	Lbuw;	e	result
	f	F	f	experience
	f	I	g	cookingTime
c	bxb	net/minecraft/world/item/crafting/ArmorDyeRecipe
	m	()Lbxq;	T_	getSerializer
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbrd;)Lbuw;	a	assemble
	m	(Lbrd;Lcav;)Z	a	matches
c	bxc	net/minecraft/world/item/crafting/BannerDuplicateRecipe
	m	()Lbxq;	T_	getSerializer
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbrd;)Lbuw;	a	assemble
	m	(Lbrd;Lcav;)Z	a	matches
	m	(Lawa;)Lgx;	b	getRemainingItems
	m	(Lbrd;)Lgx;	b	getRemainingItems
c	bxd	net/minecraft/world/item/crafting/BlastingRecipe
	m	()Lbxq;	T_	getSerializer
	m	()Lbuw;	h	getToastSymbol
c	bxe	net/minecraft/world/item/crafting/BookCloningRecipe
	m	()Lbxq;	T_	getSerializer
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbrd;)Lbuw;	a	assemble
	m	(Lbrd;Lcav;)Z	a	matches
	m	(Lawa;)Lgx;	b	getRemainingItems
	m	(Lbrd;)Lgx;	b	getRemainingItems
c	bxf	net/minecraft/world/item/crafting/CampfireCookingRecipe
	m	()Lbxq;	T_	getSerializer
	m	()Lbuw;	h	getToastSymbol
c	bxg	net/minecraft/world/item/crafting/CraftingRecipe
	m	()Lbxr;	g	getType
c	bxh	net/minecraft/world/item/crafting/CustomRecipe
	m	()Z	S_	isSpecial
	m	()Lbuw;	c	getResultItem
	m	()Lyt;	f	getId
	f	Lyt;	a	id
c	bxi	net/minecraft/world/item/crafting/FireworkRocketRecipe
	m	()Lbxq;	T_	getSerializer
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbrd;)Lbuw;	a	assemble
	m	(Lbrd;Lcav;)Z	a	matches
	m	()Lbuw;	c	getResultItem
	f	Lbxl;	a	PAPER_INGREDIENT
	f	Lbxl;	b	GUNPOWDER_INGREDIENT
	f	Lbxl;	c	STAR_INGREDIENT
c	bxj	net/minecraft/world/item/crafting/FireworkStarFadeRecipe
	m	()Lbxq;	T_	getSerializer
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbrd;)Lbuw;	a	assemble
	m	(Lbrd;Lcav;)Z	a	matches
	f	Lbxl;	a	STAR_INGREDIENT
c	bxk	net/minecraft/world/item/crafting/FireworkStarRecipe
	m	()Lbxq;	T_	getSerializer
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbrd;)Lbuw;	a	assemble
	m	(Lbrd;Lcav;)Z	a	matches
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	()Lbuw;	c	getResultItem
	f	Lbxl;	a	SHAPE_INGREDIENT
	f	Lbxl;	b	TRAIL_INGREDIENT
	f	Lbxl;	c	FLICKER_INGREDIENT
	f	Ljava/util/Map;	d	SHAPE_BY_ITEM
	f	Lbxl;	e	GUNPOWDER_INGREDIENT
c	bxl	net/minecraft/world/item/crafting/Ingredient
	m	()[Lbuw;	a	getItems
	m	(I)[Lbuw;	a	lambda$dissolve$2
	m	(Laif;)Lbxl;	a	of
	m	(Lbuw;)Z	a	test
	m	(Lbxl$c;)Ljava/util/stream/Stream;	a	lambda$dissolve$1
	m	(Lcom/google/gson/JsonElement;)Lbxl;	a	fromJson
	m	(Lcom/google/gson/JsonObject;)Lbxl$c;	a	valueFromJson
	m	(Ljava/util/stream/Stream;)Lbxl;	a	of
	m	(Lpy;)V	a	toNetwork
	m	([Lbuw;)Lbxl;	a	of
	m	([Lcau;)Lbxl;	a	of
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	b	getStackingIds
	m	(I)[Lbxl$c;	b	lambda$new$0
	m	(Lbuw;)Z	b	lambda$of$3
	m	(Lcom/google/gson/JsonElement;)Lbxl$c;	b	lambda$fromJson$4
	m	(Ljava/util/stream/Stream;)Lbxl;	b	fromValues
	m	(Lpy;)Lbxl;	b	fromNetwork
	m	()Lcom/google/gson/JsonElement;	c	toJson
	m	()Z	d	isEmpty
	m	()Lbxl;	e	of
	m	()V	f	dissolve
	f	Lbxl;	a	EMPTY
	f	[Lbxl$c;	b	values
	f	[Lbuw;	c	itemStacks
	f	Lit/unimi/dsi/fastutil/ints/IntList;	d	stackingIds
c	bxl$a	net/minecraft/world/item/crafting/Ingredient$ItemValue
	m	()Ljava/util/Collection;	a	getItems
	m	()Lcom/google/gson/JsonObject;	b	serialize
	f	Lbuw;	a	item
c	bxl$b	net/minecraft/world/item/crafting/Ingredient$TagValue
	m	()Ljava/util/Collection;	a	getItems
	m	()Lcom/google/gson/JsonObject;	b	serialize
	f	Laif;	a	tag
c	bxl$c	net/minecraft/world/item/crafting/Ingredient$Value
	m	()Ljava/util/Collection;	a	getItems
	m	()Lcom/google/gson/JsonObject;	b	serialize
c	bxm	net/minecraft/world/item/crafting/MapCloningRecipe
	m	()Lbxq;	T_	getSerializer
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbrd;)Lbuw;	a	assemble
	m	(Lbrd;Lcav;)Z	a	matches
c	bxn	net/minecraft/world/item/crafting/MapExtendingRecipe
	m	()Z	S_	isSpecial
	m	()Lbxq;	T_	getSerializer
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbrd;)Lbuw;	a	assemble
	m	(Lbrd;Lcav;)Z	a	matches
c	bxo	net/minecraft/world/item/crafting/Recipe
	m	()Z	S_	isSpecial
	m	()Lbxq;	T_	getSerializer
	m	()Lgx;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbxl;)Z	a	lambda$isIncomplete$0
	m	(Lawa;)Lgx;	b	getRemainingItems
	m	()Lbuw;	c	getResultItem
	m	()Ljava/lang/String;	d	getGroup
	m	()Lyt;	f	getId
	m	()Lbxr;	g	getType
	m	()Lbuw;	h	getToastSymbol
	m	()Z	i	isIncomplete
c	bxp	net/minecraft/world/item/crafting/RecipeManager
	m	()Z	a	hadErrorsLoading
	m	(Lbxo;)Ljava/lang/String;	a	lambda$getRecipesFor$5
	m	(Lbxr;)Ljava/util/List;	a	getAllRecipesFor
	m	(Lbxr;Lawa;Lcav;)Ljava/util/Optional;	a	getRecipeFor
	m	(Lbxr;Lcav;Lawa;Lbxo;)Ljava/util/stream/Stream;	a	lambda$getRecipesFor$4
	m	(Ljava/lang/Iterable;)V	a	replaceRecipes
	m	(Ljava/lang/Object;Laga;Lasy;)V	a	apply
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$8
	m	(Ljava/util/Map$Entry;)Ljava/util/Map;	a	lambda$apply$1
	m	(Ljava/util/Map;)Ljava/util/stream/Stream;	a	lambda$getRecipeIds$7
	m	(Ljava/util/Map;Laga;Lasy;)V	a	apply
	m	(Ljava/util/Map;Lcom/google/common/collect/ImmutableMap$Builder;Lbxo;)V	a	lambda$replaceRecipes$10
	m	(Lyt;)Ljava/util/Optional;	a	byKey
	m	(Lyt;Lcom/google/gson/JsonObject;)Lbxo;	a	fromJson
	m	()Ljava/util/Collection;	b	getRecipes
	m	(Lbxo;)Lbxo;	b	lambda$getAllRecipesFor$3
	m	(Lbxr;)Ljava/util/Map;	b	byType
	m	(Lbxr;Lawa;Lcav;)Ljava/util/List;	b	getRecipesFor
	m	(Lbxr;Lcav;Lawa;Lbxo;)Ljava/util/stream/Stream;	b	lambda$getRecipeFor$2
	m	(Ljava/util/Map;)Ljava/util/stream/Stream;	b	lambda$getRecipes$6
	m	(Lbxr;)Ljava/util/Map;	c	lambda$replaceRecipes$9
	m	(Lbxr;Lawa;Lcav;)Lgx;	c	getRemainingItemsFor
	m	()Ljava/util/stream/Stream;	d	getRecipeIds
	m	(Lbxr;)Lcom/google/common/collect/ImmutableMap$Builder;	d	lambda$apply$0
	f	Lcom/google/gson/Gson;	a	GSON
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	recipes
	f	Ljava/util/Map;	d	byName
	f	Z	e	hasErrors
c	bxq	net/minecraft/world/item/crafting/RecipeSerializer
	m	(Ljava/lang/String;Lbxq;)Lbxq;	a	register
	m	(Lpy;Lbxo;)V	a	toNetwork
	m	(Lyt;Lcom/google/gson/JsonObject;)Lbxo;	a	fromJson
	m	(Lyt;Lpy;)Lbxo;	a	fromNetwork
	f	Lbxq;	a	SHAPED_RECIPE
	f	Lbxq;	b	SHAPELESS_RECIPE
	f	Lbxy;	c	ARMOR_DYE
	f	Lbxy;	d	BOOK_CLONING
	f	Lbxy;	e	MAP_CLONING
	f	Lbxy;	f	MAP_EXTENDING
	f	Lbxy;	g	FIREWORK_ROCKET
	f	Lbxy;	h	FIREWORK_STAR
	f	Lbxy;	i	FIREWORK_STAR_FADE
	f	Lbxy;	j	TIPPED_ARROW
	f	Lbxy;	k	BANNER_DUPLICATE
	f	Lbxy;	l	SHIELD_DECORATION
	f	Lbxy;	m	SHULKER_BOX_COLORING
	f	Lbxy;	n	SUSPICIOUS_STEW
	f	Lbxy;	o	REPAIR_ITEM
	f	Lbxx;	p	SMELTING_RECIPE
	f	Lbxx;	q	BLASTING_RECIPE
	f	Lbxx;	r	SMOKING_RECIPE
	f	Lbxx;	s	CAMPFIRE_COOKING_RECIPE
	f	Lbxq;	t	STONECUTTER
	f	Lbxq;	u	SMITHING
c	bxr	net/minecraft/world/item/crafting/RecipeType
	m	(Lbxo;Lcav;Lawa;)Ljava/util/Optional;	a	tryMatch
	m	(Ljava/lang/String;)Lbxr;	a	register
	f	Lbxr;	a	CRAFTING
	f	Lbxr;	b	SMELTING
	f	Lbxr;	c	BLASTING
	f	Lbxr;	d	SMOKING
	f	Lbxr;	e	CAMPFIRE_COOKING
	f	Lbxr;	f	STONECUTTING
	f	Lbxr;	g	SMITHING
c	bxr$1	net/minecraft/world/item/crafting/RecipeType$1
	f	Ljava/lang/String;	h	val$name
c	bxs	net/minecraft/world/item/crafting/RepairItemRecipe
	m	()Lbxq;	T_	getSerializer
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbrd;)Lbuw;	a	assemble
	m	(Lbrd;Lcav;)Z	a	matches
	m	(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lbyq;)V	a	lambda$assemble$0
c	bxt	net/minecraft/world/item/crafting/ShapedRecipe
	m	()Lbxq;	T_	getSerializer
	m	()Lgx;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbrd;)Lbuw;	a	assemble
	m	(Lbrd;IIZ)Z	a	matches
	m	(Lbrd;Lcav;)Z	a	matches
	m	(Lbxl;)Z	a	lambda$isIncomplete$1
	m	(Lcom/google/gson/JsonArray;)[Ljava/lang/String;	a	patternFromJson
	m	(Lcom/google/gson/JsonObject;)Lbuw;	a	itemStackFromJson
	m	(Ljava/lang/String;)I	a	firstNonSpace
	m	([Ljava/lang/String;)[Ljava/lang/String;	a	shrink
	m	([Ljava/lang/String;Ljava/util/Map;II)Lgx;	a	dissolvePattern
	m	(Lbxl;)Z	b	lambda$isIncomplete$0
	m	(Lcom/google/gson/JsonObject;)Lbus;	b	itemFromJson
	m	(Ljava/lang/String;)I	b	lastNonSpace
	m	()Lbuw;	c	getResultItem
	m	(Lcom/google/gson/JsonObject;)Ljava/util/Map;	c	keyFromJson
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	c	lambda$itemFromJson$2
	m	()Ljava/lang/String;	d	getGroup
	m	()Lyt;	f	getId
	m	()Z	i	isIncomplete
	m	()I	j	getWidth
	m	()I	k	getHeight
	f	I	a	width
	f	I	b	height
	f	Lgx;	c	recipeItems
	f	Lbuw;	d	result
	f	Lyt;	e	id
	f	Ljava/lang/String;	f	group
c	bxt$a	net/minecraft/world/item/crafting/ShapedRecipe$Serializer
	m	(Lpy;Lbxo;)V	a	toNetwork
	m	(Lpy;Lbxt;)V	a	toNetwork
	m	(Lyt;Lcom/google/gson/JsonObject;)Lbxo;	a	fromJson
	m	(Lyt;Lpy;)Lbxo;	a	fromNetwork
	m	(Lyt;Lcom/google/gson/JsonObject;)Lbxt;	b	fromJson
	m	(Lyt;Lpy;)Lbxt;	b	fromNetwork
c	bxu	net/minecraft/world/item/crafting/ShapelessRecipe
	m	()Lbxq;	T_	getSerializer
	m	()Lgx;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbrd;)Lbuw;	a	assemble
	m	(Lbrd;Lcav;)Z	a	matches
	m	()Lbuw;	c	getResultItem
	m	()Ljava/lang/String;	d	getGroup
	m	()Lyt;	f	getId
	f	Lyt;	a	id
	f	Ljava/lang/String;	b	group
	f	Lbuw;	c	result
	f	Lgx;	d	ingredients
c	bxu$a	net/minecraft/world/item/crafting/ShapelessRecipe$Serializer
	m	(Lcom/google/gson/JsonArray;)Lgx;	a	itemsFromJson
	m	(Lpy;Lbxo;)V	a	toNetwork
	m	(Lpy;Lbxu;)V	a	toNetwork
	m	(Lyt;Lcom/google/gson/JsonObject;)Lbxo;	a	fromJson
	m	(Lyt;Lpy;)Lbxo;	a	fromNetwork
	m	(Lyt;Lcom/google/gson/JsonObject;)Lbxu;	b	fromJson
	m	(Lyt;Lpy;)Lbxu;	b	fromNetwork
c	bxv	net/minecraft/world/item/crafting/ShieldDecorationRecipe
	m	()Lbxq;	T_	getSerializer
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbrd;)Lbuw;	a	assemble
	m	(Lbrd;Lcav;)Z	a	matches
c	bxw	net/minecraft/world/item/crafting/ShulkerBoxColoring
	m	()Lbxq;	T_	getSerializer
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbrd;)Lbuw;	a	assemble
	m	(Lbrd;Lcav;)Z	a	matches
c	bxx	net/minecraft/world/item/crafting/SimpleCookingSerializer
	m	(Ljava/lang/String;)Ljava/lang/IllegalStateException;	a	lambda$fromJson$0
	m	(Lpy;Lbxa;)V	a	toNetwork
	m	(Lpy;Lbxo;)V	a	toNetwork
	m	(Lyt;Lcom/google/gson/JsonObject;)Lbxo;	a	fromJson
	m	(Lyt;Lpy;)Lbxo;	a	fromNetwork
	m	(Lyt;Lcom/google/gson/JsonObject;)Lbxa;	b	fromJson
	m	(Lyt;Lpy;)Lbxa;	b	fromNetwork
	f	I	v	defaultCookingTime
	f	Lbxx$a;	w	factory
c	bxx$a	net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker
c	bxy	net/minecraft/world/item/crafting/SimpleRecipeSerializer
	m	(Lpy;Lbxo;)V	a	toNetwork
	m	(Lyt;Lcom/google/gson/JsonObject;)Lbxo;	a	fromJson
	m	(Lyt;Lpy;)Lbxo;	a	fromNetwork
	f	Ljava/util/function/Function;	v	constructor
c	bxz	net/minecraft/world/item/crafting/SingleItemRecipe
	m	()Lbxq;	T_	getSerializer
	m	()Lgx;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	()Lbuw;	c	getResultItem
	m	()Ljava/lang/String;	d	getGroup
	m	()Lyt;	f	getId
	m	()Lbxr;	g	getType
	f	Lbxl;	a	ingredient
	f	Lbuw;	b	result
	f	Lyt;	c	id
	f	Ljava/lang/String;	d	group
	f	Lbxr;	e	type
	f	Lbxq;	f	serializer
c	bxz$a	net/minecraft/world/item/crafting/SingleItemRecipe$Serializer
	m	(Lpy;Lbxo;)V	a	toNetwork
	m	(Lpy;Lbxz;)V	a	toNetwork
	m	(Lyt;Lcom/google/gson/JsonObject;)Lbxo;	a	fromJson
	m	(Lyt;Lpy;)Lbxo;	a	fromNetwork
	m	(Lyt;Lcom/google/gson/JsonObject;)Lbxz;	b	fromJson
	m	(Lyt;Lpy;)Lbxz;	b	fromNetwork
	f	Lbxz$a$a;	v	factory
c	bxz$a$a	net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker
c	bya	net/minecraft/world/item/crafting/SmeltingRecipe
	m	()Lbxq;	T_	getSerializer
	m	()Lbuw;	h	getToastSymbol
c	byb	net/minecraft/world/item/crafting/SmokingRecipe
	m	()Lbxq;	T_	getSerializer
	m	()Lbuw;	h	getToastSymbol
c	byc	net/minecraft/world/item/crafting/StonecutterRecipe
	m	(Lawa;Lcav;)Z	a	matches
	m	()Lbuw;	h	getToastSymbol
c	byd	net/minecraft/world/item/crafting/SuspiciousStewRecipe
	m	()Lbxq;	T_	getSerializer
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbrd;)Lbuw;	a	assemble
	m	(Lbrd;Lcav;)Z	a	matches
c	bye	net/minecraft/world/item/crafting/TippedArrowRecipe
	m	()Lbxq;	T_	getSerializer
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbrd;)Lbuw;	a	assemble
	m	(Lbrd;Lcav;)Z	a	matches
c	byf	net/minecraft/world/item/crafting/UpgradeRecipe
	m	()Lbxq;	T_	getSerializer
	m	(II)Z	a	canCraftInDimensions
	m	(Lawa;)Lbuw;	a	assemble
	m	(Lawa;Lcav;)Z	a	matches
	m	(Lbuw;)Z	a	isAdditionIngredient
	m	(Lbxl;)Z	a	lambda$isIncomplete$0
	m	()Lbuw;	c	getResultItem
	m	()Lyt;	f	getId
	m	()Lbxr;	g	getType
	m	()Lbuw;	h	getToastSymbol
	m	()Z	i	isIncomplete
	f	Lbxl;	a	base
	f	Lbxl;	b	addition
	f	Lbuw;	c	result
	f	Lyt;	d	id
c	byf$a	net/minecraft/world/item/crafting/UpgradeRecipe$Serializer
	m	(Lpy;Lbxo;)V	a	toNetwork
	m	(Lpy;Lbyf;)V	a	toNetwork
	m	(Lyt;Lcom/google/gson/JsonObject;)Lbxo;	a	fromJson
	m	(Lyt;Lpy;)Lbxo;	a	fromNetwork
	m	(Lyt;Lcom/google/gson/JsonObject;)Lbyf;	b	fromJson
	m	(Lyt;Lpy;)Lbyf;	b	fromNetwork
c	byg	net/minecraft/world/item/crafting/package-info
c	byh	net/minecraft/world/item/enchantment/ArrowDamageEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(I)I	b	getMaxCost
c	byi	net/minecraft/world/item/enchantment/ArrowFireEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(I)I	b	getMaxCost
c	byj	net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(Lbyq;)Z	a	checkCompatibility
	m	(I)I	b	getMaxCost
c	byk	net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(I)I	b	getMaxCost
c	byl	net/minecraft/world/item/enchantment/ArrowPiercingEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(Lbyq;)Z	a	checkCompatibility
	m	(I)I	b	getMaxCost
c	bym	net/minecraft/world/item/enchantment/BindingCurseEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
	m	()Z	c	isCurse
c	byn	net/minecraft/world/item/enchantment/DamageEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(ILayd;)F	a	getDamageBonus
	m	(Laxy;Laxk;I)V	a	doPostAttack
	m	(Lbuw;)Z	a	canEnchant
	m	(Lbyq;)Z	a	checkCompatibility
	m	(I)I	b	getMaxCost
	f	I	a	ALL
	f	I	b	UNDEAD
	f	I	c	ARTHROPODS
	f	I	d	type
	f	[Ljava/lang/String;	g	NAMES
	f	[I	h	MIN_COST
	f	[I	i	LEVEL_COST
	f	[I	j	LEVEL_COST_SPAN
c	byo	net/minecraft/world/item/enchantment/DigDurabilityEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(Lbuw;)Z	a	canEnchant
	m	(Lbuw;ILjava/util/Random;)Z	a	shouldIgnoreDurabilityDrop
	m	(I)I	b	getMaxCost
c	byp	net/minecraft/world/item/enchantment/DiggingEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(Lbuw;)Z	a	canEnchant
	m	(I)I	b	getMaxCost
c	byq	net/minecraft/world/item/enchantment/Enchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(ILawu;)I	a	getDamageProtection
	m	(ILayd;)F	a	getDamageBonus
	m	(Laxy;)Ljava/util/Map;	a	getSlotItems
	m	(Laxy;Laxk;I)V	a	doPostAttack
	m	(Lbuw;)Z	a	canEnchant
	m	(Lbyq;)Z	a	checkCompatibility
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
	m	(Laxy;Laxk;I)V	b	doPostHurt
	m	(Lbyq;)Z	b	isCompatibleWith
	m	()Z	c	isCurse
	m	(I)Lbyq;	c	byId
	m	()Lbyq$a;	d	getRarity
	m	(I)Lqk;	d	getFullname
	m	()I	e	getMinLevel
	m	()Ljava/lang/String;	f	getOrCreateDescriptionId
	m	()Ljava/lang/String;	g	getDescriptionId
	m	()Z	h	isTradeable
	m	()Z	i	isDiscoverable
	f	[Laxp;	a	slots
	f	Lbyq$a;	b	rarity
	f	Lbyr;	e	category
	f	Ljava/lang/String;	f	descriptionId
c	byq$a	net/minecraft/world/item/enchantment/Enchantment$Rarity
	m	()I	a	getWeight
	m	()[Lbyq$a;	b	$values
	f	Lbyq$a;	a	COMMON
	f	Lbyq$a;	b	UNCOMMON
	f	Lbyq$a;	c	RARE
	f	Lbyq$a;	d	VERY_RARE
	f	I	e	weight
	f	[Lbyq$a;	f	$VALUES
c	byr	net/minecraft/world/item/enchantment/EnchantmentCategory
	m	()[Lbyr;	a	$values
	m	(Lbus;)Z	a	canEnchant
	f	Lbyr;	a	ARMOR
	f	Lbyr;	b	ARMOR_FEET
	f	Lbyr;	c	ARMOR_LEGS
	f	Lbyr;	d	ARMOR_CHEST
	f	Lbyr;	e	ARMOR_HEAD
	f	Lbyr;	f	WEAPON
	f	Lbyr;	g	DIGGER
	f	Lbyr;	h	FISHING_ROD
	f	Lbyr;	i	TRIDENT
	f	Lbyr;	j	BREAKABLE
	f	Lbyr;	k	BOW
	f	Lbyr;	l	WEARABLE
	f	Lbyr;	m	CROSSBOW
	f	Lbyr;	n	VANISHABLE
	f	[Lbyr;	o	$VALUES
c	byr$1	net/minecraft/world/item/enchantment/EnchantmentCategory$1
	m	(Lbus;)Z	a	canEnchant
c	byr$2	net/minecraft/world/item/enchantment/EnchantmentCategory$10
	m	(Lbus;)Z	a	canEnchant
c	byr$3	net/minecraft/world/item/enchantment/EnchantmentCategory$11
	m	(Lbus;)Z	a	canEnchant
c	byr$4	net/minecraft/world/item/enchantment/EnchantmentCategory$12
	m	(Lbus;)Z	a	canEnchant
c	byr$5	net/minecraft/world/item/enchantment/EnchantmentCategory$13
	m	(Lbus;)Z	a	canEnchant
c	byr$6	net/minecraft/world/item/enchantment/EnchantmentCategory$14
	m	(Lbus;)Z	a	canEnchant
c	byr$7	net/minecraft/world/item/enchantment/EnchantmentCategory$2
	m	(Lbus;)Z	a	canEnchant
c	byr$8	net/minecraft/world/item/enchantment/EnchantmentCategory$3
	m	(Lbus;)Z	a	canEnchant
c	byr$9	net/minecraft/world/item/enchantment/EnchantmentCategory$4
	m	(Lbus;)Z	a	canEnchant
c	byr$10	net/minecraft/world/item/enchantment/EnchantmentCategory$5
	m	(Lbus;)Z	a	canEnchant
c	byr$11	net/minecraft/world/item/enchantment/EnchantmentCategory$6
	m	(Lbus;)Z	a	canEnchant
c	byr$12	net/minecraft/world/item/enchantment/EnchantmentCategory$7
	m	(Lbus;)Z	a	canEnchant
c	byr$13	net/minecraft/world/item/enchantment/EnchantmentCategory$8
	m	(Lbus;)Z	a	canEnchant
c	byr$14	net/minecraft/world/item/enchantment/EnchantmentCategory$9
	m	(Lbus;)Z	a	canEnchant
c	bys	net/minecraft/world/item/enchantment/EnchantmentHelper
	m	(ILbuw;Z)Ljava/util/List;	a	getAvailableEnchantmentResults
	m	(Laxy;)F	a	getSweepingDamageRatio
	m	(Laxy;Laxk;)V	a	doPostHurtEffects
	m	(Laxy;Laxk;Lbyq;I)V	a	lambda$doPostDamageEffects$5
	m	(Lbuw;)Ljava/util/Map;	a	getEnchantments
	m	(Lbuw;Layd;)F	a	getDamageBonus
	m	(Lbyq;)Lyt;	a	getEnchantmentId
	m	(Lbyq;Laxy;)I	a	getEnchantmentLevel
	m	(Lbyq;Laxy;Ljava/util/function/Predicate;)Ljava/util/Map$Entry;	a	getRandomItemWith
	m	(Lbyq;Lbuw;)I	a	getItemEnchantmentLevel
	m	(Lbys$a;Lbuw;)V	a	runIterationOnItem
	m	(Lbys$a;Ljava/lang/Iterable;)V	a	runIterationOnInventory
	m	(Lbys$a;Lok;Lbyq;)V	a	lambda$runIterationOnItem$1
	m	(Ljava/lang/Iterable;Lawu;)I	a	getDamageProtection
	m	(Ljava/util/Collection;Lbyq;)Z	a	isEnchantmentCompatible
	m	(Ljava/util/List;Lbyt;)V	a	filterCompatibleEnchantments
	m	(Ljava/util/Map;Lbuw;)V	a	setEnchantments
	m	(Ljava/util/Map;Lok;Lbyq;)V	a	lambda$deserializeEnchantments$0
	m	(Ljava/util/Random;IILbuw;)I	a	getEnchantmentCost
	m	(Ljava/util/Random;Lbuw;IZ)Lbuw;	a	enchantItem
	m	(Lok;)I	a	getEnchantmentLevel
	m	(Lok;I)V	a	setEnchantmentLevel
	m	(Loq;)Ljava/util/Map;	a	deserializeEnchantments
	m	(Lorg/apache/commons/lang3/mutable/MutableFloat;Layd;Lbyq;I)V	a	lambda$getDamageBonus$3
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Lawu;Lbyq;I)V	a	lambda$getDamageProtection$2
	m	(Lyt;I)Lok;	a	storeEnchantment
	m	(Laxy;)I	b	getKnockbackBonus
	m	(Laxy;Laxk;)V	b	doPostDamageEffects
	m	(Laxy;Laxk;Lbyq;I)V	b	lambda$doPostHurtEffects$4
	m	(Lbuw;)I	b	getFishingLuckBonus
	m	(Lbyq;Laxy;)Ljava/util/Map$Entry;	b	getRandomItemWith
	m	(Ljava/util/Random;Lbuw;IZ)Ljava/util/List;	b	selectEnchantment
	m	(Lok;)Lyt;	b	getEnchantmentId
	m	(Laxy;)I	c	getFireAspect
	m	(Lbuw;)I	c	getFishingSpeedBonus
	m	(Laxy;)I	d	getRespiration
	m	(Lbuw;)Z	d	hasBindingCurse
	m	(Laxy;)I	e	getDepthStrider
	m	(Lbuw;)Z	e	hasVanishingCurse
	m	(Laxy;)I	f	getBlockEfficiency
	m	(Lbuw;)I	f	getLoyalty
	m	(Laxy;)I	g	getMobLooting
	m	(Lbuw;)I	g	getRiptide
	m	(Laxy;)Z	h	hasAquaAffinity
	m	(Lbuw;)Z	h	hasChanneling
	m	(Laxy;)Z	i	hasFrostWalker
	m	(Lbuw;)Z	i	lambda$getRandomItemWith$6
	m	(Laxy;)Z	j	hasSoulSpeed
	f	Ljava/lang/String;	a	TAG_ENCH_ID
	f	Ljava/lang/String;	b	TAG_ENCH_LEVEL
c	bys$a	net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor
c	byt	net/minecraft/world/item/enchantment/EnchantmentInstance
	f	Lbyq;	a	enchantment
	f	I	b	level
c	byu	net/minecraft/world/item/enchantment/Enchantments
	m	(Ljava/lang/String;Lbyq;)Lbyq;	a	register
	f	Lbyq;	A	INFINITY_ARROWS
	f	Lbyq;	B	FISHING_LUCK
	f	Lbyq;	C	FISHING_SPEED
	f	Lbyq;	D	LOYALTY
	f	Lbyq;	E	IMPALING
	f	Lbyq;	F	RIPTIDE
	f	Lbyq;	G	CHANNELING
	f	Lbyq;	H	MULTISHOT
	f	Lbyq;	I	QUICK_CHARGE
	f	Lbyq;	J	PIERCING
	f	Lbyq;	K	MENDING
	f	Lbyq;	L	VANISHING_CURSE
	f	[Laxp;	M	ARMOR_SLOTS
	f	Lbyq;	a	ALL_DAMAGE_PROTECTION
	f	Lbyq;	b	FIRE_PROTECTION
	f	Lbyq;	c	FALL_PROTECTION
	f	Lbyq;	d	BLAST_PROTECTION
	f	Lbyq;	e	PROJECTILE_PROTECTION
	f	Lbyq;	f	RESPIRATION
	f	Lbyq;	g	AQUA_AFFINITY
	f	Lbyq;	h	THORNS
	f	Lbyq;	i	DEPTH_STRIDER
	f	Lbyq;	j	FROST_WALKER
	f	Lbyq;	k	BINDING_CURSE
	f	Lbyq;	l	SOUL_SPEED
	f	Lbyq;	m	SHARPNESS
	f	Lbyq;	n	SMITE
	f	Lbyq;	o	BANE_OF_ARTHROPODS
	f	Lbyq;	p	KNOCKBACK
	f	Lbyq;	q	FIRE_ASPECT
	f	Lbyq;	r	MOB_LOOTING
	f	Lbyq;	s	SWEEPING_EDGE
	f	Lbyq;	t	BLOCK_EFFICIENCY
	f	Lbyq;	u	SILK_TOUCH
	f	Lbyq;	v	UNBREAKING
	f	Lbyq;	w	BLOCK_FORTUNE
	f	Lbyq;	x	POWER_ARROWS
	f	Lbyq;	y	PUNCH_ARROWS
	f	Lbyq;	z	FLAMING_ARROWS
c	byv	net/minecraft/world/item/enchantment/FireAspectEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(I)I	b	getMaxCost
c	byw	net/minecraft/world/item/enchantment/FishingSpeedEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(I)I	b	getMaxCost
c	byx	net/minecraft/world/item/enchantment/FrostWalkerEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(Laxy;Lcav;Lgj;I)V	a	onEntityMoved
	m	(Lbyq;)Z	a	checkCompatibility
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
c	byy	net/minecraft/world/item/enchantment/KnockbackEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(I)I	b	getMaxCost
c	byz	net/minecraft/world/item/enchantment/LootBonusEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(Lbyq;)Z	a	checkCompatibility
	m	(I)I	b	getMaxCost
c	bza	net/minecraft/world/item/enchantment/MendingEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
c	bzb	net/minecraft/world/item/enchantment/MultiShotEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(Lbyq;)Z	a	checkCompatibility
	m	(I)I	b	getMaxCost
c	bzc	net/minecraft/world/item/enchantment/OxygenEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(I)I	b	getMaxCost
c	bzd	net/minecraft/world/item/enchantment/ProtectionEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(ILawu;)I	a	getDamageProtection
	m	(Laxy;D)D	a	getExplosionKnockbackAfterDampener
	m	(Laxy;I)I	a	getFireAfterDampener
	m	(Lbyq;)Z	a	checkCompatibility
	m	(I)I	b	getMaxCost
	f	Lbzd$a;	a	type
c	bzd$a	net/minecraft/world/item/enchantment/ProtectionEnchantment$Type
	m	()I	a	getMinCost
	m	()I	b	getLevelCost
	m	()[Lbzd$a;	c	$values
	f	Lbzd$a;	a	ALL
	f	Lbzd$a;	b	FIRE
	f	Lbzd$a;	c	FALL
	f	Lbzd$a;	d	EXPLOSION
	f	Lbzd$a;	e	PROJECTILE
	f	I	f	minCost
	f	I	g	levelCost
	f	[Lbzd$a;	h	$VALUES
c	bze	net/minecraft/world/item/enchantment/QuickChargeEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(I)I	b	getMaxCost
c	bzf	net/minecraft/world/item/enchantment/SoulSpeedEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
	m	()Z	h	isTradeable
	m	()Z	i	isDiscoverable
c	bzg	net/minecraft/world/item/enchantment/SweepingEdgeEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(I)I	b	getMaxCost
	m	(I)F	e	getSweepingDamageRatio
c	bzh	net/minecraft/world/item/enchantment/ThornsEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(ILjava/util/Random;)Z	a	shouldHit
	m	(Lbuw;)Z	a	canEnchant
	m	(Ljava/util/Map$Entry;Laxy;)V	a	lambda$doPostHurt$0
	m	(I)I	b	getMaxCost
	m	(ILjava/util/Random;)I	b	getDamage
	m	(Laxy;Laxk;I)V	b	doPostHurt
	f	F	a	CHANCE_PER_LEVEL
c	bzi	net/minecraft/world/item/enchantment/TridentChannelingEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(I)I	b	getMaxCost
c	bzj	net/minecraft/world/item/enchantment/TridentImpalerEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(ILayd;)F	a	getDamageBonus
	m	(I)I	b	getMaxCost
c	bzk	net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(I)I	b	getMaxCost
c	bzl	net/minecraft/world/item/enchantment/TridentRiptideEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(Lbyq;)Z	a	checkCompatibility
	m	(I)I	b	getMaxCost
c	bzm	net/minecraft/world/item/enchantment/UntouchingEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(Lbyq;)Z	a	checkCompatibility
	m	(I)I	b	getMaxCost
c	bzn	net/minecraft/world/item/enchantment/VanishingCurseEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
	m	()Z	c	isCurse
c	bzo	net/minecraft/world/item/enchantment/WaterWalkerEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(Lbyq;)Z	a	checkCompatibility
	m	(I)I	b	getMaxCost
c	bzp	net/minecraft/world/item/enchantment/WaterWorkerEnchantment
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
	m	(I)I	b	getMaxCost
c	bzq	net/minecraft/world/item/enchantment/package-info
c	bzr	net/minecraft/world/item/package-info
c	bzs	net/minecraft/world/item/trading/Merchant
	m	(ILboi;Lboj;)Lbqp;	a	lambda$openTradingScreen$0
	m	(Lboj;Lqk;I)V	a	openTradingScreen
	m	(Lbzt;)V	a	notifyTrade
	m	(Lbzu;)V	a	overrideOffers
	m	(Lboj;)V	f	setTradingPlayer
	m	()Lbzu;	fB	getOffers
	m	()Z	fC	showProgressBar
	m	()Lahj;	fD	getNotifyTradeSound
	m	()Z	fI	isClientSide
	m	()Z	fN	canRestock
	m	()Lboj;	fz	getTradingPlayer
	m	(Lbuw;)V	m	notifyTradeUpdated
	m	(I)V	s	overrideXp
	m	()I	t	getVillagerXp
c	bzt	net/minecraft/world/item/trading/MerchantOffer
	m	()Lbuw;	a	getBaseCostA
	m	(I)V	a	addToSpecialPriceDiff
	m	(Lbuw;Lbuw;)Z	a	satisfiedBy
	m	()Lbuw;	b	getCostA
	m	(I)V	b	setSpecialPriceDiff
	m	(Lbuw;Lbuw;)Z	b	take
	m	()Lbuw;	c	getCostB
	m	(Lbuw;Lbuw;)Z	c	isRequiredItem
	m	()Lbuw;	d	getResult
	m	()V	e	updateDemand
	m	()Lbuw;	f	assemble
	m	()I	g	getUses
	m	()V	h	resetUses
	m	()I	i	getMaxUses
	m	()V	j	increaseUses
	m	()I	k	getDemand
	m	()V	l	resetSpecialPriceDiff
	m	()I	m	getSpecialPriceDiff
	m	()F	n	getPriceMultiplier
	m	()I	o	getXp
	m	()Z	p	isOutOfStock
	m	()V	q	setToOutOfStock
	m	()Z	r	needsRestock
	m	()Z	s	shouldRewardExp
	m	()Lok;	t	createTag
	f	Lbuw;	a	baseCostA
	f	Lbuw;	b	costB
	f	Lbuw;	c	result
	f	I	d	uses
	f	I	e	maxUses
	f	Z	f	rewardExp
	f	I	g	specialPriceDiff
	f	I	h	demand
	f	F	i	priceMultiplier
	f	I	j	xp
c	bzu	net/minecraft/world/item/trading/MerchantOffers
	m	()Lok;	a	createTag
	m	(Lbuw;Lbuw;I)Lbzt;	a	getRecipeFor
	m	(Lpy;)V	a	writeToStream
	m	(Lpy;)Lbzu;	b	createFromStream
c	bzv	net/minecraft/world/item/trading/package-info
c	bzw	net/minecraft/world/level/BaseCommandBlock
	m	()Z	G_	shouldInformAdmins
	m	(I)V	a	setSuccessCount
	m	(Lboj;)Lawh;	a	usedBy
	m	(Lcav;)Z	a	performCommand
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$performCommand$0
	m	(Ljava/lang/String;)V	a	setCommand
	m	(Lok;)Lok;	a	save
	m	(Lqk;)V	a	setName
	m	(Lqk;Ljava/util/UUID;)V	a	sendMessage
	m	(Z)V	a	setTrackOutput
	m	(Lok;)V	b	load
	m	(Lqk;)V	b	setLastOutput
	m	()Ladw;	e	getLevel
	m	()V	f	onUpdated
	m	()Ldpo;	g	getPosition
	m	()Ljava/lang/String;	h	lambda$performCommand$1
	m	()Ldm;	i	createCommandSourceStack
	m	()Z	i_	acceptsSuccess
	m	()I	j	getSuccessCount
	m	()Z	j_	acceptsFailure
	m	()Lqk;	k	getLastOutput
	m	()Ljava/lang/String;	l	getCommand
	m	()Lqk;	m	getName
	m	()Z	n	isTrackOutput
	f	Ljava/text/SimpleDateFormat;	b	TIME_FORMAT
	f	Lqk;	c	DEFAULT_NAME
	f	J	d	lastExecution
	f	Z	e	updateLastExecution
	f	I	f	successCount
	f	Z	g	trackOutput
	f	Lqk;	h	lastOutput
	f	Ljava/lang/String;	i	command
	f	Lqk;	j	name
c	bzx	net/minecraft/world/level/BaseSpawner
	m	()D	a	getSpin
	m	(DDDLaxk;)Laxk;	a	lambda$serverTick$0
	m	(Ladw;Lgj;)V	a	serverTick
	m	(Laxo;)V	a	setEntityId
	m	(Lcav;)Laxk;	a	getOrCreateDisplayEntity
	m	(Lcav;I)Z	a	onEventTriggered
	m	(Lcav;Lgj;)V	a	clientTick
	m	(Lcav;Lgj;I)V	a	broadcastEvent
	m	(Lcav;Lgj;Lauu$b;)V	a	lambda$load$5
	m	(Lcav;Lgj;Lcbl;)V	a	setNextSpawnData
	m	(Lcav;Lgj;Lok;)V	a	load
	m	(Ljava/lang/String;)V	a	lambda$load$4
	m	(Lok;)Lok;	a	save
	m	()D	b	getoSpin
	m	(Lcav;Lgj;)Z	b	isNearPlayer
	m	(Lcav;Lgj;Lauu$b;)V	b	lambda$delay$1
	m	(Ljava/lang/String;)V	b	lambda$load$3
	m	()Ljava/lang/IllegalStateException;	c	lambda$save$6
	m	(Lcav;Lgj;)V	c	delay
	m	(Ljava/lang/String;)V	c	lambda$load$2
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	EVENT_SPAWN
	f	I	c	spawnDelay
	f	Laus;	d	spawnPotentials
	f	Lcbl;	e	nextSpawnData
	f	D	f	spin
	f	D	g	oSpin
	f	I	h	minSpawnDelay
	f	I	i	maxSpawnDelay
	f	I	j	spawnCount
	f	Laxk;	k	displayEntity
	f	I	l	maxNearbyEntities
	f	I	m	requiredPlayerRange
	f	I	n	spawnRange
	f	Ljava/util/Random;	o	random
c	bzy	net/minecraft/world/level/BlockAndTintGetter
	m	(Lcbe;Lgj;)I	a	getBrightness
	m	(Lgj;Lcag;)I	a	getBlockTint
	m	(Lgo;Z)F	a	getShade
	m	(Lgj;I)I	b	getRawBrightness
	m	(Lgj;)Z	g	canSeeSky
	m	()Ldio;	l_	getLightEngine
c	bzz	net/minecraft/world/level/BlockCollisions
	m	()Ldqh;	a	computeNext
	m	(II)Lcab;	a	getChunk
	f	Ldpj;	a	box
	f	Ldpt;	b	context
	f	Lgm;	c	cursor
	f	Lgj$a;	d	pos
	f	Ldqh;	e	entityShape
	f	Lcaf;	f	collisionGetter
	f	Z	g	onlySuffocatingBlocks
	f	Lcab;	h	cachedBlockGetter
	f	J	i	cachedBlockGetterPos
c	caa	net/minecraft/world/level/BlockEventData
	m	()Lgj;	a	pos
	m	()Lcdq;	b	block
	m	()I	c	paramA
	m	()I	d	paramB
	f	Lgj;	a	pos
	f	Lcdq;	b	block
	f	I	c	paramA
	f	I	d	paramB
c	cab	net/minecraft/world/level/BlockGetter
	m	()I	N	getMaxLightLevel
	m	(Lcad;)Ldpk;	a	isBlockInLine
	m	(Lcad;Lgj;)Ldpk;	a	lambda$isBlockInLine$0
	m	(Lcae;)Ldpk;	a	clip
	m	(Lcae;Lgj;)Ldpk;	a	lambda$clip$2
	m	(Ldpj;)Ljava/util/stream/Stream;	a	getBlockStates
	m	(Ldpo;Ldpo;Lgj;Ldqh;Lcov;)Ldpk;	a	clipWithInteractionOverride
	m	(Ldpo;Ldpo;Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object;	a	traverseBlocks
	m	(Ldqh;Ljava/util/function/Supplier;)D	a	getBlockFloorHeight
	m	(Lgj;Lcmt;)Ljava/util/Optional;	a	getBlockEntity
	m	(Lgj;)Lcov;	a_	getBlockState
	m	(Lcad;)Ldpk;	b	lambda$isBlockInLine$1
	m	(Lcae;)Ldpk;	b	lambda$clip$3
	m	(Lgj;)Ldix;	b_	getFluidState
	m	(Lgj;)Lcmr;	c_	getBlockEntity
	m	(Lgj;)Ldqh;	f	lambda$getBlockFloorHeight$4
	m	(Lgj;)I	h	getLightEmission
	m	(Lgj;)D	i	getBlockFloorHeight
c	cac	net/minecraft/world/level/ChunkPos
	m	()J	a	toLong
	m	(I)I	a	getBlockX
	m	(II)J	a	asLong
	m	(III)Lgj;	a	getBlockAt
	m	(J)I	a	getX
	m	(Lcac;)I	a	getChessboardDistance
	m	(Lcac;I)Ljava/util/stream/Stream;	a	rangeClosed
	m	(Lcac;Lcac;)Ljava/util/stream/Stream;	a	rangeClosed
	m	(Lgj;)J	a	asLong
	m	()I	b	getMiddleBlockX
	m	(I)I	b	getBlockZ
	m	(J)I	b	getZ
	m	()I	c	getMiddleBlockZ
	m	(I)Lgj;	c	getMiddleBlockPosition
	m	()I	d	getMinBlockX
	m	()I	e	getMinBlockZ
	m	()I	f	getMaxBlockX
	m	()I	g	getMaxBlockZ
	m	()I	h	getRegionX
	m	()I	i	getRegionZ
	m	()I	j	getRegionLocalX
	m	()I	k	getRegionLocalZ
	m	()Lgj;	l	getWorldPosition
	f	J	a	INVALID_CHUNK_POS
	f	Lcac;	b	ZERO
	f	I	c	x
	f	I	d	z
	f	I	e	SAFETY_MARGIN
	f	J	f	COORD_BITS
	f	J	g	COORD_MASK
	f	I	h	REGION_BITS
	f	I	i	REGION_MASK
	f	I	j	HASH_A
	f	I	k	HASH_C
	f	I	l	HASH_Z_XOR
c	cac$1	net/minecraft/world/level/ChunkPos$1
	f	Lcac;	a	val$from
	f	Lcac;	b	val$to
	f	I	c	val$zDiff
	f	I	d	val$xDiff
	f	Lcac;	e	pos
c	cad	net/minecraft/world/level/ClipBlockStateContext
	m	()Ldpo;	a	getTo
	m	()Ldpo;	b	getFrom
	m	()Ljava/util/function/Predicate;	c	isTargetBlock
	f	Ldpo;	a	from
	f	Ldpo;	b	to
	f	Ljava/util/function/Predicate;	c	block
c	cae	net/minecraft/world/level/ClipContext
	m	()Ldpo;	a	getTo
	m	(Lcov;Lcab;Lgj;)Ldqh;	a	getBlockShape
	m	(Ldix;Lcab;Lgj;)Ldqh;	a	getFluidShape
	m	()Ldpo;	b	getFrom
	f	Ldpo;	a	from
	f	Ldpo;	b	to
	f	Lcae$a;	c	block
	f	Lcae$b;	d	fluid
	f	Ldpt;	e	collisionContext
c	cae$a	net/minecraft/world/level/ClipContext$Block
	m	()[Lcae$a;	a	$values
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	lambda$static$0
	f	Lcae$a;	a	COLLIDER
	f	Lcae$a;	b	OUTLINE
	f	Lcae$a;	c	VISUAL
	f	Lcae$a;	d	FALLDAMAGE_RESETTING
	f	Lcae$c;	e	shapeGetter
	f	[Lcae$a;	f	$VALUES
c	cae$b	net/minecraft/world/level/ClipContext$Fluid
	m	()[Lcae$b;	a	$values
	m	(Ldix;)Z	a	canPick
	m	(Ldix;)Z	b	lambda$static$2
	m	(Ldix;)Z	c	lambda$static$1
	m	(Ldix;)Z	d	lambda$static$0
	f	Lcae$b;	a	NONE
	f	Lcae$b;	b	SOURCE_ONLY
	f	Lcae$b;	c	ANY
	f	Lcae$b;	d	WATER
	f	Ljava/util/function/Predicate;	e	canPick
	f	[Lcae$b;	f	$VALUES
c	cae$c	net/minecraft/world/level/ClipContext$ShapeGetter
c	caf	net/minecraft/world/level/CollisionGetter
	m	(DDDLdpj;)Ldpj;	a	lambda$findFreePosition$3
	m	(Laxk;Ldpj;)Z	a	noCollision
	m	(Laxk;Ldqh;)Z	a	isUnobstructed
	m	(Laxk;Ldqh;Ldpo;DDD)Ljava/util/Optional;	a	findFreePosition
	m	(Lcov;Lgj;Ldpt;)Z	a	isUnobstructed
	m	(Ldqh;)Ljava/util/stream/Stream;	a	lambda$findFreePosition$2
	m	(Laxk;Ldpj;)Ljava/util/List;	b	getEntityCollisions
	m	(Ldpj;)Z	b	noCollision
	m	(Ldqh;)Z	b	lambda$findFreePosition$1
	m	(II)Lcab;	c	getChunkForCollisions
	m	(Laxk;Ldpj;)Ljava/lang/Iterable;	c	getCollisions
	m	(Laxk;Ldpj;)Ljava/lang/Iterable;	d	getBlockCollisions
	m	(Laxk;Ldpj;)Z	e	collidesWithSuffocatingBlock
	m	(Laxk;)Z	f	isUnobstructed
	m	(Laxk;Ldpj;)Ldqh;	f	borderCollision
	m	(Laxk;)Z	g	noCollision
	m	(Laxk;Ldpj;)Ljava/util/Iterator;	g	lambda$getBlockCollisions$0
	m	()Lcql;	p_	getWorldBorder
c	cag	net/minecraft/world/level/ColorResolver
c	cah	net/minecraft/world/level/CommonLevelAccessor
	m	(Laxk;Ldqh;)Z	a	isUnobstructed
	m	(Lctw$a;Lgj;)Lgj;	a	getHeightmapPos
	m	(Lgj;Lcmt;)Ljava/util/Optional;	a	getBlockEntity
	m	(Laxk;Ldpj;)Ljava/util/List;	b	getEntityCollisions
	m	()Lhc;	s	registryAccess
c	cai	net/minecraft/world/level/CustomSpawner
	m	(Ladw;ZZ)I	a	tick
c	caj	net/minecraft/world/level/DataPackConfig
	m	()Ljava/util/List;	a	getEnabled
	m	(Lcaj;)Ljava/util/List;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	()Ljava/util/List;	b	getDisabled
	m	(Lcaj;)Ljava/util/List;	b	lambda$static$0
	f	Lcaj;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/List;	c	enabled
	f	Ljava/util/List;	d	disabled
c	cak	net/minecraft/world/level/EmptyBlockGetter
	m	()[Lcak;	a	$values
	m	(Lgj;)Lcov;	a_	getBlockState
	m	(Lgj;)Ldix;	b_	getFluidState
	m	(Lgj;)Lcmr;	c_	getBlockEntity
	m	()I	u_	getMinBuildHeight
	m	()I	v_	getHeight
	f	Lcak;	a	INSTANCE
	f	[Lcak;	b	$VALUES
c	cal	net/minecraft/world/level/EntityBasedExplosionDamageCalculator
	m	(Lcan;Lcab;Lgj;Lcov;F)Z	a	shouldBlockExplode
	m	(Lcan;Lcab;Lgj;Lcov;Ldix;)Ljava/util/Optional;	a	getBlockExplosionResistance
	m	(Lcan;Lcab;Lgj;Lcov;Ldix;Ljava/lang/Float;)Ljava/lang/Float;	a	lambda$getBlockExplosionResistance$0
	f	Laxk;	a	source
c	cam	net/minecraft/world/level/EntityGetter
	m	(DDDD)Z	a	hasNearbyAlivePlayer
	m	(DDDDLjava/util/function/Predicate;)Lboj;	a	getNearestPlayer
	m	(DDDDZ)Lboj;	a	getNearestPlayer
	m	(Laxk;D)Lboj;	a	getNearestPlayer
	m	(Laxk;Ldpj;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	(Laxk;Ldqh;)Z	a	isUnobstructed
	m	(Laxy;)Z	a	lambda$getNearbyEntities$1
	m	(Lbhf;DDD)Lboj;	a	getNearestPlayer
	m	(Lbhf;Laxy;)Lboj;	a	getNearestPlayer
	m	(Lbhf;Laxy;DDD)Lboj;	a	getNearestPlayer
	m	(Lbhf;Laxy;Ldpj;)Ljava/util/List;	a	getNearbyPlayers
	m	(Lcsn;Ldpj;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	(Ljava/lang/Class;Lbhf;Laxy;DDDLdpj;)Laxy;	a	getNearestEntity
	m	(Ljava/lang/Class;Lbhf;Laxy;Ldpj;)Ljava/util/List;	a	getNearbyEntities
	m	(Ljava/lang/Class;Ldpj;)Ljava/util/List;	a	getEntitiesOfClass
	m	(Ljava/lang/Class;Ldpj;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntitiesOfClass
	m	(Ljava/util/List;Lbhf;Laxy;DDD)Laxy;	a	getNearestEntity
	m	(Laxk;Ldpj;)Ljava/util/List;	a_	getEntities
	m	(Laxk;Ldpj;)Ljava/util/List;	b	getEntityCollisions
	m	(Laxy;)Z	b	lambda$getNearestEntity$0
	m	(Ljava/util/UUID;)Lboj;	b	getPlayerByUUID
	m	()Ljava/util/List;	y	players
c	can	net/minecraft/world/level/Explosion
	m	()V	a	explode
	m	(Laxk;)Lcao;	a	makeDamageCalculator
	m	(Ldpo;Laxk;)F	a	getSeenPercent
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lbuw;Lgj;)V	a	addBlockDrops
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lgj;Lbuw;)V	a	lambda$finalizeExplosion$0
	m	(Z)V	a	finalizeExplosion
	m	()Lawu;	b	getDamageSource
	m	()Ljava/util/Map;	c	getHitPlayers
	m	()Laxy;	d	getSourceMob
	m	()V	e	clearToBlow
	m	()Ljava/util/List;	f	getToBlow
	f	Lcao;	a	EXPLOSION_DAMAGE_CALCULATOR
	f	I	b	MAX_DROPS_PER_COMBINED_STACK
	f	Z	c	fire
	f	Lcan$a;	d	blockInteraction
	f	Ljava/util/Random;	e	random
	f	Lcav;	f	level
	f	D	g	x
	f	D	h	y
	f	D	i	z
	f	Laxk;	j	source
	f	F	k	radius
	f	Lawu;	l	damageSource
	f	Lcao;	m	damageCalculator
	f	Ljava/util/List;	n	toBlow
	f	Ljava/util/Map;	o	hitPlayers
c	can$a	net/minecraft/world/level/Explosion$BlockInteraction
	m	()[Lcan$a;	a	$values
	f	Lcan$a;	a	NONE
	f	Lcan$a;	b	BREAK
	f	Lcan$a;	c	DESTROY
	f	[Lcan$a;	d	$VALUES
c	cao	net/minecraft/world/level/ExplosionDamageCalculator
	m	(Lcan;Lcab;Lgj;Lcov;F)Z	a	shouldBlockExplode
	m	(Lcan;Lcab;Lgj;Lcov;Ldix;)Ljava/util/Optional;	a	getBlockExplosionResistance
c	cap	net/minecraft/world/level/FoliageColor
	m	()I	a	getEvergreenColor
	m	(DD)I	a	get
	m	([I)V	a	init
	m	()I	b	getBirchColor
	m	()I	c	getDefaultColor
	f	[I	a	pixels
c	caq	net/minecraft/world/level/ForcedChunksSavedData
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getChunks
	m	(Lok;)Lok;	a	save
	m	(Lok;)Lcaq;	b	load
	f	Ljava/lang/String;	a	FILE_ID
	f	Ljava/lang/String;	b	TAG_FORCED
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	c	chunks
c	car	net/minecraft/world/level/GameRules
	m	()Lok;	a	createTag
	m	(Lcar$c;)V	a	visitGameRuleTypes
	m	(Lcar$c;Lcar$e;Lcar$f;)V	a	callVisitorCap
	m	(Lcar$e;)Lcar$g;	a	getRule
	m	(Lcar$e;Lcar;Lnet/minecraft/server/MinecraftServer;)V	a	assignCap
	m	(Lcar;Lnet/minecraft/server/MinecraftServer;)V	a	assignFrom
	m	(Lcar;Lnet/minecraft/server/MinecraftServer;Lcar$e;)V	a	lambda$assignFrom$8
	m	(Lcom/mojang/serialization/DynamicLike;)V	a	loadFromTag
	m	(Lcom/mojang/serialization/DynamicLike;Lcar$e;Lcar$g;)V	a	lambda$loadFromTag$5
	m	(Ljava/lang/String;Lcar$b;Lcar$f;)Lcar$e;	a	register
	m	(Ljava/util/Map$Entry;)Lcar$g;	a	lambda$copy$6
	m	(Lnet/minecraft/server/MinecraftServer;Lcar$a;)V	a	lambda$static$2
	m	(Lok;Lcar$e;Lcar$g;)V	a	lambda$createTag$4
	m	()Lcar;	b	copy
	m	(Lcar$c;Lcar$e;Lcar$f;)V	b	lambda$visitGameRuleTypes$7
	m	(Lcar$e;)Z	b	getBoolean
	m	(Ljava/util/Map$Entry;)Lcar$g;	b	lambda$new$3
	m	(Lnet/minecraft/server/MinecraftServer;Lcar$a;)V	b	lambda$static$1
	m	(Lcar$e;)I	c	getInt
	m	(Lcar$e;)Ljava/lang/String;	d	lambda$static$0
	f	Lcar$e;	A	RULE_DO_IMMEDIATE_RESPAWN
	f	Lcar$e;	B	RULE_DROWNING_DAMAGE
	f	Lcar$e;	C	RULE_FALL_DAMAGE
	f	Lcar$e;	D	RULE_FIRE_DAMAGE
	f	Lcar$e;	E	RULE_FREEZE_DAMAGE
	f	Lcar$e;	F	RULE_DO_PATROL_SPAWNING
	f	Lcar$e;	G	RULE_DO_TRADER_SPAWNING
	f	Lcar$e;	H	RULE_FORGIVE_DEAD_PLAYERS
	f	Lcar$e;	I	RULE_UNIVERSAL_ANGER
	f	Lcar$e;	J	RULE_PLAYERS_SLEEPING_PERCENTAGE
	f	Lorg/slf4j/Logger;	K	LOGGER
	f	Ljava/util/Map;	L	GAME_RULE_TYPES
	f	Ljava/util/Map;	M	rules
	f	I	a	DEFAULT_RANDOM_TICK_SPEED
	f	Lcar$e;	b	RULE_DOFIRETICK
	f	Lcar$e;	c	RULE_MOBGRIEFING
	f	Lcar$e;	d	RULE_KEEPINVENTORY
	f	Lcar$e;	e	RULE_DOMOBSPAWNING
	f	Lcar$e;	f	RULE_DOMOBLOOT
	f	Lcar$e;	g	RULE_DOBLOCKDROPS
	f	Lcar$e;	h	RULE_DOENTITYDROPS
	f	Lcar$e;	i	RULE_COMMANDBLOCKOUTPUT
	f	Lcar$e;	j	RULE_NATURAL_REGENERATION
	f	Lcar$e;	k	RULE_DAYLIGHT
	f	Lcar$e;	l	RULE_LOGADMINCOMMANDS
	f	Lcar$e;	m	RULE_SHOWDEATHMESSAGES
	f	Lcar$e;	n	RULE_RANDOMTICKING
	f	Lcar$e;	o	RULE_SENDCOMMANDFEEDBACK
	f	Lcar$e;	p	RULE_REDUCEDDEBUGINFO
	f	Lcar$e;	q	RULE_SPECTATORSGENERATECHUNKS
	f	Lcar$e;	r	RULE_SPAWN_RADIUS
	f	Lcar$e;	s	RULE_DISABLE_ELYTRA_MOVEMENT_CHECK
	f	Lcar$e;	t	RULE_MAX_ENTITY_CRAMMING
	f	Lcar$e;	u	RULE_WEATHER_CYCLE
	f	Lcar$e;	v	RULE_LIMITED_CRAFTING
	f	Lcar$e;	w	RULE_MAX_COMMAND_CHAIN_LENGTH
	f	Lcar$e;	x	RULE_ANNOUNCE_ADVANCEMENTS
	f	Lcar$e;	y	RULE_DISABLE_RAIDS
	f	Lcar$e;	z	RULE_DOINSOMNIA
c	car$a	net/minecraft/world/level/GameRules$BooleanValue
	m	()Z	a	get
	m	(Lcar$a;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
	m	(Lcar$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
	m	(Ljava/lang/String;)V	a	deserialize
	m	(Lnet/minecraft/server/MinecraftServer;Lcar$a;)V	a	lambda$create$1
	m	(Z)Lcar$f;	a	create
	m	(ZLcar$f;)Lcar$a;	a	lambda$create$0
	m	(ZLjava/util/function/BiConsumer;)Lcar$f;	a	create
	m	(ZLnet/minecraft/server/MinecraftServer;)V	a	set
	m	()Ljava/lang/String;	b	serialize
	m	()I	c	getCommandResult
	m	()Lcar$a;	d	getSelf
	m	()Lcar$a;	e	copy
	m	()Lcar$g;	f	copy
	m	()Lcar$g;	g	getSelf
	f	Z	b	value
c	car$b	net/minecraft/world/level/GameRules$Category
	m	()Ljava/lang/String;	a	getDescriptionId
	m	()[Lcar$b;	b	$values
	f	Lcar$b;	a	PLAYER
	f	Lcar$b;	b	MOBS
	f	Lcar$b;	c	SPAWNING
	f	Lcar$b;	d	DROPS
	f	Lcar$b;	e	UPDATES
	f	Lcar$b;	f	CHAT
	f	Lcar$b;	g	MISC
	f	Ljava/lang/String;	h	descriptionId
	f	[Lcar$b;	i	$VALUES
c	car$c	net/minecraft/world/level/GameRules$GameRuleTypeVisitor
	m	(Lcar$e;Lcar$f;)V	a	visit
	m	(Lcar$e;Lcar$f;)V	b	visitBoolean
	m	(Lcar$e;Lcar$f;)V	c	visitInteger
c	car$d	net/minecraft/world/level/GameRules$IntegerValue
	m	()I	a	get
	m	(I)Lcar$f;	a	create
	m	(ILcar$f;)Lcar$d;	a	lambda$create$0
	m	(ILjava/util/function/BiConsumer;)Lcar$f;	a	create
	m	(ILnet/minecraft/server/MinecraftServer;)V	a	set
	m	(Lcar$d;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
	m	(Lcar$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
	m	(Ljava/lang/String;)V	a	deserialize
	m	(Lnet/minecraft/server/MinecraftServer;Lcar$d;)V	a	lambda$create$1
	m	()Ljava/lang/String;	b	serialize
	m	(Ljava/lang/String;)Z	b	tryDeserialize
	m	()I	c	getCommandResult
	m	(Ljava/lang/String;)I	c	safeParse
	m	()Lcar$d;	d	getSelf
	m	()Lcar$d;	e	copy
	m	()Lcar$g;	f	copy
	m	()Lcar$g;	g	getSelf
	f	I	b	value
c	car$e	net/minecraft/world/level/GameRules$Key
	m	()Ljava/lang/String;	a	getId
	m	()Ljava/lang/String;	b	getDescriptionId
	m	()Lcar$b;	c	getCategory
	f	Ljava/lang/String;	a	id
	f	Lcar$b;	b	category
c	car$f	net/minecraft/world/level/GameRules$Type
	m	()Lcar$g;	a	createRule
	m	(Lcar$c;Lcar$e;)V	a	callVisitor
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;	a	createArgument
	f	Ljava/util/function/Supplier;	a	argument
	f	Ljava/util/function/Function;	b	constructor
	f	Ljava/util/function/BiConsumer;	c	callback
	f	Lcar$h;	d	visitorCaller
c	car$g	net/minecraft/world/level/GameRules$Value
	m	(Lcar$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
	m	(Ljava/lang/String;)V	a	deserialize
	m	(Lnet/minecraft/server/MinecraftServer;)V	a	onChanged
	m	()Ljava/lang/String;	b	serialize
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	b	setFromArgument
	m	()I	c	getCommandResult
	m	()Lcar$g;	f	copy
	m	()Lcar$g;	g	getSelf
	f	Lcar$f;	a	type
c	car$h	net/minecraft/world/level/GameRules$VisitorCaller
c	cas	net/minecraft/world/level/GameType
	m	()I	a	getId
	m	(I)Lcas;	a	byId
	m	(ILcas;)Lcas;	a	byId
	m	(Lbog;)V	a	updatePlayerAbilities
	m	(Lcas;)I	a	getNullableId
	m	(Ljava/lang/String;)Lcas;	a	byName
	m	(Ljava/lang/String;Lcas;)Lcas;	a	byName
	m	()Ljava/lang/String;	b	getName
	m	(I)Lcas;	b	byNullableId
	m	()Lqk;	c	getLongDisplayName
	m	()Lqk;	d	getShortDisplayName
	m	()Z	e	isBlockPlacingRestricted
	m	()Z	f	isCreative
	m	()Z	g	isSurvival
	m	()[Lcas;	h	$values
	f	Lcas;	a	SURVIVAL
	f	Lcas;	b	CREATIVE
	f	Lcas;	c	ADVENTURE
	f	Lcas;	d	SPECTATOR
	f	Lcas;	e	DEFAULT_MODE
	f	I	f	NOT_SET
	f	I	g	id
	f	Ljava/lang/String;	h	name
	f	Lqk;	i	shortName
	f	Lqk;	j	longName
	f	[Lcas;	k	$VALUES
c	cat	net/minecraft/world/level/GrassColor
	m	(DD)I	a	get
	m	([I)V	a	init
	f	[I	a	pixels
c	cau	net/minecraft/world/level/ItemLike
	m	()Lbus;	l	asItem
c	cav	net/minecraft/world/level/Level
	m	(Lgj;)Z	D	isInWorldBoundsHorizontal
	m	()Lcsp;	H	getEntities
	m	()Ljava/lang/String;	I	gatherChunkSourceStats
	m	()Ldqm;	J	getScoreboard
	m	()Z	O	isDay
	m	()Z	P	isNight
	m	()V	Q	tickBlockEntities
	m	()V	R	updateSkyBrightness
	m	()V	S	prepareWeather
	m	()V	T	disconnect
	m	()J	U	getGameTime
	m	()J	V	getDayTime
	m	()Lcar;	W	getGameRules
	m	()Z	X	isThundering
	m	()Z	Y	isRaining
	m	()Lgs;	Z	dimensionTypeRegistration
	m	()Ljava/lang/String;	a	lambda$fillReportDetails$4
	m	(DDDDDDLok;)V	a	createFireworks
	m	(DDDLahj;Lahl;FFZ)V	a	playLocalSound
	m	(F)F	a	getSunAngle
	m	(I)Laxk;	a	getEntity
	m	(II)Lcqq;	a	getChunk
	m	(IIII)Lgj;	a	getBlockRandomPos
	m	(IILcqt;Z)Lcqq;	a	getChunk
	m	(ILgj;I)V	a	destroyBlockProgress
	m	(J)Z	a	shouldTickBlocksAt
	m	(Laxk;B)V	a	broadcastEntityEvent
	m	(Laxk;DDDFLcan$a;)Lcan;	a	explode
	m	(Laxk;DDDFZLcan$a;)Lcan;	a	explode
	m	(Laxk;Lawu;Lcao;DDDFZLcan$a;)Lcan;	a	explode
	m	(Laxk;Lcsy;Lgj;I)V	a	postGameEventInRadius
	m	(Laxk;Ldpj;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	(Laxk;Ljava/util/function/Predicate;Ljava/util/List;Laxk;)V	a	lambda$getEntities$1
	m	(Lboj;DDDLahj;Lahl;FF)V	a	playSound
	m	(Lboj;Laxk;Lahj;Lahl;FF)V	a	playSound
	m	(Lboj;Lgj;)Z	a	mayInteract
	m	(Lboj;Lgj;Lahj;Lahl;FF)V	a	playSound
	m	(Lcdq;)Ljava/lang/String;	a	lambda$neighborChanged$0
	m	(Lcmr;)V	a	setBlockEntity
	m	(Lcny;)V	a	addBlockEntityTicker
	m	(Lcsn;Ldpj;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	(Lctw$a;II)I	a	getHeight
	m	(Lgj;Laxk;)Z	a	loadedAndEntityCanStandOn
	m	(Lgj;Laxk;Lgo;)Z	a	loadedAndEntityCanStandOnFace
	m	(Lgj;Lcdq;II)V	a	blockEvent
	m	(Lgj;Lcdq;Lgj;)V	a	neighborChanged
	m	(Lgj;Lcdq;Lgo;)V	a	updateNeighborsAtExceptFromFacing
	m	(Lgj;Lcov;)V	a	addDestroyBlockEffect
	m	(Lgj;Lcov;I)Z	a	setBlock
	m	(Lgj;Lcov;II)Z	a	setBlock
	m	(Lgj;Lcov;Lcov;)V	a	onBlockStateChange
	m	(Lgj;Lcov;Lcov;I)V	a	sendBlockUpdated
	m	(Lgj;Lgo;)Z	a	hasSignal
	m	(Lgj;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
	m	(Lgj;Z)Z	a	removeBlock
	m	(Lgj;ZLaxk;I)Z	a	destroyBlock
	m	(Lia;DDDDDD)V	a	addParticle
	m	(Lia;ZDDDDDD)V	a	addParticle
	m	(Ljava/lang/String;)Ldkf;	a	getMapData
	m	(Ljava/lang/String;Ldkf;)V	a	setMapData
	m	(Ljava/util/function/Consumer;Laxk;)V	a	guardEntityTick
	m	(Ljava/util/function/Predicate;Ljava/util/List;Lcsn;Laxk;)V	a	lambda$getEntities$2
	m	(Lq;)Lr;	a	fillReportDetails
	m	(Lrc;)V	a	sendPacketToServer
	m	(Lgj;)Lcov;	a_	getBlockState
	m	()Lys;	aa	dimension
	m	()Lasy;	ab	getProfiler
	m	()Ljava/util/function/Supplier;	ac	getProfilerSupplier
	m	()Z	ad	isDebug
	m	(F)F	b	getThunderLevel
	m	(I)Z	b	isOutsideSpawnableHeight
	m	(ILgj;I)V	b	globalLevelEvent
	m	(Lgj;Lcdq;)V	b	updateNeighborsAt
	m	(Lgj;Lcov;)Z	b	setBlockAndUpdate
	m	(Lgj;Lcov;Lcov;)V	b	setBlocksDirty
	m	(Lgj;Lgo;)I	b	getSignal
	m	(Lgj;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
	m	(Lia;DDDDDD)V	b	addAlwaysVisibleParticle
	m	(Lia;ZDDDDDD)V	b	addAlwaysVisibleParticle
	m	(ZZ)V	b	setSpawnSettings
	m	(Lgj;)Ldix;	b_	getFluidState
	m	(F)V	c	setThunderLevel
	m	(I)V	c	setSkyFlashTime
	m	(II)Lcab;	c	getChunkForCollisions
	m	(Lgj;Lcdq;)V	c	updateNeighbourForOutputSignal
	m	(Lgj;)Lcmr;	c_	getBlockEntity
	m	(F)F	d	getRainLevel
	m	(II)Lcra;	d	getChunk
	m	(Lgj;)Lawf;	d_	getCurrentDifficultyAt
	m	(F)V	e	setRainLevel
	m	(Laxk;)Z	h	shouldTickDeath
	m	(Lgj;)Z	j	isInWorldBounds
	m	(Lgj;)Z	k	isInSpawnableBounds
	m	()Z	k_	isClientSide
	m	(Lgj;)Lcra;	l	getChunkAt
	m	()Ldio;	l_	getLightEngine
	m	(Lgj;)V	m	removeBlockEntity
	m	()I	m_	getSeaLevel
	m	()Lnet/minecraft/server/MinecraftServer;	n	getServer
	m	(Lgj;)Z	n	isLoaded
	m	()Ldkm;	n_	getLevelData
	m	()Ljava/lang/String;	o	lambda$fillReportDetails$3
	m	(Lgj;)V	o	blockEntityChanged
	m	()I	o_	getSkyDarken
	m	(Lgj;)I	p	getDirectSignalTo
	m	()Lcql;	p_	getWorldBorder
	m	()Lbxp;	q	getRecipeManager
	m	(Lgj;)Z	q	hasNeighborSignal
	m	()Lcry;	q_	dimensionType
	m	()Z	r	noSave
	m	(Lgj;)I	r	getBestNeighborSignal
	m	()Ljava/util/Random;	r_	getRandom
	m	(Lgj;)Z	s	isRainingAt
	m	()Lcbt;	s_	getBiomeManager
	m	(Lgj;)Z	t	isHumidAt
	m	()J	t_	nextSubTickCount
	m	()I	u	getFreeMapId
	f	I	A	skyDarken
	f	Lcry;	B	dimensionType
	f	Lgs;	C	dimensionTypeRegistration
	f	Ljava/util/function/Supplier;	D	profiler
	f	Lcql;	E	worldBorder
	f	Lcbt;	F	biomeManager
	f	Lys;	G	dimension
	f	J	H	subTickCount
	f	[Lgo;	a	DIRECTIONS
	f	Ljava/util/List;	b	pendingBlockEntityTickers
	f	Z	c	tickingBlockEntities
	f	Lcom/mojang/serialization/Codec;	d	RESOURCE_KEY_CODEC
	f	Lys;	e	OVERWORLD
	f	Lys;	f	NETHER
	f	Lys;	g	END
	f	I	h	MAX_LEVEL_SIZE
	f	I	i	LONG_PARTICLE_CLIP_RANGE
	f	I	j	SHORT_PARTICLE_CLIP_RANGE
	f	I	k	MAX_BRIGHTNESS
	f	I	l	TICKS_PER_DAY
	f	I	m	MAX_ENTITY_SPAWN_Y
	f	I	n	MIN_ENTITY_SPAWN_Y
	f	Ljava/util/List;	o	blockEntityTickers
	f	I	p	randValue
	f	I	q	addend
	f	F	r	oRainLevel
	f	F	s	rainLevel
	f	F	t	oThunderLevel
	f	F	u	thunderLevel
	f	Ljava/util/Random;	v	random
	f	Ldkw;	w	levelData
	f	Z	x	isClientSide
	f	Ljava/lang/Thread;	y	thread
	f	Z	z	isDebug
c	cav$1	net/minecraft/world/level/Level$1
	m	()D	a	getCenterX
	m	()D	b	getCenterZ
	f	Lcav;	a	this$0
c	caw	net/minecraft/world/level/LevelAccessor
	m	()Lcqs;	K	getChunkSource
	m	()Ldqu;	L	getFluidTicks
	m	()Ldqu;	M	getBlockTicks
	m	(Laxk;Lcsy;Laxk;)V	a	gameEvent
	m	(Laxk;Lcsy;Lgj;)V	a	gameEvent
	m	(Lboj;ILgj;I)V	a	levelEvent
	m	(Lboj;Lgj;Lahj;Lahl;FF)V	a	playSound
	m	(Lcsy;Laxk;)V	a	gameEvent
	m	(Lcsy;Lgj;)V	a	gameEvent
	m	(Lgj;Lcdq;)V	a	blockUpdated
	m	(Lgj;Lcdq;I)V	a	scheduleTick
	m	(Lgj;Lcdq;ILdrc;)V	a	scheduleTick
	m	(Lgj;Ldiw;I)V	a	scheduleTick
	m	(Lgj;Ldiw;ILdrc;)V	a	scheduleTick
	m	(Lgj;Ljava/lang/Object;I)Ldqy;	a	createTick
	m	(Lgj;Ljava/lang/Object;ILdrc;)Ldqy;	a	createTick
	m	(Lia;DDDDDD)V	a	addParticle
	m	()J	ae	dayTime
	m	()Lawe;	af	getDifficulty
	m	(II)Z	b	hasChunk
	m	(ILgj;I)V	c	levelEvent
	m	(Lgj;)Lawf;	d_	getCurrentDifficultyAt
	m	()Lnet/minecraft/server/MinecraftServer;	n	getServer
	m	()Ldkm;	n_	getLevelData
	m	()Ljava/util/Random;	r_	getRandom
	m	()J	t_	nextSubTickCount
c	cax	net/minecraft/world/level/LevelHeightAccessor
	m	()I	ag	getMaxBuildHeight
	m	()I	ah	getSectionsCount
	m	()I	ai	getMinSection
	m	()I	aj	getMaxSection
	m	(I)Z	d	isOutsideBuildHeight
	m	(I)I	e	getSectionIndex
	m	(II)Lcax;	e	create
	m	(I)I	f	getSectionIndexFromSectionY
	m	(I)I	g	getSectionYFromSectionIndex
	m	(Lgj;)Z	u	isOutsideBuildHeight
	m	()I	u_	getMinBuildHeight
	m	()I	v_	getHeight
c	cax$1	net/minecraft/world/level/LevelHeightAccessor$1
	m	()I	u_	getMinBuildHeight
	m	()I	v_	getHeight
	f	I	a	val$height
	f	I	b	val$minBuildHeight
c	cay	net/minecraft/world/level/LevelReader
	m	(Lgj;)Z	A	isWaterAt
	m	(Lgj;)I	B	getMaxLocalRawBrightness
	m	(Lgj;)Z	C	hasChunkAt
	m	(II)Lcqq;	a	getChunk
	m	(III)Lgs;	a	getUncachedNoiseBiome
	m	(IIIIII)Z	a	hasChunksAt
	m	(IILcqt;)Lcqq;	a	getChunk
	m	(IILcqt;Z)Lcqq;	a	getChunk
	m	(Lctw$a;II)I	a	getHeight
	m	(Lctw$a;Lgj;)Lgj;	a	getHeightmapPos
	m	(Lgj;Lcag;)I	a	getBlockTint
	m	(Lgj;Lgj;)Z	a	hasChunksAt
	m	(II)Z	b	hasChunk
	m	(IIII)Z	b	hasChunksAt
	m	(II)Lcab;	c	getChunkForCollisions
	m	(Ldpj;)Ljava/util/stream/Stream;	c	getBlockStatesIfLoaded
	m	(Lgj;I)I	c	getMaxLocalRawBrightness
	m	(Lgj;Lgo;)I	c	getDirectSignal
	m	(Ldpj;)Z	d	containsAnyLiquid
	m	(II)Z	f	hasChunkAt
	m	()Z	k_	isClientSide
	m	()I	m_	getSeaLevel
	m	()I	o_	getSkyDarken
	m	()Lcry;	q_	dimensionType
	m	()Lcbt;	s_	getBiomeManager
	m	()I	u_	getMinBuildHeight
	m	(Lgj;)Lgs;	v	getBiome
	m	()I	v_	getHeight
	m	(Lgj;)Z	w	isEmptyBlock
	m	(Lgj;)Z	x	canSeeSkyFromBelowWater
	m	(Lgj;)F	y	getBrightness
	m	(Lgj;)Lcqq;	z	getChunk
c	caz	net/minecraft/world/level/LevelSettings
	m	()Ljava/lang/String;	a	levelName
	m	(Lawe;)Lcaz;	a	withDifficulty
	m	(Lcaj;)Lcaz;	a	withDataPackConfig
	m	(Lcas;)Lcaz;	a	withGameType
	m	(Lcom/mojang/serialization/Dynamic;Lcaj;)Lcaz;	a	parse
	m	(Ljava/lang/Number;)Lawe;	a	lambda$parse$0
	m	()Lcas;	b	gameType
	m	()Z	c	hardcore
	m	()Lawe;	d	difficulty
	m	()Z	e	allowCommands
	m	()Lcar;	f	gameRules
	m	()Lcaj;	g	getDataPackConfig
	m	()Lcaz;	h	copy
	f	Ljava/lang/String;	a	levelName
	f	Lcas;	b	gameType
	f	Z	c	hardcore
	f	Lawe;	d	difficulty
	f	Z	e	allowCommands
	f	Lcar;	f	gameRules
	f	Lcaj;	g	dataPackConfig
c	cba	net/minecraft/world/level/LevelSimulatedRW
c	cbb	net/minecraft/world/level/LevelSimulatedReader
	m	(Lctw$a;Lgj;)Lgj;	a	getHeightmapPos
	m	(Lgj;Lcmt;)Ljava/util/Optional;	a	getBlockEntity
	m	(Lgj;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
	m	(Lgj;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
c	cbc	net/minecraft/world/level/LevelTimeAccess
	m	()J	ae	dayTime
	m	()F	ak	getMoonBrightness
	m	()I	al	getMoonPhase
	m	(F)F	f	getTimeOfDay
c	cbd	net/minecraft/world/level/LevelWriter
	m	(Lgj;Lcov;I)Z	a	setBlock
	m	(Lgj;Lcov;II)Z	a	setBlock
	m	(Lgj;Z)Z	a	removeBlock
	m	(Lgj;ZLaxk;)Z	a	destroyBlock
	m	(Lgj;ZLaxk;I)Z	a	destroyBlock
	m	(Laxk;)Z	b	addFreshEntity
	m	(Lgj;Z)Z	b	destroyBlock
c	cbe	net/minecraft/world/level/LightLayer
	m	()[Lcbe;	a	$values
	f	Lcbe;	a	SKY
	f	Lcbe;	b	BLOCK
	f	I	c	surrounding
	f	[Lcbe;	d	$VALUES
c	cbf	net/minecraft/world/level/LocalMobCapCalculator
	m	(Ladx;)Lcbf$a;	a	lambda$addMob$1
	m	(Layb;Lcac;)Z	a	canSpawn
	m	(Lcac;)Ljava/util/List;	a	getPlayersNear
	m	(Lcac;J)Ljava/util/List;	a	lambda$getPlayersNear$0
	m	(Lcac;Layb;)V	a	addMob
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	a	playersNearChunk
	f	Ljava/util/Map;	b	playerMobCounts
	f	Ladj;	c	chunkMap
c	cbf$a	net/minecraft/world/level/LocalMobCapCalculator$MobCounts
	m	(Layb;)V	a	add
	m	(Layb;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$add$0
	m	(Layb;)Z	b	canSpawn
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	counts
c	cbg	net/minecraft/world/level/NaturalSpawner
	m	(I)[Layb;	a	lambda$static$1
	m	(ILjava/lang/Iterable;Lcbg$b;Lcbf;)Lcbg$d;	a	createState
	m	(Ladw;Laxo;)Laya;	a	getMobForSpawn
	m	(Ladw;Laya;D)Z	a	isValidPositionForMob
	m	(Ladw;Layb;Lcbm;Lcqr;Lccb$c;Lgj$a;D)Z	a	isValidSpawnPostitionForType
	m	(Ladw;Lcbm;Lcqr;Layb;Lccb$c;Lgj;)Z	a	canSpawnMobAt
	m	(Ladw;Lcbm;Lcqr;Layb;Lgj;Lgs;)Lauw;	a	mobsAt
	m	(Ladw;Lcbm;Lcqr;Layb;Ljava/util/Random;Lgj;)Ljava/util/Optional;	a	getRandomSpawnMobAt
	m	(Ladw;Lcqq;Lgj$a;D)Z	a	isRightDistanceToPlayerAndSpawnPoint
	m	(Ladw;Lcra;Lcbg$d;ZZZ)V	a	spawnForChunk
	m	(Laxo;Lgj;Lcqq;)Z	a	lambda$spawnCategoryForPosition$3
	m	(Laya;Lcqq;)V	a	lambda$spawnCategoryForPosition$4
	m	(Layb;)Z	a	lambda$static$0
	m	(Layb;Ladw;Lcqq;Lgj;Lcbg$c;Lcbg$a;)V	a	spawnCategoryForPosition
	m	(Layb;Ladw;Lcra;Lcbg$c;Lcbg$a;)V	a	spawnCategoryForChunk
	m	(Layb;Ladw;Lgj;)V	a	spawnCategoryForPosition
	m	(Layr$c;Lcay;Lgj;Laxo;)Z	a	isSpawnPositionOk
	m	(Lcab;Lgj;Lcov;Ldix;Laxo;)Z	a	isValidEmptySpawnBlock
	m	(Lcav;Lcra;)Lgj;	a	getRandomPosWithin
	m	(Lcay;Laxo;II)Lgj;	a	getTopNonCollidingPos
	m	(Lcbk;Lgs;Lcac;Ljava/util/Random;)V	a	spawnMobsForChunkGeneration
	m	(Lgj;Ladw;Layb;Lcbm;)Z	a	isInNetherFortressBounds
	m	(Lgj;Laxk;Lcbj;Lcbf;Layb;Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Lcra;)V	a	lambda$createState$2
	m	(Lgj;Lcqq;)Lcbr;	a	getRoughBiome
	f	I	a	SPAWN_DISTANCE_CHUNK
	f	I	b	SPAWN_DISTANCE_BLOCK
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	MIN_SPAWN_DISTANCE
	f	I	e	MAGIC_NUMBER
	f	[Layb;	f	SPAWNING_CATEGORIES
c	cbg$1	net/minecraft/world/level/NaturalSpawner$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$SpawnPlacements$Type
c	cbg$a	net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback
c	cbg$b	net/minecraft/world/level/NaturalSpawner$ChunkGetter
c	cbg$c	net/minecraft/world/level/NaturalSpawner$SpawnPredicate
c	cbg$d	net/minecraft/world/level/NaturalSpawner$SpawnState
	m	()I	a	getSpawnableChunkCount
	m	(Laxo;Lgj;Lcqq;)Z	a	canSpawn
	m	(Laya;Lcqq;)V	a	afterSpawn
	m	(Layb;Lcac;)Z	a	canSpawnForCategory
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	getMobCategoryCounts
	f	I	a	spawnableChunkCount
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	b	mobCategoryCounts
	f	Lcbj;	c	spawnPotential
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	unmodifiableMobCategoryCounts
	f	Lcbf;	e	localMobCapCalculator
	f	Lgj;	f	lastCheckedPos
	f	Laxo;	g	lastCheckedType
	f	D	h	lastCharge
c	cbh	net/minecraft/world/level/NoiseColumn
	m	(I)Lcov;	a	getBlock
	m	(ILcov;)V	a	setBlock
	f	I	a	minY
	f	[Lcov;	b	column
c	cbi	net/minecraft/world/level/PathNavigationRegion
	m	()Lasy;	a	getProfiler
	m	(II)Lcqq;	a	getChunk
	m	(Lcav;)Lgs;	a	lambda$new$0
	m	(Lgj;)Lcov;	a_	getBlockState
	m	(Laxk;Ldpj;)Ljava/util/List;	b	getEntityCollisions
	m	(Lgj;)Ldix;	b_	getFluidState
	m	(II)Lcab;	c	getChunkForCollisions
	m	(Lgj;)Lcmr;	c_	getBlockEntity
	m	(Lgj;)Lcqq;	d	getChunk
	m	()Lcql;	p_	getWorldBorder
	m	()I	u_	getMinBuildHeight
	m	()I	v_	getHeight
	f	I	a	centerX
	f	I	b	centerZ
	f	[[Lcqq;	c	chunks
	f	Z	d	allEmpty
	f	Lcav;	e	level
	f	Ljava/util/function/Supplier;	f	plains
c	cbj	net/minecraft/world/level/PotentialCalculator
	m	(Lgj;D)V	a	addCharge
	m	(Lgj;D)D	b	getPotentialEnergyChange
	f	Ljava/util/List;	a	charges
c	cbj$a	net/minecraft/world/level/PotentialCalculator$PointCharge
	m	(Lgj;)D	a	getPotentialChange
	f	Lgj;	a	pos
	f	D	b	charge
c	cbk	net/minecraft/world/level/ServerLevelAccessor
	m	()Ladw;	F	getLevel
	m	(Laxk;)V	a_	addFreshEntityWithPassengers
c	cbl	net/minecraft/world/level/SpawnData
	m	()Lok;	a	getEntityToSpawn
	m	(Lcbl;)Ljava/util/Optional;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lok;)V	a	lambda$new$3
	m	()Ljava/util/Optional;	b	getCustomSpawnRules
	m	(Lcbl;)Lok;	b	lambda$static$0
	m	()Lok;	c	entityToSpawn
	m	()Ljava/util/Optional;	d	customSpawnRules
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	LIST_CODEC
	f	Ljava/lang/String;	c	DEFAULT_TYPE
	f	Lok;	d	entityToSpawn
	f	Ljava/util/Optional;	e	customSpawnRules
c	cbl$a	net/minecraft/world/level/SpawnData$CustomSpawnRules
	m	()Lajf;	a	blockLightLimit
	m	(Lajf;)Lcom/mojang/serialization/DataResult;	a	checkLightBoundaries
	m	(Lcbl$a;)Lajf;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	()Lajf;	b	skyLightLimit
	m	(Lcbl$a;)Lajf;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lajf;	b	blockLightLimit
	f	Lajf;	c	skyLightLimit
	f	Lajf;	d	LIGHT_RANGE
c	cbm	net/minecraft/world/level/StructureFeatureManager
	m	()Z	a	shouldGenerateFeatures
	m	(Laed;)Lcbm;	a	forWorldGenRegion
	m	(Lcac;Lcwr;Z)Ldfl;	a	checkStructurePresence
	m	(Lcwr;Lit/unimi/dsi/fastutil/longs/LongSet;Ljava/util/function/Consumer;)V	a	fillStartsForFeature
	m	(Ldfr;)V	a	addReference
	m	(Lgj;)Z	a	hasAnyStructureAt
	m	(Lgj;Lcwr;)Ldfr;	a	getStructureAt
	m	(Lgj;Ldfr;)Z	a	structureHasPieceAt
	m	(Lgj;Lys;)Ldfr;	a	getStructureWithPieceAt
	m	(Lhf;Lcwr;)Ljava/util/List;	a	startsForFeature
	m	(Lhf;Lcwr;JLcqw;)V	a	addReferenceForFeature
	m	(Lhf;Lcwr;Lcqw;)Ldfr;	a	getStartForFeature
	m	(Lhf;Lcwr;Ldfr;Lcqw;)V	a	setStartForFeature
	m	(Lhf;Ljava/util/function/Predicate;)Ljava/util/List;	a	startsForFeature
	m	()Lhc;	b	registryAccess
	m	(Lgj;)Ljava/util/Map;	b	getAllStructuresAt
	m	(Lgj;Lcwr;)Ldfr;	b	getStructureWithPieceAt
	f	Lcaw;	a	level
	f	Lcut;	b	worldGenSettings
	f	Ldfk;	c	structureCheck
c	cbn	net/minecraft/world/level/WorldGenLevel
	m	()J	D	getSeed
	m	(Ljava/util/function/Supplier;)V	a	setCurrentlyGenerating
	m	(Lgj;)Z	e_	ensureCanWrite
c	cbo	net/minecraft/world/level/biome/AmbientAdditionsSettings
	m	()Lahj;	a	getSoundEvent
	m	(Lcbo;)Ljava/lang/Double;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	()D	b	getTickChance
	m	(Lcbo;)Lahj;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lahj;	b	soundEvent
	f	D	c	tickChance
c	cbp	net/minecraft/world/level/biome/AmbientMoodSettings
	m	()Lahj;	a	getSoundEvent
	m	(Lcbp;)Ljava/lang/Double;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	()I	b	getTickDelay
	m	(Lcbp;)Ljava/lang/Integer;	b	lambda$static$2
	m	()I	c	getBlockSearchExtent
	m	(Lcbp;)Ljava/lang/Integer;	c	lambda$static$1
	m	()D	d	getSoundPositionOffset
	m	(Lcbp;)Lahj;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcbp;	b	LEGACY_CAVE_SETTINGS
	f	Lahj;	c	soundEvent
	f	I	d	tickDelay
	f	I	e	blockSearchExtent
	f	D	f	soundPositionOffset
c	cbq	net/minecraft/world/level/biome/AmbientParticleSettings
	m	()Lia;	a	getOptions
	m	(Lcbq;)Ljava/lang/Float;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ljava/util/Random;)Z	a	canSpawn
	m	(Lcbq;)Lia;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lia;	b	options
	f	F	c	probability
c	cbr	net/minecraft/world/level/biome/Biome
	m	()I	a	getSkyColor
	m	(DD)I	a	getGrassColor
	m	(Lcay;Lgj;)Z	a	shouldFreeze
	m	(Lcay;Lgj;Z)Z	a	shouldFreeze
	m	(Lcbr$c;Lcbr$b;Lcbw;)Lcbr;	a	lambda$static$9
	m	(Lcbr;)Lcbw;	a	lambda$static$8
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
	m	(Lgj;)Z	a	coldEnoughToSnow
	m	(Lgs;)Lcbr$b;	a	getBiomeCategory
	m	()Lccb;	b	getMobSettings
	m	(Lcay;Lgj;)Z	b	shouldSnow
	m	(Lcbr;)Lcbr$b;	b	lambda$static$7
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$5
	m	(Lgj;)Z	b	warmEnoughToRain
	m	()Lcbr$d;	c	getPrecipitation
	m	(Lcbr;)Lcbr$c;	c	lambda$static$6
	m	(Lgj;)Z	c	shouldMeltFrozenOceanIcebergSlightly
	m	()Z	d	isHumid
	m	(Lcbr;)Lccb;	d	lambda$static$4
	m	(Lgj;)Z	d	shouldSnowGolemBurn
	m	()Lcbs;	e	getGenerationSettings
	m	(Lcbr;)Lcbs;	e	lambda$static$3
	m	(Lgj;)F	e	getHeightAdjustedTemperature
	m	()I	f	getFogColor
	m	(Lcbr;)Lcbw;	f	lambda$static$2
	m	(Lgj;)F	f	getTemperature
	m	()I	g	getFoliageColor
	m	(Lcbr;)Lcbr$b;	g	lambda$static$1
	m	()F	h	getDownfall
	m	(Lcbr;)Lcbr$c;	h	lambda$static$0
	m	()F	i	getBaseTemperature
	m	()Lcbw;	j	getSpecialEffects
	m	()I	k	getWaterColor
	m	()I	l	getWaterFogColor
	m	()Ljava/util/Optional;	m	getAmbientParticle
	m	()Ljava/util/Optional;	n	getAmbientLoop
	m	()Ljava/util/Optional;	o	getAmbientMood
	m	()Ljava/util/Optional;	p	getAmbientAdditions
	m	()Ljava/util/Optional;	q	getBackgroundMusic
	m	()I	r	getGrassColorFromTexture
	m	()I	s	getFoliageColorFromTexture
	m	()Lcbr$b;	t	getBiomeCategory
	m	()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;	u	lambda$new$12
	m	()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;	v	lambda$new$11
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	NETWORK_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	LIST_CODEC
	f	Ldie;	e	BIOME_INFO_NOISE
	f	Ldie;	f	TEMPERATURE_NOISE
	f	Ldie;	g	FROZEN_TEMPERATURE_NOISE
	f	I	h	TEMPERATURE_CACHE_SIZE
	f	Lcbr$c;	i	climateSettings
	f	Lcbs;	j	generationSettings
	f	Lccb;	k	mobSettings
	f	Lcbr$b;	l	biomeCategory
	f	Lcbw;	m	specialEffects
	f	Ljava/lang/ThreadLocal;	n	temperatureCache
c	cbr$1	net/minecraft/world/level/biome/Biome$1
	f	Lcbr;	a	this$0
c	cbr$a	net/minecraft/world/level/biome/Biome$BiomeBuilder
	m	()Lcbr;	a	build
	m	(F)Lcbr$a;	a	temperature
	m	(Lcbr$b;)Lcbr$a;	a	biomeCategory
	m	(Lcbr$d;)Lcbr$a;	a	precipitation
	m	(Lcbr$e;)Lcbr$a;	a	temperatureAdjustment
	m	(Lcbr;)Lcbr$a;	a	from
	m	(Lcbs;)Lcbr$a;	a	generationSettings
	m	(Lcbw;)Lcbr$a;	a	specialEffects
	m	(Lccb;)Lcbr$a;	a	mobSpawnSettings
	m	(F)Lcbr$a;	b	downfall
	f	Lcbr$d;	a	precipitation
	f	Lcbr$b;	b	biomeCategory
	f	Ljava/lang/Float;	c	temperature
	f	Lcbr$e;	d	temperatureModifier
	f	Ljava/lang/Float;	e	downfall
	f	Lcbw;	f	specialEffects
	f	Lccb;	g	mobSpawnSettings
	f	Lcbs;	h	generationSettings
c	cbr$b	net/minecraft/world/level/biome/Biome$BiomeCategory
	m	()Ljava/lang/String;	a	getName
	m	(Lcbr$b;)Lcbr$b;	a	lambda$static$0
	m	(Ljava/lang/String;)Lcbr$b;	a	byName
	m	()[Lcbr$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcbr$b;	a	NONE
	f	Lcbr$b;	b	TAIGA
	f	Lcbr$b;	c	EXTREME_HILLS
	f	Lcbr$b;	d	JUNGLE
	f	Lcbr$b;	e	MESA
	f	Lcbr$b;	f	PLAINS
	f	Lcbr$b;	g	SAVANNA
	f	Lcbr$b;	h	ICY
	f	Lcbr$b;	i	THEEND
	f	Lcbr$b;	j	BEACH
	f	Lcbr$b;	k	FOREST
	f	Lcbr$b;	l	OCEAN
	f	Lcbr$b;	m	DESERT
	f	Lcbr$b;	n	RIVER
	f	Lcbr$b;	o	SWAMP
	f	Lcbr$b;	p	MUSHROOM
	f	Lcbr$b;	q	NETHER
	f	Lcbr$b;	r	UNDERGROUND
	f	Lcbr$b;	s	MOUNTAIN
	f	Lcom/mojang/serialization/Codec;	t	CODEC
	f	Ljava/util/Map;	u	BY_NAME
	f	Ljava/lang/String;	v	name
	f	[Lcbr$b;	w	$VALUES
c	cbr$c	net/minecraft/world/level/biome/Biome$ClimateSettings
	m	(Lcbr$c;)Ljava/lang/Float;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lcbr$c;)Lcbr$e;	b	lambda$static$2
	m	(Lcbr$c;)Ljava/lang/Float;	c	lambda$static$1
	m	(Lcbr$c;)Lcbr$d;	d	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcbr$d;	b	precipitation
	f	F	c	temperature
	f	Lcbr$e;	d	temperatureModifier
	f	F	e	downfall
c	cbr$d	net/minecraft/world/level/biome/Biome$Precipitation
	m	()Ljava/lang/String;	a	getName
	m	(Lcbr$d;)Lcbr$d;	a	lambda$static$0
	m	(Ljava/lang/String;)Lcbr$d;	a	byName
	m	()[Lcbr$d;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcbr$d;	a	NONE
	f	Lcbr$d;	b	RAIN
	f	Lcbr$d;	c	SNOW
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/util/Map;	e	BY_NAME
	f	Ljava/lang/String;	f	name
	f	[Lcbr$d;	g	$VALUES
c	cbr$e	net/minecraft/world/level/biome/Biome$TemperatureModifier
	m	()Ljava/lang/String;	a	getName
	m	(Lcbr$e;)Lcbr$e;	a	lambda$static$0
	m	(Lgj;F)F	a	modifyTemperature
	m	(Ljava/lang/String;)Lcbr$e;	a	byName
	m	()[Lcbr$e;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcbr$e;	a	NONE
	f	Lcbr$e;	b	FROZEN
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	Ljava/util/Map;	e	BY_NAME
	f	[Lcbr$e;	f	$VALUES
c	cbr$e$1	net/minecraft/world/level/biome/Biome$TemperatureModifier$1
	m	(Lgj;F)F	a	modifyTemperature
c	cbr$e$2	net/minecraft/world/level/biome/Biome$TemperatureModifier$2
	m	(Lgj;F)F	a	modifyTemperature
c	cbs	net/minecraft/world/level/biome/BiomeGenerationSettings
	m	()Ljava/util/List;	a	getFlowerFeatures
	m	(Lcbs;)Ljava/util/List;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lcts$a;)Ljava/lang/Iterable;	a	getCarvers
	m	(Lcwq;)Z	a	lambda$new$3
	m	(Lded;)Z	a	hasFeature
	m	(Ljava/util/List;)Ljava/util/Set;	a	lambda$new$5
	m	()Ljava/util/List;	b	features
	m	(Lcbs;)Ljava/util/Map;	b	lambda$static$0
	m	(Ljava/util/List;)Ljava/util/List;	b	lambda$new$4
	f	Lcbs;	a	EMPTY
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/Map;	d	carvers
	f	Ljava/util/List;	e	features
	f	Ljava/util/function/Supplier;	f	flowerFeatures
	f	Ljava/util/function/Supplier;	g	featureSet
c	cbs$a	net/minecraft/world/level/biome/BiomeGenerationSettings$Builder
	m	()Lcbs;	a	build
	m	(I)V	a	addFeatureStepsUpTo
	m	(ILgs;)Lcbs$a;	a	addFeature
	m	(Lcts$a;)Ljava/util/List;	a	lambda$addCarver$0
	m	(Lcts$a;Lgs;)Lcbs$a;	a	addCarver
	m	(Lcts$b;Lgs;)Lcbs$a;	a	addFeature
	m	(Ljava/util/Map$Entry;)Lgt;	a	lambda$build$1
	f	Ljava/util/Map;	a	carvers
	f	Ljava/util/List;	b	features
c	cbt	net/minecraft/world/level/biome/BiomeManager
	m	(DDD)Lgs;	a	getNoiseBiomeAtPosition
	m	(III)Lgs;	a	getNoiseBiomeAtQuart
	m	(J)J	a	obfuscateSeed
	m	(JIIIDDD)D	a	getFiddledDistance
	m	(Lcbt$a;)Lcbt;	a	withDifferentSource
	m	(Lgj;)Lgs;	a	getBiome
	m	(J)D	b	getFiddle
	m	(Lgj;)Lgs;	b	getNoiseBiomeAtPosition
	f	I	a	CHUNK_CENTER_QUART
	f	I	b	ZOOM_BITS
	f	I	c	ZOOM
	f	I	d	ZOOM_MASK
	f	Lcbt$a;	e	noiseBiomeSource
	f	J	f	biomeZoomSeed
c	cbt$a	net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource
c	cbu	net/minecraft/world/level/biome/BiomeResolver
c	cbv	net/minecraft/world/level/biome/BiomeSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(IIIIILjava/util/function/Predicate;Ljava/util/Random;ZLcbz$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
	m	(IIIILcbz$f;)Ljava/util/Set;	a	getBiomesWithin
	m	(IIIILjava/util/function/Predicate;Ljava/util/Random;Lcbz$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
	m	(ILcbv$a;)Z	a	lambda$buildFeaturesPerStep$3
	m	(J)Lcbv;	a	withSeed
	m	(Ljava/util/Comparator;Lcbv$a;)Ljava/util/Set;	a	lambda$buildFeaturesPerStep$2
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$new$0
	m	(Ljava/util/List;Lgj;Lcbz$f;)V	a	addDebugInfo
	m	(Ljava/util/List;Z)Ljava/util/List;	a	buildFeaturesPerStep
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/lang/Object;)I	a	lambda$buildFeaturesPerStep$1
	m	()Ljava/util/Set;	b	possibleBiomes
	m	()Ljava/util/List;	c	featuresPerStep
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Set;	b	possibleBiomes
	f	Ljava/util/function/Supplier;	c	featuresPerStep
c	cbv$a	net/minecraft/world/level/biome/BiomeSource$1FeatureData
	m	()I	a	featureIndex
	m	()I	b	step
	m	()Lded;	c	feature
	f	I	a	featureIndex
	f	I	b	step
	f	Lded;	c	feature
c	cbv$b	net/minecraft/world/level/biome/BiomeSource$StepFeatureData
	m	()Ljava/util/List;	a	features
	m	()Ljava/util/function/ToIntFunction;	b	indexMapping
	f	Ljava/util/List;	a	features
	f	Ljava/util/function/ToIntFunction;	b	indexMapping
c	cbw	net/minecraft/world/level/biome/BiomeSpecialEffects
	m	()I	a	getFogColor
	m	(Lcbw;)Ljava/util/Optional;	a	lambda$static$11
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$12
	m	()I	b	getWaterColor
	m	(Lcbw;)Ljava/util/Optional;	b	lambda$static$10
	m	()I	c	getWaterFogColor
	m	(Lcbw;)Ljava/util/Optional;	c	lambda$static$9
	m	()I	d	getSkyColor
	m	(Lcbw;)Ljava/util/Optional;	d	lambda$static$8
	m	()Ljava/util/Optional;	e	getFoliageColorOverride
	m	(Lcbw;)Ljava/util/Optional;	e	lambda$static$7
	m	()Ljava/util/Optional;	f	getGrassColorOverride
	m	(Lcbw;)Lcbw$b;	f	lambda$static$6
	m	()Lcbw$b;	g	getGrassColorModifier
	m	(Lcbw;)Ljava/util/Optional;	g	lambda$static$5
	m	()Ljava/util/Optional;	h	getAmbientParticleSettings
	m	(Lcbw;)Ljava/util/Optional;	h	lambda$static$4
	m	()Ljava/util/Optional;	i	getAmbientLoopSoundEvent
	m	(Lcbw;)Ljava/lang/Integer;	i	lambda$static$3
	m	()Ljava/util/Optional;	j	getAmbientMoodSettings
	m	(Lcbw;)Ljava/lang/Integer;	j	lambda$static$2
	m	()Ljava/util/Optional;	k	getAmbientAdditionsSettings
	m	(Lcbw;)Ljava/lang/Integer;	k	lambda$static$1
	m	()Ljava/util/Optional;	l	getBackgroundMusic
	m	(Lcbw;)Ljava/lang/Integer;	l	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	fogColor
	f	I	c	waterColor
	f	I	d	waterFogColor
	f	I	e	skyColor
	f	Ljava/util/Optional;	f	foliageColorOverride
	f	Ljava/util/Optional;	g	grassColorOverride
	f	Lcbw$b;	h	grassColorModifier
	f	Ljava/util/Optional;	i	ambientParticleSettings
	f	Ljava/util/Optional;	j	ambientLoopSoundEvent
	f	Ljava/util/Optional;	k	ambientMoodSettings
	f	Ljava/util/Optional;	l	ambientAdditionsSettings
	f	Ljava/util/Optional;	m	backgroundMusic
c	cbw$a	net/minecraft/world/level/biome/BiomeSpecialEffects$Builder
	m	()Lcbw;	a	build
	m	(I)Lcbw$a;	a	fogColor
	m	(Lahh;)Lcbw$a;	a	backgroundMusic
	m	(Lahj;)Lcbw$a;	a	ambientLoopSound
	m	(Lcbo;)Lcbw$a;	a	ambientAdditionsSound
	m	(Lcbp;)Lcbw$a;	a	ambientMoodSound
	m	(Lcbq;)Lcbw$a;	a	ambientParticle
	m	(Lcbw$b;)Lcbw$a;	a	grassColorModifier
	m	()Ljava/lang/IllegalStateException;	b	lambda$build$3
	m	(I)Lcbw$a;	b	waterColor
	m	()Ljava/lang/IllegalStateException;	c	lambda$build$2
	m	(I)Lcbw$a;	c	waterFogColor
	m	()Ljava/lang/IllegalStateException;	d	lambda$build$1
	m	(I)Lcbw$a;	d	skyColor
	m	()Ljava/lang/IllegalStateException;	e	lambda$build$0
	m	(I)Lcbw$a;	e	foliageColorOverride
	m	(I)Lcbw$a;	f	grassColorOverride
	f	Ljava/util/OptionalInt;	a	fogColor
	f	Ljava/util/OptionalInt;	b	waterColor
	f	Ljava/util/OptionalInt;	c	waterFogColor
	f	Ljava/util/OptionalInt;	d	skyColor
	f	Ljava/util/Optional;	e	foliageColorOverride
	f	Ljava/util/Optional;	f	grassColorOverride
	f	Lcbw$b;	g	grassColorModifier
	f	Ljava/util/Optional;	h	ambientParticle
	f	Ljava/util/Optional;	i	ambientLoopSoundEvent
	f	Ljava/util/Optional;	j	ambientMoodSettings
	f	Ljava/util/Optional;	k	ambientAdditionsSettings
	f	Ljava/util/Optional;	l	backgroundMusic
c	cbw$b	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier
	m	()Ljava/lang/String;	a	getName
	m	(DDI)I	a	modifyColor
	m	(Lcbw$b;)Lcbw$b;	a	lambda$static$0
	m	(Ljava/lang/String;)Lcbw$b;	a	byName
	m	()[Lcbw$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcbw$b;	a	NONE
	f	Lcbw$b;	b	DARK_FOREST
	f	Lcbw$b;	c	SWAMP
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	Ljava/util/Map;	f	BY_NAME
	f	[Lcbw$b;	g	$VALUES
c	cbw$b$1	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$1
	m	(DDI)I	a	modifyColor
c	cbw$b$2	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$2
	m	(DDI)I	a	modifyColor
c	cbw$b$3	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$3
	m	(DDI)I	a	modifyColor
c	cbx	net/minecraft/world/level/biome/Biomes
	m	(Ljava/lang/String;)Lys;	a	register
	f	Lys;	A	ERODED_BADLANDS
	f	Lys;	B	WOODED_BADLANDS
	f	Lys;	C	MEADOW
	f	Lys;	D	GROVE
	f	Lys;	E	SNOWY_SLOPES
	f	Lys;	F	FROZEN_PEAKS
	f	Lys;	G	JAGGED_PEAKS
	f	Lys;	H	STONY_PEAKS
	f	Lys;	I	RIVER
	f	Lys;	J	FROZEN_RIVER
	f	Lys;	K	BEACH
	f	Lys;	L	SNOWY_BEACH
	f	Lys;	M	STONY_SHORE
	f	Lys;	N	WARM_OCEAN
	f	Lys;	O	LUKEWARM_OCEAN
	f	Lys;	P	DEEP_LUKEWARM_OCEAN
	f	Lys;	Q	OCEAN
	f	Lys;	R	DEEP_OCEAN
	f	Lys;	S	COLD_OCEAN
	f	Lys;	T	DEEP_COLD_OCEAN
	f	Lys;	U	FROZEN_OCEAN
	f	Lys;	V	DEEP_FROZEN_OCEAN
	f	Lys;	W	MUSHROOM_FIELDS
	f	Lys;	X	DRIPSTONE_CAVES
	f	Lys;	Y	LUSH_CAVES
	f	Lys;	Z	NETHER_WASTES
	f	Lys;	a	THE_VOID
	f	Lys;	aa	WARPED_FOREST
	f	Lys;	ab	CRIMSON_FOREST
	f	Lys;	ac	SOUL_SAND_VALLEY
	f	Lys;	ad	BASALT_DELTAS
	f	Lys;	ae	THE_END
	f	Lys;	af	END_HIGHLANDS
	f	Lys;	ag	END_MIDLANDS
	f	Lys;	ah	SMALL_END_ISLANDS
	f	Lys;	ai	END_BARRENS
	f	Lys;	b	PLAINS
	f	Lys;	c	SUNFLOWER_PLAINS
	f	Lys;	d	SNOWY_PLAINS
	f	Lys;	e	ICE_SPIKES
	f	Lys;	f	DESERT
	f	Lys;	g	SWAMP
	f	Lys;	h	FOREST
	f	Lys;	i	FLOWER_FOREST
	f	Lys;	j	BIRCH_FOREST
	f	Lys;	k	DARK_FOREST
	f	Lys;	l	OLD_GROWTH_BIRCH_FOREST
	f	Lys;	m	OLD_GROWTH_PINE_TAIGA
	f	Lys;	n	OLD_GROWTH_SPRUCE_TAIGA
	f	Lys;	o	TAIGA
	f	Lys;	p	SNOWY_TAIGA
	f	Lys;	q	SAVANNA
	f	Lys;	r	SAVANNA_PLATEAU
	f	Lys;	s	WINDSWEPT_HILLS
	f	Lys;	t	WINDSWEPT_GRAVELLY_HILLS
	f	Lys;	u	WINDSWEPT_FOREST
	f	Lys;	v	WINDSWEPT_SAVANNA
	f	Lys;	w	JUNGLE
	f	Lys;	x	SPARSE_JUNGLE
	f	Lys;	y	BAMBOO_JUNGLE
	f	Lys;	z	BADLANDS
c	cby	net/minecraft/world/level/biome/CheckerboardColumnBiomeSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(J)Lcbv;	a	withSeed
	m	(Lcby;)Ljava/lang/Integer;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lcby;)Lgt;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lgt;	c	allowedBiomes
	f	I	d	bitShift
	f	I	e	size
c	cbz	net/minecraft/world/level/biome/Climate
	m	()Lcbz$f;	a	empty
	m	(F)J	a	quantizeCoord
	m	(FFFFFF)Lcbz$h;	a	target
	m	(FFFFFFF)Lcbz$d;	a	parameters
	m	(J)F	a	unquantizeCoord
	m	(Lcbz$b;Lcbz$b;Lcbz$b;Lcbz$b;Lcbz$b;Lcbz$b;F)Lcbz$d;	a	parameters
	m	(Ljava/util/List;Lcbz$f;)Lgj;	a	findSpawnPosition
	f	I	a	PARAMETER_COUNT
	f	Z	b	DEBUG_SLOW_BIOME_SEARCH
	f	F	c	QUANTIZATION_FACTOR
c	cbz$a	net/minecraft/world/level/biome/Climate$DistanceMetric
c	cbz$b	net/minecraft/world/level/biome/Climate$Parameter
	m	()J	a	min
	m	(F)Lcbz$b;	a	point
	m	(FF)Lcbz$b;	a	span
	m	(J)J	a	distance
	m	(Lcbz$b;)J	a	distance
	m	(Lcbz$b;Lcbz$b;)Lcbz$b;	a	span
	m	(Ljava/lang/Float;Ljava/lang/Float;)Lcom/mojang/serialization/DataResult;	a	lambda$static$0
	m	()J	b	max
	m	(Lcbz$b;)Lcbz$b;	b	span
	m	(Lcbz$b;)Ljava/lang/Float;	c	lambda$static$2
	m	(Lcbz$b;)Ljava/lang/Float;	d	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	J	b	min
	f	J	c	max
c	cbz$c	net/minecraft/world/level/biome/Climate$ParameterList
	m	()Ljava/util/List;	a	values
	m	(Lcbz$h;)Ljava/lang/Object;	a	findValue
	m	(Lcbz$h;Lcbz$a;)Ljava/lang/Object;	a	findValueIndex
	m	(Lcbz$h;)Ljava/lang/Object;	b	findValueBruteForce
	m	(Lcbz$h;)Ljava/lang/Object;	c	findValueIndex
	f	Ljava/util/List;	a	values
	f	Lcbz$e;	b	index
c	cbz$d	net/minecraft/world/level/biome/Climate$ParameterPoint
	m	()Ljava/util/List;	a	parameterSpace
	m	(Lcbz$d;)Ljava/lang/Long;	a	lambda$static$6
	m	(Lcbz$h;)J	a	fitness
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
	m	()Lcbz$b;	b	temperature
	m	(Lcbz$d;)Lcbz$b;	b	lambda$static$5
	m	()Lcbz$b;	c	humidity
	m	(Lcbz$d;)Lcbz$b;	c	lambda$static$4
	m	()Lcbz$b;	d	continentalness
	m	(Lcbz$d;)Lcbz$b;	d	lambda$static$3
	m	()Lcbz$b;	e	erosion
	m	(Lcbz$d;)Lcbz$b;	e	lambda$static$2
	m	()Lcbz$b;	f	depth
	m	(Lcbz$d;)Lcbz$b;	f	lambda$static$1
	m	()Lcbz$b;	g	weirdness
	m	(Lcbz$d;)Lcbz$b;	g	lambda$static$0
	m	()J	h	offset
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcbz$b;	b	temperature
	f	Lcbz$b;	c	humidity
	f	Lcbz$b;	d	continentalness
	f	Lcbz$b;	e	erosion
	f	Lcbz$b;	f	depth
	f	Lcbz$b;	g	weirdness
	f	J	h	offset
c	cbz$e	net/minecraft/world/level/biome/Climate$RTree
	m	(ILcbz$e$b;)J	a	lambda$build$1
	m	(ILcbz$e$c;)Lcbz$e$b;	a	lambda$build$2
	m	(ILjava/util/List;)Lcbz$e$b;	a	build
	m	(IZ)Ljava/util/Comparator;	a	comparator
	m	(IZLcbz$e$b;)J	a	lambda$comparator$3
	m	(Lcbz$h;Lcbz$a;)Ljava/lang/Object;	a	search
	m	(Lcom/mojang/datafixers/util/Pair;)Lcbz$e$a;	a	lambda$create$0
	m	(Ljava/util/List;)Lcbz$e;	a	create
	m	(Ljava/util/List;IIZ)V	a	sort
	m	([Lcbz$b;)J	a	cost
	m	(Ljava/util/List;)Ljava/util/List;	b	bucketize
	m	(Ljava/util/List;)Ljava/util/List;	c	buildParameterSpace
	f	I	a	CHILDREN_PER_NODE
	f	Lcbz$e$b;	b	root
	f	Ljava/lang/ThreadLocal;	c	lastResult
c	cbz$e$a	net/minecraft/world/level/biome/Climate$RTree$Leaf
	m	([JLcbz$e$a;Lcbz$a;)Lcbz$e$a;	a	search
	f	Ljava/lang/Object;	b	value
c	cbz$e$b	net/minecraft/world/level/biome/Climate$RTree$Node
	m	([J)J	a	distance
	m	([JLcbz$e$a;Lcbz$a;)Lcbz$e$a;	a	search
	f	[Lcbz$b;	a	parameterSpace
c	cbz$e$c	net/minecraft/world/level/biome/Climate$RTree$SubTree
	m	([JLcbz$e$a;Lcbz$a;)Lcbz$e$a;	a	search
	f	[Lcbz$e$b;	b	children
c	cbz$f	net/minecraft/world/level/biome/Climate$Sampler
	m	()Lgj;	a	findSpawnPosition
	m	(III)Lcbz$h;	a	sample
	m	()Lctp;	b	temperature
	m	()Lctp;	c	humidity
	m	()Lctp;	d	continentalness
	m	()Lctp;	e	erosion
	m	()Lctp;	f	depth
	m	()Lctp;	g	weirdness
	m	()Ljava/util/List;	h	spawnTarget
	f	Lctp;	a	temperature
	f	Lctp;	b	humidity
	f	Lctp;	c	continentalness
	f	Lctp;	d	erosion
	f	Lctp;	e	depth
	f	Lctp;	f	weirdness
	f	Ljava/util/List;	g	spawnTarget
c	cbz$g	net/minecraft/world/level/biome/Climate$SpawnFinder
	m	(Ljava/util/List;Lcbz$f;FF)V	a	radialSearch
	m	(Ljava/util/List;Lcbz$f;II)Lcbz$g$a;	a	getSpawnPositionAndFitness
	f	Lcbz$g$a;	a	result
c	cbz$g$a	net/minecraft/world/level/biome/Climate$SpawnFinder$Result
	m	()Lgj;	a	location
	m	()J	b	fitness
	f	Lgj;	a	location
	f	J	b	fitness
c	cbz$h	net/minecraft/world/level/biome/Climate$TargetPoint
	m	()[J	a	toParameterArray
	m	()J	b	temperature
	m	()J	c	humidity
	m	()J	d	continentalness
	m	()J	e	erosion
	m	()J	f	depth
	m	()J	g	weirdness
	f	J	a	temperature
	f	J	b	humidity
	f	J	c	continentalness
	f	J	d	erosion
	f	J	e	depth
	f	J	f	weirdness
c	cca	net/minecraft/world/level/biome/FixedBiomeSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(IIIIILjava/util/function/Predicate;Ljava/util/Random;ZLcbz$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
	m	(IIIILcbz$f;)Ljava/util/Set;	a	getBiomesWithin
	m	(J)Lcbv;	a	withSeed
	m	(Lcca;)Lgs;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lgs;	c	biome
c	ccb	net/minecraft/world/level/biome/MobSpawnSettings
	m	()F	a	getCreatureProbability
	m	(Laxo;)Lccb$b;	a	getMobSpawnCost
	m	(Layb;)Lauw;	a	getMobs
	m	(Lccb;)Ljava/util/Map;	a	lambda$static$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lccb;)Ljava/util/Map;	b	lambda$static$1
	m	(Lccb;)Ljava/lang/Float;	c	lambda$static$0
	f	Lauw;	a	EMPTY_MOB_LIST
	f	Lccb;	b	EMPTY
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	F	e	DEFAULT_CREATURE_SPAWN_PROBABILITY
	f	F	f	creatureGenerationProbability
	f	Ljava/util/Map;	g	spawners
	f	Ljava/util/Map;	h	mobSpawnCosts
c	ccb$a	net/minecraft/world/level/biome/MobSpawnSettings$Builder
	m	()Lccb;	a	build
	m	(F)Lccb$a;	a	creatureGenerationProbability
	m	(Laxo;DD)Lccb$a;	a	addMobCharge
	m	(Layb;)Ljava/util/List;	a	lambda$new$1
	m	(Layb;Lccb$c;)Lccb$a;	a	addSpawn
	m	(Ljava/util/Map$Entry;)Lauw;	a	lambda$build$2
	m	(Layb;)Layb;	b	lambda$new$0
	f	Ljava/util/Map;	a	spawners
	f	Ljava/util/Map;	b	mobSpawnCosts
	f	F	c	creatureGenerationProbability
c	ccb$b	net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost
	m	()D	a	getEnergyBudget
	m	(Lccb$b;)Ljava/lang/Double;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	()D	b	getCharge
	m	(Lccb$b;)Ljava/lang/Double;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	energyBudget
	f	D	c	charge
c	ccb$c	net/minecraft/world/level/biome/MobSpawnSettings$SpawnerData
	m	(Lccb$c;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lccb$c;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Lccb$c;)Laxo;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laxo;	b	type
	f	I	c	minCount
	f	I	d	maxCount
c	ccc	net/minecraft/world/level/biome/MultiNoiseBiomeSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(J)Lcbv;	a	withSeed
	m	(Lcbz$h;)Lgs;	a	getNoiseBiome
	m	(Lccc$a;)Z	a	stable
	m	(Lccc;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$5
	m	(Lcom/mojang/datafixers/util/Either;)Lccc;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ljava/util/List;Lgj;Lcbz$f;)V	a	addDebugInfo
	m	(Lccc;)Lcom/mojang/datafixers/util/Either;	b	lambda$static$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	(Lccc;)Lcbz$c;	c	lambda$static$1
	m	()Ljava/util/Optional;	d	preset
	f	Lcom/mojang/serialization/MapCodec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcbz$c;	d	parameters
	f	Ljava/util/Optional;	e	preset
c	ccc$a	net/minecraft/world/level/biome/MultiNoiseBiomeSource$Preset
	m	(Lccc$b;Z)Lccc;	a	biomeSource
	m	(Lcom/google/common/collect/ImmutableList$Builder;Lhb;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$static$1
	m	(Lhb;)Lccc;	a	biomeSource
	m	(Lhb;Z)Lccc;	a	biomeSource
	m	(Lhb;)Lcbz$c;	b	lambda$static$2
	m	(Lhb;)Lcbz$c;	c	lambda$static$0
	f	Lccc$a;	a	NETHER
	f	Lccc$a;	b	OVERWORLD
	f	Ljava/util/Map;	c	BY_NAME
	f	Lyt;	d	name
	f	Ljava/util/function/Function;	e	parameterSource
c	ccc$b	net/minecraft/world/level/biome/MultiNoiseBiomeSource$PresetInstance
	m	()Lccc;	a	biomeSource
	m	(Lccc$a;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lyt;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	()Lccc$a;	b	preset
	m	(Lyt;)Lcom/mojang/serialization/DataResult;	b	lambda$static$0
	m	()Lhb;	c	biomes
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lccc$a;	b	preset
	f	Lhb;	c	biomes
c	ccd	net/minecraft/world/level/biome/OverworldBiomeBuilder
	m	()Ljava/util/List;	a	spawnTarget
	m	(D)Ljava/lang/String;	a	getDebugStringForPeaksAndValleys
	m	(D[Lcbz$b;)Ljava/lang/String;	a	getDebugStringForNoiseValue
	m	(II)Lys;	a	pickBeachBiome
	m	(IILcbz$b;)Lys;	a	pickMiddleBiome
	m	(IILcbz$b;Lys;)Lys;	a	maybePickWindsweptSavannaBiome
	m	(ILcbz$b;)Lys;	a	pickBadlandsBiome
	m	(Ljava/util/function/Consumer;)V	a	addBiomes
	m	(Ljava/util/function/Consumer;Lcbz$b;)V	a	addPeaks
	m	(Ljava/util/function/Consumer;Lcbz$b;Lcbz$b;Lcbz$b;Lcbz$b;Lcbz$b;FLys;)V	a	addSurfaceBiome
	m	()[Lcbz$b;	b	getTemperatureThresholds
	m	(D)Ljava/lang/String;	b	getDebugStringForContinentalness
	m	(IILcbz$b;)Lys;	b	pickMiddleBiomeOrBadlandsIfHot
	m	(Ljava/util/function/Consumer;)V	b	addOffCoastBiomes
	m	(Ljava/util/function/Consumer;Lcbz$b;)V	b	addHighSlice
	m	(Ljava/util/function/Consumer;Lcbz$b;Lcbz$b;Lcbz$b;Lcbz$b;Lcbz$b;FLys;)V	b	addUndergroundBiome
	m	()[Lcbz$b;	c	getHumidityThresholds
	m	(D)Ljava/lang/String;	c	getDebugStringForErosion
	m	(IILcbz$b;)Lys;	c	pickMiddleBiomeOrBadlandsIfHotOrSlopeIfCold
	m	(Ljava/util/function/Consumer;)V	c	addInlandBiomes
	m	(Ljava/util/function/Consumer;Lcbz$b;)V	c	addMidSlice
	m	()[Lcbz$b;	d	getErosionThresholds
	m	(D)Ljava/lang/String;	d	getDebugStringForTemperature
	m	(IILcbz$b;)Lys;	d	pickShatteredCoastBiome
	m	(Ljava/util/function/Consumer;)V	d	addUndergroundBiomes
	m	(Ljava/util/function/Consumer;Lcbz$b;)V	d	addLowSlice
	m	()[Lcbz$b;	e	getContinentalnessThresholds
	m	(D)Ljava/lang/String;	e	getDebugStringForHumidity
	m	(IILcbz$b;)Lys;	e	pickPlateauBiome
	m	(Ljava/util/function/Consumer;Lcbz$b;)V	e	addValleys
	m	()[Lcbz$b;	f	getPeaksAndValleysThresholds
	m	(IILcbz$b;)Lys;	f	pickPeakBiome
	m	()[Lcbz$b;	g	getWeirdnessThresholds
	m	(IILcbz$b;)Lys;	g	pickSlopeBiome
	m	(IILcbz$b;)Lys;	h	pickShatteredBiome
	f	[[Lys;	A	OCEANS
	f	[[Lys;	B	MIDDLE_BIOMES
	f	[[Lys;	C	MIDDLE_BIOMES_VARIANT
	f	[[Lys;	D	PLATEAU_BIOMES
	f	[[Lys;	E	PLATEAU_BIOMES_VARIANT
	f	[[Lys;	F	SHATTERED_BIOMES
	f	F	a	HIGH_START
	f	F	b	PEAK_START
	f	F	c	NEAR_INLAND_START
	f	F	d	MID_INLAND_START
	f	F	e	FAR_INLAND_START
	f	F	f	EROSION_INDEX_1_START
	f	F	g	EROSION_INDEX_2_START
	f	F	h	VALLEY_SIZE
	f	F	i	LOW_START
	f	F	j	HIGH_END
	f	F	k	PEAK_SIZE
	f	F	l	PEAK_END
	f	Lcbz$b;	m	FULL_RANGE
	f	[Lcbz$b;	n	temperatures
	f	[Lcbz$b;	o	humidities
	f	[Lcbz$b;	p	erosions
	f	Lcbz$b;	q	FROZEN_RANGE
	f	Lcbz$b;	r	UNFROZEN_RANGE
	f	Lcbz$b;	s	mushroomFieldsContinentalness
	f	Lcbz$b;	t	deepOceanContinentalness
	f	Lcbz$b;	u	oceanContinentalness
	f	Lcbz$b;	v	coastContinentalness
	f	Lcbz$b;	w	inlandContinentalness
	f	Lcbz$b;	x	nearInlandContinentalness
	f	Lcbz$b;	y	midInlandContinentalness
	f	Lcbz$b;	z	farInlandContinentalness
c	cce	net/minecraft/world/level/biome/TerrainShaper
	m	()Lair;	a	offsetSampler
	m	(F)F	a	peaksAndValleys
	m	(FFF)Lcce$c;	a	makePoint
	m	(FFFF)F	a	calculateSlope
	m	(FFFFFFLajy;)Lair;	a	ridgeSpline
	m	(FFFFFFZZLajy;)Lair;	a	buildErosionOffsetSpline
	m	(FFFFLajy;)Lair;	a	buildErosionJaggednessSpline
	m	(FFLajy;)Lair;	a	buildRidgeJaggednessSpline
	m	(FLajy;)Lair;	a	buildWeirdnessJaggednessSpline
	m	(FZLajy;)Lair;	a	getErosionFactor
	m	(Lcce$c;)F	a	offset
	m	(Lcce;)Lair;	a	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lctp$b;)Lcce$d;	a	makePoint
	m	(Ljava/lang/Float;)F	a	lambda$static$2
	m	(Ljava/util/function/Consumer;)V	a	addDebugBiomesToVisualizeSplinePoints
	m	(Z)Lcce;	a	overworld
	m	()Lair;	b	factorSampler
	m	(F)F	b	getAmplifiedOffset
	m	(FFF)F	b	mountainContinentalness
	m	(FZLajy;)Lair;	b	buildMountainRidgeSplineWithPoints
	m	(Lcce$c;)F	b	factor
	m	()Lair;	c	jaggednessSampler
	m	(F)F	c	getAmplifiedFactor
	m	(Lcce$c;)F	c	jaggedness
	m	(F)F	d	getAmplifiedJaggedness
	m	(F)F	e	calculateMountainRidgeZeroContinentalnessPoint
	f	Lcom/mojang/serialization/Codec;	a	SPLINE_CUSTOM_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lair;	c	offsetSampler
	f	Lair;	d	factorSampler
	f	Lair;	e	jaggednessSampler
	f	Lcom/mojang/serialization/Codec;	f	SPLINE_CODEC
	f	F	g	GLOBAL_OFFSET
	f	Lajy;	h	NO_TRANSFORM
c	cce$a	net/minecraft/world/level/biome/TerrainShaper$Coordinate
	m	()[Lcce$a;	a	$values
	m	(Lajy;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
	m	(Lcce$a;)Lajy;	a	lambda$static$1
	m	(Lcce$c;)F	a	apply
	m	(Lcce$a;)Lcce$a;	b	lambda$static$0
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcce$a;	a	CONTINENTS
	f	Lcce$a;	b	EROSION
	f	Lcce$a;	c	WEIRDNESS
	f	Lcce$a;	d	RIDGES
	f	Ljava/util/Map;	e	BY_NAME
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Lcom/mojang/serialization/Codec;	g	WIDE_CODEC
	f	Lajy;	h	reference
	f	Ljava/lang/String;	i	name
	f	[Lcce$a;	j	$VALUES
c	cce$b	net/minecraft/world/level/biome/TerrainShaper$CoordinateCustom
	m	()Lgs;	a	function
	m	(Lajy;)Lcom/mojang/serialization/DataResult;	a	lambda$static$0
	m	(Lcce$d;)F	a	apply
	m	(Lctp$e;)Lcce$b;	a	mapAll
	f	Lgs;	a	function
	f	Lcom/mojang/serialization/Codec;	b	WIDE_CODEC
c	cce$c	net/minecraft/world/level/biome/TerrainShaper$Point
	m	()F	a	continents
	m	()F	b	erosion
	m	()F	c	ridges
	m	()F	d	weirdness
	f	F	a	continents
	f	F	b	erosion
	f	F	c	ridges
	f	F	d	weirdness
c	cce$d	net/minecraft/world/level/biome/TerrainShaper$PointCustom
	m	()Lctp$b;	a	context
	f	Lctp$b;	a	context
c	ccf	net/minecraft/world/level/biome/TheEndBiomeSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(J)Lcbv;	a	withSeed
	m	(Lccf;)Ljava/lang/Long;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldif;II)F	a	getHeightValue
	m	(J)Z	b	stable
	m	(Lccf;)Lhb;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	c	ISLAND_CHUNK_DISTANCE
	f	F	d	ISLAND_THRESHOLD
	f	J	e	ISLAND_CHUNK_DISTANCE_SQR
	f	Ldif;	f	islandNoise
	f	J	g	seed
	f	Lgs;	h	end
	f	Lgs;	i	highlands
	f	Lgs;	j	midlands
	f	Lgs;	k	islands
	f	Lgs;	l	barrens
c	ccg	net/minecraft/world/level/biome/package-info
c	cch	net/minecraft/world/level/block/AbstractBannerBlock
	m	()Z	Y_	isPossibleToRespawnInThis
	m	(Lbuw;Lcmi;)V	a	lambda$setPlacedBy$1
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	()Lbts;	b	getColor
	m	(Lbuw;Lcmi;)V	b	lambda$setPlacedBy$0
	f	Lbts;	a	color
c	cci	net/minecraft/world/level/block/AbstractCandleBlock
	m	(Lboj;Lcov;Lcaw;Lgj;)V	a	extinguish
	m	(Lcav;Lcov;Ldpk;Lboz;)V	a	onProjectileHit
	m	(Lcav;Ldpo;Ljava/util/Random;)V	a	addParticlesAndSound
	m	(Lcav;Lgj;Ljava/util/Random;Ldpo;)V	a	lambda$animateTick$0
	m	(Lcaw;Lcov;Lgj;Z)V	a	setLit
	m	(Lcaw;Lgj;Ldpo;)V	a	lambda$extinguish$1
	m	(Lcov;)Ljava/lang/Iterable;	a	getParticleOffsets
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;)Z	b	isLit
	m	(Lcov;)Z	c	canBeLit
	f	I	a	LIGHT_PER_CANDLE
	f	Lcpm;	b	LIT
c	ccj	net/minecraft/world/level/block/AbstractCauldronBlock
	m	(Lcov;)D	a	getContentHeight
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;)Ldqh;	a	getInteractionShape
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Ldiw;)V	a	receiveStalactiteDrip
	m	(Lcov;Lgj;Laxk;)Z	a	isEntityInsideContent
	m	(Ldiw;)Z	a	canReceiveStalactiteDrip
	m	(Lcov;)Z	c	isFull
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	f	I	a	FLOOR_LEVEL
	f	Ldqh;	b	SHAPE
	f	I	c	SIDE_THICKNESS
	f	I	d	LEG_WIDTH
	f	I	e	LEG_HEIGHT
	f	I	f	LEG_DEPTH
	f	Ldqh;	g	INSIDE
	f	Ljava/util/Map;	h	interactions
c	cck	net/minecraft/world/level/block/AbstractChestBlock
	m	(Lcov;Lcav;Lgj;Z)Lcfn$c;	a	combine
	f	Ljava/util/function/Supplier;	a	blockEntityType
c	ccl	net/minecraft/world/level/block/AbstractFurnaceBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lcmt;Lcmt;)Lcms;	a	createFurnaceTicker
	m	(Lcav;Lgj;Lboj;)V	a	openContainer
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	f	Lcpp;	a	FACING
	f	Lcpm;	b	LIT
c	ccm	net/minecraft/world/level/block/AbstractGlassBlock
	m	(Lcov;Lcab;Lgj;)F	b	getShadeBrightness
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	b	getVisualShape
	m	(Lcov;Lcab;Lgj;)Z	c	propagatesSkylightDown
c	ccn	net/minecraft/world/level/block/AbstractSkullBlock
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	()Lcjw$a;	b	getType
	f	Lcjw$a;	a	type
c	cco	net/minecraft/world/level/block/AirBlock
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;)Lcjf;	b_	getRenderShape
c	ccp	net/minecraft/world/level/block/AmethystBlock
	m	(Lcav;Lcov;Ldpk;Lboz;)V	a	onProjectileHit
c	ccq	net/minecraft/world/level/block/AmethystClusterBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;)Ldjd;	d	getPistonPushReaction
	f	Lcpm;	a	WATERLOGGED
	f	Lcpp;	b	FACING
	f	Ldqh;	c	northAabb
	f	Ldqh;	d	southAabb
	f	Ldqh;	e	eastAabb
	f	Ldqh;	f	westAabb
	f	Ldqh;	g	upAabb
	f	Ldqh;	h	downAabb
c	ccq$1	net/minecraft/world/level/block/AmethystClusterBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	ccr	net/minecraft/world/level/block/AnvilBlock
	m	(Lblh;)V	a	falling
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;ILboi;Lboj;)Lbqp;	a	lambda$getMenuProvider$0
	m	(Lcav;Lgj;Lblh;)V	a	onBrokenAfterFall
	m	(Lcav;Lgj;Lcov;Lcov;Lblh;)V	a	onLand
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	()Lawu;	b	getFallDamageSource
	m	(Lcov;Lcav;Lgj;)Lawk;	b	getMenuProvider
	m	(Lcov;Lcab;Lgj;)I	d	getDustColor
	m	(Lcov;)Lcov;	e	damage
	f	Lcpp;	a	FACING
	f	Ldqh;	b	BASE
	f	Ldqh;	c	X_LEG1
	f	Ldqh;	d	X_LEG2
	f	Ldqh;	e	X_TOP
	f	Ldqh;	f	Z_LEG1
	f	Ldqh;	g	Z_LEG2
	f	Ldqh;	h	Z_TOP
	f	Ldqh;	i	X_AXIS_AABB
	f	Ldqh;	j	Z_AXIS_AABB
	f	Lqk;	k	CONTAINER_TITLE
	f	F	l	FALL_DAMAGE_PER_DISTANCE
	f	I	m	FALL_DAMAGE_MAX
c	ccs	net/minecraft/world/level/block/AttachedStemBlock
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
	f	Lcpp;	a	FACING
	f	F	b	AABB_OFFSET
	f	Ljava/util/Map;	c	AABBS
	f	Lckq;	d	fruit
	f	Ljava/util/function/Supplier;	e	seedSupplier
c	cct	net/minecraft/world/level/block/AzaleaBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
	f	Lcoe;	a	TREE_GROWER
	f	Ldqh;	b	SHAPE
c	ccu	net/minecraft/world/level/block/BambooBlock
	m	()Lcou$b;	U_	getOffsetType
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;)I	a	getHeightAboveUpToMax
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lboj;Lcab;Lgj;)F	a	getDestroyProgress
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;I)V	a	growBamboo
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcab;Lgj;)Z	a_	isCollisionShapeFullBlock
	m	(Lcab;Lgj;)I	b	getHeightBelowUpToMax
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcab;Lgj;)Z	c	propagatesSkylightDown
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	m	(Lcov;)Z	e_	isRandomlyTicking
	f	F	a	SMALL_LEAVES_AABB_OFFSET
	f	F	b	LARGE_LEAVES_AABB_OFFSET
	f	F	c	COLLISION_AABB_OFFSET
	f	Ldqh;	d	SMALL_SHAPE
	f	Ldqh;	e	LARGE_SHAPE
	f	Ldqh;	f	COLLISION_SHAPE
	f	Lcpv;	g	AGE
	f	Lcpt;	h	LEAVES
	f	Lcpv;	i	STAGE
	f	I	j	MAX_HEIGHT
	f	I	k	STAGE_GROWING
	f	I	l	STAGE_DONE_GROWING
	f	I	m	AGE_THIN_BAMBOO
	f	I	n	AGE_THICK_BAMBOO
c	ccv	net/minecraft/world/level/block/BambooSaplingBlock
	m	()Lcou$b;	U_	getOffsetType
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Lgj;)V	a	growBamboo
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Lboj;Lcab;Lgj;)F	a	getDestroyProgress
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	f	F	a	SAPLING_AABB_OFFSET
	f	Ldqh;	b	SAPLING_SHAPE
c	ccw	net/minecraft/world/level/block/BannerBlock
	m	(Lbts;)Lcdq;	a	byColor
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	f	Lcpv;	a	ROTATION
	f	Ljava/util/Map;	b	BY_COLOR
	f	Ldqh;	c	SHAPE
c	ccx	net/minecraft/world/level/block/BarrelBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	f	Lcpp;	a	FACING
	f	Lcpm;	b	OPEN
c	ccy	net/minecraft/world/level/block/BarrierBlock
	m	(Lcov;Lcab;Lgj;)F	b	getShadeBrightness
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;Lcab;Lgj;)Z	c	propagatesSkylightDown
c	ccz	net/minecraft/world/level/block/BaseCoralFanBlock
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	f	Ldqh;	a	AABB
c	cda	net/minecraft/world/level/block/BaseCoralPlantBlock
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	f	F	a	AABB_OFFSET
	f	Ldqh;	b	SHAPE
c	cdb	net/minecraft/world/level/block/BaseCoralPlantTypeBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcaw;Lgj;)V	a	tryScheduleDieTick
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;Lcab;Lgj;)Z	e	scanForWater
	f	Ldqh;	a	AABB
	f	Lcpm;	c	WATERLOGGED
c	cdc	net/minecraft/world/level/block/BaseCoralWallFanBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	f	Lcpp;	a	FACING
	f	Ljava/util/Map;	b	SHAPES
c	cdd	net/minecraft/world/level/block/BaseEntityBlock
	m	(Lcmt;Lcmt;Lcms;)Lcms;	a	createTickerHelper
	m	(Lcov;Lcav;Lgj;II)Z	a	triggerEvent
	m	(Lcov;Lcav;Lgj;)Lawk;	b	getMenuProvider
	m	(Lcov;)Lcjf;	b_	getRenderShape
c	cde	net/minecraft/world/level/block/BaseFireBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;)Lcov;	a	getState
	m	(Lcav;)Z	a	inPortalDimension
	m	(Lcav;Lboj;Lgj;Lcov;)V	a	spawnDestroyParticles
	m	(Lcav;Lgj;Lcov;Lboj;)V	a	playerWillDestroy
	m	(Lcav;Lgj;Lgo;)Z	a	canBePlacedAt
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcav;Lgj;Lgo;)Z	b	isPortal
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	(Lcov;)Z	f	canBurn
	f	F	a	AABB_OFFSET
	f	Ldqh;	b	DOWN_AABB
	f	I	c	SECONDS_ON_FIRE
	f	F	d	fireDamage
c	cdf	net/minecraft/world/level/block/BasePressurePlateBlock
	m	()Z	Y_	isPossibleToRespawnInThis
	m	(Laxk;Lcav;Lgj;Lcov;I)V	a	checkPressed
	m	(Lcav;Lgj;)V	a	updateNeighbours
	m	(Lcaw;Lgj;)V	a	playOnSound
	m	(Lcov;I)Lcov;	a	setSignalForState
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcav;Lgj;)I	b	getSignalStrength
	m	(Lcaw;Lgj;)V	b	playOffSound
	m	(Lcov;Lcab;Lgj;Lgo;)I	b	getDirectSignal
	m	()I	c	getPressedTime
	m	(Lcov;)Ldjd;	d	getPistonPushReaction
	m	(Lcov;)Z	f_	isSignalSource
	m	(Lcov;)I	g	getSignalForState
	f	Ldqh;	a	PRESSED_AABB
	f	Ldqh;	b	AABB
	f	Ldpj;	c	TOUCH_AABB
c	cdg	net/minecraft/world/level/block/BaseRailBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;)Z	a	isRail
	m	(Lcav;Lgj;Lcov;Z)Lcov;	a	updateDir
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lcdq;)V	a	updateState
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lcav;Lgj;Z)Lcov;	a	updateState
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lgj;Lcav;Lcpz;)Z	a	shouldBeRemoved
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	()Z	c	isStraight
	m	(Lcov;)Ldix;	c_	getFluidState
	m	()Lcpy;	d	getShapeProperty
	m	(Lcov;)Ldjd;	d	getPistonPushReaction
	m	(Lcov;)Z	g	isRail
	f	Ldqh;	a	FLAT_AABB
	f	Ldqh;	b	HALF_BLOCK_AABB
	f	Lcpm;	c	WATERLOGGED
	f	Z	d	isStraight
c	cdg$1	net/minecraft/world/level/block/BaseRailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
c	cdh	net/minecraft/world/level/block/BeaconBeamBlock
	m	()Lbts;	a	getColor
c	cdi	net/minecraft/world/level/block/BeaconBlock
	m	()Lbts;	a	getColor
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcov;)Lcjf;	b_	getRenderShape
c	cdj	net/minecraft/world/level/block/BedBlock
	m	(Laxk;)V	a	bounceUp
	m	(Laxo;Lcaf;Lgj;F)Ljava/util/Optional;	a	findStandUpPosition
	m	(Laxo;Lcaf;Lgj;Lgo;Lgo;)Ljava/util/Optional;	a	findBunkBedStandUpPosition
	m	(Laxo;Lcaf;Lgj;[[IZ)Ljava/util/Optional;	a	findStandUpPositionAtOffset
	m	(Lboj;Lboj$a;)V	a	lambda$use$0
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Laxk;)V	a	updateEntityAfterFallOn
	m	(Lcab;Lgj;)Lgo;	a	getBedOrientation
	m	(Lcav;)Z	a	canSetSpawn
	m	(Lcav;Lcov;Lgj;Laxk;F)V	a	fallOn
	m	(Lcav;Lgj;)Z	a	kickVillagerOutOfBed
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcav;Lgj;Lcov;Lboj;)V	a	playerWillDestroy
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lgj;)J	a	getSeed
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcpj;Lgo;)Lgo;	a	getNeighbourDirection
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lgo;)[[I	a	bedAboveStandUpOffsets
	m	(Lgo;Lgo;)[[I	a	bedStandUpOffsets
	m	(Lcab;Lgj;)Z	b	isBunkBed
	m	(Lgo;Lgo;)[[I	b	bedSurroundStandUpOffsets
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	()Lbts;	c	getColor
	m	(Lcov;)Ldjd;	d	getPistonPushReaction
	m	(Lcov;)Lgo;	g	getConnectedDirection
	m	(Lcov;)Lcfn$a;	h	getBlockType
	f	Lcpt;	a	PART
	f	Lcpm;	b	OCCUPIED
	f	I	c	HEIGHT
	f	Ldqh;	d	BASE
	f	Ldqh;	e	LEG_NORTH_WEST
	f	Ldqh;	f	LEG_SOUTH_WEST
	f	Ldqh;	g	LEG_NORTH_EAST
	f	Ldqh;	h	LEG_SOUTH_EAST
	f	Ldqh;	i	NORTH_SHAPE
	f	Ldqh;	j	SOUTH_SHAPE
	f	Ldqh;	k	WEST_SHAPE
	f	Ldqh;	l	EAST_SHAPE
	f	I	m	LEG_WIDTH
	f	Lbts;	n	color
c	cdj$1	net/minecraft/world/level/block/BedBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cdk	net/minecraft/world/level/block/BeehiveBlock
	m	(Lawg;Lboj;)V	a	lambda$use$0
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;DDDDD)V	a	spawnFluidParticle
	m	(Lcav;Lboj;Lgj;Lcov;Lcmr;Lbuw;)V	a	playerDestroy
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcav;Lcov;Lgj;)V	a	resetHoneyLevel
	m	(Lcav;Lcov;Lgj;Lboj;Lcmo$b;)V	a	releaseBeesAndResetHoneyLevel
	m	(Lcav;Lgj;)V	a	dropHoneycomb
	m	(Lcav;Lgj;Lcov;)V	a	trySpawnDripParticles
	m	(Lcav;Lgj;Lcov;Lboj;)V	a	playerWillDestroy
	m	(Lcav;Lgj;Ldqh;D)V	a	spawnParticle
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Ldlc$a;)Ljava/util/List;	a	getDrops
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcav;Lgj;)V	b	angerNearbyBees
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcav;Lgj;)Z	c	hiveContainsBees
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	f	Lcpp;	a	FACING
	f	Lcpv;	b	HONEY_LEVEL
	f	I	c	MAX_HONEY_LEVELS
	f	I	d	SHEARED_HONEYCOMB_COUNT
c	cdl	net/minecraft/world/level/block/BeetrootBlock
	m	(Lcav;)I	a	getBonemealAgeIncrease
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	()Lcpv;	c	getAgeProperty
	m	()I	d	getMaxAge
	m	()Lcau;	e	getBaseSeedId
	f	I	a	MAX_AGE
	f	Lcpv;	b	AGE
	f	[Ldqh;	e	SHAPE_BY_AGE
c	cdm	net/minecraft/world/level/block/BellBlock
	m	(Laxk;Lcav;Lgj;Lgo;)Z	a	attemptToRing
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcav;Lcov;Ldpk;Lboj;Z)Z	a	onHit
	m	(Lcav;Lcov;Ldpk;Lboz;)V	a	onProjectileHit
	m	(Lcav;Lgj;Lgo;)Z	a	attemptToRing
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;D)Z	a	isProperHit
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	m	(Lcov;)Ldjd;	d	getPistonPushReaction
	m	(Lcov;)Ldqh;	h	getVoxelShape
	m	(Lcov;)Lgo;	n	getConnectedDirection
	f	Ldqh;	E	TO_SOUTH
	f	Ldqh;	F	CEILING_SHAPE
	f	Lcpp;	a	FACING
	f	Lcpt;	b	ATTACHMENT
	f	Lcpm;	c	POWERED
	f	I	d	EVENT_BELL_RING
	f	Ldqh;	e	NORTH_SOUTH_FLOOR_SHAPE
	f	Ldqh;	f	EAST_WEST_FLOOR_SHAPE
	f	Ldqh;	g	BELL_TOP_SHAPE
	f	Ldqh;	h	BELL_BOTTOM_SHAPE
	f	Ldqh;	i	BELL_SHAPE
	f	Ldqh;	j	NORTH_SOUTH_BETWEEN
	f	Ldqh;	k	EAST_WEST_BETWEEN
	f	Ldqh;	l	TO_WEST
	f	Ldqh;	m	TO_EAST
	f	Ldqh;	n	TO_NORTH
c	cdm$1	net/minecraft/world/level/block/BellBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$BellAttachType
c	cdn	net/minecraft/world/level/block/BigDripleafBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Lcov;Ldpk;Lboz;)V	a	onProjectileHit
	m	(Lcav;Lgj;Lahj;)V	a	playTiltSound
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcaw;Lgj;Ldix;Lgo;)Z	a	place
	m	(Lcaw;Ljava/util/Random;Lgj;Lgo;)V	a	placeWithRandomHeight
	m	(Lcax;Lgj;Lcov;)Z	a	canPlaceAt
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lcav;Lgj;Lcqf;)V	a	setTilt
	m	(Lcov;Lcav;Lgj;Lcqf;Lahj;)V	a	setTiltAndScheduleTick
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Laxk;)Z	a	canEntityTilt
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;)V	a	lambda$static$0
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;Lcav;Lgj;)V	d	resetTilt
	m	(Lcov;)Ldqh;	h	calculateShape
	m	(Lcov;)Z	n	canReplace
	f	Lcpm;	a	WATERLOGGED
	f	Lcpt;	b	TILT
	f	I	c	NO_TICK
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	DELAY_UNTIL_NEXT_TILT_STATE
	f	I	e	MAX_GEN_HEIGHT
	f	I	f	STEM_WIDTH
	f	I	g	ENTITY_DETECTION_MIN_Y
	f	I	h	LOWEST_LEAF_TOP
	f	Ljava/util/Map;	i	LEAF_SHAPES
	f	Ldqh;	j	STEM_SLICER
	f	Ljava/util/Map;	k	STEM_SHAPES
	f	Ljava/util/Map;	l	shapesCache
c	cdo	net/minecraft/world/level/block/BigDripleafStemBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcaw;Lgj;Ldix;Lgo;)Z	a	place
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)Ldix;	c_	getFluidState
	f	Ldqh;	a	NORTH_SHAPE
	f	Ldqh;	b	SOUTH_SHAPE
	f	Ldqh;	c	EAST_SHAPE
	f	Ldqh;	d	WEST_SHAPE
	f	Lcpm;	e	WATERLOGGED
	f	I	f	STEM_WIDTH
c	cdo$1	net/minecraft/world/level/block/BigDripleafStemBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cdp	net/minecraft/world/level/block/BlastFurnaceBlock
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcav;Lgj;Lboj;)V	a	openContainer
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
c	cdq	net/minecraft/world/level/block/Block
	m	()Z	Y_	isPossibleToRespawnInThis
	m	(DDDDDD)Ldqh;	a	box
	m	(I)Lcov;	a	stateById
	m	(Ladw;Lgj;I)V	a	popExperience
	m	(Ladw;Lgj;Lbuw;)V	a	lambda$dropResources$1
	m	(Lbtm;Lgx;)V	a	fillItemCategory
	m	(Lbus;)Lcdq;	a	byItem
	m	(Lbuw;Lcab;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Laxk;)V	a	updateEntityAfterFallOn
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcan;)Z	a	dropFromExplosion
	m	(Lcav;DDDLbuw;)Lbli;	a	lambda$popResource$5
	m	(Lcav;DDDLbuw;DDD)Lbli;	a	lambda$popResourceFromFace$6
	m	(Lcav;Lboj;Lgj;Lcov;)V	a	spawnDestroyParticles
	m	(Lcav;Lboj;Lgj;Lcov;Lcmr;Lbuw;)V	a	playerDestroy
	m	(Lcav;Lcov;Lgj;Laxk;F)V	a	fallOn
	m	(Lcav;Lgj;Lbuw;)V	a	popResource
	m	(Lcav;Lgj;Lcan;)V	a	wasExploded
	m	(Lcav;Lgj;Lcov;Laxk;)V	a	stepOn
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcav;Lgj;Lcov;Lboj;)V	a	playerWillDestroy
	m	(Lcav;Lgj;Lgo;Lbuw;)V	a	popResourceFromFace
	m	(Lcav;Ljava/util/function/Supplier;Lbuw;)V	a	popResource
	m	(Lcaw;Lgj;Lbuw;)V	a	lambda$dropResources$3
	m	(Lcaw;Lgj;Lcov;)V	a	destroy
	m	(Lcay;Lgj;Lgo;)Z	a	canSupportCenter
	m	(Lcov;Ladw;Lgj;Lcmr;)Ljava/util/List;	a	getDrops
	m	(Lcov;Ladw;Lgj;Lcmr;Laxk;Lbuw;)Ljava/util/List;	a	getDrops
	m	(Lcov;Lcab;Lgj;Lgo;Lgj;)Z	a	shouldRenderFace
	m	(Lcov;Lcav;Lgj;Lcbr$d;)V	a	handlePrecipitation
	m	(Lcov;Lcav;Lgj;Lcmr;Laxk;Lbuw;)V	a	dropResources
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lcaw;Lgj;Lcmr;)V	a	dropResources
	m	(Lcov;Lcov;Lcav;Lgj;)Lcov;	a	pushEntitiesUp
	m	(Lcov;Lcov;Lcaw;Lgj;I)V	a	updateOrDestroy
	m	(Lcov;Lcov;Lcaw;Lgj;II)V	a	updateOrDestroy
	m	(Lcov;Lcov;Lcpy;)Lcov;	a	copyProperty
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Ldqh;)Z	a	isShapeFullBlock
	m	(Ldqh;Lgo;)Z	a	isFaceFull
	m	(Ljava/util/function/Function;)Lcom/google/common/collect/ImmutableMap;	a	getShapeForEachState
	m	(Lcav;Lgj;Lbuw;)V	b	lambda$dropResources$4
	m	(Lcov;Lcaw;Lgj;)Lcov;	b	updateFromNeighbourShapes
	m	(Lcov;Ldlc$a;)V	b	dropResources
	m	(Lcab;Lgj;)Z	c	canSupportRigidBlock
	m	(Lcav;Lgj;Lbuw;)V	c	lambda$dropResources$2
	m	(Lcov;Lcab;Lgj;)Z	c	propagatesSkylightDown
	m	(Lcov;Lcav;Lgj;)V	c	dropResources
	m	(Lcov;)Z	e_	isRandomlyTicking
	m	()F	f	getExplosionResistance
	m	()Lqq;	g	getName
	m	()Ljava/lang/String;	h	getDescriptionId
	m	()F	i	getFriction
	m	(Lcov;)I	i	getId
	m	()F	j	getSpeedFactor
	m	(Lcov;)Z	j	isExceptionForConnection
	m	()F	k	getJumpFactor
	m	(Lcov;)V	k	registerDefaultState
	m	()Lbus;	l	asItem
	m	(Lcov;)Lcov;	l	withPropertiesOf
	m	()Lcow;	m	getStateDefinition
	m	(Lcov;)Lckg;	m	getSoundType
	m	()Lcov;	n	defaultBlockState
	m	()Z	o	hasDynamicShape
	m	()Lcdq;	p	asBlock
	m	()Lgs$c;	q	builtInRegistryHolder
	m	()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap;	r	lambda$static$0
	f	F	A	INDESTRUCTIBLE
	f	F	B	INSTANT
	f	I	C	UPDATE_LIMIT
	f	Lcow;	D	stateDefinition
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lgs$c;	b	builtInRegistryHolder
	f	Lcom/google/common/cache/LoadingCache;	c	SHAPE_FULL_BLOCK_CACHE
	f	Lcov;	d	defaultBlockState
	f	Ljava/lang/String;	e	descriptionId
	f	Lbus;	f	item
	f	I	g	CACHE_SIZE
	f	Ljava/lang/ThreadLocal;	h	OCCLUSION_CACHE
	f	Lgv;	o	BLOCK_STATE_REGISTRY
	f	I	p	UPDATE_NEIGHBORS
	f	I	q	UPDATE_CLIENTS
	f	I	r	UPDATE_INVISIBLE
	f	I	s	UPDATE_IMMEDIATE
	f	I	t	UPDATE_KNOWN_SHAPE
	f	I	u	UPDATE_SUPPRESS_DROPS
	f	I	v	UPDATE_MOVE_BY_PISTON
	f	I	w	UPDATE_SUPPRESS_LIGHT
	f	I	x	UPDATE_NONE
	f	I	y	UPDATE_ALL
	f	I	z	UPDATE_ALL_IMMEDIATE
c	cdq$1	net/minecraft/world/level/block/Block$1
	m	(Ldqh;)Ljava/lang/Boolean;	a	load
c	cdq$2	net/minecraft/world/level/block/Block$2
c	cdq$a	net/minecraft/world/level/block/Block$BlockStatePairKey
	f	Lcov;	a	first
	f	Lcov;	b	second
	f	Lgo;	c	direction
c	cdr	net/minecraft/world/level/block/Blocks
	m	(Lcov;)I	A	lambda$static$19
	m	(Lcov;)I	B	lambda$static$18
	m	(Lcov;)I	C	lambda$static$17
	m	(Lcov;)I	D	lambda$static$13
	m	(Lcov;)I	E	lambda$static$12
	m	(Lcov;)I	F	lambda$static$11
	m	(Lcov;)I	G	lambda$static$10
	m	(Lcov;)I	H	lambda$static$7
	m	(Lcov;)I	I	lambda$static$6
	m	()V	a	rebuildCache
	m	(I)Ljava/util/function/ToIntFunction;	a	litBlockEmission
	m	(ILcov;)I	a	lambda$litBlockEmission$0
	m	(Lbts;)Lcdj;	a	bed
	m	(Lbts;Lcou$c;)Lcjt;	a	shulkerBox
	m	(Lbts;Lcov;)Ldjc;	a	lambda$bed$1
	m	(Lckg;)Lcho;	a	leaves
	m	(Lcov;)I	a	lambda$static$53
	m	(Lcov;Lcab;Lgj;)Z	a	always
	m	(Lcov;Lcab;Lgj;Laxo;)Ljava/lang/Boolean;	a	never
	m	(Ldjc;)Lcdq;	a	netherStem
	m	(Ldjc;Lcov;)Ldjc;	a	lambda$netherStem$3
	m	(Ldjc;Ldjc;)Lcjl;	a	log
	m	(Ldjc;Ldjc;Lcov;)Ldjc;	a	lambda$log$2
	m	(Ljava/lang/String;Lcdq;)Lcdq;	a	register
	m	(Z)Lcoo;	a	pistonBase
	m	()Lgs;	b	lambda$static$45
	m	(Lbts;)Lckl;	b	stainedGlass
	m	(Lcov;)I	b	lambda$static$52
	m	(Lcov;Lcab;Lgj;)Z	b	never
	m	(Lcov;Lcab;Lgj;Laxo;)Ljava/lang/Boolean;	b	always
	m	()Lgs;	c	lambda$static$44
	m	(Lcov;)I	c	lambda$static$51
	m	(Lcov;Lcab;Lgj;)Z	c	lambda$static$54
	m	(Lcov;Lcab;Lgj;Laxo;)Ljava/lang/Boolean;	c	ocelotOrParrot
	m	()Lbus;	d	lambda$static$25
	m	(Lcov;)I	d	lambda$static$50
	m	(Lcov;Lcab;Lgj;)Z	d	lambda$static$15
	m	(Lcov;Lcab;Lgj;Laxo;)Z	d	lambda$static$39
	m	()Lbus;	e	lambda$static$24
	m	(Lcov;)I	e	lambda$static$49
	m	(Lcov;Lcab;Lgj;)Z	e	lambda$pistonBase$5
	m	(Lcov;Lcab;Lgj;Laxo;)Z	e	lambda$static$37
	m	()Lbus;	f	lambda$static$23
	m	(Lcov;)I	f	lambda$static$48
	m	(Lcov;Lcab;Lgj;)Z	f	lambda$shulkerBox$4
	m	(Lcov;Lcab;Lgj;Laxo;)Z	f	lambda$static$16
	m	()Lbus;	g	lambda$static$22
	m	(Lcov;)I	g	lambda$static$47
	m	()Lcmt;	h	lambda$static$14
	m	(Lcov;)I	h	lambda$static$46
	m	()Lgs;	i	lambda$static$9
	m	(Lcov;)I	i	lambda$static$43
	m	()Lgs;	j	lambda$static$8
	m	(Lcov;)I	j	lambda$static$42
	m	(Lcov;)I	k	lambda$static$41
	m	(Lcov;)I	l	lambda$static$40
	m	(Lcov;)I	m	lambda$static$38
	m	(Lcov;)I	n	lambda$static$36
	m	(Lcov;)I	o	lambda$static$35
	m	(Lcov;)I	p	lambda$static$34
	m	(Lcov;)I	q	lambda$static$33
	m	(Lcov;)I	r	lambda$static$32
	m	(Lcov;)I	s	lambda$static$31
	m	(Lcov;)I	t	lambda$static$30
	m	(Lcov;)I	u	lambda$static$29
	m	(Lcov;)I	v	lambda$static$28
	m	(Lcov;)I	w	lambda$static$27
	m	(Lcov;)I	x	lambda$static$26
	m	(Lcov;)I	y	lambda$static$21
	m	(Lcov;)I	z	lambda$static$20
	f	Lcdq;	A	WATER
	f	Lcdq;	B	LAVA
	f	Lcdq;	C	SAND
	f	Lcdq;	D	RED_SAND
	f	Lcdq;	E	GRAVEL
	f	Lcdq;	F	GOLD_ORE
	f	Lcdq;	G	DEEPSLATE_GOLD_ORE
	f	Lcdq;	H	IRON_ORE
	f	Lcdq;	I	DEEPSLATE_IRON_ORE
	f	Lcdq;	J	COAL_ORE
	f	Lcdq;	K	DEEPSLATE_COAL_ORE
	f	Lcdq;	L	NETHER_GOLD_ORE
	f	Lcdq;	M	OAK_LOG
	f	Lcdq;	N	SPRUCE_LOG
	f	Lcdq;	O	BIRCH_LOG
	f	Lcdq;	P	JUNGLE_LOG
	f	Lcdq;	Q	ACACIA_LOG
	f	Lcdq;	R	DARK_OAK_LOG
	f	Lcdq;	S	STRIPPED_SPRUCE_LOG
	f	Lcdq;	T	STRIPPED_BIRCH_LOG
	f	Lcdq;	U	STRIPPED_JUNGLE_LOG
	f	Lcdq;	V	STRIPPED_ACACIA_LOG
	f	Lcdq;	W	STRIPPED_DARK_OAK_LOG
	f	Lcdq;	X	STRIPPED_OAK_LOG
	f	Lcdq;	Y	OAK_WOOD
	f	Lcdq;	Z	SPRUCE_WOOD
	f	Lcdq;	aA	CHISELED_SANDSTONE
	f	Lcdq;	aB	CUT_SANDSTONE
	f	Lcdq;	aC	NOTE_BLOCK
	f	Lcdq;	aD	WHITE_BED
	f	Lcdq;	aE	ORANGE_BED
	f	Lcdq;	aF	MAGENTA_BED
	f	Lcdq;	aG	LIGHT_BLUE_BED
	f	Lcdq;	aH	YELLOW_BED
	f	Lcdq;	aI	LIME_BED
	f	Lcdq;	aJ	PINK_BED
	f	Lcdq;	aK	GRAY_BED
	f	Lcdq;	aL	LIGHT_GRAY_BED
	f	Lcdq;	a	AIR
	f	Lcdq;	aM	CYAN_BED
	f	Lcdq;	aN	PURPLE_BED
	f	Lcdq;	aO	BLUE_BED
	f	Lcdq;	aP	BROWN_BED
	f	Lcdq;	aQ	GREEN_BED
	f	Lcdq;	aR	RED_BED
	f	Lcdq;	aS	BLACK_BED
	f	Lcdq;	aT	POWERED_RAIL
	f	Lcdq;	aU	DETECTOR_RAIL
	f	Lcdq;	aV	STICKY_PISTON
	f	Lcdq;	aW	COBWEB
	f	Lcdq;	aX	GRASS
	f	Lcdq;	aY	FERN
	f	Lcdq;	aZ	DEAD_BUSH
	f	Lcdq;	aa	BIRCH_WOOD
	f	Lcdq;	ab	JUNGLE_WOOD
	f	Lcdq;	ac	ACACIA_WOOD
	f	Lcdq;	ad	DARK_OAK_WOOD
	f	Lcdq;	ae	STRIPPED_OAK_WOOD
	f	Lcdq;	af	STRIPPED_SPRUCE_WOOD
	f	Lcdq;	ag	STRIPPED_BIRCH_WOOD
	f	Lcdq;	ah	STRIPPED_JUNGLE_WOOD
	f	Lcdq;	ai	STRIPPED_ACACIA_WOOD
	f	Lcdq;	aj	STRIPPED_DARK_OAK_WOOD
	f	Lcdq;	ak	OAK_LEAVES
	f	Lcdq;	al	SPRUCE_LEAVES
	f	Lcdq;	am	BIRCH_LEAVES
	f	Lcdq;	an	JUNGLE_LEAVES
	f	Lcdq;	ao	ACACIA_LEAVES
	f	Lcdq;	ap	DARK_OAK_LEAVES
	f	Lcdq;	aq	AZALEA_LEAVES
	f	Lcdq;	ar	FLOWERING_AZALEA_LEAVES
	f	Lcdq;	as	SPONGE
	f	Lcdq;	at	WET_SPONGE
	f	Lcdq;	au	GLASS
	f	Lcdq;	av	LAPIS_ORE
	f	Lcdq;	aw	DEEPSLATE_LAPIS_ORE
	f	Lcdq;	ax	LAPIS_BLOCK
	f	Lcdq;	ay	DISPENSER
	f	Lcdq;	az	SANDSTONE
	f	Lcdq;	bA	RED_TULIP
	f	Lcdq;	bB	ORANGE_TULIP
	f	Lcdq;	bC	WHITE_TULIP
	f	Lcdq;	bD	PINK_TULIP
	f	Lcdq;	bE	OXEYE_DAISY
	f	Lcdq;	bF	CORNFLOWER
	f	Lcdq;	bG	WITHER_ROSE
	f	Lcdq;	bH	LILY_OF_THE_VALLEY
	f	Lcdq;	bI	BROWN_MUSHROOM
	f	Lcdq;	bJ	RED_MUSHROOM
	f	Lcdq;	bK	GOLD_BLOCK
	f	Lcdq;	bL	IRON_BLOCK
	f	Lcdq;	b	STONE
	f	Lcdq;	bM	BRICKS
	f	Lcdq;	bN	TNT
	f	Lcdq;	bO	BOOKSHELF
	f	Lcdq;	bP	MOSSY_COBBLESTONE
	f	Lcdq;	bQ	OBSIDIAN
	f	Lcdq;	bR	TORCH
	f	Lcdq;	bS	WALL_TORCH
	f	Lcdq;	bT	FIRE
	f	Lcdq;	bU	SOUL_FIRE
	f	Lcdq;	bV	SPAWNER
	f	Lcdq;	bW	OAK_STAIRS
	f	Lcdq;	bX	CHEST
	f	Lcdq;	bY	REDSTONE_WIRE
	f	Lcdq;	bZ	DIAMOND_ORE
	f	Lcdq;	ba	SEAGRASS
	f	Lcdq;	bb	TALL_SEAGRASS
	f	Lcdq;	bc	PISTON
	f	Lcdq;	bd	PISTON_HEAD
	f	Lcdq;	be	WHITE_WOOL
	f	Lcdq;	bf	ORANGE_WOOL
	f	Lcdq;	bg	MAGENTA_WOOL
	f	Lcdq;	bh	LIGHT_BLUE_WOOL
	f	Lcdq;	bi	YELLOW_WOOL
	f	Lcdq;	bj	LIME_WOOL
	f	Lcdq;	bk	PINK_WOOL
	f	Lcdq;	bl	GRAY_WOOL
	f	Lcdq;	bm	LIGHT_GRAY_WOOL
	f	Lcdq;	bn	CYAN_WOOL
	f	Lcdq;	bo	PURPLE_WOOL
	f	Lcdq;	bp	BLUE_WOOL
	f	Lcdq;	bq	BROWN_WOOL
	f	Lcdq;	br	GREEN_WOOL
	f	Lcdq;	bs	RED_WOOL
	f	Lcdq;	bt	BLACK_WOOL
	f	Lcdq;	bu	MOVING_PISTON
	f	Lcdq;	bv	DANDELION
	f	Lcdq;	bw	POPPY
	f	Lcdq;	bx	BLUE_ORCHID
	f	Lcdq;	by	ALLIUM
	f	Lcdq;	bz	AZURE_BLUET
	f	Lcdq;	cA	SPRUCE_PRESSURE_PLATE
	f	Lcdq;	cB	BIRCH_PRESSURE_PLATE
	f	Lcdq;	cC	JUNGLE_PRESSURE_PLATE
	f	Lcdq;	cD	ACACIA_PRESSURE_PLATE
	f	Lcdq;	cE	DARK_OAK_PRESSURE_PLATE
	f	Lcdq;	cF	REDSTONE_ORE
	f	Lcdq;	cG	DEEPSLATE_REDSTONE_ORE
	f	Lcdq;	cH	REDSTONE_TORCH
	f	Lcdq;	cI	REDSTONE_WALL_TORCH
	f	Lcdq;	cJ	STONE_BUTTON
	f	Lcdq;	cK	SNOW
	f	Lcdq;	cL	ICE
	f	Lcdq;	c	GRANITE
	f	Lcdq;	cM	SNOW_BLOCK
	f	Lcdq;	cN	CACTUS
	f	Lcdq;	cO	CLAY
	f	Lcdq;	cP	SUGAR_CANE
	f	Lcdq;	cQ	JUKEBOX
	f	Lcdq;	cR	OAK_FENCE
	f	Lcdq;	cS	PUMPKIN
	f	Lcdq;	cT	NETHERRACK
	f	Lcdq;	cU	SOUL_SAND
	f	Lcdq;	cV	SOUL_SOIL
	f	Lcdq;	cW	BASALT
	f	Lcdq;	cX	POLISHED_BASALT
	f	Lcdq;	cY	SOUL_TORCH
	f	Lcdq;	cZ	SOUL_WALL_TORCH
	f	Lcdq;	ca	DEEPSLATE_DIAMOND_ORE
	f	Lcdq;	cb	DIAMOND_BLOCK
	f	Lcdq;	cc	CRAFTING_TABLE
	f	Lcdq;	cd	WHEAT
	f	Lcdq;	ce	FARMLAND
	f	Lcdq;	cf	FURNACE
	f	Lcdq;	cg	OAK_SIGN
	f	Lcdq;	ch	SPRUCE_SIGN
	f	Lcdq;	ci	BIRCH_SIGN
	f	Lcdq;	cj	ACACIA_SIGN
	f	Lcdq;	ck	JUNGLE_SIGN
	f	Lcdq;	cl	DARK_OAK_SIGN
	f	Lcdq;	cm	OAK_DOOR
	f	Lcdq;	cn	LADDER
	f	Lcdq;	co	RAIL
	f	Lcdq;	cp	COBBLESTONE_STAIRS
	f	Lcdq;	cq	OAK_WALL_SIGN
	f	Lcdq;	cr	SPRUCE_WALL_SIGN
	f	Lcdq;	cs	BIRCH_WALL_SIGN
	f	Lcdq;	ct	ACACIA_WALL_SIGN
	f	Lcdq;	cu	JUNGLE_WALL_SIGN
	f	Lcdq;	cv	DARK_OAK_WALL_SIGN
	f	Lcdq;	cw	LEVER
	f	Lcdq;	cx	STONE_PRESSURE_PLATE
	f	Lcdq;	cy	IRON_DOOR
	f	Lcdq;	cz	OAK_PRESSURE_PLATE
	f	Lcdq;	dA	ACACIA_TRAPDOOR
	f	Lcdq;	dB	DARK_OAK_TRAPDOOR
	f	Lcdq;	dC	STONE_BRICKS
	f	Lcdq;	dD	MOSSY_STONE_BRICKS
	f	Lcdq;	dE	CRACKED_STONE_BRICKS
	f	Lcdq;	dF	CHISELED_STONE_BRICKS
	f	Lcdq;	dG	INFESTED_STONE
	f	Lcdq;	dH	INFESTED_COBBLESTONE
	f	Lcdq;	dI	INFESTED_STONE_BRICKS
	f	Lcdq;	dJ	INFESTED_MOSSY_STONE_BRICKS
	f	Lcdq;	dK	INFESTED_CRACKED_STONE_BRICKS
	f	Lcdq;	dL	INFESTED_CHISELED_STONE_BRICKS
	f	Lcdq;	d	POLISHED_GRANITE
	f	Lcdq;	dM	BROWN_MUSHROOM_BLOCK
	f	Lcdq;	dN	RED_MUSHROOM_BLOCK
	f	Lcdq;	dO	MUSHROOM_STEM
	f	Lcdq;	dP	IRON_BARS
	f	Lcdq;	dQ	CHAIN
	f	Lcdq;	dR	GLASS_PANE
	f	Lcdq;	dS	MELON
	f	Lcdq;	dT	ATTACHED_PUMPKIN_STEM
	f	Lcdq;	dU	ATTACHED_MELON_STEM
	f	Lcdq;	dV	PUMPKIN_STEM
	f	Lcdq;	dW	MELON_STEM
	f	Lcdq;	dX	VINE
	f	Lcdq;	dY	GLOW_LICHEN
	f	Lcdq;	dZ	OAK_FENCE_GATE
	f	Lcdq;	da	GLOWSTONE
	f	Lcdq;	db	NETHER_PORTAL
	f	Lcdq;	dc	CARVED_PUMPKIN
	f	Lcdq;	dd	JACK_O_LANTERN
	f	Lcdq;	de	CAKE
	f	Lcdq;	df	REPEATER
	f	Lcdq;	dg	WHITE_STAINED_GLASS
	f	Lcdq;	dh	ORANGE_STAINED_GLASS
	f	Lcdq;	di	MAGENTA_STAINED_GLASS
	f	Lcdq;	dj	LIGHT_BLUE_STAINED_GLASS
	f	Lcdq;	dk	YELLOW_STAINED_GLASS
	f	Lcdq;	dl	LIME_STAINED_GLASS
	f	Lcdq;	dm	PINK_STAINED_GLASS
	f	Lcdq;	dn	GRAY_STAINED_GLASS
	f	Lcdq;	do	LIGHT_GRAY_STAINED_GLASS
	f	Lcdq;	dp	CYAN_STAINED_GLASS
	f	Lcdq;	dq	PURPLE_STAINED_GLASS
	f	Lcdq;	dr	BLUE_STAINED_GLASS
	f	Lcdq;	ds	BROWN_STAINED_GLASS
	f	Lcdq;	dt	GREEN_STAINED_GLASS
	f	Lcdq;	du	RED_STAINED_GLASS
	f	Lcdq;	dv	BLACK_STAINED_GLASS
	f	Lcdq;	dw	OAK_TRAPDOOR
	f	Lcdq;	dx	SPRUCE_TRAPDOOR
	f	Lcdq;	dy	BIRCH_TRAPDOOR
	f	Lcdq;	dz	JUNGLE_TRAPDOOR
	f	Lcdq;	eA	EMERALD_BLOCK
	f	Lcdq;	eB	SPRUCE_STAIRS
	f	Lcdq;	eC	BIRCH_STAIRS
	f	Lcdq;	eD	JUNGLE_STAIRS
	f	Lcdq;	eE	COMMAND_BLOCK
	f	Lcdq;	eF	BEACON
	f	Lcdq;	eG	COBBLESTONE_WALL
	f	Lcdq;	eH	MOSSY_COBBLESTONE_WALL
	f	Lcdq;	eI	FLOWER_POT
	f	Lcdq;	eJ	POTTED_OAK_SAPLING
	f	Lcdq;	eK	POTTED_SPRUCE_SAPLING
	f	Lcdq;	eL	POTTED_BIRCH_SAPLING
	f	Lcdq;	e	DIORITE
	f	Lcdq;	eM	POTTED_JUNGLE_SAPLING
	f	Lcdq;	eN	POTTED_ACACIA_SAPLING
	f	Lcdq;	eO	POTTED_DARK_OAK_SAPLING
	f	Lcdq;	eP	POTTED_FERN
	f	Lcdq;	eQ	POTTED_DANDELION
	f	Lcdq;	eR	POTTED_POPPY
	f	Lcdq;	eS	POTTED_BLUE_ORCHID
	f	Lcdq;	eT	POTTED_ALLIUM
	f	Lcdq;	eU	POTTED_AZURE_BLUET
	f	Lcdq;	eV	POTTED_RED_TULIP
	f	Lcdq;	eW	POTTED_ORANGE_TULIP
	f	Lcdq;	eX	POTTED_WHITE_TULIP
	f	Lcdq;	eY	POTTED_PINK_TULIP
	f	Lcdq;	eZ	POTTED_OXEYE_DAISY
	f	Lcdq;	ea	BRICK_STAIRS
	f	Lcdq;	eb	STONE_BRICK_STAIRS
	f	Lcdq;	ec	MYCELIUM
	f	Lcdq;	ed	LILY_PAD
	f	Lcdq;	ee	NETHER_BRICKS
	f	Lcdq;	ef	NETHER_BRICK_FENCE
	f	Lcdq;	eg	NETHER_BRICK_STAIRS
	f	Lcdq;	eh	NETHER_WART
	f	Lcdq;	ei	ENCHANTING_TABLE
	f	Lcdq;	ej	BREWING_STAND
	f	Lcdq;	ek	CAULDRON
	f	Lcdq;	el	WATER_CAULDRON
	f	Lcdq;	em	LAVA_CAULDRON
	f	Lcdq;	en	POWDER_SNOW_CAULDRON
	f	Lcdq;	eo	END_PORTAL
	f	Lcdq;	ep	END_PORTAL_FRAME
	f	Lcdq;	eq	END_STONE
	f	Lcdq;	er	DRAGON_EGG
	f	Lcdq;	es	REDSTONE_LAMP
	f	Lcdq;	et	COCOA
	f	Lcdq;	eu	SANDSTONE_STAIRS
	f	Lcdq;	ev	EMERALD_ORE
	f	Lcdq;	ew	DEEPSLATE_EMERALD_ORE
	f	Lcdq;	ex	ENDER_CHEST
	f	Lcdq;	ey	TRIPWIRE_HOOK
	f	Lcdq;	ez	TRIPWIRE
	f	Lcdq;	fA	DRAGON_WALL_HEAD
	f	Lcdq;	fB	ANVIL
	f	Lcdq;	fC	CHIPPED_ANVIL
	f	Lcdq;	fD	DAMAGED_ANVIL
	f	Lcdq;	fE	TRAPPED_CHEST
	f	Lcdq;	fF	LIGHT_WEIGHTED_PRESSURE_PLATE
	f	Lcdq;	fG	HEAVY_WEIGHTED_PRESSURE_PLATE
	f	Lcdq;	fH	COMPARATOR
	f	Lcdq;	fI	DAYLIGHT_DETECTOR
	f	Lcdq;	fJ	REDSTONE_BLOCK
	f	Lcdq;	fK	NETHER_QUARTZ_ORE
	f	Lcdq;	fL	HOPPER
	f	Lcdq;	f	POLISHED_DIORITE
	f	Lcdq;	fM	QUARTZ_BLOCK
	f	Lcdq;	fN	CHISELED_QUARTZ_BLOCK
	f	Lcdq;	fO	QUARTZ_PILLAR
	f	Lcdq;	fP	QUARTZ_STAIRS
	f	Lcdq;	fQ	ACTIVATOR_RAIL
	f	Lcdq;	fR	DROPPER
	f	Lcdq;	fS	WHITE_TERRACOTTA
	f	Lcdq;	fT	ORANGE_TERRACOTTA
	f	Lcdq;	fU	MAGENTA_TERRACOTTA
	f	Lcdq;	fV	LIGHT_BLUE_TERRACOTTA
	f	Lcdq;	fW	YELLOW_TERRACOTTA
	f	Lcdq;	fX	LIME_TERRACOTTA
	f	Lcdq;	fY	PINK_TERRACOTTA
	f	Lcdq;	fZ	GRAY_TERRACOTTA
	f	Lcdq;	fa	POTTED_CORNFLOWER
	f	Lcdq;	fb	POTTED_LILY_OF_THE_VALLEY
	f	Lcdq;	fc	POTTED_WITHER_ROSE
	f	Lcdq;	fd	POTTED_RED_MUSHROOM
	f	Lcdq;	fe	POTTED_BROWN_MUSHROOM
	f	Lcdq;	ff	POTTED_DEAD_BUSH
	f	Lcdq;	fg	POTTED_CACTUS
	f	Lcdq;	fh	CARROTS
	f	Lcdq;	fi	POTATOES
	f	Lcdq;	fj	OAK_BUTTON
	f	Lcdq;	fk	SPRUCE_BUTTON
	f	Lcdq;	fl	BIRCH_BUTTON
	f	Lcdq;	fm	JUNGLE_BUTTON
	f	Lcdq;	fn	ACACIA_BUTTON
	f	Lcdq;	fo	DARK_OAK_BUTTON
	f	Lcdq;	fp	SKELETON_SKULL
	f	Lcdq;	fq	SKELETON_WALL_SKULL
	f	Lcdq;	fr	WITHER_SKELETON_SKULL
	f	Lcdq;	fs	WITHER_SKELETON_WALL_SKULL
	f	Lcdq;	ft	ZOMBIE_HEAD
	f	Lcdq;	fu	ZOMBIE_WALL_HEAD
	f	Lcdq;	fv	PLAYER_HEAD
	f	Lcdq;	fw	PLAYER_WALL_HEAD
	f	Lcdq;	fx	CREEPER_HEAD
	f	Lcdq;	fy	CREEPER_WALL_HEAD
	f	Lcdq;	fz	DRAGON_HEAD
	f	Lcdq;	gA	SLIME_BLOCK
	f	Lcdq;	gB	BARRIER
	f	Lcdq;	gC	LIGHT
	f	Lcdq;	gD	IRON_TRAPDOOR
	f	Lcdq;	gE	PRISMARINE
	f	Lcdq;	gF	PRISMARINE_BRICKS
	f	Lcdq;	gG	DARK_PRISMARINE
	f	Lcdq;	gH	PRISMARINE_STAIRS
	f	Lcdq;	gI	PRISMARINE_BRICK_STAIRS
	f	Lcdq;	gJ	DARK_PRISMARINE_STAIRS
	f	Lcdq;	gK	PRISMARINE_SLAB
	f	Lcdq;	gL	PRISMARINE_BRICK_SLAB
	f	Lcdq;	g	ANDESITE
	f	Lcdq;	gM	DARK_PRISMARINE_SLAB
	f	Lcdq;	gN	SEA_LANTERN
	f	Lcdq;	gO	HAY_BLOCK
	f	Lcdq;	gP	WHITE_CARPET
	f	Lcdq;	gQ	ORANGE_CARPET
	f	Lcdq;	gR	MAGENTA_CARPET
	f	Lcdq;	gS	LIGHT_BLUE_CARPET
	f	Lcdq;	gT	YELLOW_CARPET
	f	Lcdq;	gU	LIME_CARPET
	f	Lcdq;	gV	PINK_CARPET
	f	Lcdq;	gW	GRAY_CARPET
	f	Lcdq;	gX	LIGHT_GRAY_CARPET
	f	Lcdq;	gY	CYAN_CARPET
	f	Lcdq;	gZ	PURPLE_CARPET
	f	Lcdq;	ga	LIGHT_GRAY_TERRACOTTA
	f	Lcdq;	gb	CYAN_TERRACOTTA
	f	Lcdq;	gc	PURPLE_TERRACOTTA
	f	Lcdq;	gd	BLUE_TERRACOTTA
	f	Lcdq;	ge	BROWN_TERRACOTTA
	f	Lcdq;	gf	GREEN_TERRACOTTA
	f	Lcdq;	gg	RED_TERRACOTTA
	f	Lcdq;	gh	BLACK_TERRACOTTA
	f	Lcdq;	gi	WHITE_STAINED_GLASS_PANE
	f	Lcdq;	gj	ORANGE_STAINED_GLASS_PANE
	f	Lcdq;	gk	MAGENTA_STAINED_GLASS_PANE
	f	Lcdq;	gl	LIGHT_BLUE_STAINED_GLASS_PANE
	f	Lcdq;	gm	YELLOW_STAINED_GLASS_PANE
	f	Lcdq;	gn	LIME_STAINED_GLASS_PANE
	f	Lcdq;	go	PINK_STAINED_GLASS_PANE
	f	Lcdq;	gp	GRAY_STAINED_GLASS_PANE
	f	Lcdq;	gq	LIGHT_GRAY_STAINED_GLASS_PANE
	f	Lcdq;	gr	CYAN_STAINED_GLASS_PANE
	f	Lcdq;	gs	PURPLE_STAINED_GLASS_PANE
	f	Lcdq;	gt	BLUE_STAINED_GLASS_PANE
	f	Lcdq;	gu	BROWN_STAINED_GLASS_PANE
	f	Lcdq;	gv	GREEN_STAINED_GLASS_PANE
	f	Lcdq;	gw	RED_STAINED_GLASS_PANE
	f	Lcdq;	gx	BLACK_STAINED_GLASS_PANE
	f	Lcdq;	gy	ACACIA_STAIRS
	f	Lcdq;	gz	DARK_OAK_STAIRS
	f	Lcdq;	hA	BROWN_BANNER
	f	Lcdq;	hB	GREEN_BANNER
	f	Lcdq;	hC	RED_BANNER
	f	Lcdq;	hD	BLACK_BANNER
	f	Lcdq;	hE	WHITE_WALL_BANNER
	f	Lcdq;	hF	ORANGE_WALL_BANNER
	f	Lcdq;	hG	MAGENTA_WALL_BANNER
	f	Lcdq;	hH	LIGHT_BLUE_WALL_BANNER
	f	Lcdq;	hI	YELLOW_WALL_BANNER
	f	Lcdq;	hJ	LIME_WALL_BANNER
	f	Lcdq;	hK	PINK_WALL_BANNER
	f	Lcdq;	hL	GRAY_WALL_BANNER
	f	Lcdq;	h	POLISHED_ANDESITE
	f	Lcdq;	hM	LIGHT_GRAY_WALL_BANNER
	f	Lcdq;	hN	CYAN_WALL_BANNER
	f	Lcdq;	hO	PURPLE_WALL_BANNER
	f	Lcdq;	hP	BLUE_WALL_BANNER
	f	Lcdq;	hQ	BROWN_WALL_BANNER
	f	Lcdq;	hR	GREEN_WALL_BANNER
	f	Lcdq;	hS	RED_WALL_BANNER
	f	Lcdq;	hT	BLACK_WALL_BANNER
	f	Lcdq;	hU	RED_SANDSTONE
	f	Lcdq;	hV	CHISELED_RED_SANDSTONE
	f	Lcdq;	hW	CUT_RED_SANDSTONE
	f	Lcdq;	hX	RED_SANDSTONE_STAIRS
	f	Lcdq;	hY	OAK_SLAB
	f	Lcdq;	hZ	SPRUCE_SLAB
	f	Lcdq;	ha	BLUE_CARPET
	f	Lcdq;	hb	BROWN_CARPET
	f	Lcdq;	hc	GREEN_CARPET
	f	Lcdq;	hd	RED_CARPET
	f	Lcdq;	he	BLACK_CARPET
	f	Lcdq;	hf	TERRACOTTA
	f	Lcdq;	hg	COAL_BLOCK
	f	Lcdq;	hh	PACKED_ICE
	f	Lcdq;	hi	SUNFLOWER
	f	Lcdq;	hj	LILAC
	f	Lcdq;	hk	ROSE_BUSH
	f	Lcdq;	hl	PEONY
	f	Lcdq;	hm	TALL_GRASS
	f	Lcdq;	hn	LARGE_FERN
	f	Lcdq;	ho	WHITE_BANNER
	f	Lcdq;	hp	ORANGE_BANNER
	f	Lcdq;	hq	MAGENTA_BANNER
	f	Lcdq;	hr	LIGHT_BLUE_BANNER
	f	Lcdq;	hs	YELLOW_BANNER
	f	Lcdq;	ht	LIME_BANNER
	f	Lcdq;	hu	PINK_BANNER
	f	Lcdq;	hv	GRAY_BANNER
	f	Lcdq;	hw	LIGHT_GRAY_BANNER
	f	Lcdq;	hx	CYAN_BANNER
	f	Lcdq;	hy	PURPLE_BANNER
	f	Lcdq;	hz	BLUE_BANNER
	f	Lcdq;	iA	SPRUCE_FENCE
	f	Lcdq;	iB	BIRCH_FENCE
	f	Lcdq;	iC	JUNGLE_FENCE
	f	Lcdq;	iD	ACACIA_FENCE
	f	Lcdq;	iE	DARK_OAK_FENCE
	f	Lcdq;	iF	SPRUCE_DOOR
	f	Lcdq;	iG	BIRCH_DOOR
	f	Lcdq;	iH	JUNGLE_DOOR
	f	Lcdq;	iI	ACACIA_DOOR
	f	Lcdq;	iJ	DARK_OAK_DOOR
	f	Lcdq;	iK	END_ROD
	f	Lcdq;	iL	CHORUS_PLANT
	f	Lcdq;	i	GRASS_BLOCK
	f	Lcdq;	iM	CHORUS_FLOWER
	f	Lcdq;	iN	PURPUR_BLOCK
	f	Lcdq;	iO	PURPUR_PILLAR
	f	Lcdq;	iP	PURPUR_STAIRS
	f	Lcdq;	iQ	END_STONE_BRICKS
	f	Lcdq;	iR	BEETROOTS
	f	Lcdq;	iS	DIRT_PATH
	f	Lcdq;	iT	END_GATEWAY
	f	Lcdq;	iU	REPEATING_COMMAND_BLOCK
	f	Lcdq;	iV	CHAIN_COMMAND_BLOCK
	f	Lcdq;	iW	FROSTED_ICE
	f	Lcdq;	iX	MAGMA_BLOCK
	f	Lcdq;	iY	NETHER_WART_BLOCK
	f	Lcdq;	iZ	RED_NETHER_BRICKS
	f	Lcdq;	ia	BIRCH_SLAB
	f	Lcdq;	ib	JUNGLE_SLAB
	f	Lcdq;	ic	ACACIA_SLAB
	f	Lcdq;	id	DARK_OAK_SLAB
	f	Lcdq;	ie	STONE_SLAB
	f	Lcdq;	if	SMOOTH_STONE_SLAB
	f	Lcdq;	ig	SANDSTONE_SLAB
	f	Lcdq;	ih	CUT_SANDSTONE_SLAB
	f	Lcdq;	ii	PETRIFIED_OAK_SLAB
	f	Lcdq;	ij	COBBLESTONE_SLAB
	f	Lcdq;	ik	BRICK_SLAB
	f	Lcdq;	il	STONE_BRICK_SLAB
	f	Lcdq;	im	NETHER_BRICK_SLAB
	f	Lcdq;	in	QUARTZ_SLAB
	f	Lcdq;	io	RED_SANDSTONE_SLAB
	f	Lcdq;	ip	CUT_RED_SANDSTONE_SLAB
	f	Lcdq;	iq	PURPUR_SLAB
	f	Lcdq;	ir	SMOOTH_STONE
	f	Lcdq;	is	SMOOTH_SANDSTONE
	f	Lcdq;	it	SMOOTH_QUARTZ
	f	Lcdq;	iu	SMOOTH_RED_SANDSTONE
	f	Lcdq;	iv	SPRUCE_FENCE_GATE
	f	Lcdq;	iw	BIRCH_FENCE_GATE
	f	Lcdq;	ix	JUNGLE_FENCE_GATE
	f	Lcdq;	iy	ACACIA_FENCE_GATE
	f	Lcdq;	iz	DARK_OAK_FENCE_GATE
	f	Lcdq;	jA	PINK_GLAZED_TERRACOTTA
	f	Lcdq;	jB	GRAY_GLAZED_TERRACOTTA
	f	Lcdq;	jC	LIGHT_GRAY_GLAZED_TERRACOTTA
	f	Lcdq;	jD	CYAN_GLAZED_TERRACOTTA
	f	Lcdq;	jE	PURPLE_GLAZED_TERRACOTTA
	f	Lcdq;	jF	BLUE_GLAZED_TERRACOTTA
	f	Lcdq;	jG	BROWN_GLAZED_TERRACOTTA
	f	Lcdq;	jH	GREEN_GLAZED_TERRACOTTA
	f	Lcdq;	jI	RED_GLAZED_TERRACOTTA
	f	Lcdq;	jJ	BLACK_GLAZED_TERRACOTTA
	f	Lcdq;	jK	WHITE_CONCRETE
	f	Lcdq;	jL	ORANGE_CONCRETE
	f	Lcdq;	j	DIRT
	f	Lcdq;	jM	MAGENTA_CONCRETE
	f	Lcdq;	jN	LIGHT_BLUE_CONCRETE
	f	Lcdq;	jO	YELLOW_CONCRETE
	f	Lcdq;	jP	LIME_CONCRETE
	f	Lcdq;	jQ	PINK_CONCRETE
	f	Lcdq;	jR	GRAY_CONCRETE
	f	Lcdq;	jS	LIGHT_GRAY_CONCRETE
	f	Lcdq;	jT	CYAN_CONCRETE
	f	Lcdq;	jU	PURPLE_CONCRETE
	f	Lcdq;	jV	BLUE_CONCRETE
	f	Lcdq;	jW	BROWN_CONCRETE
	f	Lcdq;	jX	GREEN_CONCRETE
	f	Lcdq;	jY	RED_CONCRETE
	f	Lcdq;	jZ	BLACK_CONCRETE
	f	Lcdq;	ja	BONE_BLOCK
	f	Lcdq;	jb	STRUCTURE_VOID
	f	Lcdq;	jc	OBSERVER
	f	Lcdq;	jd	SHULKER_BOX
	f	Lcdq;	je	WHITE_SHULKER_BOX
	f	Lcdq;	jf	ORANGE_SHULKER_BOX
	f	Lcdq;	jg	MAGENTA_SHULKER_BOX
	f	Lcdq;	jh	LIGHT_BLUE_SHULKER_BOX
	f	Lcdq;	ji	YELLOW_SHULKER_BOX
	f	Lcdq;	jj	LIME_SHULKER_BOX
	f	Lcdq;	jk	PINK_SHULKER_BOX
	f	Lcdq;	jl	GRAY_SHULKER_BOX
	f	Lcdq;	jm	LIGHT_GRAY_SHULKER_BOX
	f	Lcdq;	jn	CYAN_SHULKER_BOX
	f	Lcdq;	jo	PURPLE_SHULKER_BOX
	f	Lcdq;	jp	BLUE_SHULKER_BOX
	f	Lcdq;	jq	BROWN_SHULKER_BOX
	f	Lcdq;	jr	GREEN_SHULKER_BOX
	f	Lcdq;	js	RED_SHULKER_BOX
	f	Lcdq;	jt	BLACK_SHULKER_BOX
	f	Lcdq;	ju	WHITE_GLAZED_TERRACOTTA
	f	Lcdq;	jv	ORANGE_GLAZED_TERRACOTTA
	f	Lcdq;	jw	MAGENTA_GLAZED_TERRACOTTA
	f	Lcdq;	jx	LIGHT_BLUE_GLAZED_TERRACOTTA
	f	Lcdq;	jy	YELLOW_GLAZED_TERRACOTTA
	f	Lcdq;	jz	LIME_GLAZED_TERRACOTTA
	f	Lcdq;	kA	BRAIN_CORAL_BLOCK
	f	Lcdq;	kB	BUBBLE_CORAL_BLOCK
	f	Lcdq;	kC	FIRE_CORAL_BLOCK
	f	Lcdq;	kD	HORN_CORAL_BLOCK
	f	Lcdq;	kE	DEAD_TUBE_CORAL
	f	Lcdq;	kF	DEAD_BRAIN_CORAL
	f	Lcdq;	kG	DEAD_BUBBLE_CORAL
	f	Lcdq;	kH	DEAD_FIRE_CORAL
	f	Lcdq;	kI	DEAD_HORN_CORAL
	f	Lcdq;	kJ	TUBE_CORAL
	f	Lcdq;	kK	BRAIN_CORAL
	f	Lcdq;	kL	BUBBLE_CORAL
	f	Lcdq;	k	COARSE_DIRT
	f	Lcdq;	kM	FIRE_CORAL
	f	Lcdq;	kN	HORN_CORAL
	f	Lcdq;	kO	DEAD_TUBE_CORAL_FAN
	f	Lcdq;	kP	DEAD_BRAIN_CORAL_FAN
	f	Lcdq;	kQ	DEAD_BUBBLE_CORAL_FAN
	f	Lcdq;	kR	DEAD_FIRE_CORAL_FAN
	f	Lcdq;	kS	DEAD_HORN_CORAL_FAN
	f	Lcdq;	kT	TUBE_CORAL_FAN
	f	Lcdq;	kU	BRAIN_CORAL_FAN
	f	Lcdq;	kV	BUBBLE_CORAL_FAN
	f	Lcdq;	kW	FIRE_CORAL_FAN
	f	Lcdq;	kX	HORN_CORAL_FAN
	f	Lcdq;	kY	DEAD_TUBE_CORAL_WALL_FAN
	f	Lcdq;	kZ	DEAD_BRAIN_CORAL_WALL_FAN
	f	Lcdq;	ka	WHITE_CONCRETE_POWDER
	f	Lcdq;	kb	ORANGE_CONCRETE_POWDER
	f	Lcdq;	kc	MAGENTA_CONCRETE_POWDER
	f	Lcdq;	kd	LIGHT_BLUE_CONCRETE_POWDER
	f	Lcdq;	ke	YELLOW_CONCRETE_POWDER
	f	Lcdq;	kf	LIME_CONCRETE_POWDER
	f	Lcdq;	kg	PINK_CONCRETE_POWDER
	f	Lcdq;	kh	GRAY_CONCRETE_POWDER
	f	Lcdq;	ki	LIGHT_GRAY_CONCRETE_POWDER
	f	Lcdq;	kj	CYAN_CONCRETE_POWDER
	f	Lcdq;	kk	PURPLE_CONCRETE_POWDER
	f	Lcdq;	kl	BLUE_CONCRETE_POWDER
	f	Lcdq;	km	BROWN_CONCRETE_POWDER
	f	Lcdq;	kn	GREEN_CONCRETE_POWDER
	f	Lcdq;	ko	RED_CONCRETE_POWDER
	f	Lcdq;	kp	BLACK_CONCRETE_POWDER
	f	Lcdq;	kq	KELP
	f	Lcdq;	kr	KELP_PLANT
	f	Lcdq;	ks	DRIED_KELP_BLOCK
	f	Lcdq;	kt	TURTLE_EGG
	f	Lcdq;	ku	DEAD_TUBE_CORAL_BLOCK
	f	Lcdq;	kv	DEAD_BRAIN_CORAL_BLOCK
	f	Lcdq;	kw	DEAD_BUBBLE_CORAL_BLOCK
	f	Lcdq;	kx	DEAD_FIRE_CORAL_BLOCK
	f	Lcdq;	ky	DEAD_HORN_CORAL_BLOCK
	f	Lcdq;	kz	TUBE_CORAL_BLOCK
	f	Lcdq;	lA	GRANITE_STAIRS
	f	Lcdq;	lB	ANDESITE_STAIRS
	f	Lcdq;	lC	RED_NETHER_BRICK_STAIRS
	f	Lcdq;	lD	POLISHED_ANDESITE_STAIRS
	f	Lcdq;	lE	DIORITE_STAIRS
	f	Lcdq;	lF	POLISHED_GRANITE_SLAB
	f	Lcdq;	lG	SMOOTH_RED_SANDSTONE_SLAB
	f	Lcdq;	lH	MOSSY_STONE_BRICK_SLAB
	f	Lcdq;	lI	POLISHED_DIORITE_SLAB
	f	Lcdq;	lJ	MOSSY_COBBLESTONE_SLAB
	f	Lcdq;	lK	END_STONE_BRICK_SLAB
	f	Lcdq;	lL	SMOOTH_SANDSTONE_SLAB
	f	Lcdq;	l	PODZOL
	f	Lcdq;	lM	SMOOTH_QUARTZ_SLAB
	f	Lcdq;	lN	GRANITE_SLAB
	f	Lcdq;	lO	ANDESITE_SLAB
	f	Lcdq;	lP	RED_NETHER_BRICK_SLAB
	f	Lcdq;	lQ	POLISHED_ANDESITE_SLAB
	f	Lcdq;	lR	DIORITE_SLAB
	f	Lcdq;	lS	BRICK_WALL
	f	Lcdq;	lT	PRISMARINE_WALL
	f	Lcdq;	lU	RED_SANDSTONE_WALL
	f	Lcdq;	lV	MOSSY_STONE_BRICK_WALL
	f	Lcdq;	lW	GRANITE_WALL
	f	Lcdq;	lX	STONE_BRICK_WALL
	f	Lcdq;	lY	NETHER_BRICK_WALL
	f	Lcdq;	lZ	ANDESITE_WALL
	f	Lcdq;	la	DEAD_BUBBLE_CORAL_WALL_FAN
	f	Lcdq;	lb	DEAD_FIRE_CORAL_WALL_FAN
	f	Lcdq;	lc	DEAD_HORN_CORAL_WALL_FAN
	f	Lcdq;	ld	TUBE_CORAL_WALL_FAN
	f	Lcdq;	le	BRAIN_CORAL_WALL_FAN
	f	Lcdq;	lf	BUBBLE_CORAL_WALL_FAN
	f	Lcdq;	lg	FIRE_CORAL_WALL_FAN
	f	Lcdq;	lh	HORN_CORAL_WALL_FAN
	f	Lcdq;	li	SEA_PICKLE
	f	Lcdq;	lj	BLUE_ICE
	f	Lcdq;	lk	CONDUIT
	f	Lcdq;	ll	BAMBOO_SAPLING
	f	Lcdq;	lm	BAMBOO
	f	Lcdq;	ln	POTTED_BAMBOO
	f	Lcdq;	lo	VOID_AIR
	f	Lcdq;	lp	CAVE_AIR
	f	Lcdq;	lq	BUBBLE_COLUMN
	f	Lcdq;	lr	POLISHED_GRANITE_STAIRS
	f	Lcdq;	ls	SMOOTH_RED_SANDSTONE_STAIRS
	f	Lcdq;	lt	MOSSY_STONE_BRICK_STAIRS
	f	Lcdq;	lu	POLISHED_DIORITE_STAIRS
	f	Lcdq;	lv	MOSSY_COBBLESTONE_STAIRS
	f	Lcdq;	lw	END_STONE_BRICK_STAIRS
	f	Lcdq;	lx	STONE_STAIRS
	f	Lcdq;	ly	SMOOTH_SANDSTONE_STAIRS
	f	Lcdq;	lz	SMOOTH_QUARTZ_STAIRS
	f	Lcdq;	mA	WARPED_FUNGUS
	f	Lcdq;	mB	WARPED_WART_BLOCK
	f	Lcdq;	mC	WARPED_ROOTS
	f	Lcdq;	mD	NETHER_SPROUTS
	f	Lcdq;	mE	CRIMSON_STEM
	f	Lcdq;	mF	STRIPPED_CRIMSON_STEM
	f	Lcdq;	mG	CRIMSON_HYPHAE
	f	Lcdq;	mH	STRIPPED_CRIMSON_HYPHAE
	f	Lcdq;	mI	CRIMSON_NYLIUM
	f	Lcdq;	mJ	CRIMSON_FUNGUS
	f	Lcdq;	mK	SHROOMLIGHT
	f	Lcdq;	mL	WEEPING_VINES
	f	Lcdq;	m	COBBLESTONE
	f	Lcdq;	mM	WEEPING_VINES_PLANT
	f	Lcdq;	mN	TWISTING_VINES
	f	Lcdq;	mO	TWISTING_VINES_PLANT
	f	Lcdq;	mP	CRIMSON_ROOTS
	f	Lcdq;	mQ	CRIMSON_PLANKS
	f	Lcdq;	mR	WARPED_PLANKS
	f	Lcdq;	mS	CRIMSON_SLAB
	f	Lcdq;	mT	WARPED_SLAB
	f	Lcdq;	mU	CRIMSON_PRESSURE_PLATE
	f	Lcdq;	mV	WARPED_PRESSURE_PLATE
	f	Lcdq;	mW	CRIMSON_FENCE
	f	Lcdq;	mX	WARPED_FENCE
	f	Lcdq;	mY	CRIMSON_TRAPDOOR
	f	Lcdq;	mZ	WARPED_TRAPDOOR
	f	Lcdq;	ma	RED_NETHER_BRICK_WALL
	f	Lcdq;	mb	SANDSTONE_WALL
	f	Lcdq;	mc	END_STONE_BRICK_WALL
	f	Lcdq;	md	DIORITE_WALL
	f	Lcdq;	me	SCAFFOLDING
	f	Lcdq;	mf	LOOM
	f	Lcdq;	mg	BARREL
	f	Lcdq;	mh	SMOKER
	f	Lcdq;	mi	BLAST_FURNACE
	f	Lcdq;	mj	CARTOGRAPHY_TABLE
	f	Lcdq;	mk	FLETCHING_TABLE
	f	Lcdq;	ml	GRINDSTONE
	f	Lcdq;	mm	LECTERN
	f	Lcdq;	mn	SMITHING_TABLE
	f	Lcdq;	mo	STONECUTTER
	f	Lcdq;	mp	BELL
	f	Lcdq;	mq	LANTERN
	f	Lcdq;	mr	SOUL_LANTERN
	f	Lcdq;	ms	CAMPFIRE
	f	Lcdq;	mt	SOUL_CAMPFIRE
	f	Lcdq;	mu	SWEET_BERRY_BUSH
	f	Lcdq;	mv	WARPED_STEM
	f	Lcdq;	mw	STRIPPED_WARPED_STEM
	f	Lcdq;	mx	WARPED_HYPHAE
	f	Lcdq;	my	STRIPPED_WARPED_HYPHAE
	f	Lcdq;	mz	WARPED_NYLIUM
	f	Lcdq;	nA	POTTED_CRIMSON_ROOTS
	f	Lcdq;	nB	POTTED_WARPED_ROOTS
	f	Lcdq;	nC	LODESTONE
	f	Lcdq;	nD	BLACKSTONE
	f	Lcdq;	nE	BLACKSTONE_STAIRS
	f	Lcdq;	nF	BLACKSTONE_WALL
	f	Lcdq;	nG	BLACKSTONE_SLAB
	f	Lcdq;	nH	POLISHED_BLACKSTONE
	f	Lcdq;	nI	POLISHED_BLACKSTONE_BRICKS
	f	Lcdq;	nJ	CRACKED_POLISHED_BLACKSTONE_BRICKS
	f	Lcdq;	nK	CHISELED_POLISHED_BLACKSTONE
	f	Lcdq;	nL	POLISHED_BLACKSTONE_BRICK_SLAB
	f	Lcdq;	n	OAK_PLANKS
	f	Lcdq;	nM	POLISHED_BLACKSTONE_BRICK_STAIRS
	f	Lcdq;	nN	POLISHED_BLACKSTONE_BRICK_WALL
	f	Lcdq;	nO	GILDED_BLACKSTONE
	f	Lcdq;	nP	POLISHED_BLACKSTONE_STAIRS
	f	Lcdq;	nQ	POLISHED_BLACKSTONE_SLAB
	f	Lcdq;	nR	POLISHED_BLACKSTONE_PRESSURE_PLATE
	f	Lcdq;	nS	POLISHED_BLACKSTONE_BUTTON
	f	Lcdq;	nT	POLISHED_BLACKSTONE_WALL
	f	Lcdq;	nU	CHISELED_NETHER_BRICKS
	f	Lcdq;	nV	CRACKED_NETHER_BRICKS
	f	Lcdq;	nW	QUARTZ_BRICKS
	f	Lcdq;	nX	CANDLE
	f	Lcdq;	nY	WHITE_CANDLE
	f	Lcdq;	nZ	ORANGE_CANDLE
	f	Lcdq;	na	CRIMSON_FENCE_GATE
	f	Lcdq;	nb	WARPED_FENCE_GATE
	f	Lcdq;	nc	CRIMSON_STAIRS
	f	Lcdq;	nd	WARPED_STAIRS
	f	Lcdq;	ne	CRIMSON_BUTTON
	f	Lcdq;	nf	WARPED_BUTTON
	f	Lcdq;	ng	CRIMSON_DOOR
	f	Lcdq;	nh	WARPED_DOOR
	f	Lcdq;	ni	CRIMSON_SIGN
	f	Lcdq;	nj	WARPED_SIGN
	f	Lcdq;	nk	CRIMSON_WALL_SIGN
	f	Lcdq;	nl	WARPED_WALL_SIGN
	f	Lcdq;	nm	STRUCTURE_BLOCK
	f	Lcdq;	nn	JIGSAW
	f	Lcdq;	no	COMPOSTER
	f	Lcdq;	np	TARGET
	f	Lcdq;	nq	BEE_NEST
	f	Lcdq;	nr	BEEHIVE
	f	Lcdq;	ns	HONEY_BLOCK
	f	Lcdq;	nt	HONEYCOMB_BLOCK
	f	Lcdq;	nu	NETHERITE_BLOCK
	f	Lcdq;	nv	ANCIENT_DEBRIS
	f	Lcdq;	nw	CRYING_OBSIDIAN
	f	Lcdq;	nx	RESPAWN_ANCHOR
	f	Lcdq;	ny	POTTED_CRIMSON_FUNGUS
	f	Lcdq;	nz	POTTED_WARPED_FUNGUS
	f	Lcdq;	oA	BLUE_CANDLE_CAKE
	f	Lcdq;	oB	BROWN_CANDLE_CAKE
	f	Lcdq;	oC	GREEN_CANDLE_CAKE
	f	Lcdq;	oD	RED_CANDLE_CAKE
	f	Lcdq;	oE	BLACK_CANDLE_CAKE
	f	Lcdq;	oF	AMETHYST_BLOCK
	f	Lcdq;	oG	BUDDING_AMETHYST
	f	Lcdq;	oH	AMETHYST_CLUSTER
	f	Lcdq;	oI	LARGE_AMETHYST_BUD
	f	Lcdq;	oJ	MEDIUM_AMETHYST_BUD
	f	Lcdq;	oK	SMALL_AMETHYST_BUD
	f	Lcdq;	oL	TUFF
	f	Lcdq;	o	SPRUCE_PLANKS
	f	Lcdq;	oM	CALCITE
	f	Lcdq;	oN	TINTED_GLASS
	f	Lcdq;	oO	POWDER_SNOW
	f	Lcdq;	oP	SCULK_SENSOR
	f	Lcdq;	oQ	OXIDIZED_COPPER
	f	Lcdq;	oR	WEATHERED_COPPER
	f	Lcdq;	oS	EXPOSED_COPPER
	f	Lcdq;	oT	COPPER_BLOCK
	f	Lcdq;	oU	COPPER_ORE
	f	Lcdq;	oV	DEEPSLATE_COPPER_ORE
	f	Lcdq;	oW	OXIDIZED_CUT_COPPER
	f	Lcdq;	oX	WEATHERED_CUT_COPPER
	f	Lcdq;	oY	EXPOSED_CUT_COPPER
	f	Lcdq;	oZ	CUT_COPPER
	f	Lcdq;	oa	MAGENTA_CANDLE
	f	Lcdq;	ob	LIGHT_BLUE_CANDLE
	f	Lcdq;	oc	YELLOW_CANDLE
	f	Lcdq;	od	LIME_CANDLE
	f	Lcdq;	oe	PINK_CANDLE
	f	Lcdq;	of	GRAY_CANDLE
	f	Lcdq;	og	LIGHT_GRAY_CANDLE
	f	Lcdq;	oh	CYAN_CANDLE
	f	Lcdq;	oi	PURPLE_CANDLE
	f	Lcdq;	oj	BLUE_CANDLE
	f	Lcdq;	ok	BROWN_CANDLE
	f	Lcdq;	ol	GREEN_CANDLE
	f	Lcdq;	om	RED_CANDLE
	f	Lcdq;	on	BLACK_CANDLE
	f	Lcdq;	oo	CANDLE_CAKE
	f	Lcdq;	op	WHITE_CANDLE_CAKE
	f	Lcdq;	oq	ORANGE_CANDLE_CAKE
	f	Lcdq;	or	MAGENTA_CANDLE_CAKE
	f	Lcdq;	os	LIGHT_BLUE_CANDLE_CAKE
	f	Lcdq;	ot	YELLOW_CANDLE_CAKE
	f	Lcdq;	ou	LIME_CANDLE_CAKE
	f	Lcdq;	ov	PINK_CANDLE_CAKE
	f	Lcdq;	ow	GRAY_CANDLE_CAKE
	f	Lcdq;	ox	LIGHT_GRAY_CANDLE_CAKE
	f	Lcdq;	oy	CYAN_CANDLE_CAKE
	f	Lcdq;	oz	PURPLE_CANDLE_CAKE
	f	Lcdq;	pA	DRIPSTONE_BLOCK
	f	Lcdq;	pB	CAVE_VINES
	f	Lcdq;	pC	CAVE_VINES_PLANT
	f	Lcdq;	pD	SPORE_BLOSSOM
	f	Lcdq;	pE	AZALEA
	f	Lcdq;	pF	FLOWERING_AZALEA
	f	Lcdq;	pG	MOSS_CARPET
	f	Lcdq;	pH	MOSS_BLOCK
	f	Lcdq;	pI	BIG_DRIPLEAF
	f	Lcdq;	pJ	BIG_DRIPLEAF_STEM
	f	Lcdq;	pK	SMALL_DRIPLEAF
	f	Lcdq;	pL	HANGING_ROOTS
	f	Lcdq;	p	BIRCH_PLANKS
	f	Lcdq;	pM	ROOTED_DIRT
	f	Lcdq;	pN	DEEPSLATE
	f	Lcdq;	pO	COBBLED_DEEPSLATE
	f	Lcdq;	pP	COBBLED_DEEPSLATE_STAIRS
	f	Lcdq;	pQ	COBBLED_DEEPSLATE_SLAB
	f	Lcdq;	pR	COBBLED_DEEPSLATE_WALL
	f	Lcdq;	pS	POLISHED_DEEPSLATE
	f	Lcdq;	pT	POLISHED_DEEPSLATE_STAIRS
	f	Lcdq;	pU	POLISHED_DEEPSLATE_SLAB
	f	Lcdq;	pV	POLISHED_DEEPSLATE_WALL
	f	Lcdq;	pW	DEEPSLATE_TILES
	f	Lcdq;	pX	DEEPSLATE_TILE_STAIRS
	f	Lcdq;	pY	DEEPSLATE_TILE_SLAB
	f	Lcdq;	pZ	DEEPSLATE_TILE_WALL
	f	Lcdq;	pa	OXIDIZED_CUT_COPPER_STAIRS
	f	Lcdq;	pb	WEATHERED_CUT_COPPER_STAIRS
	f	Lcdq;	pc	EXPOSED_CUT_COPPER_STAIRS
	f	Lcdq;	pd	CUT_COPPER_STAIRS
	f	Lcdq;	pe	OXIDIZED_CUT_COPPER_SLAB
	f	Lcdq;	pf	WEATHERED_CUT_COPPER_SLAB
	f	Lcdq;	pg	EXPOSED_CUT_COPPER_SLAB
	f	Lcdq;	ph	CUT_COPPER_SLAB
	f	Lcdq;	pi	WAXED_COPPER_BLOCK
	f	Lcdq;	pj	WAXED_WEATHERED_COPPER
	f	Lcdq;	pk	WAXED_EXPOSED_COPPER
	f	Lcdq;	pl	WAXED_OXIDIZED_COPPER
	f	Lcdq;	pm	WAXED_OXIDIZED_CUT_COPPER
	f	Lcdq;	pn	WAXED_WEATHERED_CUT_COPPER
	f	Lcdq;	po	WAXED_EXPOSED_CUT_COPPER
	f	Lcdq;	pp	WAXED_CUT_COPPER
	f	Lcdq;	pq	WAXED_OXIDIZED_CUT_COPPER_STAIRS
	f	Lcdq;	pr	WAXED_WEATHERED_CUT_COPPER_STAIRS
	f	Lcdq;	ps	WAXED_EXPOSED_CUT_COPPER_STAIRS
	f	Lcdq;	pt	WAXED_CUT_COPPER_STAIRS
	f	Lcdq;	pu	WAXED_OXIDIZED_CUT_COPPER_SLAB
	f	Lcdq;	pv	WAXED_WEATHERED_CUT_COPPER_SLAB
	f	Lcdq;	pw	WAXED_EXPOSED_CUT_COPPER_SLAB
	f	Lcdq;	px	WAXED_CUT_COPPER_SLAB
	f	Lcdq;	py	LIGHTNING_ROD
	f	Lcdq;	pz	POINTED_DRIPSTONE
	f	Lcdq;	q	JUNGLE_PLANKS
	f	Lcdq;	qa	DEEPSLATE_BRICKS
	f	Lcdq;	qb	DEEPSLATE_BRICK_STAIRS
	f	Lcdq;	qc	DEEPSLATE_BRICK_SLAB
	f	Lcdq;	qd	DEEPSLATE_BRICK_WALL
	f	Lcdq;	qe	CHISELED_DEEPSLATE
	f	Lcdq;	qf	CRACKED_DEEPSLATE_BRICKS
	f	Lcdq;	qg	CRACKED_DEEPSLATE_TILES
	f	Lcdq;	qh	INFESTED_DEEPSLATE
	f	Lcdq;	qi	SMOOTH_BASALT
	f	Lcdq;	qj	RAW_IRON_BLOCK
	f	Lcdq;	qk	RAW_COPPER_BLOCK
	f	Lcdq;	ql	RAW_GOLD_BLOCK
	f	Lcdq;	qm	POTTED_AZALEA
	f	Lcdq;	qn	POTTED_FLOWERING_AZALEA
	f	Lcdq;	r	ACACIA_PLANKS
	f	Lcdq;	s	DARK_OAK_PLANKS
	f	Lcdq;	t	OAK_SAPLING
	f	Lcdq;	u	SPRUCE_SAPLING
	f	Lcdq;	v	BIRCH_SAPLING
	f	Lcdq;	w	JUNGLE_SAPLING
	f	Lcdq;	x	ACACIA_SAPLING
	f	Lcdq;	y	DARK_OAK_SAPLING
	f	Lcdq;	z	BEDROCK
c	cds	net/minecraft/world/level/block/BonemealableBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
c	cdt	net/minecraft/world/level/block/BrewingStandBlock
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	f	[Lcpm;	a	HAS_BOTTLE
	f	Ldqh;	b	SHAPE
c	cdu	net/minecraft/world/level/block/BubbleColumnBlock
	m	()Ljava/util/Optional;	X_	getPickupSound
	m	(Lcaw;Lgj;Lcov;Lcov;)V	a	updateColumn
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcaw;Lgj;Lcov;)V	b	updateColumn
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcaw;Lgj;Lcov;)Lbuw;	c	pickupBlock
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;)Z	h	canExistIn
	m	(Lcov;)Lcov;	n	getColumnState
	f	Lcpm;	a	DRAG_DOWN
	f	I	b	CHECK_PERIOD
c	cdv	net/minecraft/world/level/block/BucketPickup
	m	()Ljava/util/Optional;	X_	getPickupSound
	m	(Lcaw;Lgj;Lcov;)Lbuw;	c	pickupBlock
c	cdw	net/minecraft/world/level/block/BuddingAmethystBlock
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;)Ldjd;	d	getPistonPushReaction
	m	(Lcov;)Z	g	canClusterGrowAtState
	f	I	a	GROWTH_CHANCE
	f	[Lgo;	b	DIRECTIONS
c	cdx	net/minecraft/world/level/block/BushBlock
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;Lcab;Lgj;)Z	c	propagatesSkylightDown
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
c	cdy	net/minecraft/world/level/block/ButtonBlock
	m	(Lboj;Lcaw;Lgj;Z)V	a	playSound
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Z)Lahj;	a	getSound
	m	(Lcov;Lcab;Lgj;Lgo;)I	b	getDirectSignal
	m	()I	c	getPressDuration
	m	(Lcov;Lcav;Lgj;)V	d	press
	m	(Lcov;Lcav;Lgj;)V	e	checkPressed
	m	(Lcov;Lcav;Lgj;)V	f	updateNeighbours
	m	(Lcov;)Z	f_	isSignalSource
	f	Ldqh;	E	PRESSED_FLOOR_AABB_Z
	f	Ldqh;	F	PRESSED_NORTH_AABB
	f	Ldqh;	G	PRESSED_SOUTH_AABB
	f	Ldqh;	H	PRESSED_WEST_AABB
	f	Ldqh;	I	PRESSED_EAST_AABB
	f	I	K	PRESSED_DEPTH
	f	I	L	UNPRESSED_DEPTH
	f	Z	M	sensitive
	f	Lcpm;	a	POWERED
	f	I	b	HALF_AABB_HEIGHT
	f	I	c	HALF_AABB_WIDTH
	f	Ldqh;	d	CEILING_AABB_X
	f	Ldqh;	e	CEILING_AABB_Z
	f	Ldqh;	f	FLOOR_AABB_X
	f	Ldqh;	g	FLOOR_AABB_Z
	f	Ldqh;	h	NORTH_AABB
	f	Ldqh;	i	SOUTH_AABB
	f	Ldqh;	j	WEST_AABB
	f	Ldqh;	k	EAST_AABB
	f	Ldqh;	l	PRESSED_CEILING_AABB_X
	f	Ldqh;	m	PRESSED_CEILING_AABB_Z
	f	Ldqh;	n	PRESSED_FLOOR_AABB_X
c	cdy$1	net/minecraft/world/level/block/ButtonBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	cdz	net/minecraft/world/level/block/CactusBlock
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	f	Lcpv;	a	AGE
	f	I	b	MAX_AGE
	f	I	c	AABB_OFFSET
	f	Ldqh;	d	COLLISION_SHAPE
	f	Ldqh;	e	OUTLINE_SHAPE
c	cea	net/minecraft/world/level/block/CakeBlock
	m	(Lcaw;Lgj;Lcov;Lboj;)Lawh;	a	eat
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(I)I	b	getOutputSignal
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	f	I	a	MAX_BITES
	f	Lcpv;	b	BITES
	f	I	c	FULL_CAKE_SIGNAL
	f	F	d	AABB_OFFSET
	f	F	e	AABB_SIZE_PER_BITE
	f	[Ldqh;	f	SHAPE_BY_BITE
c	ceb	net/minecraft/world/level/block/CampfireBlock
	m	(Laxk;Lcaw;Lgj;Lcov;)V	a	dowse
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcav;Lcov;Ldpk;Lboz;)V	a	onProjectileHit
	m	(Lcav;Lgj;)Z	a	isSmokeyPos
	m	(Lcav;Lgj;ZZ)V	a	makeParticles
	m	(Lcaw;Lgj;Lcov;Ldix;)Z	a	placeLiquid
	m	(Lcou$a;)Z	a	lambda$canLight$0
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;)Z	g	isLitCampfire
	m	(Lcov;)Z	h	canLight
	m	(Lcov;)Z	n	isSmokeSource
	f	Ldqh;	a	SHAPE
	f	Lcpm;	b	LIT
	f	Lcpm;	c	SIGNAL_FIRE
	f	Lcpm;	d	WATERLOGGED
	f	Lcpp;	e	FACING
	f	Ldqh;	f	VIRTUAL_FENCE_POST
	f	I	g	SMOKE_DISTANCE
	f	Z	h	spawnParticles
	f	I	i	fireDamage
c	cec	net/minecraft/world/level/block/CandleBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcaw;Lgj;Lcov;Ldix;)Z	a	placeLiquid
	m	(Lcou$a;)Z	a	lambda$canLight$2
	m	(Lcov;)Ljava/lang/Iterable;	a	getParticleOffsets
	m	(Lcov;Lbww;)Z	a	canBeReplaced
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)Z	c	canBeLit
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;)Z	g	canLight
	m	(Lcov;)I	h	lambda$static$0
	m	()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	r	lambda$static$1
	f	I	c	MIN_CANDLES
	f	I	d	MAX_CANDLES
	f	Lcpv;	e	CANDLES
	f	Lcpm;	f	LIT
	f	Lcpm;	g	WATERLOGGED
	f	Ljava/util/function/ToIntFunction;	h	LIGHT_EMISSION
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	i	PARTICLE_OFFSETS
	f	Ldqh;	j	ONE_AABB
	f	Ldqh;	k	TWO_AABB
	f	Ldqh;	l	THREE_AABB
	f	Ldqh;	m	FOUR_AABB
c	ced	net/minecraft/world/level/block/CandleCakeBlock
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcdq;)Lcov;	a	byCandle
	m	(Lcov;)Ljava/lang/Iterable;	a	getParticleOffsets
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lcou$a;)Z	a	lambda$canLight$0
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Ldpk;)Z	a	candleHit
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	m	(Lcov;)Z	g	canLight
	f	Lcpm;	c	LIT
	f	F	d	AABB_OFFSET
	f	Ldqh;	e	CAKE_SHAPE
	f	Ldqh;	f	CANDLE_SHAPE
	f	Ldqh;	g	SHAPE
	f	Ljava/util/Map;	h	BY_CANDLE
	f	Ljava/lang/Iterable;	i	PARTICLE_OFFSETS
c	cee	net/minecraft/world/level/block/CarpetBlock
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	f	Ldqh;	a	SHAPE
c	cef	net/minecraft/world/level/block/CarrotBlock
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	()Lcau;	e	getBaseSeedId
	f	[Ldqh;	a	SHAPE_BY_AGE
c	ceg	net/minecraft/world/level/block/CartographyTableBlock
	m	(Lcav;Lgj;ILboi;Lboj;)Lbqp;	a	lambda$getMenuProvider$0
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;)Lawk;	b	getMenuProvider
	f	Lqk;	a	CONTAINER_TITLE
c	ceh	net/minecraft/world/level/block/CarvedPumpkinBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;)V	a	trySpawnGolem
	m	(Lcay;Lgj;)Z	a	canSpawnGolem
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	()Lcpa;	c	getOrCreateSnowGolemBase
	m	(Lcov;)Z	h	lambda$static$0
	m	()Lcpa;	r	getOrCreateSnowGolemFull
	m	()Lcpa;	v	getOrCreateIronGolemBase
	m	()Lcpa;	w	getOrCreateIronGolemFull
	f	Lcpp;	a	FACING
	f	Lcpa;	b	snowGolemBase
	f	Lcpa;	c	snowGolemFull
	f	Lcpa;	d	ironGolemBase
	f	Lcpa;	e	ironGolemFull
	f	Ljava/util/function/Predicate;	f	PUMPKINS_PREDICATE
c	cei	net/minecraft/world/level/block/CauldronBlock
	m	(Lcav;Lcbr$d;)Z	a	shouldHandlePrecipitation
	m	(Lcov;Lcav;Lgj;Lcbr$d;)V	a	handlePrecipitation
	m	(Lcov;Lcav;Lgj;Ldiw;)V	a	receiveStalactiteDrip
	m	(Ldiw;)Z	a	canReceiveStalactiteDrip
	m	(Lcov;)Z	c	isFull
	f	F	c	RAIN_FILL_CHANCE
	f	F	d	POWDER_SNOW_FILL_CHANCE
c	cej	net/minecraft/world/level/block/CaveVines
	m	(ILcov;)I	a	lambda$emission$0
	m	(Lcov;)Z	a	hasGlowBerries
	m	(Lcov;Lcav;Lgj;)Lawh;	a_	use
	m	(I)Ljava/util/function/ToIntFunction;	c_	emission
	f	Ldqh;	o_	SHAPE
	f	Lcpm;	p_	BERRIES
c	cek	net/minecraft/world/level/block/CaveVinesBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcov;)Lcov;	a	updateBodyAfterConvertedFromHead
	m	(Lcov;Ljava/util/Random;)Lcov;	a	getGrowIntoState
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Ljava/util/Random;)I	a	getBlocksToGrowWhenBonemealed
	m	()Lcdq;	c	getBodyBlock
	m	(Lcov;)Z	g	canGrowInto
	f	F	f	CHANCE_OF_BERRIES_ON_GROWTH
c	cel	net/minecraft/world/level/block/CaveVinesPlantBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcov;)Lcov;	a	updateHeadAfterConvertedFromBody
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	()Lcgu;	d	getHeadBlock
c	cem	net/minecraft/world/level/block/ChainBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)Ldix;	c_	getFluidState
	f	Lcpm;	a	WATERLOGGED
	f	F	b	AABB_MIN
	f	F	c	AABB_MAX
	f	Ldqh;	d	Y_AXIS_AABB
	f	Ldqh;	e	Z_AXIS_AABB
	f	Ldqh;	f	X_AXIS_AABB
c	cem$1	net/minecraft/world/level/block/ChainBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	cen	net/minecraft/world/level/block/ChangeOverTimeBlock
	m	()F	a	getChanceModifier
	m	(Ladw;Lgj;Lcov;)V	a	lambda$applyChangeOverTime$0
	m	(Lcov;)Ljava/util/Optional;	a	getNext
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a_	onRandomTick
	m	()Ljava/lang/Enum;	b	getAge
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	c	applyChangeOverTime
	f	I	s_	SCAN_DISTANCE
c	ceo	net/minecraft/world/level/block/ChestBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lbww;Lgo;)Lgo;	a	candidatePartnerFacing
	m	(Lcab;Lgj;)Z	a	isBlockedChestByBlock
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcaw;Lgj;)Z	a	isChestBlockedAt
	m	(Lceo;Lcov;Lcav;Lgj;Z)Lawa;	a	getContainer
	m	(Lcnn;)Lcfn$b;	a	opennessCombiner
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lcav;Lgj;Z)Lcfn$c;	a	combine
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcaw;Lgj;)Z	b	isCatSittingOnChest
	m	(Lcov;Lcav;Lgj;)Lawk;	b	getMenuProvider
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcaw;Lgj;)Z	c	lambda$combine$0
	m	(Lcov;)Ldix;	c_	getFluidState
	m	()Lahr;	d	getOpenChestStat
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	m	()Lcmt;	e	blockEntityType
	m	(Lcov;)Lcfn$a;	g	getBlockType
	m	(Lcov;)Lgo;	h	getConnectedDirection
	f	Lcpp;	b	FACING
	f	Lcpt;	c	TYPE
	f	Lcpm;	d	WATERLOGGED
	f	I	e	EVENT_SET_OPEN_COUNT
	f	I	f	AABB_OFFSET
	f	I	g	AABB_HEIGHT
	f	Ldqh;	h	NORTH_AABB
	f	Ldqh;	i	SOUTH_AABB
	f	Ldqh;	j	WEST_AABB
	f	Ldqh;	k	EAST_AABB
	f	Ldqh;	l	AABB
	f	Lcfn$b;	m	CHEST_COMBINER
	f	Lcfn$b;	n	MENU_PROVIDER_COMBINER
c	ceo$1	net/minecraft/world/level/block/ChestBlock$1
	m	()Ljava/util/Optional;	a	acceptNone
	m	(Lcmw;)Ljava/util/Optional;	a	acceptSingle
	m	(Lcmw;Lcmw;)Ljava/util/Optional;	a	acceptDouble
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
	m	()Ljava/lang/Object;	b	acceptNone
c	ceo$2	net/minecraft/world/level/block/ChestBlock$2
	m	()Ljava/util/Optional;	a	acceptNone
	m	(Lcmw;)Ljava/util/Optional;	a	acceptSingle
	m	(Lcmw;Lcmw;)Ljava/util/Optional;	a	acceptDouble
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
	m	()Ljava/lang/Object;	b	acceptNone
c	ceo$2$1	net/minecraft/world/level/block/ChestBlock$2$1
	m	()Lqk;	C_	getDisplayName
	f	Lcmw;	a	val$first
	f	Lcmw;	b	val$second
	f	Lawa;	c	val$container
	f	Lceo$2;	d	this$0
c	ceo$3	net/minecraft/world/level/block/ChestBlock$3
	m	()Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptNone
	m	(Lcmw;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptSingle
	m	(Lcmw;Lcmw;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptDouble
	m	(Lcmw;Lcmw;F)F	a	lambda$acceptDouble$0
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
	m	()Ljava/lang/Object;	b	acceptNone
	f	Lcnn;	a	val$entity
c	ceo$4	net/minecraft/world/level/block/ChestBlock$4
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cep	net/minecraft/world/level/block/ChorusFlowerBlock
	m	(Lcav;Lcov;Ldpk;Lboz;)V	a	onProjectileHit
	m	(Lcav;Lgj;)V	a	placeDeadFlower
	m	(Lcav;Lgj;I)V	a	placeGrownFlower
	m	(Lcaw;Lgj;Ljava/util/Random;I)V	a	generatePlant
	m	(Lcaw;Lgj;Ljava/util/Random;Lgj;II)V	a	growTreeRecursive
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcay;Lgj;Lgo;)Z	b	allNeighborsEmpty
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;)Z	e_	isRandomlyTicking
	f	I	a	DEAD_AGE
	f	Lcpv;	b	AGE
	f	Lceq;	c	plant
c	ceq	net/minecraft/world/level/block/ChorusPlantBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;)Lcov;	a	getStateForPlacement
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
c	cer	net/minecraft/world/level/block/CocoaBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;)Z	e_	isRandomlyTicking
	f	[Ldqh;	E	SOUTH_AABB
	f	I	a	MAX_AGE
	f	Lcpv;	b	AGE
	f	I	c	AGE_0_WIDTH
	f	I	d	AGE_0_HEIGHT
	f	I	e	AGE_0_HALFWIDTH
	f	I	f	AGE_1_WIDTH
	f	I	g	AGE_1_HEIGHT
	f	I	h	AGE_1_HALFWIDTH
	f	I	i	AGE_2_WIDTH
	f	I	j	AGE_2_HEIGHT
	f	I	k	AGE_2_HALFWIDTH
	f	[Ldqh;	l	EAST_AABB
	f	[Ldqh;	m	WEST_AABB
	f	[Ldqh;	n	NORTH_AABB
c	cer$1	net/minecraft/world/level/block/CocoaBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	ces	net/minecraft/world/level/block/CommandBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcav;Lgj;Lgo;)V	a	executeChain
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lbzw;Z)V	a	execute
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	f	Lcpp;	a	FACING
	f	Lcpm;	b	CONDITIONAL
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Z	d	automatic
c	cet	net/minecraft/world/level/block/ComparatorBlock
	m	(Lcav;Lgj;Lcov;)Z	a	shouldTurnOn
	m	(Lcav;Lgo;Lgj;)Lblc;	a	getItemFrame
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcav;Lgj;II)Z	a	triggerEvent
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lgo;Lblc;)Z	a	lambda$getItemFrame$0
	m	(Lcab;Lgj;Lcov;)I	b	getOutputSignal
	m	(Lcav;Lgj;Lcov;)I	b	getInputSignal
	m	(Lcav;Lgj;Lcov;)V	c	checkTickOnNeighbor
	m	(Lcav;Lgj;Lcov;)I	e	calculateOutputSignal
	m	(Lcav;Lgj;Lcov;)V	f	refreshOutputState
	m	(Lcov;)I	g	getDelay
	f	Lcpt;	a	MODE
c	ceu	net/minecraft/world/level/block/ComposterBlock
	m	(FLcau;)V	a	add
	m	(Lcav;Lgj;Z)V	a	handleFill
	m	(Lcov;Ladw;Lbuw;Lgj;)Lcov;	a	insertItem
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;)Ldqh;	a	getInteractionShape
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcaw;Lgj;)Lawo;	a	getContainer
	m	(Lcov;Lcaw;Lgj;Lbuw;)Lcov;	a	addItem
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	([Ldqh;)V	a	lambda$static$0
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	()V	c	bootStrap
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	m	(Lcov;Lcaw;Lgj;)Lcov;	c	empty
	m	(Lcov;Lcav;Lgj;)Lcov;	d	extractProduce
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	f	I	a	READY
	f	I	b	MIN_LEVEL
	f	I	c	MAX_LEVEL
	f	Lcpv;	d	LEVEL
	f	Lit/unimi/dsi/fastutil/objects/Object2FloatMap;	e	COMPOSTABLES
	f	I	f	AABB_SIDE_THICKNESS
	f	Ldqh;	g	OUTER_SHAPE
	f	[Ldqh;	h	SHAPES
c	ceu$a	net/minecraft/world/level/block/ComposterBlock$EmptyContainer
	m	(ILbuw;Lgo;)Z	a	canPlaceItemThroughFace
	m	(Lgo;)[I	a	getSlotsForFace
	m	(ILbuw;Lgo;)Z	b	canTakeItemThroughFace
c	ceu$b	net/minecraft/world/level/block/ComposterBlock$InputContainer
	m	()I	N_	getMaxStackSize
	m	(ILbuw;Lgo;)Z	a	canPlaceItemThroughFace
	m	(Lgo;)[I	a	getSlotsForFace
	m	(ILbuw;Lgo;)Z	b	canTakeItemThroughFace
	m	()V	e	setChanged
	f	Lcov;	b	state
	f	Lcaw;	c	level
	f	Lgj;	d	pos
	f	Z	e	changed
c	ceu$c	net/minecraft/world/level/block/ComposterBlock$OutputContainer
	m	()I	N_	getMaxStackSize
	m	(ILbuw;Lgo;)Z	a	canPlaceItemThroughFace
	m	(Lgo;)[I	a	getSlotsForFace
	m	(ILbuw;Lgo;)Z	b	canTakeItemThroughFace
	m	()V	e	setChanged
	f	Lcov;	b	state
	f	Lcaw;	c	level
	f	Lgj;	d	pos
	f	Z	e	changed
c	cev	net/minecraft/world/level/block/ConcretePowderBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;)Z	a	touchesLiquid
	m	(Lcav;Lgj;Lcov;Lcov;Lblh;)V	a	onLand
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcab;Lgj;Lcov;)Z	b	shouldSolidify
	m	(Lcov;Lcab;Lgj;)I	d	getDustColor
	m	(Lcov;)Z	n	canSolidify
	f	Lcov;	a	concrete
c	cew	net/minecraft/world/level/block/ConduitBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;)Ldix;	c_	getFluidState
	f	Lcpm;	a	WATERLOGGED
	f	Ldqh;	b	SHAPE
	f	I	c	SIZE
c	cex	net/minecraft/world/level/block/CoralBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;)Z	a	scanForWater
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	f	Lcdq;	a	deadBlock
c	cey	net/minecraft/world/level/block/CoralFanBlock
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	f	Lcdq;	a	deadBlock
c	cez	net/minecraft/world/level/block/CoralPlantBlock
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	f	F	a	AABB_OFFSET
	f	Ldqh;	b	SHAPE
	f	Lcdq;	d	deadBlock
c	cfa	net/minecraft/world/level/block/CoralWallFanBlock
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	f	Lcdq;	b	deadBlock
c	cfb	net/minecraft/world/level/block/CraftingTableBlock
	m	(Lcav;Lgj;ILboi;Lboj;)Lbqp;	a	lambda$getMenuProvider$0
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;)Lawk;	b	getMenuProvider
	f	Lqk;	a	CONTAINER_TITLE
c	cfc	net/minecraft/world/level/block/CropBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;)I	a	getBonemealAgeIncrease
	m	(Lcav;Lgj;Lcov;)V	a	growCrops
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcdq;Lcab;Lgj;)F	a	getGrowthSpeed
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(I)Lcov;	b	getStateForAge
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	()Lcpv;	c	getAgeProperty
	m	()I	d	getMaxAge
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
	m	()Lcau;	e	getBaseSeedId
	m	(Lcov;)Z	e_	isRandomlyTicking
	m	(Lcov;)I	g	getAge
	m	(Lcov;)Z	h	isMaxAge
	f	[Ldqh;	a	SHAPE_BY_AGE
	f	I	c	MAX_AGE
	f	Lcpv;	d	AGE
c	cfd	net/minecraft/world/level/block/CrossCollisionBlock
	m	(FFFFF)[Ldqh;	a	makeShapes
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lgo;)I	a	indexFor
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
	m	(Lcov;Lcab;Lgj;)Z	c	propagatesSkylightDown
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;)I	g	getAABBIndex
	m	(Lcov;)I	h	lambda$getAABBIndex$1
	f	Lcpm;	a	NORTH
	f	Lcpm;	b	EAST
	f	Lcpm;	c	SOUTH
	f	Lcpm;	d	WEST
	f	Lcpm;	e	WATERLOGGED
	f	Ljava/util/Map;	f	PROPERTY_BY_DIRECTION
	f	[Ldqh;	g	collisionShapeByIndex
	f	[Ldqh;	h	shapeByIndex
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	i	stateToIndex
c	cfd$1	net/minecraft/world/level/block/CrossCollisionBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cfe	net/minecraft/world/level/block/CryingObsidianBlock
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
c	cff	net/minecraft/world/level/block/DaylightDetectorBlock
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcav;Lgj;Lcov;Lcnc;)V	a	tickEntity
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;Lcav;Lgj;)V	d	updateSignalStrength
	m	(Lcov;)Z	f_	isSignalSource
	m	(Lcov;)Z	g_	useShapeForLightOcclusion
	f	Lcpv;	a	POWER
	f	Lcpm;	b	INVERTED
	f	Ldqh;	c	SHAPE
c	cfg	net/minecraft/world/level/block/DeadBushBlock
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
	f	F	a	AABB_OFFSET
	f	Ldqh;	b	SHAPE
c	cfh	net/minecraft/world/level/block/DetectorRailBlock
	m	(Laxk;)Z	a	lambda$getAnalogOutputSignal$1
	m	(Lcav;Lgj;Lcov;)V	a	checkPressed
	m	(Lcav;Lgj;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List;	a	getInteractingMinecartOfType
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;)Ldpj;	a	getSearchBB
	m	(Laxk;)Z	b	lambda$checkPressed$0
	m	(Lcav;Lgj;Lcov;Z)V	b	updatePowerToConnected
	m	(Lcov;Lcab;Lgj;Lgo;)I	b	getDirectSignal
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	()Lcpy;	d	getShapeProperty
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	m	(Lcov;)Z	f_	isSignalSource
	f	Lcpt;	d	SHAPE
	f	Lcpm;	e	POWERED
	f	I	f	PRESSED_CHECK_PERIOD
c	cfh$1	net/minecraft/world/level/block/DetectorRailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cfi	net/minecraft/world/level/block/DiodeBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;Lcov;)Z	a	shouldTurnOn
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcay;Lgj;Lcov;)Z	a	isLocked
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcab;Lgj;Lcov;)I	b	getOutputSignal
	m	(Lcav;Lgj;Lcov;)I	b	getInputSignal
	m	(Lcay;Lgj;Lcov;)I	b	getAlternateSignal
	m	(Lcay;Lgj;Lgo;)I	b	getAlternateSignalAt
	m	(Lcov;Lcab;Lgj;Lgo;)I	b	getDirectSignal
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	(Lcab;Lgj;Lcov;)Z	c	shouldPrioritize
	m	(Lcav;Lgj;Lcov;)V	c	checkTickOnNeighbor
	m	(Lcav;Lgj;Lcov;)V	d	updateNeighborsInFront
	m	(Lcov;)Z	f_	isSignalSource
	m	(Lcov;)I	g	getDelay
	m	(Lcov;)Z	h	isAlternateInput
	m	(Lcov;)Z	n	isDiode
	f	Ldqh;	b	SHAPE
	f	Lcpm;	c	POWERED
c	cfj	net/minecraft/world/level/block/DirectionalBlock
	f	Lcpp;	a	FACING
c	cfk	net/minecraft/world/level/block/DirtPathBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;)Z	g_	useShapeForLightOcclusion
	f	Ldqh;	a	SHAPE
c	cfl	net/minecraft/world/level/block/DispenserBlock
	m	(Ladw;Lgj;)V	a	dispenseFrom
	m	(Lbuw;)Lho;	a	getDispenseMethod
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcau;Lho;)V	a	registerBehavior
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lgk;)Lgy;	a	getDispensePosition
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;)V	a	lambda$static$0
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	f	Lcpp;	a	FACING
	f	Lcpm;	b	TRIGGERED
	f	Ljava/util/Map;	c	DISPENSER_REGISTRY
	f	I	d	TRIGGER_DURATION
c	cfm	net/minecraft/world/level/block/DoorBlock
	m	(Laxk;Lcav;Lcov;Lgj;Z)V	a	setOpen
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;)Z	a	isWoodenDoor
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcav;Lgj;Lcov;Lboj;)V	a	playerWillDestroy
	m	(Lcav;Lgj;Z)V	a	playSound
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgj;)J	a	getSeed
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lbww;)Lcpq;	b	getHinge
	m	()I	c	getCloseSound
	m	(Lcov;)Ldjd;	d	getPistonPushReaction
	m	(Lcov;)Z	h	isOpen
	m	(Lcov;)Z	n	isWoodenDoor
	m	()I	r	getOpenSound
	f	Lcpp;	a	FACING
	f	Lcpm;	b	OPEN
	f	Lcpt;	c	HINGE
	f	Lcpm;	d	POWERED
	f	Lcpt;	e	HALF
	f	F	f	AABB_DOOR_THICKNESS
	f	Ldqh;	g	SOUTH_AABB
	f	Ldqh;	h	NORTH_AABB
	f	Ldqh;	i	WEST_AABB
	f	Ldqh;	j	EAST_AABB
c	cfm$1	net/minecraft/world/level/block/DoorBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	cfn	net/minecraft/world/level/block/DoubleBlockCombiner
	m	(Lcmt;Ljava/util/function/Function;Ljava/util/function/Function;Lcpp;Lcov;Lcaw;Lgj;Ljava/util/function/BiPredicate;)Lcfn$c;	a	combineWithNeigbour
c	cfn$a	net/minecraft/world/level/block/DoubleBlockCombiner$BlockType
	m	()[Lcfn$a;	a	$values
	f	Lcfn$a;	a	SINGLE
	f	Lcfn$a;	b	FIRST
	f	Lcfn$a;	c	SECOND
	f	[Lcfn$a;	d	$VALUES
c	cfn$b	net/minecraft/world/level/block/DoubleBlockCombiner$Combiner
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
	m	()Ljava/lang/Object;	b	acceptNone
c	cfn$c	net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult
c	cfn$c$a	net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double
	f	Ljava/lang/Object;	a	first
	f	Ljava/lang/Object;	b	second
c	cfn$c$b	net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single
	f	Ljava/lang/Object;	a	single
c	cfo	net/minecraft/world/level/block/DoublePlantBlock
	m	()Lcou$b;	U_	getOffsetType
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lboj;Lgj;Lcov;Lcmr;Lbuw;)V	a	playerDestroy
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcav;Lgj;Lcov;Lboj;)V	a	playerWillDestroy
	m	(Lcaw;Lcov;Lgj;I)V	a	placeAt
	m	(Lcay;Lgj;Lcov;)Lcov;	a	copyWaterloggedFrom
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgj;)J	a	getSeed
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcav;Lgj;Lcov;Lboj;)V	b	preventCreativeDropFromBottomPart
	f	Lcpt;	a	HALF
c	cfp	net/minecraft/world/level/block/DragonEggBlock
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;)V	a	attack
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	()I	c	getDelayAfterPlace
	m	(Lcov;Lcav;Lgj;)V	d	teleport
	f	Ldqh;	a	SHAPE
c	cfq	net/minecraft/world/level/block/DropperBlock
	m	(Ladw;Lgj;)V	a	dispenseFrom
	m	(Lbuw;)Lho;	a	getDispenseMethod
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	f	Lho;	c	DISPENSE_BEHAVIOUR
c	cfr	net/minecraft/world/level/block/EnchantmentTableBlock
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcav;Lgj;ILboi;Lboj;)Lbqp;	a	lambda$getMenuProvider$1
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcav;Lgj;Lgj;)Z	a	isValidBookShelf
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lgj;)Z	a	lambda$static$0
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcov;Lcav;Lgj;)Lawk;	b	getMenuProvider
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;)Z	g_	useShapeForLightOcclusion
	f	Ldqh;	a	SHAPE
	f	Ljava/util/List;	b	BOOKSHELF_OFFSETS
c	cfs	net/minecraft/world/level/block/EndGatewayBlock
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Ldiw;)Z	a	canBeReplaced
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
c	cft	net/minecraft/world/level/block/EndPortalBlock
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Ldiw;)Z	a	canBeReplaced
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	f	Ldqh;	a	SHAPE
c	cfu	net/minecraft/world/level/block/EndPortalFrameBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	()Lcpa;	c	getOrCreatePortalShape
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	m	(Lcov;)Z	g_	useShapeForLightOcclusion
	f	Lcpp;	a	FACING
	f	Lcpm;	b	HAS_EYE
	f	Ldqh;	c	BASE_SHAPE
	f	Ldqh;	d	EYE_SHAPE
	f	Ldqh;	e	FULL_SHAPE
	f	Lcpa;	f	portalShape
c	cfv	net/minecraft/world/level/block/EndRodBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)Ldjd;	d	getPistonPushReaction
c	cfw	net/minecraft/world/level/block/EnderChestBlock
	m	(Lbrx;ILboi;Lboj;)Lbqp;	a	lambda$use$1
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lcav;Lgj;Z)Lcfn$c;	a	combine
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;)Ldix;	c_	getFluidState
	m	()Lcmt;	r	lambda$new$0
	f	Lcpp;	b	FACING
	f	Lcpm;	c	WATERLOGGED
	f	Ldqh;	d	SHAPE
	f	Lqk;	e	CONTAINER_TITLE
c	cfx	net/minecraft/world/level/block/EntityBlock
	m	(Lcav;Lcmr;)Lcta;	a	getListener
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
c	cfy	net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcay;Lgj;Lgo;)Z	b	canAttach
	m	(Lcov;)Lgo;	h	getConnectedDirection
	f	Lcpt;	J	FACE
c	cfy$1	net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	cfz	net/minecraft/world/level/block/Fallable
	m	()Ljava/util/function/Predicate;	V_	getHurtsEntitySelector
	m	(Lcav;Lgj;Lblh;)V	a	onBrokenAfterFall
	m	(Lcav;Lgj;Lcov;Lcov;Lblh;)V	a	onLand
	m	()Lawu;	b	getFallDamageSource
c	cga	net/minecraft/world/level/block/FallingBlock
	m	(Lblh;)V	a	falling
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	()I	c	getDelayAfterPlace
	m	(Lcov;Lcab;Lgj;)I	d	getDustColor
	m	(Lcov;)Z	h	isFree
c	cgb	net/minecraft/world/level/block/FarmBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;)Z	a	isUnderCrops
	m	(Lcav;Lcov;Lgj;Laxk;F)V	a	fallOn
	m	(Lcay;Lgj;)Z	a	isNearWater
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcav;Lgj;)V	d	turnToDirt
	m	(Lcov;)Z	g_	useShapeForLightOcclusion
	f	Lcpv;	a	MOISTURE
	f	Ldqh;	b	SHAPE
	f	I	c	MAX_MOISTURE
c	cgc	net/minecraft/world/level/block/FenceBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;ZLgo;)Z	a	connectsTo
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	b	getVisualShape
	m	(Lcov;Lcab;Lgj;)Ldqh;	b_	getOcclusionShape
	m	(Lcov;)Z	h	isSameFence
	f	[Ldqh;	i	occlusionByIndex
c	cgd	net/minecraft/world/level/block/FenceGateBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lgo;)Z	a	connectsToDirection
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcab;Lgj;)Ldqh;	b_	getOcclusionShape
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	m	(Lcov;)Z	h	isWall
	f	Lcpm;	a	OPEN
	f	Lcpm;	b	POWERED
	f	Lcpm;	c	IN_WALL
	f	Ldqh;	d	Z_SHAPE
	f	Ldqh;	e	X_SHAPE
	f	Ldqh;	f	Z_SHAPE_LOW
	f	Ldqh;	g	X_SHAPE_LOW
	f	Ldqh;	h	Z_COLLISION_SHAPE
	f	Ldqh;	i	X_COLLISION_SHAPE
	f	Ldqh;	j	Z_OCCLUSION_SHAPE
	f	Ldqh;	k	X_OCCLUSION_SHAPE
	f	Ldqh;	l	Z_OCCLUSION_SHAPE_LOW
	f	Ldqh;	m	X_OCCLUSION_SHAPE_LOW
c	cgd$1	net/minecraft/world/level/block/FenceGateBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	cge	net/minecraft/world/level/block/FireBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;)Z	a	isNearRain
	m	(Lcav;Lgj;ILjava/util/Random;I)V	a	checkBurnOut
	m	(Lcaw;Lgj;I)Lcov;	a	getStateWithAge
	m	(Lcay;Lgj;)I	a	getFireOdds
	m	(Lcdq;II)V	a	setFlammable
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
	m	(Ljava/util/Random;)I	a	getFireTickDelay
	m	(Lcab;Lgj;)Lcov;	b	getStateForPlacement
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	()V	c	bootStrap
	m	(Lcab;Lgj;)Z	d	isValidFireLocation
	m	(Lcov;)Z	f	canBurn
	m	(Lcov;)Ldqh;	h	calculateShape
	m	(Lcov;)I	n	getBurnOdd
	m	(Lcov;)I	o	getFlameOdds
	m	(Lcov;)Z	p	lambda$new$1
	f	Ldqh;	E	SOUTH_AABB
	f	Ljava/util/Map;	F	shapesCache
	f	I	G	FLAME_INSTANT
	f	I	H	FLAME_EASY
	f	I	I	FLAME_MEDIUM
	f	I	J	FLAME_HARD
	f	I	K	BURN_INSTANT
	f	I	L	BURN_EASY
	f	I	M	BURN_MEDIUM
	f	I	N	BURN_HARD
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	O	flameOdds
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	P	burnOdds
	f	I	c	MAX_AGE
	f	Lcpv;	d	AGE
	f	Lcpm;	e	NORTH
	f	Lcpm;	f	EAST
	f	Lcpm;	g	SOUTH
	f	Lcpm;	h	WEST
	f	Lcpm;	i	UP
	f	Ljava/util/Map;	j	PROPERTY_BY_DIRECTION
	f	Ldqh;	k	UP_AABB
	f	Ldqh;	l	WEST_AABB
	f	Ldqh;	m	EAST_AABB
	f	Ldqh;	n	NORTH_AABB
c	cgf	net/minecraft/world/level/block/FletchingTableBlock
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
c	cgg	net/minecraft/world/level/block/FlowerBlock
	m	()Lcou$b;	U_	getOffsetType
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	()Laxc;	c	getSuspiciousStewEffect
	m	()I	d	getEffectDuration
	f	F	a	AABB_OFFSET
	f	Ldqh;	b	SHAPE
	f	Laxc;	c	suspiciousStewEffect
	f	I	d	effectDuration
c	cgh	net/minecraft/world/level/block/FlowerPotBlock
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	()Lcdq;	c	getContent
	m	()Z	r	isEmpty
	f	F	a	AABB_SIZE
	f	Ldqh;	b	SHAPE
	f	Ljava/util/Map;	c	POTTED_BY_CONTENT
	f	Lcdq;	d	content
c	cgi	net/minecraft/world/level/block/FrostedIceBlock
	m	(Lcab;Lgj;I)Z	a	fewerNeigboursThan
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcav;Lgj;)Z	e	slightlyMelt
	f	I	a	MAX_AGE
	f	Lcpv;	b	AGE
	f	I	c	NEIGHBORS_TO_AGE
	f	I	d	NEIGHBORS_TO_MELT
c	cgj	net/minecraft/world/level/block/FungusBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
	f	Ldqh;	a	SHAPE
	f	D	b	BONEMEAL_SUCCESS_PROBABILITY
	f	Ljava/util/function/Supplier;	c	feature
c	cgk	net/minecraft/world/level/block/FurnaceBlock
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcav;Lgj;Lboj;)V	a	openContainer
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
c	cgl	net/minecraft/world/level/block/GameMasterBlock
c	cgm	net/minecraft/world/level/block/GlassBlock
c	cgn	net/minecraft/world/level/block/GlazedTerracottaBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)Ldjd;	d	getPistonPushReaction
c	cgo	net/minecraft/world/level/block/GlowLichenBlock
	m	(ILcov;)I	a	lambda$emission$0
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Lbww;)Z	a	canBeReplaced
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(I)Ljava/util/function/ToIntFunction;	b	emission
	m	(Lcov;Lcab;Lgj;)Z	c	propagatesSkylightDown
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;Lcab;Lgj;Lgo;)Z	e	lambda$isValidBonemealTarget$1
	f	Lcpm;	b	WATERLOGGED
c	cgp	net/minecraft/world/level/block/GrassBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
c	cgq	net/minecraft/world/level/block/GravelBlock
	m	(Lcov;Lcab;Lgj;)I	d	getDustColor
c	cgr	net/minecraft/world/level/block/GrindstoneBlock
	m	(Lcav;Lgj;ILboi;Lboj;)Lbqp;	a	lambda$getMenuProvider$0
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcav;Lgj;)Lawk;	b	getMenuProvider
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	m	(Lcov;)Ldqh;	n	getVoxelShape
	f	Ldqh;	E	FLOOR_EAST_WEST_ALL_LEGS
	f	Ldqh;	F	FLOOR_EAST_WEST_GRINDSTONE
	f	Ldqh;	G	WALL_SOUTH_LEFT_POST
	f	Ldqh;	H	WALL_SOUTH_RIGHT_POST
	f	Ldqh;	I	WALL_SOUTH_LEFT_PIVOT
	f	Ldqh;	K	WALL_SOUTH_RIGHT_PIVOT
	f	Ldqh;	L	WALL_SOUTH_LEFT_LEG
	f	Ldqh;	M	WALL_SOUTH_RIGHT_LEG
	f	Ldqh;	N	WALL_SOUTH_ALL_LEGS
	f	Ldqh;	O	WALL_SOUTH_GRINDSTONE
	f	Ldqh;	P	WALL_NORTH_LEFT_POST
	f	Ldqh;	Q	WALL_NORTH_RIGHT_POST
	f	Ldqh;	R	WALL_NORTH_LEFT_PIVOT
	f	Ldqh;	S	WALL_NORTH_RIGHT_PIVOT
	f	Ldqh;	T	WALL_NORTH_LEFT_LEG
	f	Ldqh;	U	WALL_NORTH_RIGHT_LEG
	f	Ldqh;	V	WALL_NORTH_ALL_LEGS
	f	Ldqh;	W	WALL_NORTH_GRINDSTONE
	f	Ldqh;	X	WALL_WEST_LEFT_POST
	f	Ldqh;	Y	WALL_WEST_RIGHT_POST
	f	Ldqh;	Z	WALL_WEST_LEFT_PIVOT
	f	Ldqh;	aA	CEILING_EAST_WEST_RIGHT_LEG
	f	Ldqh;	aB	CEILING_EAST_WEST_ALL_LEGS
	f	Ldqh;	aC	CEILING_EAST_WEST_GRINDSTONE
	f	Ldqh;	a	FLOOR_NORTH_SOUTH_LEFT_POST
	f	Lqk;	aQ	CONTAINER_TITLE
	f	Ldqh;	aa	WALL_WEST_RIGHT_PIVOT
	f	Ldqh;	ab	WALL_WEST_LEFT_LEG
	f	Ldqh;	ac	WALL_WEST_RIGHT_LEG
	f	Ldqh;	ad	WALL_WEST_ALL_LEGS
	f	Ldqh;	ae	WALL_WEST_GRINDSTONE
	f	Ldqh;	af	WALL_EAST_LEFT_POST
	f	Ldqh;	ag	WALL_EAST_RIGHT_POST
	f	Ldqh;	ah	WALL_EAST_LEFT_PIVOT
	f	Ldqh;	ai	WALL_EAST_RIGHT_PIVOT
	f	Ldqh;	aj	WALL_EAST_LEFT_LEG
	f	Ldqh;	ak	WALL_EAST_RIGHT_LEG
	f	Ldqh;	al	WALL_EAST_ALL_LEGS
	f	Ldqh;	am	WALL_EAST_GRINDSTONE
	f	Ldqh;	an	CEILING_NORTH_SOUTH_LEFT_POST
	f	Ldqh;	ao	CEILING_NORTH_SOUTH_RIGHT_POST
	f	Ldqh;	ap	CEILING_NORTH_SOUTH_LEFT_PIVOT
	f	Ldqh;	aq	CEILING_NORTH_SOUTH_RIGHT_PIVOT
	f	Ldqh;	ar	CEILING_NORTH_SOUTH_LEFT_LEG
	f	Ldqh;	as	CEILING_NORTH_SOUTH_RIGHT_LEG
	f	Ldqh;	at	CEILING_NORTH_SOUTH_ALL_LEGS
	f	Ldqh;	au	CEILING_NORTH_SOUTH_GRINDSTONE
	f	Ldqh;	av	CEILING_EAST_WEST_LEFT_POST
	f	Ldqh;	aw	CEILING_EAST_WEST_RIGHT_POST
	f	Ldqh;	ax	CEILING_EAST_WEST_LEFT_PIVOT
	f	Ldqh;	ay	CEILING_EAST_WEST_RIGHT_PIVOT
	f	Ldqh;	az	CEILING_EAST_WEST_LEFT_LEG
	f	Ldqh;	b	FLOOR_NORTH_SOUTH_RIGHT_POST
	f	Ldqh;	c	FLOOR_NORTH_SOUTH_LEFT_PIVOT
	f	Ldqh;	d	FLOOR_NORTH_SOUTH_RIGHT_PIVOT
	f	Ldqh;	e	FLOOR_NORTH_SOUTH_LEFT_LEG
	f	Ldqh;	f	FLOOR_NORTH_SOUTH_RIGHT_LEG
	f	Ldqh;	g	FLOOR_NORTH_SOUTH_ALL_LEGS
	f	Ldqh;	h	FLOOR_NORTH_SOUTH_GRINDSTONE
	f	Ldqh;	i	FLOOR_EAST_WEST_LEFT_POST
	f	Ldqh;	j	FLOOR_EAST_WEST_RIGHT_POST
	f	Ldqh;	k	FLOOR_EAST_WEST_LEFT_PIVOT
	f	Ldqh;	l	FLOOR_EAST_WEST_RIGHT_PIVOT
	f	Ldqh;	m	FLOOR_EAST_WEST_LEFT_LEG
	f	Ldqh;	n	FLOOR_EAST_WEST_RIGHT_LEG
c	cgr$1	net/minecraft/world/level/block/GrindstoneBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	cgs	net/minecraft/world/level/block/GrowingPlantBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcaw;)Lcov;	a	getStateForPlacement
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	()Lcdq;	c	getBodyBlock
	m	()Lcgu;	d	getHeadBlock
	m	(Lcov;)Z	h	canAttachTo
	f	Lgo;	a	growthDirection
	f	Z	b	scheduleFluidTicks
	f	Ldqh;	c	shape
c	cgt	net/minecraft/world/level/block/GrowingPlantBodyBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcdq;)Ljava/util/Optional;	a	getHeadPos
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Lbww;)Z	a	canBeReplaced
	m	(Lcov;Lcov;)Lcov;	a	updateHeadAfterConvertedFromBody
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	()Lcdq;	c	getBodyBlock
c	cgu	net/minecraft/world/level/block/GrowingPlantHeadBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcaw;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcov;)Lcov;	a	updateBodyAfterConvertedFromHead
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;Ljava/util/Random;)Lcov;	a	getGrowIntoState
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Ljava/util/Random;)I	a	getBlocksToGrowWhenBonemealed
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	()Lcgu;	d	getHeadBlock
	m	(Lcov;)Z	e_	isRandomlyTicking
	m	(Lcov;)Z	g	canGrowInto
	m	(Lcov;)Lcov;	n	getMaxAgeState
	m	(Lcov;)Z	o	isMaxAge
	f	Lcpv;	d	AGE
	f	I	e	MAX_AGE
	f	D	f	growPerTickProbability
c	cgv	net/minecraft/world/level/block/HalfTransparentBlock
	m	(Lcov;Lcov;Lgo;)Z	a	skipRendering
c	cgw	net/minecraft/world/level/block/HangingRootsBlock
	m	()Lcou$b;	U_	getOffsetType
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)Ldix;	c_	getFluidState
	f	Ldqh;	a	SHAPE
	f	Lcpm;	b	WATERLOGGED
c	cgx	net/minecraft/world/level/block/HayBlock
	m	(Lcav;Lcov;Lgj;Laxk;F)V	a	fallOn
c	cgy	net/minecraft/world/level/block/HoneyBlock
	m	(Laxk;)V	a	showSlideParticles
	m	(Laxk;I)V	a	showParticles
	m	(Laxk;Lgj;)V	a	maybeDoSlideAchievement
	m	(Lcav;Laxk;)V	a	maybeDoSlideEffects
	m	(Lcav;Lcov;Lgj;Laxk;F)V	a	fallOn
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lgj;Laxk;)Z	a	isSlidingDown
	m	(Laxk;)V	b	showJumpParticles
	m	(Laxk;)Z	c	doesEntityDoHoneyBlockSlideEffects
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	m	(Laxk;)V	d	doSlideMovement
	f	Ldqh;	a	SHAPE
	f	D	b	SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST
	f	D	c	MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING
	f	D	d	THROTTLE_SLIDE_SPEED_TO
	f	I	e	SLIDE_ADVANCEMENT_CHECK_INTERVAL
c	cgz	net/minecraft/world/level/block/HopperBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcav;Lgj;Lcov;)V	a	checkPoweredState
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcov;Lcab;Lgj;)Ldqh;	a	getInteractionShape
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	f	Ldqh;	E	SOUTH_INTERACTION_SHAPE
	f	Ldqh;	F	WEST_INTERACTION_SHAPE
	f	Lcpp;	a	FACING
	f	Lcpm;	b	ENABLED
	f	Ldqh;	c	TOP
	f	Ldqh;	d	FUNNEL
	f	Ldqh;	e	CONVEX_BASE
	f	Ldqh;	f	BASE
	f	Ldqh;	g	DOWN_SHAPE
	f	Ldqh;	h	EAST_SHAPE
	f	Ldqh;	i	NORTH_SHAPE
	f	Ldqh;	j	SOUTH_SHAPE
	f	Ldqh;	k	WEST_SHAPE
	f	Ldqh;	l	DOWN_INTERACTION_SHAPE
	f	Ldqh;	m	EAST_INTERACTION_SHAPE
	f	Ldqh;	n	NORTH_INTERACTION_SHAPE
c	cgz$1	net/minecraft/world/level/block/HopperBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cha	net/minecraft/world/level/block/HorizontalDirectionalBlock
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	f	Lcpp;	aD	FACING
c	chb	net/minecraft/world/level/block/HugeMushroomBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	f	Lcpm;	a	NORTH
	f	Lcpm;	b	EAST
	f	Lcpm;	c	SOUTH
	f	Lcpm;	d	WEST
	f	Lcpm;	e	UP
	f	Lcpm;	f	DOWN
	f	Ljava/util/Map;	g	PROPERTY_BY_DIRECTION
c	chc	net/minecraft/world/level/block/IceBlock
	m	(Lcav;Lboj;Lgj;Lcov;Lcmr;Lbuw;)V	a	playerDestroy
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;)Ldjd;	d	getPistonPushReaction
	m	(Lcov;Lcav;Lgj;)V	d	melt
c	chd	net/minecraft/world/level/block/InfestedBlock
	m	(Ladw;Lgj;)V	a	spawnInfestation
	m	(Lcav;Lgj;Lcan;)V	a	wasExploded
	m	(Lcov;Ladw;Lgj;Lbuw;)V	a	spawnAfterBreak
	m	(Ljava/util/Map;Lcov;Ljava/util/function/Supplier;)Lcov;	a	getNewStateWithProperties
	m	(Ljava/util/function/Supplier;Lcov;)Lcov;	a	lambda$getNewStateWithProperties$2
	m	()Lcdq;	c	getHostBlock
	m	(Lcov;)Z	h	isCompatibleHostBlock
	m	(Lcov;)Lcov;	n	infestedStateByHost
	m	(Lcov;)Lcov;	o	hostStateByInfested
	m	(Lcov;)Lcov;	p	lambda$infestedStateByHost$0
	m	()Lcov;	r	lambda$hostStateByInfested$1
	f	Lcdq;	a	hostBlock
	f	Ljava/util/Map;	b	BLOCK_BY_HOST_BLOCK
	f	Ljava/util/Map;	c	HOST_TO_INFESTED_STATES
	f	Ljava/util/Map;	d	INFESTED_TO_HOST_STATES
c	che	net/minecraft/world/level/block/InfestedRotatedPillarBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
c	chf	net/minecraft/world/level/block/IronBarsBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcov;Lgo;)Z	a	skipRendering
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;Z)Z	a	attachsTo
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	b	getVisualShape
c	chg	net/minecraft/world/level/block/JigsawBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Ldhw$c;Ldhw$c;)Z	a	canAttach
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lgo;)Lcnk$a;	a	lambda$canAttach$0
	m	(Lcov;)Lgo;	h	getFrontFacing
	m	(Lcov;)Lgo;	n	getTopFacing
	f	Lcpt;	a	ORIENTATION
c	chh	net/minecraft/world/level/block/JukeboxBlock
	m	(Lcav;Lgj;)V	a	dropRecording
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcaw;Lgj;Lcov;Lbuw;)V	a	setRecord
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	f	Lcpm;	a	HAS_RECORD
c	chi	net/minecraft/world/level/block/KelpBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;Lcov;Ldiw;)Z	a	canPlaceLiquid
	m	(Lcaw;Lgj;Lcov;Ldix;)Z	a	placeLiquid
	m	(Ljava/util/Random;)I	a	getBlocksToGrowWhenBonemealed
	m	()Lcdq;	c	getBodyBlock
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;)Z	g	canGrowInto
	m	(Lcov;)Z	h	canAttachTo
	f	Ldqh;	f	SHAPE
	f	D	g	GROW_PER_TICK_PROBABILITY
c	chj	net/minecraft/world/level/block/KelpPlantBlock
	m	(Lcab;Lgj;Lcov;Ldiw;)Z	a	canPlaceLiquid
	m	(Lcaw;Lgj;Lcov;Ldix;)Z	a	placeLiquid
	m	(Lcov;)Ldix;	c_	getFluidState
	m	()Lcgu;	d	getHeadBlock
	m	(Lcov;)Z	h	canAttachTo
c	chk	net/minecraft/world/level/block/LadderBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;Lgo;)Z	a	canAttachTo
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)Ldix;	c_	getFluidState
	f	Lcpp;	a	FACING
	f	Lcpm;	b	WATERLOGGED
	f	F	c	AABB_OFFSET
	f	Ldqh;	d	EAST_AABB
	f	Ldqh;	e	WEST_AABB
	f	Ldqh;	f	SOUTH_AABB
	f	Ldqh;	g	NORTH_AABB
c	chk$1	net/minecraft/world/level/block/LadderBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	chl	net/minecraft/world/level/block/LanternBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;)Ldjd;	d	getPistonPushReaction
	m	(Lcov;)Lgo;	h	getConnectedDirection
	f	Lcpm;	a	HANGING
	f	Lcpm;	b	WATERLOGGED
	f	Ldqh;	c	AABB
	f	Ldqh;	d	HANGING_AABB
c	chm	net/minecraft/world/level/block/LavaCauldronBlock
	m	(Lcov;)D	a	getContentHeight
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;)Z	c	isFull
c	chn	net/minecraft/world/level/block/LayeredCauldronBlock
	m	(Lcbr$d;)Z	a	lambda$static$1
	m	(Lcov;)D	a	getContentHeight
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcav;Lgj;Lcbr$d;)V	a	handlePrecipitation
	m	(Lcov;Lcav;Lgj;Ldiw;)V	a	receiveStalactiteDrip
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Ldiw;)Z	a	canReceiveStalactiteDrip
	m	(Lcbr$d;)Z	b	lambda$static$0
	m	(Lcov;)Z	c	isFull
	m	(Lcov;Lcav;Lgj;)V	d	handleEntityOnFireInside
	m	(Lcov;Lcav;Lgj;)V	e	lowerFillLevel
	f	I	c	MIN_FILL_LEVEL
	f	I	d	MAX_FILL_LEVEL
	f	Lcpv;	e	LEVEL
	f	Ljava/util/function/Predicate;	f	RAIN
	f	Ljava/util/function/Predicate;	g	SNOW
	f	I	h	BASE_CONTENT_HEIGHT
	f	D	i	HEIGHT_PER_LEVEL
	f	Ljava/util/function/Predicate;	j	fillPredicate
c	cho	net/minecraft/world/level/block/LeavesBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lcaw;Lgj;)Lcov;	a	updateDistance
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;)Z	e_	isRandomlyTicking
	m	(Lcov;Lcab;Lgj;)Ldqh;	f	getBlockSupportShape
	m	(Lcov;Lcab;Lgj;)I	g	getLightBlock
	m	(Lcov;)I	h	getDistanceAt
	f	I	a	DECAY_DISTANCE
	f	Lcpv;	b	DISTANCE
	f	Lcpm;	c	PERSISTENT
	f	I	d	TICK_DELAY
c	chp	net/minecraft/world/level/block/LecternBlock
	m	(Lboj;Lcav;Lgj;Lcov;Lbuw;)Z	a	tryPlaceBook
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;Lboj;)V	a	openScreen
	m	(Lcav;Lgj;Lcov;)V	a	signalPageChange
	m	(Lcav;Lgj;Lcov;Z)V	a	resetBookState
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lboj;Lcav;Lgj;Lcov;Lbuw;)V	b	placeBook
	m	(Lcav;Lgj;Lcov;)V	b	updateBelow
	m	(Lcav;Lgj;Lcov;Z)V	b	changePowered
	m	(Lcov;Lcab;Lgj;Lgo;)I	b	getDirectSignal
	m	(Lcov;Lcav;Lgj;)Lawk;	b	getMenuProvider
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;Lcab;Lgj;)Ldqh;	b_	getOcclusionShape
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	m	(Lcov;Lcav;Lgj;)V	d	popBook
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	m	(Lcov;)Z	f_	isSignalSource
	m	(Lcov;)Z	g_	useShapeForLightOcclusion
	f	Lcpp;	a	FACING
	f	Lcpm;	b	POWERED
	f	Lcpm;	c	HAS_BOOK
	f	Ldqh;	d	SHAPE_BASE
	f	Ldqh;	e	SHAPE_POST
	f	Ldqh;	f	SHAPE_COMMON
	f	Ldqh;	g	SHAPE_TOP_PLATE
	f	Ldqh;	h	SHAPE_COLLISION
	f	Ldqh;	i	SHAPE_WEST
	f	Ldqh;	j	SHAPE_NORTH
	f	Ldqh;	k	SHAPE_EAST
	f	Ldqh;	l	SHAPE_SOUTH
	f	I	m	PAGE_CHANGE_IMPULSE_TICKS
c	chp$1	net/minecraft/world/level/block/LecternBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	chq	net/minecraft/world/level/block/LevelEvent
	f	I	A	SOUND_ZOMBIE_INFECTED
	f	I	B	SOUND_ZOMBIE_CONVERTED
	f	I	C	SOUND_DRAGON_DEATH
	f	I	D	SOUND_ANVIL_BROKEN
	f	I	E	SOUND_ANVIL_USED
	f	I	F	SOUND_ANVIL_LAND
	f	I	G	SOUND_PORTAL_TRAVEL
	f	I	H	SOUND_CHORUS_GROW
	f	I	I	SOUND_CHORUS_DEATH
	f	I	J	SOUND_BREWING_STAND_BREW
	f	I	K	SOUND_CLOSE_IRON_TRAP_DOOR
	f	I	L	SOUND_OPEN_IRON_TRAP_DOOR
	f	I	M	SOUND_END_PORTAL_SPAWN
	f	I	N	SOUND_PHANTOM_BITE
	f	I	O	SOUND_ZOMBIE_TO_DROWNED
	f	I	P	SOUND_HUSK_TO_ZOMBIE
	f	I	Q	SOUND_GRINDSTONE_USED
	f	I	R	SOUND_PAGE_TURN
	f	I	S	SOUND_SMITHING_TABLE_USED
	f	I	T	SOUND_POINTED_DRIPSTONE_LAND
	f	I	U	SOUND_DRIP_LAVA_INTO_CAULDRON
	f	I	V	SOUND_DRIP_WATER_INTO_CAULDRON
	f	I	W	SOUND_SKELETON_TO_STRAY
	f	I	X	COMPOSTER_FILL
	f	I	Y	LAVA_FIZZ
	f	I	Z	REDSTONE_TORCH_BURNOUT
	f	I	a	SOUND_DISPENSER_DISPENSE
	f	I	aa	END_PORTAL_FRAME_FILL
	f	I	ab	DRIPSTONE_DRIP
	f	I	ac	PARTICLES_AND_SOUND_PLANT_GROWTH
	f	I	ad	PARTICLES_SHOOT
	f	I	ae	PARTICLES_DESTROY_BLOCK
	f	I	af	PARTICLES_SPELL_POTION_SPLASH
	f	I	ag	PARTICLES_EYE_OF_ENDER_DEATH
	f	I	ah	PARTICLES_MOBBLOCK_SPAWN
	f	I	ai	PARTICLES_PLANT_GROWTH
	f	I	aj	PARTICLES_DRAGON_FIREBALL_SPLASH
	f	I	ak	PARTICLES_INSTANT_POTION_SPLASH
	f	I	al	PARTICLES_DRAGON_BLOCK_BREAK
	f	I	am	PARTICLES_WATER_EVAPORATING
	f	I	an	ANIMATION_END_GATEWAY_SPAWN
	f	I	ao	ANIMATION_DRAGON_SUMMON_ROAR
	f	I	ap	PARTICLES_ELECTRIC_SPARK
	f	I	aq	PARTICLES_AND_SOUND_WAX_ON
	f	I	ar	PARTICLES_WAX_OFF
	f	I	as	PARTICLES_SCRAPE
	f	I	b	SOUND_DISPENSER_FAIL
	f	I	c	SOUND_DISPENSER_PROJECTILE_LAUNCH
	f	I	d	SOUND_ENDER_EYE_LAUNCH
	f	I	e	SOUND_FIREWORK_SHOOT
	f	I	f	SOUND_OPEN_IRON_DOOR
	f	I	g	SOUND_OPEN_WOODEN_DOOR
	f	I	h	SOUND_OPEN_WOODEN_TRAP_DOOR
	f	I	i	SOUND_OPEN_FENCE_GATE
	f	I	j	SOUND_EXTINGUISH_FIRE
	f	I	k	SOUND_PLAY_RECORDING
	f	I	l	SOUND_CLOSE_IRON_DOOR
	f	I	m	SOUND_CLOSE_WOODEN_DOOR
	f	I	n	SOUND_CLOSE_WOODEN_TRAP_DOOR
	f	I	o	SOUND_CLOSE_FENCE_GATE
	f	I	p	SOUND_GHAST_WARNING
	f	I	q	SOUND_GHAST_FIREBALL
	f	I	r	SOUND_DRAGON_FIREBALL
	f	I	s	SOUND_BLAZE_FIREBALL
	f	I	t	SOUND_ZOMBIE_WOODEN_DOOR
	f	I	u	SOUND_ZOMBIE_IRON_DOOR
	f	I	v	SOUND_ZOMBIE_DOOR_CRASH
	f	I	w	SOUND_WITHER_BLOCK_BREAK
	f	I	x	SOUND_WITHER_BOSS_SPAWN
	f	I	y	SOUND_WITHER_BOSS_SHOOT
	f	I	z	SOUND_BAT_LIFTOFF
c	chr	net/minecraft/world/level/block/LeverBlock
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lcaw;Lgj;F)V	a	makeParticle
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcab;Lgj;Lgo;)I	b	getDirectSignal
	m	(Lcov;Lcav;Lgj;)Lcov;	d	pull
	m	(Lcov;Lcav;Lgj;)V	e	updateNeighbours
	m	(Lcov;)Z	f_	isSignalSource
	f	Lcpm;	a	POWERED
	f	I	b	DEPTH
	f	I	c	WIDTH
	f	I	d	HEIGHT
	f	Ldqh;	e	NORTH_AABB
	f	Ldqh;	f	SOUTH_AABB
	f	Ldqh;	g	WEST_AABB
	f	Ldqh;	h	EAST_AABB
	f	Ldqh;	i	UP_AABB_Z
	f	Ldqh;	j	UP_AABB_X
	f	Ldqh;	k	DOWN_AABB_Z
	f	Ldqh;	l	DOWN_AABB_X
c	chr$1	net/minecraft/world/level/block/LeverBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$core$Direction
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	chs	net/minecraft/world/level/block/LightBlock
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcab;Lgj;)F	b	getShadeBrightness
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;Lcab;Lgj;)Z	c	propagatesSkylightDown
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;)I	h	lambda$static$0
	f	I	a	MAX_LEVEL
	f	Lcpv;	b	LEVEL
	f	Lcpm;	c	WATERLOGGED
	f	Ljava/util/function/ToIntFunction;	d	LIGHT_EMISSION
c	cht	net/minecraft/world/level/block/LightningRodBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lcov;Ldpk;Lboz;)V	a	onProjectileHit
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcab;Lgj;Lgo;)I	b	getDirectSignal
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;Lcav;Lgj;)V	d	onLightningStrike
	m	(Lcov;Lcav;Lgj;)V	e	updateNeighbours
	m	(Lcov;)Z	f_	isSignalSource
	f	Lcpm;	b	WATERLOGGED
	f	Lcpm;	c	POWERED
	f	I	d	RANGE
	f	I	j	ACTIVATION_TICKS
	f	I	k	SPARK_CYCLE
c	chu	net/minecraft/world/level/block/LiquidBlock
	m	()Ljava/util/Optional;	X_	getPickupSound
	m	(Lcav;Lgj;Lcov;)Z	a	shouldSpreadLiquid
	m	(Lcaw;Lgj;)V	a	fizz
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lcov;Lgo;)Z	a	skipRendering
	m	(Lcov;Ldlc$a;)Ljava/util/List;	a	getDrops
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcaw;Lgj;Lcov;)Lbuw;	c	pickupBlock
	m	(Lcov;Lcab;Lgj;)Z	c	propagatesSkylightDown
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;)Z	e_	isRandomlyTicking
	f	Lcpv;	a	LEVEL
	f	Ldiv;	b	fluid
	f	Ldqh;	c	STABLE_SHAPE
	f	Lcom/google/common/collect/ImmutableList;	d	POSSIBLE_FLOW_DIRECTIONS
	f	Ljava/util/List;	e	stateCache
c	chv	net/minecraft/world/level/block/LiquidBlockContainer
	m	(Lcab;Lgj;Lcov;Ldiw;)Z	a	canPlaceLiquid
	m	(Lcaw;Lgj;Lcov;Ldix;)Z	a	placeLiquid
c	chw	net/minecraft/world/level/block/LoomBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;ILboi;Lboj;)Lbqp;	a	lambda$getMenuProvider$0
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcav;Lgj;)Lawk;	b	getMenuProvider
	f	Lqk;	a	CONTAINER_TITLE
c	chx	net/minecraft/world/level/block/MagmaBlock
	m	(Lcav;Lgj;Lcov;Laxk;)V	a	stepOn
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	f	I	a	BUBBLE_COLUMN_CHECK_DELAY
c	chy	net/minecraft/world/level/block/MelonBlock
	m	()Lckp;	c	getStem
	m	()Lccs;	d	getAttachedStem
c	chz	net/minecraft/world/level/block/Mirror
	m	()Lf;	a	rotation
	m	(II)I	a	mirror
	m	(Lgo;)Lcjm;	a	getRotation
	m	()Lqk;	b	symbol
	m	(Lgo;)Lgo;	b	mirror
	m	()[Lchz;	c	$values
	f	Lchz;	a	NONE
	f	Lchz;	b	LEFT_RIGHT
	f	Lchz;	c	FRONT_BACK
	f	Lqk;	d	symbol
	f	Lf;	e	rotation
	f	[Lchz;	f	$VALUES
c	chz$1	net/minecraft/world/level/block/Mirror$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cia	net/minecraft/world/level/block/MossBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
c	cib	net/minecraft/world/level/block/MultifaceBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;Lgo;)Z	a	canSpreadToFace
	m	(Lcab;Lgo;Lgj;Lcov;)Z	a	canAttachTo
	m	(Lcaw;Lgj;Lgo;Z)Z	a	spreadToFace
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;Lgo;)Z	a	lambda$spreadFromRandomFaceTowardRandomDirection$3
	m	(Lcov;Lbww;)Z	a	canBeReplaced
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;Lgo;Lgo;)Ljava/util/Optional;	a	getSpreadFromFaceTowardDirection
	m	(Lcov;Lcav;Lgj;Lgo;)Lcov;	a	lambda$getStateForPlacement$1
	m	(Lcov;Lcaw;Lgj;Lgo;Lgo;Z)Z	a	spreadFromFaceTowardDirection
	m	(Lcov;Lcaw;Lgj;Lgo;Ljava/util/Random;Z)Z	a	spreadFromFaceTowardRandomDirection
	m	(Lcov;Lcaw;Lgj;Lgo;ZLgo;)Z	a	lambda$spreadFromFaceTowardRandomDirection$4
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lcpm;)Lcov;	a	removeFace
	m	(Lcov;Lgo;)Z	a	hasFace
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;Ljava/util/function/Function;)Lcov;	a	mapDirections
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcow;)Lcov;	a	getDefaultMultifaceState
	m	(Lgo;)Z	a	isFaceSupported
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
	m	(Lcov;Lcab;Lgj;Lgo;Lgo;)Z	b	lambda$canSpread$5
	m	(Lcov;Lgo;)Z	b	lambda$hasAnyVacantFace$7
	m	(Lgo;)Lcpm;	b	getFaceProperty
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)Z	c	spreadFromRandomFaceTowardRandomDirection
	m	(Lcov;Lcab;Lgj;Lgo;)Lcov;	c	getStateForPlacement
	m	(Lcov;Lgo;)Z	c	lambda$hasAnyFace$6
	m	(Lcov;Lcab;Lgj;Lgo;)Z	d	canSpread
	m	(Lcov;Lgo;)Z	d	lambda$spreadFromRandomFaceTowardRandomDirection$2
	m	(Lcov;)Z	h	hasAnyFace
	m	(Lcov;)Z	n	canSpreadInto
	m	(Lcov;)Ldqh;	o	calculateMultifaceShape
	m	(Lcov;)Z	p	hasAnyVacantFace
	m	()Z	r	isWaterloggable
	f	[Lgo;	a	DIRECTIONS
	f	F	b	AABB_OFFSET
	f	Ldqh;	c	UP_AABB
	f	Ldqh;	d	DOWN_AABB
	f	Ldqh;	e	WEST_AABB
	f	Ldqh;	f	EAST_AABB
	f	Ldqh;	g	NORTH_AABB
	f	Ldqh;	h	SOUTH_AABB
	f	Ljava/util/Map;	i	PROPERTY_BY_DIRECTION
	f	Ljava/util/Map;	j	SHAPE_BY_DIRECTION
	f	Lcom/google/common/collect/ImmutableMap;	k	shapesCache
	f	Z	l	canRotate
	f	Z	m	canMirrorX
	f	Z	n	canMirrorZ
c	cic	net/minecraft/world/level/block/MushroomBlock
	m	(Ladw;Lgj;Lcov;Ljava/util/Random;)Z	a	growMushroom
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
	f	F	a	AABB_OFFSET
	f	Ldqh;	b	SHAPE
	f	Ljava/util/function/Supplier;	c	featureSupplier
c	cid	net/minecraft/world/level/block/MyceliumBlock
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
c	cie	net/minecraft/world/level/block/NetherPortalBlock
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	f	Lcpt;	a	AXIS
	f	I	b	AABB_OFFSET
	f	Ldqh;	c	X_AXIS_AABB
	f	Ldqh;	d	Z_AXIS_AABB
c	cie$1	net/minecraft/world/level/block/NetherPortalBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
c	cif	net/minecraft/world/level/block/NetherSproutsBlock
	m	()Lcou$b;	U_	getOffsetType
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
	f	Ldqh;	a	SHAPE
c	cig	net/minecraft/world/level/block/NetherVines
	m	(Lcov;)Z	a	isValidGrowthState
	m	(Ljava/util/Random;)I	a	getBlocksToGrowWhenBonemealed
	f	D	a	GROW_PER_TICK_PROBABILITY
	f	D	b	BONEMEAL_GROW_PROBABILITY_DECREASE_RATE
c	cih	net/minecraft/world/level/block/NetherWartBlock
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
	m	(Lcov;)Z	e_	isRandomlyTicking
	f	I	a	MAX_AGE
	f	Lcpv;	b	AGE
	f	[Ldqh;	c	SHAPE_BY_AGE
c	cii	net/minecraft/world/level/block/NetherrackBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
c	cij	net/minecraft/world/level/block/NoteBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;)V	a	playNote
	m	(Lcov;Lcav;Lgj;II)Z	a	triggerEvent
	m	(Lcov;Lcav;Lgj;Lboj;)V	a	attack
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	f	Lcpt;	a	INSTRUMENT
	f	Lcpm;	b	POWERED
	f	Lcpv;	c	NOTE
c	cik	net/minecraft/world/level/block/NyliumBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcay;Lgj;)Z	b	canBeNylium
c	cil	net/minecraft/world/level/block/ObserverBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;Lcov;)V	a	updateNeighborsInFront
	m	(Lcaw;Lgj;)V	a	startSignal
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcab;Lgj;Lgo;)I	b	getDirectSignal
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	(Lcov;)Z	f_	isSignalSource
	f	Lcpm;	b	POWERED
c	cim	net/minecraft/world/level/block/OreBlock
	m	(Lcov;Ladw;Lgj;Lbuw;)V	a	spawnAfterBreak
	f	Lavs;	a	xpRange
c	cin	net/minecraft/world/level/block/PipeBlock
	m	(F)[Ldqh;	a	makeShapes
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
	m	(Lcov;Lcab;Lgj;)Z	c	propagatesSkylightDown
	m	(Lcov;)I	h	getAABBIndex
	f	Lcpm;	a	NORTH
	f	Lcpm;	b	EAST
	f	Lcpm;	c	SOUTH
	f	Lcpm;	d	WEST
	f	Lcpm;	e	UP
	f	Lcpm;	f	DOWN
	f	Ljava/util/Map;	g	PROPERTY_BY_DIRECTION
	f	[Ldqh;	h	shapeByIndex
	f	[Lgo;	i	DIRECTIONS
c	cio	net/minecraft/world/level/block/PlayerHeadBlock
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
c	cip	net/minecraft/world/level/block/PlayerWallHeadBlock
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcov;Ldlc$a;)Ljava/util/List;	a	getDrops
c	ciq	net/minecraft/world/level/block/PointedDripstoneBlock
	m	()Lcou$b;	U_	getOffsetType
	m	()Ljava/util/function/Predicate;	V_	getHurtsEntitySelector
	m	()F	W_	getMaxHorizontalOffset
	m	(FLdiw;)Z	a	lambda$animateTick$0
	m	(Ladw;Lgj;)V	a	growStalagmiteBelow
	m	(Ladw;Lgj;Lgo;)V	a	grow
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lcov;Ldpk;Lboz;)V	a	onProjectileHit
	m	(Lcav;Lcov;Lgj;Laxk;F)V	a	fallOn
	m	(Lcav;Ldiw;)Ldiw;	a	getDripFluid
	m	(Lcav;Lgj;)Lgj;	a	findStalactiteTipAboveCauldron
	m	(Lcav;Lgj;Lblh;)V	a	onBrokenAfterFall
	m	(Lcav;Lgj;Lcov;)V	a	spawnDripParticle
	m	(Lcav;Lgj;Lcov;I)Ljava/util/Optional;	a	findRootBlock
	m	(Lcav;Lgj;Lcov;Ldiw;)V	a	spawnDripParticle
	m	(Lcav;Lgj;Ldiw;)Lgj;	a	findFillableCauldronBelowStalactiteTip
	m	(Lcaw;Lgj;Lgo$b;Ljava/util/function/BiPredicate;Ljava/util/function/Predicate;I)Ljava/util/Optional;	a	findBlockVertical
	m	(Lcaw;Lgj;Lgo;Lcps;)V	a	createDripstone
	m	(Lcay;Lgj;Lgo;Z)Lcps;	a	calculateDripstoneThickness
	m	(Lcov;Ladw;Lgj;)V	a	spawnFallingStalactite
	m	(Lcov;Ladw;Lgj;F)V	a	maybeFillCauldron
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lcaw;Lgj;)V	a	createMergedTips
	m	(Lcov;Lcaw;Lgj;IZ)Lgj;	a	findTip
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lcov;)Z	a	canGrow
	m	(Lcov;Lgo;)Z	a	isUnmergedTipWithDirection
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;Z)Z	a	isTip
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Ldiw;)Z	a	canFillCauldron
	m	(Ldiw;Lcov;)Z	a	lambda$findFillableCauldronBelowStalactiteTip$7
	m	(Lgo;Lgj;Lcov;)Z	a	lambda$findRootBlock$5
	m	(ZLcov;)Z	a	lambda$findTip$4
	m	(Lcov;Lcab;Lgj;)Z	a_	isCollisionShapeFullBlock
	m	()Lawu;	b	getFallDamageSource
	m	(Lcab;Lgj;Lcov;)Z	b	canDripThrough
	m	(Lcav;Lgj;)Ldiw;	b	getCauldronFillFluidType
	m	(Lcav;Lgj;Lcov;)Ljava/util/Optional;	b	getFluidAboveStalactite
	m	(Lcav;Lgj;Lcov;Ldiw;)V	b	lambda$spawnDripParticle$2
	m	(Lcay;Lgj;Lgo;)Lgo;	b	calculateTipDirection
	m	(Lcov;Ladw;Lgj;)Z	b	canTipGrow
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcay;Lgj;)Z	b	isStalactiteStartPos
	m	(Lcov;Lgo;)Z	b	isPointedDripstoneWithDirection
	m	(Lgo;Lgj;Lcov;)Z	b	lambda$findTip$3
	m	(Lcov;Lcab;Lgj;)Ldqh;	b_	getOcclusionShape
	m	(Lcav;Lgj;)Ldiw;	c	lambda$getFluidAboveStalactite$10
	m	(Lcav;Lgj;Lcov;)Z	c	lambda$findStalactiteTipAboveCauldron$9
	m	(Lcav;Lgj;Lcov;Ldiw;)V	c	lambda$animateTick$1
	m	(Lcay;Lgj;Lgo;)Z	c	isValidPointedDripstonePlacement
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	c	growStalactiteOrStalagmiteIfPossible
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcav;Lgj;Lcov;)Z	d	lambda$findFillableCauldronBelowStalactiteTip$8
	m	(Lcov;)Ldjd;	d	getPistonPushReaction
	m	(Lcov;)Z	h	canDrip
	m	(Lcov;)Z	n	isStalactite
	m	(Lcov;)Z	o	isStalagmite
	m	(Lcov;)Z	p	lambda$findRootBlock$6
	f	F	E	STALAGMITE_FALL_DISTANCE_OFFSET
	f	I	F	STALAGMITE_FALL_DAMAGE_MODIFIER
	f	F	G	AVERAGE_DAYS_PER_GROWTH
	f	F	H	GROWTH_PROBABILITY_PER_RANDOM_TICK
	f	I	I	MAX_GROWTH_LENGTH
	f	I	J	MAX_STALAGMITE_SEARCH_RANGE_WHEN_GROWING
	f	F	K	STALACTITE_DRIP_START_PIXEL
	f	Ldqh;	L	TIP_MERGE_SHAPE
	f	Ldqh;	M	TIP_SHAPE_UP
	f	Ldqh;	N	TIP_SHAPE_DOWN
	f	Ldqh;	O	FRUSTUM_SHAPE
	f	Ldqh;	P	MIDDLE_SHAPE
	f	Ldqh;	Q	BASE_SHAPE
	f	F	R	MAX_HORIZONTAL_OFFSET
	f	Ldqh;	S	REQUIRED_SPACE_TO_DRIP_THROUGH_NON_SOLID_BLOCK
	f	Lcpp;	a	TIP_DIRECTION
	f	Lcpt;	b	THICKNESS
	f	Lcpm;	c	WATERLOGGED
	f	I	d	MAX_SEARCH_LENGTH_WHEN_CHECKING_DRIP_TYPE
	f	I	e	DELAY_BEFORE_FALLING
	f	F	f	DRIP_PROBABILITY_PER_ANIMATE_TICK
	f	F	g	DRIP_PROBABILITY_PER_ANIMATE_TICK_IF_UNDER_LIQUID_SOURCE
	f	I	h	MAX_SEARCH_LENGTH_BETWEEN_STALACTITE_TIP_AND_CAULDRON
	f	F	i	WATER_CAULDRON_FILL_PROBABILITY_PER_RANDOM_TICK
	f	F	j	LAVA_CAULDRON_FILL_PROBABILITY_PER_RANDOM_TICK
	f	D	k	MIN_TRIDENT_VELOCITY_TO_BREAK_DRIPSTONE
	f	F	l	STALACTITE_DAMAGE_PER_FALL_DISTANCE_AND_SIZE
	f	I	m	STALACTITE_MAX_DAMAGE
	f	I	n	MAX_STALACTITE_HEIGHT_FOR_DAMAGE_CALCULATION
c	cir	net/minecraft/world/level/block/PotatoBlock
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	()Lcau;	e	getBaseSeedId
	f	[Ldqh;	a	SHAPE_BY_AGE
c	cis	net/minecraft/world/level/block/PowderSnowBlock
	m	()Ljava/util/Optional;	X_	getPickupSound
	m	(Laxk;)Z	a	canEntityWalkOnPowderSnow
	m	(Lcav;Lcov;Lgj;Laxk;F)V	a	fallOn
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcov;Lgo;)Z	a	skipRendering
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	b	getVisualShape
	m	(Lcov;Lcab;Lgj;)Ldqh;	b_	getOcclusionShape
	m	(Lcaw;Lgj;Lcov;)Lbuw;	c	pickupBlock
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	f	F	a	HORIZONTAL_PARTICLE_MOMENTUM_FACTOR
	f	F	b	IN_BLOCK_HORIZONTAL_SPEED_MULTIPLIER
	f	F	c	IN_BLOCK_VERTICAL_SPEED_MULTIPLIER
	f	F	d	NUM_BLOCKS_TO_FALL_INTO_BLOCK
	f	Ldqh;	e	FALLING_COLLISION_SHAPE
	f	D	f	MINIMUM_FALL_DISTANCE_FOR_SOUND
	f	D	g	MINIMUM_FALL_DISTANCE_FOR_BIG_SOUND
c	cit	net/minecraft/world/level/block/PowderSnowCauldronBlock
	m	(Lcov;Lcav;Lgj;)V	d	handleEntityOnFireInside
c	ciu	net/minecraft/world/level/block/PoweredBlock
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcov;)Z	f_	isSignalSource
c	civ	net/minecraft/world/level/block/PoweredRailBlock
	m	(Lcav;Lgj;Lcov;ZI)Z	a	findPoweredRailSignal
	m	(Lcav;Lgj;ZILcpz;)Z	a	isSameRailWithPower
	m	(Lcov;Lcav;Lgj;Lcdq;)V	a	updateState
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	()Lcpy;	d	getShapeProperty
	f	Lcpt;	d	SHAPE
	f	Lcpm;	e	POWERED
c	civ$1	net/minecraft/world/level/block/PoweredRailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	ciw	net/minecraft/world/level/block/PressurePlateBlock
	m	(Lcaw;Lgj;)V	a	playOnSound
	m	(Lcov;I)Lcov;	a	setSignalForState
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcav;Lgj;)I	b	getSignalStrength
	m	(Lcaw;Lgj;)V	b	playOffSound
	m	(Lcov;)I	g	getSignalForState
	f	Lcpm;	d	POWERED
	f	Lciw$a;	e	sensitivity
c	ciw$1	net/minecraft/world/level/block/PressurePlateBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$PressurePlateBlock$Sensitivity
c	ciw$a	net/minecraft/world/level/block/PressurePlateBlock$Sensitivity
	m	()[Lciw$a;	a	$values
	f	Lciw$a;	a	EVERYTHING
	f	Lciw$a;	b	MOBS
	f	[Lciw$a;	c	$VALUES
c	cix	net/minecraft/world/level/block/PumpkinBlock
	m	(Lawg;Lboj;)V	a	lambda$use$0
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	()Lckp;	c	getStem
	m	()Lccs;	d	getAttachedStem
c	ciy	net/minecraft/world/level/block/RailBlock
	m	(Lcov;Lcav;Lgj;Lcdq;)V	a	updateState
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	()Lcpy;	d	getShapeProperty
	f	Lcpt;	d	SHAPE
c	ciy$1	net/minecraft/world/level/block/RailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	ciz	net/minecraft/world/level/block/RailState
	m	()Ljava/util/List;	a	getConnections
	m	(Lciz;)Z	a	connectsTo
	m	(Lcpz;)V	a	updateConnections
	m	(Lgj;)Z	a	hasRail
	m	(ZZLcpz;)Lciz;	a	place
	m	()I	b	countPotentialConnections
	m	(Lciz;)Z	b	canConnectTo
	m	(Lgj;)Lciz;	b	getRail
	m	()Lcov;	c	getState
	m	(Lciz;)V	c	connectTo
	m	(Lgj;)Z	c	hasConnection
	m	()V	d	removeSoftConnections
	m	(Lgj;)Z	d	hasNeighborRail
	f	Lcav;	a	level
	f	Lgj;	b	pos
	f	Lcdg;	c	block
	f	Lcov;	d	state
	f	Z	e	isStraight
	f	Ljava/util/List;	f	connections
c	ciz$1	net/minecraft/world/level/block/RailState$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
c	cja	net/minecraft/world/level/block/RedStoneOreBlock
	m	(Lcav;Lgj;)V	a	spawnParticles
	m	(Lcav;Lgj;Lcov;Laxk;)V	a	stepOn
	m	(Lcov;Ladw;Lgj;Lbuw;)V	a	spawnAfterBreak
	m	(Lcov;Lcav;Lgj;Lboj;)V	a	attack
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcav;Lgj;)V	d	interact
	m	(Lcov;)Z	e_	isRandomlyTicking
	f	Lcpm;	a	LIT
c	cjb	net/minecraft/world/level/block/RedStoneWireBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lcov;Lgj;)Lcov;	a	getConnectionState
	m	(Lcab;Lgj;Lgo;)Lcqa;	a	getConnectingSide
	m	(Lcab;Lgj;Lgo;Z)Lcqa;	a	getConnectingSide
	m	(Lcav;Lgj;)I	a	calculateTargetStrength
	m	(Lcav;Lgj;Lcov;)V	a	updatePowerStrength
	m	(Lcav;Lgj;Lcov;Lcov;)V	a	updatesOnShapeChange
	m	(Lcav;Ljava/util/Random;Lgj;Ldpo;Lgo;Lgo;FF)V	a	spawnParticlesAlongLine
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lcaw;Lgj;II)V	a	updateIndirectNeighbourShapes
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;)Z	a	shouldConnectTo
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	([Ldpo;)V	a	lambda$static$0
	m	(I)I	b	getColorForPower
	m	(Lcab;Lcov;Lgj;)Lcov;	b	getMissingConnections
	m	(Lcab;Lgj;Lcov;)Z	b	canSurviveOn
	m	(Lcav;Lgj;)V	b	checkCornerChangeAt
	m	(Lcov;Lcab;Lgj;Lgo;)I	b	getDirectSignal
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	(Lcav;Lgj;)V	c	updateNeighborsOfNeighboringWires
	m	(Lcov;)Z	f_	isSignalSource
	m	(Lcov;)Z	h	shouldConnectTo
	m	(Lcov;)Ldqh;	n	calculateShape
	m	(Lcov;)Z	o	isCross
	m	(Lcov;)Z	p	isDot
	m	(Lcov;)I	q	getWireSignal
	f	Ljava/util/Map;	E	SHAPES_CACHE
	f	[Ldpo;	F	COLORS
	f	F	G	PARTICLE_DENSITY
	f	Lcov;	H	crossState
	f	Z	I	shouldSignal
	f	Lcpt;	a	NORTH
	f	Lcpt;	b	EAST
	f	Lcpt;	c	SOUTH
	f	Lcpt;	d	WEST
	f	Lcpv;	e	POWER
	f	Ljava/util/Map;	f	PROPERTY_BY_DIRECTION
	f	I	g	H
	f	I	h	W
	f	I	i	E
	f	I	j	N
	f	I	k	S
	f	Ldqh;	l	SHAPE_DOT
	f	Ljava/util/Map;	m	SHAPES_FLOOR
	f	Ljava/util/Map;	n	SHAPES_UP
c	cjb$1	net/minecraft/world/level/block/RedStoneWireBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RedstoneSide
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cjc	net/minecraft/world/level/block/RedstoneLampBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcow$a;)V	a	createBlockStateDefinition
	f	Lcpm;	a	LIT
c	cjd	net/minecraft/world/level/block/RedstoneTorchBlock
	m	(Lcab;)Ljava/util/List;	a	lambda$isToggledTooFrequently$0
	m	(Lcav;Lgj;Lcov;)Z	a	hasNeighborSignal
	m	(Lcav;Lgj;Z)Z	a	isToggledTooFrequently
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcab;Lgj;Lgo;)I	b	getDirectSignal
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	(Lcov;)Z	f_	isSignalSource
	f	Lcpm;	a	LIT
	f	I	b	RECENT_TOGGLE_TIMER
	f	I	c	MAX_RECENT_TOGGLES
	f	I	d	RESTART_DELAY
	f	Ljava/util/Map;	e	RECENT_TOGGLES
	f	I	f	TOGGLE_DELAY
c	cjd$a	net/minecraft/world/level/block/RedstoneTorchBlock$Toggle
	f	Lgj;	a	pos
	f	J	b	when
c	cje	net/minecraft/world/level/block/RedstoneWallTorchBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;Lcov;)Z	a	hasNeighborSignal
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	()Ljava/lang/String;	h	getDescriptionId
	f	Lcpp;	e	FACING
	f	Lcpm;	f	LIT
c	cjf	net/minecraft/world/level/block/RenderShape
	m	()[Lcjf;	a	$values
	f	Lcjf;	a	INVISIBLE
	f	Lcjf;	b	ENTITYBLOCK_ANIMATED
	f	Lcjf;	c	MODEL
	f	[Lcjf;	d	$VALUES
c	cjg	net/minecraft/world/level/block/RepeaterBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcay;Lgj;Lcov;)Z	a	isLocked
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)I	g	getDelay
	m	(Lcov;)Z	h	isAlternateInput
	f	Lcpm;	a	LOCKED
	f	Lcpv;	d	DELAY
c	cjh	net/minecraft/world/level/block/RespawnAnchorBlock
	m	(Laxo;Lcaf;Lgj;)Ljava/util/Optional;	a	findStandUpPosition
	m	(Laxo;Lcaf;Lgj;Z)Ljava/util/Optional;	a	findStandUpPosition
	m	(Lbuw;)Z	a	isRespawnFuel
	m	(Lcav;)Z	a	canSetSpawn
	m	(Lcav;Lgj;)Z	a	lambda$explode$0
	m	(Lcav;Lgj;Lcov;)V	a	charge
	m	(Lcov;I)I	a	getScaledChargeLevel
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcav;)Z	a	isWaterThatWouldFlow
	m	(Lcov;Lcav;Lgj;)V	d	explode
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	m	(Lcov;)Z	h	canBeCharged
	f	I	a	MIN_CHARGES
	f	I	b	MAX_CHARGES
	f	Lcpv;	c	CHARGE
	f	Lcom/google/common/collect/ImmutableList;	d	RESPAWN_HORIZONTAL_OFFSETS
	f	Lcom/google/common/collect/ImmutableList;	e	RESPAWN_OFFSETS
c	cjh$1	net/minecraft/world/level/block/RespawnAnchorBlock$1
	m	(Lcan;Lcab;Lgj;Lcov;Ldix;)Ljava/util/Optional;	a	getBlockExplosionResistance
	f	Lgj;	a	val$pos
	f	Z	b	val$inWater
	f	Lcjh;	c	this$0
c	cji	net/minecraft/world/level/block/RodBlock
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	f	F	e	AABB_MIN
	f	F	f	AABB_MAX
	f	Ldqh;	g	Y_AXIS_AABB
	f	Ldqh;	h	Z_AXIS_AABB
	f	Ldqh;	i	X_AXIS_AABB
c	cji$1	net/minecraft/world/level/block/RodBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	cjj	net/minecraft/world/level/block/RootedDirtBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
c	cjk	net/minecraft/world/level/block/RootsBlock
	m	()Lcou$b;	U_	getOffsetType
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
	f	F	a	AABB_OFFSET
	f	Ldqh;	b	SHAPE
c	cjl	net/minecraft/world/level/block/RotatedPillarBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcjm;)Lcov;	b	rotatePillar
	f	Lcpt;	g	AXIS
c	cjl$1	net/minecraft/world/level/block/RotatedPillarBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
c	cjm	net/minecraft/world/level/block/Rotation
	m	()Lf;	a	rotation
	m	(II)I	a	rotate
	m	(Lcjm;)Lcjm;	a	getRotated
	m	(Lgo;)Lgo;	a	rotate
	m	(Ljava/util/Random;)Lcjm;	a	getRandom
	m	()[Lcjm;	b	$values
	m	(Ljava/util/Random;)Ljava/util/List;	b	getShuffled
	f	Lcjm;	a	NONE
	f	Lcjm;	b	CLOCKWISE_90
	f	Lcjm;	c	CLOCKWISE_180
	f	Lcjm;	d	COUNTERCLOCKWISE_90
	f	Lf;	e	rotation
	f	[Lcjm;	f	$VALUES
c	cjm$1	net/minecraft/world/level/block/Rotation$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
c	cjn	net/minecraft/world/level/block/SandBlock
	m	(Lcov;Lcab;Lgj;)I	d	getDustColor
	f	I	a	dustColor
c	cjo	net/minecraft/world/level/block/SaplingBlock
	m	(Ladw;Lgj;Lcov;Ljava/util/Random;)V	a	advanceTree
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	f	Lcpv;	a	STAGE
	f	F	b	AABB_OFFSET
	f	Ldqh;	c	SHAPE
	f	Lcoc;	d	treeGrower
c	cjp	net/minecraft/world/level/block/ScaffoldingBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;)I	a	getDistance
	m	(Lcab;Lgj;I)Z	a	isBottom
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lbww;)Z	a	canBeReplaced
	m	(Lcov;Lcab;Lgj;)Ldqh;	a	getInteractionShape
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	m	(Lcov;)Ldix;	c_	getFluidState
	f	I	a	STABILITY_MAX_DISTANCE
	f	Lcpv;	b	DISTANCE
	f	Lcpm;	c	WATERLOGGED
	f	Lcpm;	d	BOTTOM
	f	I	e	TICK_DELAY
	f	Ldqh;	f	STABLE_SHAPE
	f	Ldqh;	g	UNSTABLE_SHAPE
	f	Ldqh;	h	UNSTABLE_SHAPE_BOTTOM
	f	Ldqh;	i	BELOW_BLOCK
c	cjq	net/minecraft/world/level/block/SculkSensorBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lcmr;)Lcta;	a	getListener
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcav;Lgj;)V	a	updateNeighbours
	m	(Lcav;Lgj;Lcov;)V	a	deactivate
	m	(Lcav;Lgj;Lcov;I)V	a	activate
	m	(Lcav;Lgj;Lcov;Lcnp;)V	a	lambda$getTicker$1
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$0
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	m	()I	e	getListenerRange
	m	(Lcov;)Z	f_	isSignalSource
	m	(Lcov;)Z	g_	useShapeForLightOcclusion
	m	(Lcov;)Lcqb;	h	getPhase
	m	(Lcov;)Z	n	canActivate
	f	I	a	ACTIVE_TICKS
	f	I	b	COOLDOWN_TICKS
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	c	VIBRATION_STRENGTH_FOR_EVENT
	f	Lcpt;	d	PHASE
	f	Lcpv;	e	POWER
	f	Lcpm;	f	WATERLOGGED
	f	Ldqh;	g	SHAPE
	f	I	h	listenerRange
c	cjr	net/minecraft/world/level/block/SeaPickleBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Lbww;)Z	a	canBeReplaced
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
	m	(Lcov;)Z	h	isDead
	f	I	a	MAX_PICKLES
	f	Lcpv;	b	PICKLES
	f	Lcpm;	c	WATERLOGGED
	f	Ldqh;	d	ONE_AABB
	f	Ldqh;	e	TWO_AABB
	f	Ldqh;	f	THREE_AABB
	f	Ldqh;	g	FOUR_AABB
c	cjs	net/minecraft/world/level/block/SeagrassBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;Lcov;Ldiw;)Z	a	canPlaceLiquid
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcaw;Lgj;Lcov;Ldix;)Z	a	placeLiquid
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
	f	F	a	AABB_OFFSET
	f	Ldqh;	b	SHAPE
c	cjt	net/minecraft/world/level/block/ShulkerBoxBlock
	m	(Lbts;)Lcdq;	a	getBlockByColor
	m	(Lbuw;Lcab;Ljava/util/List;Lbwj;)V	a	appendHoverText
	m	(Lbuw;Lcnq;)V	a	lambda$getCloneItemStack$1
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcav;Lgj;Lcov;Lboj;)V	a	playerWillDestroy
	m	(Lcdq;)Lbts;	a	getColorFromBlock
	m	(Lcnq;Ldlc;Ljava/util/function/Consumer;)V	a	lambda$getDrops$0
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcnq;)Z	a	canOpen
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Ldlc$a;)Ljava/util/List;	a	getDrops
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lbts;)Lbuw;	b	getColoredItemStack
	m	(Lbus;)Lbts;	b	getColorFromItem
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	()Lbts;	c	getColor
	m	(Lcov;)Ldjd;	d	getPistonPushReaction
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	f	Lcpt;	a	FACING
	f	Lyt;	b	CONTENTS
	f	Lbts;	c	color
c	cjt$1	net/minecraft/world/level/block/ShulkerBoxBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
c	cju	net/minecraft/world/level/block/SignBlock
	m	()Z	Y_	isPossibleToRespawnInThis
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcov;)Ldix;	c_	getFluidState
	m	()Lcqh;	e	type
	f	Lcpm;	a	WATERLOGGED
	f	F	b	AABB_OFFSET
	f	Ldqh;	c	SHAPE
	f	Lcqh;	d	type
c	cjv	net/minecraft/world/level/block/SimpleWaterloggedBlock
	m	()Ljava/util/Optional;	X_	getPickupSound
	m	(Lcab;Lgj;Lcov;Ldiw;)Z	a	canPlaceLiquid
	m	(Lcaw;Lgj;Lcov;Ldix;)Z	a	placeLiquid
	m	(Lcaw;Lgj;Lcov;)Lbuw;	c	pickupBlock
c	cjw	net/minecraft/world/level/block/SkullBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcab;Lgj;)Ldqh;	b_	getOcclusionShape
	f	I	a	MAX
	f	Lcpv;	b	ROTATION
	f	Ldqh;	c	SHAPE
	f	I	d	ROTATIONS
c	cjw$a	net/minecraft/world/level/block/SkullBlock$Type
c	cjw$b	net/minecraft/world/level/block/SkullBlock$Types
	m	()[Lcjw$b;	a	$values
	f	Lcjw$b;	a	SKELETON
	f	Lcjw$b;	b	WITHER_SKELETON
	f	Lcjw$b;	c	PLAYER
	f	Lcjw$b;	d	ZOMBIE
	f	Lcjw$b;	e	CREEPER
	f	Lcjw$b;	f	DRAGON
	f	[Lcjw$b;	g	$VALUES
c	cjx	net/minecraft/world/level/block/SlabBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;Lcov;Ldiw;)Z	a	canPlaceLiquid
	m	(Lcaw;Lgj;Lcov;Ldix;)Z	a	placeLiquid
	m	(Lcov;Lbww;)Z	a	canBeReplaced
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;)Z	g_	useShapeForLightOcclusion
	f	Lcpt;	a	TYPE
	f	Lcpm;	b	WATERLOGGED
	f	Ldqh;	c	BOTTOM_AABB
	f	Ldqh;	d	TOP_AABB
c	cjx$1	net/minecraft/world/level/block/SlabBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$SlabType
	f	[I	b	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	cjy	net/minecraft/world/level/block/SlimeBlock
	m	(Laxk;)V	a	bounceUp
	m	(Lcab;Laxk;)V	a	updateEntityAfterFallOn
	m	(Lcav;Lcov;Lgj;Laxk;F)V	a	fallOn
	m	(Lcav;Lgj;Lcov;Laxk;)V	a	stepOn
c	cjz	net/minecraft/world/level/block/SmallDripleafBlock
	m	()Lcou$b;	U_	getOffsetType
	m	()F	Z_	getMaxVerticalOffset
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
	f	Lcpp;	b	FACING
	f	F	c	AABB_OFFSET
	f	Ldqh;	d	SHAPE
	f	Lcpm;	e	WATERLOGGED
c	cka	net/minecraft/world/level/block/SmithingTableBlock
	m	(Lcav;Lgj;ILboi;Lboj;)Lbqp;	a	lambda$getMenuProvider$0
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;)Lawk;	b	getMenuProvider
	f	Lqk;	a	CONTAINER_TITLE
c	ckb	net/minecraft/world/level/block/SmokerBlock
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcav;Lgj;Lboj;)V	a	openContainer
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
c	ckc	net/minecraft/world/level/block/SnowLayerBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lbww;)Z	a	canBeReplaced
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	b	getVisualShape
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	m	(Lcov;Lcab;Lgj;)Ldqh;	f	getBlockSupportShape
	m	(Lcov;)Z	g_	useShapeForLightOcclusion
	f	I	a	MAX_HEIGHT
	f	Lcpv;	b	LAYERS
	f	[Ldqh;	c	SHAPE_BY_LAYER
	f	I	d	HEIGHT_IMPASSABLE
c	ckc$1	net/minecraft/world/level/block/SnowLayerBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	ckd	net/minecraft/world/level/block/SnowyDirtBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)Z	h	isSnowySetting
	f	Lcpm;	a	SNOWY
c	cke	net/minecraft/world/level/block/SoulFireBlock
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;)Z	f	canBurn
	m	(Lcov;)Z	h	canSurviveOnBlock
c	ckf	net/minecraft/world/level/block/SoulSandBlock
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	b	getVisualShape
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	m	(Lcov;Lcab;Lgj;)Ldqh;	f	getBlockSupportShape
	f	Ldqh;	a	SHAPE
	f	I	b	BUBBLE_COLUMN_CHECK_DELAY
c	ckg	net/minecraft/world/level/block/SoundType
	m	()F	a	getVolume
	m	()F	b	getPitch
	m	()Lahj;	c	getBreakSound
	m	()Lahj;	d	getStepSound
	m	()Lahj;	e	getPlaceSound
	m	()Lahj;	f	getHitSound
	m	()Lahj;	g	getFallSound
	f	Lckg;	A	STEM
	f	Lckg;	B	NYLIUM
	f	Lckg;	C	FUNGUS
	f	Lckg;	D	ROOTS
	f	Lckg;	E	SHROOMLIGHT
	f	Lckg;	F	WEEPING_VINES
	f	Lckg;	G	TWISTING_VINES
	f	Lckg;	H	SOUL_SAND
	f	Lckg;	I	SOUL_SOIL
	f	Lckg;	J	BASALT
	f	Lckg;	K	WART_BLOCK
	f	Lckg;	L	NETHERRACK
	f	Lckg;	M	NETHER_BRICKS
	f	Lckg;	N	NETHER_SPROUTS
	f	Lckg;	O	NETHER_ORE
	f	Lckg;	P	BONE_BLOCK
	f	Lckg;	Q	NETHERITE_BLOCK
	f	Lckg;	R	ANCIENT_DEBRIS
	f	Lckg;	S	LODESTONE
	f	Lckg;	T	CHAIN
	f	Lckg;	U	NETHER_GOLD_ORE
	f	Lckg;	V	GILDED_BLACKSTONE
	f	Lckg;	W	CANDLE
	f	Lckg;	X	AMETHYST
	f	Lckg;	Y	AMETHYST_CLUSTER
	f	Lckg;	Z	SMALL_AMETHYST_BUD
	f	Lahj;	aA	breakSound
	f	Lahj;	aB	stepSound
	f	Lahj;	aC	placeSound
	f	Lahj;	aD	hitSound
	f	Lahj;	aE	fallSound
	f	Lckg;	a	WOOD
	f	Lckg;	aa	MEDIUM_AMETHYST_BUD
	f	Lckg;	ab	LARGE_AMETHYST_BUD
	f	Lckg;	ac	TUFF
	f	Lckg;	ad	CALCITE
	f	Lckg;	ae	DRIPSTONE_BLOCK
	f	Lckg;	af	POINTED_DRIPSTONE
	f	Lckg;	ag	COPPER
	f	Lckg;	ah	CAVE_VINES
	f	Lckg;	ai	SPORE_BLOSSOM
	f	Lckg;	aj	AZALEA
	f	Lckg;	ak	FLOWERING_AZALEA
	f	Lckg;	al	MOSS_CARPET
	f	Lckg;	am	MOSS
	f	Lckg;	an	BIG_DRIPLEAF
	f	Lckg;	ao	SMALL_DRIPLEAF
	f	Lckg;	ap	ROOTED_DIRT
	f	Lckg;	aq	HANGING_ROOTS
	f	Lckg;	ar	AZALEA_LEAVES
	f	Lckg;	as	SCULK_SENSOR
	f	Lckg;	at	GLOW_LICHEN
	f	Lckg;	au	DEEPSLATE
	f	Lckg;	av	DEEPSLATE_BRICKS
	f	Lckg;	aw	DEEPSLATE_TILES
	f	Lckg;	ax	POLISHED_DEEPSLATE
	f	F	ay	volume
	f	F	az	pitch
	f	Lckg;	b	GRAVEL
	f	Lckg;	c	GRASS
	f	Lckg;	d	LILY_PAD
	f	Lckg;	e	STONE
	f	Lckg;	f	METAL
	f	Lckg;	g	GLASS
	f	Lckg;	h	WOOL
	f	Lckg;	i	SAND
	f	Lckg;	j	SNOW
	f	Lckg;	k	POWDER_SNOW
	f	Lckg;	l	LADDER
	f	Lckg;	m	ANVIL
	f	Lckg;	n	SLIME_BLOCK
	f	Lckg;	o	HONEY_BLOCK
	f	Lckg;	p	WET_GRASS
	f	Lckg;	q	CORAL_BLOCK
	f	Lckg;	r	BAMBOO
	f	Lckg;	s	BAMBOO_SAPLING
	f	Lckg;	t	SCAFFOLDING
	f	Lckg;	u	SWEET_BERRY_BUSH
	f	Lckg;	v	CROP
	f	Lckg;	w	HARD_CROP
	f	Lckg;	x	VINE
	f	Lckg;	y	NETHER_WART
	f	Lckg;	z	LANTERN
c	ckh	net/minecraft/world/level/block/SpawnerBlock
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcov;Ladw;Lgj;Lbuw;)V	a	spawnAfterBreak
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcov;)Lcjf;	b_	getRenderShape
c	cki	net/minecraft/world/level/block/SpongeBlock
	m	(Lcav;Lgj;)V	a	tryAbsorbWater
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcav;Lgj;)Z	b	removeWaterBreadthFirstSearch
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	f	I	a	MAX_DEPTH
	f	I	b	MAX_COUNT
c	ckj	net/minecraft/world/level/block/SporeBlossomBlock
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	f	Ldqh;	a	SHAPE
	f	I	b	ADD_PARTICLE_ATTEMPTS
	f	I	c	PARTICLE_XZ_RADIUS
	f	I	d	PARTICLE_Y_MAX
c	ckk	net/minecraft/world/level/block/SpreadingSnowyDirtBlock
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcay;Lgj;)Z	b	canBeGrass
	m	(Lcov;Lcay;Lgj;)Z	c	canPropagate
c	ckl	net/minecraft/world/level/block/StainedGlassBlock
	m	()Lbts;	a	getColor
	f	Lbts;	a	color
c	ckm	net/minecraft/world/level/block/StainedGlassPaneBlock
	m	()Lbts;	a	getColor
	f	Lbts;	i	color
c	ckn	net/minecraft/world/level/block/StairBlock
	m	(ILdqh;Ldqh;Ldqh;Ldqh;Ldqh;)Ldqh;	a	makeStairShape
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;Lcan;)V	a	wasExploded
	m	(Lcav;Lgj;Lcov;Laxk;)V	a	stepOn
	m	(Lcaw;Lgj;Lcov;)V	a	destroy
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;)V	a	attack
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Ldqh;Ldqh;Ldqh;Ldqh;Ldqh;)[Ldqh;	a	makeShapes
	m	(Ldqh;Ldqh;Ldqh;Ldqh;Ldqh;I)Ldqh;	a	lambda$makeShapes$0
	m	(I)[Ldqh;	b	lambda$makeShapes$1
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	(Lcov;Lcab;Lgj;Lgo;)Z	c	canTakeShape
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;)Z	e_	isRandomlyTicking
	m	()F	f	getExplosionResistance
	m	(Lcov;)Z	g_	useShapeForLightOcclusion
	m	(Lcov;)Z	h	isStairs
	m	(Lcov;Lcab;Lgj;)Lcqd;	h	getStairsShape
	m	(Lcov;)I	n	getShapeIndex
	f	[Ldqh;	E	TOP_SHAPES
	f	[Ldqh;	F	BOTTOM_SHAPES
	f	[I	G	SHAPE_BY_STATE
	f	Lcdq;	H	base
	f	Lcov;	I	baseState
	f	Lcpp;	a	FACING
	f	Lcpt;	b	HALF
	f	Lcpt;	c	SHAPE
	f	Lcpm;	d	WATERLOGGED
	f	Ldqh;	e	TOP_AABB
	f	Ldqh;	f	BOTTOM_AABB
	f	Ldqh;	g	OCTET_NNN
	f	Ldqh;	h	OCTET_NNP
	f	Ldqh;	i	OCTET_NPN
	f	Ldqh;	j	OCTET_NPP
	f	Ldqh;	k	OCTET_PNN
	f	Ldqh;	l	OCTET_PNP
	f	Ldqh;	m	OCTET_PPN
	f	Ldqh;	n	OCTET_PPP
c	ckn$1	net/minecraft/world/level/block/StairBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$StairsShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cko	net/minecraft/world/level/block/StandingSignBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	f	Lcpv;	d	ROTATION
c	ckp	net/minecraft/world/level/block/StemBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	()Lckq;	c	getFruit
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
	f	I	a	MAX_AGE
	f	Lcpv;	b	AGE
	f	F	c	AABB_OFFSET
	f	[Ldqh;	d	SHAPE_BY_AGE
	f	Lckq;	e	fruit
	f	Ljava/util/function/Supplier;	f	seedSupplier
c	ckq	net/minecraft/world/level/block/StemGrownBlock
	m	()Lckp;	c	getStem
	m	()Lccs;	d	getAttachedStem
c	ckr	net/minecraft/world/level/block/StoneButtonBlock
	m	(Z)Lahj;	a	getSound
c	cks	net/minecraft/world/level/block/StonecutterBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;ILboi;Lboj;)Lbqp;	a	lambda$getMenuProvider$0
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcav;Lgj;)Lawk;	b	getMenuProvider
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;)Z	g_	useShapeForLightOcclusion
	f	Lcpp;	a	FACING
	f	Ldqh;	b	SHAPE
	f	Lqk;	c	CONTAINER_TITLE
c	ckt	net/minecraft/world/level/block/StructureBlock
	m	(Ladw;Lcnv;)V	a	trigger
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcov;)Lcjf;	b_	getRenderShape
	f	Lcpt;	a	MODE
c	ckt$1	net/minecraft/world/level/block/StructureBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
c	cku	net/minecraft/world/level/block/StructureVoidBlock
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;)F	b	getShadeBrightness
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;)Ldjd;	d	getPistonPushReaction
	f	D	a	SIZE
	f	Ldqh;	b	SHAPE
c	ckv	net/minecraft/world/level/block/SugarCaneBlock
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	f	Lcpv;	a	AGE
	f	F	b	AABB_OFFSET
	f	Ldqh;	c	SHAPE
c	ckw	net/minecraft/world/level/block/SupportType
	m	()[Lckw;	a	$values
	m	(Lcov;Lcab;Lgj;Lgo;)Z	a	isSupporting
	f	Lckw;	a	FULL
	f	Lckw;	b	CENTER
	f	Lckw;	c	RIGID
	f	[Lckw;	d	$VALUES
c	ckw$1	net/minecraft/world/level/block/SupportType$1
	m	(Lcov;Lcab;Lgj;Lgo;)Z	a	isSupporting
c	ckw$2	net/minecraft/world/level/block/SupportType$2
	m	(Lcov;Lcab;Lgj;Lgo;)Z	a	isSupporting
	f	I	d	CENTER_SUPPORT_WIDTH
	f	Ldqh;	e	CENTER_SUPPORT_SHAPE
c	ckw$3	net/minecraft/world/level/block/SupportType$3
	m	(Lcov;Lcab;Lgj;Lgo;)Z	a	isSupporting
	f	I	d	RIGID_SUPPORT_WIDTH
	f	Ldqh;	e	RIGID_SUPPORT_SHAPE
c	ckx	net/minecraft/world/level/block/SweetBerryBushBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;)Z	e_	isRandomlyTicking
	f	I	a	MAX_AGE
	f	Lcpv;	b	AGE
	f	F	c	HURT_SPEED_THRESHOLD
	f	Ldqh;	d	SAPLING_SHAPE
	f	Ldqh;	e	MID_GROWTH_SHAPE
c	cky	net/minecraft/world/level/block/TallFlowerBlock
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Lbww;)Z	a	canBeReplaced
c	ckz	net/minecraft/world/level/block/TallGrassBlock
	m	()Lcou$b;	U_	getOffsetType
	m	(Ladw;Ljava/util/Random;Lgj;Lcov;)V	a	performBonemeal
	m	(Lcab;Lgj;Lcov;Z)Z	a	isValidBonemealTarget
	m	(Lcav;Ljava/util/Random;Lgj;Lcov;)Z	a	isBonemealSuccess
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	f	F	a	AABB_OFFSET
	f	Ldqh;	b	SHAPE
c	cla	net/minecraft/world/level/block/TallSeagrassBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcab;Lgj;Lcov;Ldiw;)Z	a	canPlaceLiquid
	m	(Lcaw;Lgj;Lcov;Ldix;)Z	a	placeLiquid
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
	f	Lcpt;	b	HALF
	f	F	c	AABB_OFFSET
	f	Ldqh;	d	SHAPE
c	clb	net/minecraft/world/level/block/TargetBlock
	m	(Lcav;Lcov;Ldpk;Lboz;)V	a	onProjectileHit
	m	(Lcaw;Lcov;ILgj;I)V	a	setOutputPower
	m	(Lcaw;Lcov;Ldpk;Laxk;)I	a	updateRedstoneOutput
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Ldpk;Ldpo;)I	a	getRedstoneStrength
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	(Lcov;)Z	f_	isSignalSource
	f	Lcpv;	a	OUTPUT_POWER
	f	I	b	ACTIVATION_TICKS_ARROWS
	f	I	c	ACTIVATION_TICKS_OTHER
c	clc	net/minecraft/world/level/block/TintedGlassBlock
	m	(Lcov;Lcab;Lgj;)Z	c	propagatesSkylightDown
	m	(Lcov;Lcab;Lgj;)I	g	getLightBlock
c	cld	net/minecraft/world/level/block/TntBlock
	m	(Lawg;Lboj;)V	a	lambda$use$0
	m	(Lcan;)Z	a	dropFromExplosion
	m	(Lcav;Lcov;Ldpk;Lboz;)V	a	onProjectileHit
	m	(Lcav;Lgj;)V	a	explode
	m	(Lcav;Lgj;Laxy;)V	a	explode
	m	(Lcav;Lgj;Lcan;)V	a	wasExploded
	m	(Lcav;Lgj;Lcov;Lboj;)V	a	playerWillDestroy
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	f	Lcpm;	a	UNSTABLE
c	cle	net/minecraft/world/level/block/TorchBlock
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	f	I	g	AABB_STANDING_OFFSET
	f	Ldqh;	h	AABB
	f	Lia;	i	flameParticle
c	clf	net/minecraft/world/level/block/TrapDoorBlock
	m	(Lboj;Lcav;Lgj;Z)V	a	playSound
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;)Ldix;	c_	getFluidState
	f	Lcpm;	a	OPEN
	f	Lcpt;	b	HALF
	f	Lcpm;	c	POWERED
	f	Lcpm;	d	WATERLOGGED
	f	I	e	AABB_THICKNESS
	f	Ldqh;	f	EAST_OPEN_AABB
	f	Ldqh;	g	WEST_OPEN_AABB
	f	Ldqh;	h	SOUTH_OPEN_AABB
	f	Ldqh;	i	NORTH_OPEN_AABB
	f	Ldqh;	j	BOTTOM_AABB
	f	Ldqh;	k	TOP_AABB
c	clf$1	net/minecraft/world/level/block/TrapDoorBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	clg	net/minecraft/world/level/block/TrappedChestBlock
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lcov;Lcab;Lgj;Lgo;)I	b	getDirectSignal
	m	()Lahr;	d	getOpenChestStat
	m	(Lcov;)Z	f_	isSignalSource
	m	()Lcmt;	r	lambda$new$0
c	clh	net/minecraft/world/level/block/TripWireBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;)V	a	checkPressed
	m	(Lcav;Lgj;Lcov;)V	a	updateSource
	m	(Lcav;Lgj;Lcov;Lboj;)V	a	playerWillDestroy
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;)Z	a	shouldConnectTo
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	f	Lcpm;	a	POWERED
	f	Lcpm;	b	ATTACHED
	f	Lcpm;	c	DISARMED
	f	Lcpm;	d	NORTH
	f	Lcpm;	e	EAST
	f	Lcpm;	f	SOUTH
	f	Lcpm;	g	WEST
	f	Ldqh;	h	AABB
	f	Ldqh;	i	NOT_ATTACHED_AABB
	f	Ljava/util/Map;	j	PROPERTY_BY_DIRECTION
	f	I	k	RECHECK_PERIOD
	f	Lcli;	l	hook
c	clh$1	net/minecraft/world/level/block/TripWireBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cli	net/minecraft/world/level/block/TripWireHookBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcav;Lgj;Lcov;ZZILcov;)V	a	calculateState
	m	(Lcav;Lgj;Lgo;)V	a	notifyNeighbors
	m	(Lcav;Lgj;ZZZZ)V	a	playSound
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcab;Lgj;Lgo;)I	b	getDirectSignal
	m	(Lcov;)Z	f_	isSignalSource
	f	Lcpp;	a	FACING
	f	Lcpm;	b	POWERED
	f	Lcpm;	c	ATTACHED
	f	I	d	WIRE_DIST_MIN
	f	I	e	WIRE_DIST_MAX
	f	I	f	AABB_OFFSET
	f	Ldqh;	g	NORTH_AABB
	f	Ldqh;	h	SOUTH_AABB
	f	Ldqh;	i	WEST_AABB
	f	Ldqh;	j	EAST_AABB
	f	I	k	RECHECK_PERIOD
c	cli$1	net/minecraft/world/level/block/TripWireHookBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	clj	net/minecraft/world/level/block/TurtleEggBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;)Z	a	onSand
	m	(Lcav;)Z	a	shouldUpdateHatchLevel
	m	(Lcav;Laxk;)Z	a	canDestroyEgg
	m	(Lcav;Lboj;Lgj;Lcov;Lcmr;Lbuw;)V	a	playerDestroy
	m	(Lcav;Lcov;Lgj;Laxk;F)V	a	fallOn
	m	(Lcav;Lcov;Lgj;Laxk;I)V	a	destroyEgg
	m	(Lcav;Lgj;Lcov;)V	a	decreaseEggs
	m	(Lcav;Lgj;Lcov;Laxk;)V	a	stepOn
	m	(Lcov;Lbww;)Z	a	canBeReplaced
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcab;Lgj;)Z	b	isSand
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	f	I	a	MAX_HATCH_LEVEL
	f	I	b	MIN_EGGS
	f	I	c	MAX_EGGS
	f	Lcpv;	d	HATCH
	f	Lcpv;	e	EGGS
	f	Ldqh;	f	ONE_EGG_AABB
	f	Ldqh;	g	MULTIPLE_EGGS_AABB
c	clk	net/minecraft/world/level/block/TwistingVinesBlock
	m	(Ljava/util/Random;)I	a	getBlocksToGrowWhenBonemealed
	m	()Lcdq;	c	getBodyBlock
	m	(Lcov;)Z	g	canGrowInto
	f	Ldqh;	f	SHAPE
c	cll	net/minecraft/world/level/block/TwistingVinesPlantBlock
	m	()Lcgu;	d	getHeadBlock
	f	Ldqh;	d	SHAPE
c	clm	net/minecraft/world/level/block/VineBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcab;Lgj;)Z	a	canSpread
	m	(Lcab;Lgj;Lgo;)Z	a	isAcceptableNeighbour
	m	(Lcov;Lbww;)Z	a	canBeReplaced
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lcov;Ljava/util/Random;)Lcov;	a	copyRandomFaces
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgo;)Lcpm;	a	getPropertyForFace
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
	m	(Lcab;Lgj;Lgo;)Z	b	canSupportAtFace
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcab;Lgj;)Z	c	propagatesSkylightDown
	m	(Lcov;)Ldqh;	h	calculateShape
	m	(Lcov;Lcab;Lgj;)Lcov;	h	getUpdatedState
	m	(Lcov;)Z	n	hasFaces
	m	(Lcov;)I	o	countFaces
	m	(Lcov;)Z	p	hasHorizontalConnection
	f	Lcpm;	a	UP
	f	Lcpm;	b	NORTH
	f	Lcpm;	c	EAST
	f	Lcpm;	d	SOUTH
	f	Lcpm;	e	WEST
	f	Ljava/util/Map;	f	PROPERTY_BY_DIRECTION
	f	F	g	AABB_OFFSET
	f	Ldqh;	h	UP_AABB
	f	Ldqh;	i	WEST_AABB
	f	Ldqh;	j	EAST_AABB
	f	Ldqh;	k	NORTH_AABB
	f	Ldqh;	l	SOUTH_AABB
	f	Ljava/util/Map;	m	shapesCache
c	clm$1	net/minecraft/world/level/block/VineBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cln	net/minecraft/world/level/block/WallBannerBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	()Ljava/lang/String;	h	getDescriptionId
	f	Lcpp;	a	FACING
	f	Ljava/util/Map;	b	SHAPES
c	clo	net/minecraft/world/level/block/WallBlock
	m	(FFFFFF)Ljava/util/Map;	a	makeShapes
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcay;Lcov;Lgj;Lcov;)Lcov;	a	topUpdate
	m	(Lcay;Lcov;Lgj;Lcov;ZZZZ)Lcov;	a	updateShape
	m	(Lcay;Lgj;Lcov;Lgj;Lcov;Lgo;)Lcov;	a	sideUpdate
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lcov;Ldqh;)Z	a	shouldRaisePost
	m	(Lcov;Lcpy;)Z	a	isConnected
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;ZLgo;)Z	a	connectsTo
	m	(Lcov;ZZZZLdqh;)Lcov;	a	updateSides
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Ldqh;Lcqg;Ldqh;Ldqh;)Ldqh;	a	applyWallShape
	m	(Ldqh;Ldqh;)Z	a	isCovered
	m	(ZLdqh;Ldqh;)Lcqg;	a	makeWallState
	m	(Lcov;Lcab;Lgj;)Z	c	propagatesSkylightDown
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	m	(Lcov;)Ldix;	c_	getFluidState
	f	Ldqh;	E	POST_TEST
	f	Ldqh;	F	NORTH_TEST
	f	Ldqh;	G	SOUTH_TEST
	f	Ldqh;	H	WEST_TEST
	f	Ldqh;	I	EAST_TEST
	f	Lcpm;	a	UP
	f	Lcpt;	b	EAST_WALL
	f	Lcpt;	c	NORTH_WALL
	f	Lcpt;	d	SOUTH_WALL
	f	Lcpt;	e	WEST_WALL
	f	Lcpm;	f	WATERLOGGED
	f	Ljava/util/Map;	g	shapeByIndex
	f	Ljava/util/Map;	h	collisionShapeByIndex
	f	I	i	WALL_WIDTH
	f	I	j	WALL_HEIGHT
	f	I	k	POST_WIDTH
	f	I	l	POST_COVER_WIDTH
	f	I	m	WALL_COVER_START
	f	I	n	WALL_COVER_END
c	clo$1	net/minecraft/world/level/block/WallBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	clp	net/minecraft/world/level/block/WallSignBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	()Ljava/lang/String;	h	getDescriptionId
	f	Lcpp;	d	FACING
	f	F	e	AABB_THICKNESS
	f	F	f	AABB_BOTTOM
	f	F	g	AABB_TOP
	f	Ljava/util/Map;	h	AABBS
c	clq	net/minecraft/world/level/block/WallSkullBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	()Ljava/lang/String;	h	getDescriptionId
	f	Lcpp;	a	FACING
	f	Ljava/util/Map;	b	AABBS
c	clr	net/minecraft/world/level/block/WallTorchBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	()Ljava/lang/String;	h	getDescriptionId
	m	(Lcov;)Ldqh;	h	getShape
	f	Lcpp;	a	FACING
	f	F	b	AABB_OFFSET
	f	Ljava/util/Map;	c	AABBS
c	cls	net/minecraft/world/level/block/WaterlilyBlock
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
	f	Ldqh;	a	AABB
c	clt	net/minecraft/world/level/block/WeatheringCopper
	m	()F	a	getChanceModifier
	m	(Lcdq;)Ljava/util/Optional;	a	getPrevious
	m	(Lcov;)Ljava/util/Optional;	a	getNext
	m	(Lcov;Lcdq;)Lcov;	a	lambda$getNext$3
	m	(Lcdq;)Lcdq;	b	getFirst
	m	(Lcov;)Ljava/util/Optional;	b	getPrevious
	m	(Lcov;Lcdq;)Lcov;	b	lambda$getPrevious$2
	m	(Lcdq;)Ljava/util/Optional;	c	getNext
	m	(Lcov;)Lcov;	c	getFirst
	m	()Lcom/google/common/collect/BiMap;	d	lambda$static$1
	m	()Lcom/google/common/collect/BiMap;	e	lambda$static$0
	f	Ljava/util/function/Supplier;	q_	NEXT_BY_BLOCK
	f	Ljava/util/function/Supplier;	r_	PREVIOUS_BY_BLOCK
c	clt$a	net/minecraft/world/level/block/WeatheringCopper$WeatherState
	m	()[Lclt$a;	a	$values
	f	Lclt$a;	a	UNAFFECTED
	f	Lclt$a;	b	EXPOSED
	f	Lclt$a;	c	WEATHERED
	f	Lclt$a;	d	OXIDIZED
	f	[Lclt$a;	e	$VALUES
c	clu	net/minecraft/world/level/block/WeatheringCopperFullBlock
	m	()Ljava/lang/Enum;	b	getAge
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	()Lclt$a;	c	getAge
	m	(Lcov;)Z	e_	isRandomlyTicking
	f	Lclt$a;	d	weatherState
c	clv	net/minecraft/world/level/block/WeatheringCopperSlabBlock
	m	()Ljava/lang/Enum;	b	getAge
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;)Z	e_	isRandomlyTicking
	m	()Lclt$a;	r	getAge
	f	Lclt$a;	e	weatherState
c	clw	net/minecraft/world/level/block/WeatheringCopperStairBlock
	m	()Ljava/lang/Enum;	b	getAge
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;)Z	e_	isRandomlyTicking
	m	()Lclt$a;	r	getAge
	f	Lclt$a;	G	weatherState
c	clx	net/minecraft/world/level/block/WebBlock
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
c	cly	net/minecraft/world/level/block/WeepingVinesBlock
	m	(Ljava/util/Random;)I	a	getBlocksToGrowWhenBonemealed
	m	()Lcdq;	c	getBodyBlock
	m	(Lcov;)Z	g	canGrowInto
	f	Ldqh;	f	SHAPE
c	clz	net/minecraft/world/level/block/WeepingVinesPlantBlock
	m	()Lcgu;	d	getHeadBlock
	f	Ldqh;	d	SHAPE
c	cma	net/minecraft/world/level/block/WeightedPressurePlateBlock
	m	(Lcaw;Lgj;)V	a	playOnSound
	m	(Lcov;I)Lcov;	a	setSignalForState
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcav;Lgj;)I	b	getSignalStrength
	m	(Lcaw;Lgj;)V	b	playOffSound
	m	()I	c	getPressedTime
	m	(Lcov;)I	g	getSignalForState
	f	Lcpv;	d	POWER
	f	I	e	maxWeight
c	cmb	net/minecraft/world/level/block/WetSpongeBlock
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
c	cmc	net/minecraft/world/level/block/WitherRoseBlock
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Lcov;Lcab;Lgj;)Z	d	mayPlaceOn
c	cmd	net/minecraft/world/level/block/WitherSkullBlock
	m	(Lcav;Lgj;Lcns;)V	a	checkSpawn
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcoz;)Z	a	lambda$getOrCreateWitherBase$1
	m	(Lcav;Lgj;Lbuw;)Z	b	canSpawnMob
	m	(Lcoz;)Z	b	lambda$getOrCreateWitherFull$0
	m	()Lcpa;	c	getOrCreateWitherFull
	m	()Lcpa;	r	getOrCreateWitherBase
	f	Lcpa;	d	witherPatternFull
	f	Lcpa;	e	witherPatternBase
c	cme	net/minecraft/world/level/block/WitherWallSkullBlock
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
c	cmf	net/minecraft/world/level/block/WoodButtonBlock
	m	(Z)Lahj;	a	getSound
c	cmg	net/minecraft/world/level/block/WoolCarpetBlock
	m	()Lbts;	c	getColor
	f	Lbts;	b	color
c	cmh	net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity
	m	()V	a	clearContent
	m	(I)Lbuw;	a	getItem
	m	(II)Lbuw;	a	removeItem
	m	(ILbuw;)V	a	setItem
	m	(ILbuw;Lgo;)Z	a	canPlaceItemThroughFace
	m	(Ladw;Ldpo;)Ljava/util/List;	a	getRecipesToAwardAndPopExperience
	m	(Ladw;Ldpo;IF)V	a	createExperience
	m	(Ladx;)V	a	awardUsedRecipesAndPopExperience
	m	(Lboj;)Z	a	stillValid
	m	(Lbol;)V	a	fillStackedContents
	m	(Lbuw;)I	a	getBurnDuration
	m	(Lbxo;)V	a	setRecipeUsed
	m	(Lbxo;Lgx;I)Z	a	canBurn
	m	(Lcav;Lbxr;Lawa;)I	a	getTotalCookTime
	m	(Lcav;Lgj;Lcov;Lcmh;)V	a	serverTick
	m	(Lgo;)[I	a	getSlotsForFace
	m	(Ljava/util/List;Ladw;Ldpo;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;Lbxo;)V	a	lambda$getRecipesToAwardAndPopExperience$1
	m	(Ljava/util/Map;Laif;I)V	a	add
	m	(Ljava/util/Map;Lcau;I)V	a	add
	m	(Lok;)V	a	load
	m	(Lok;Lyt;Ljava/lang/Integer;)V	a	lambda$saveAdditional$0
	m	()I	b	getContainerSize
	m	(I)Lbuw;	b	removeItemNoUpdate
	m	(ILbuw;)Z	b	canPlaceItem
	m	(ILbuw;Lgo;)Z	b	canTakeItemThroughFace
	m	(Lboj;)V	b	awardUsedRecipes
	m	(Lbus;)Z	b	isNeverAFurnaceFuel
	m	(Lbuw;)Z	b	isFuel
	m	(Lbxo;Lgx;I)Z	b	burn
	m	(Lok;)V	b	saveAdditional
	m	()Z	c	isEmpty
	m	()Lbxo;	d	getRecipeUsed
	m	()Ljava/util/Map;	f	getFuel
	m	()Z	i	isLit
	f	I	b	SLOT_INPUT
	f	I	c	SLOT_FUEL
	f	I	d	SLOT_RESULT
	f	I	e	DATA_LIT_TIME
	f	I	f	DATA_LIT_DURATION
	f	I	g	DATA_COOKING_PROGRESS
	f	I	h	DATA_COOKING_TOTAL_TIME
	f	I	i	NUM_DATA_VALUES
	f	I	j	BURN_TIME_STANDARD
	f	I	k	BURN_COOL_SPEED
	f	Lgx;	l	items
	f	Lbqz;	m	dataAccess
	f	[I	q	SLOTS_FOR_UP
	f	[I	r	SLOTS_FOR_DOWN
	f	[I	s	SLOTS_FOR_SIDES
	f	I	t	litTime
	f	I	u	litDuration
	f	I	v	cookingProgress
	f	I	w	cookingTotalTime
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	x	recipesUsed
	f	Lbxr;	y	recipeType
c	cmh$1	net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity$1
	m	()I	a	getCount
	m	(I)I	a	get
	m	(II)V	a	set
	f	Lcmh;	a	this$0
c	cmi	net/minecraft/world/level/block/entity/BannerBlockEntity
	m	()Lqk;	X	getName
	m	()Lqk;	Z	getCustomName
	m	()Lrq;	a	getUpdatePacket
	m	(Lbts;Loq;)Ljava/util/List;	a	createPatterns
	m	(Lbuw;)Loq;	a	getItemPatterns
	m	(Lbuw;Lbts;)V	a	fromItem
	m	(Lok;)V	a	load
	m	(Lqk;)V	a	setCustomName
	m	()Lok;	aa_	getUpdateTag
	m	(Lbuw;)V	b	fromItem
	m	(Lok;)V	b	saveAdditional
	m	()Ljava/util/List;	c	getPatterns
	m	(Lbuw;)I	c	getPatternCount
	m	(Lbuw;)V	d	removeLastPattern
	m	()Lbuw;	f	getItem
	m	()Lbts;	g	getBaseColor
	m	()Lrc;	h	getUpdatePacket
	f	I	a	MAX_PATTERNS
	f	Ljava/lang/String;	b	TAG_PATTERNS
	f	Ljava/lang/String;	c	TAG_PATTERN
	f	Ljava/lang/String;	d	TAG_COLOR
	f	Lqk;	e	name
	f	Lbts;	f	baseColor
	f	Loq;	g	itemPatterns
	f	Ljava/util/List;	h	patterns
c	cmj	net/minecraft/world/level/block/entity/BannerPattern
	m	()Ljava/lang/String;	a	getFilename
	m	(Lcmj;)Z	a	lambda$static$0
	m	(Ljava/lang/String;)Lcmj;	a	byHash
	m	(Z)Lyt;	a	location
	m	()Ljava/lang/String;	b	getHashname
	m	(Ljava/lang/String;)Lcmj;	b	byFilename
	m	()[Lcmj;	c	$values
	f	Lcmj;	A	HALF_VERTICAL
	f	Lcmj;	B	HALF_HORIZONTAL
	f	Lcmj;	C	HALF_VERTICAL_MIRROR
	f	Lcmj;	D	HALF_HORIZONTAL_MIRROR
	f	Lcmj;	E	BORDER
	f	Lcmj;	F	CURLY_BORDER
	f	Lcmj;	G	GRADIENT
	f	Lcmj;	H	GRADIENT_UP
	f	Lcmj;	I	BRICKS
	f	Lcmj;	J	GLOBE
	f	Lcmj;	K	CREEPER
	f	Lcmj;	L	SKULL
	f	Lcmj;	M	FLOWER
	f	Lcmj;	N	MOJANG
	f	Lcmj;	O	PIGLIN
	f	I	P	COUNT
	f	I	Q	PATTERN_ITEM_COUNT
	f	I	R	AVAILABLE_PATTERNS
	f	[Lcmj;	S	VALUES
	f	Z	T	hasPatternItem
	f	Ljava/lang/String;	U	filename
	f	Ljava/lang/String;	V	hashname
	f	[Lcmj;	W	$VALUES
	f	Lcmj;	a	BASE
	f	Lcmj;	b	SQUARE_BOTTOM_LEFT
	f	Lcmj;	c	SQUARE_BOTTOM_RIGHT
	f	Lcmj;	d	SQUARE_TOP_LEFT
	f	Lcmj;	e	SQUARE_TOP_RIGHT
	f	Lcmj;	f	STRIPE_BOTTOM
	f	Lcmj;	g	STRIPE_TOP
	f	Lcmj;	h	STRIPE_LEFT
	f	Lcmj;	i	STRIPE_RIGHT
	f	Lcmj;	j	STRIPE_CENTER
	f	Lcmj;	k	STRIPE_MIDDLE
	f	Lcmj;	l	STRIPE_DOWNRIGHT
	f	Lcmj;	m	STRIPE_DOWNLEFT
	f	Lcmj;	n	STRIPE_SMALL
	f	Lcmj;	o	CROSS
	f	Lcmj;	p	STRAIGHT_CROSS
	f	Lcmj;	q	TRIANGLE_BOTTOM
	f	Lcmj;	r	TRIANGLE_TOP
	f	Lcmj;	s	TRIANGLES_BOTTOM
	f	Lcmj;	t	TRIANGLES_TOP
	f	Lcmj;	u	DIAGONAL_LEFT
	f	Lcmj;	v	DIAGONAL_RIGHT
	f	Lcmj;	w	DIAGONAL_LEFT_MIRROR
	f	Lcmj;	x	DIAGONAL_RIGHT_MIRROR
	f	Lcmj;	y	CIRCLE_MIDDLE
	f	Lcmj;	z	RHOMBUS_MIDDLE
c	cmj$a	net/minecraft/world/level/block/entity/BannerPattern$Builder
	m	()Loq;	a	toListTag
	m	(Lcmj;Lbts;)Lcmj$a;	a	addPattern
	m	(Lcom/mojang/datafixers/util/Pair;)Lcmj$a;	a	addPattern
	f	Ljava/util/List;	a	patterns
c	cmk	net/minecraft/world/level/block/entity/BarrelBlockEntity
	m	(ILboi;)Lbqp;	a	createMenu
	m	(Lcov;Lahj;)V	a	playSound
	m	(Lcov;Z)V	a	updateBlockState
	m	(Lgx;)V	a	setItems
	m	(Lok;)V	a	load
	m	()I	b	getContainerSize
	m	(Lok;)V	b	saveAdditional
	m	(Lboj;)V	b_	startOpen
	m	(Lboj;)V	c_	stopOpen
	m	()Lgx;	f	getItems
	m	()Lqk;	g	getDefaultName
	m	()V	i	recheckOpen
	f	Lgx;	b	items
	f	Lcnb;	c	openersCounter
c	cmk$1	net/minecraft/world/level/block/entity/BarrelBlockEntity$1
	m	(Lboj;)Z	a	isOwnContainer
	m	(Lcav;Lgj;Lcov;)V	a	onOpen
	m	(Lcav;Lgj;Lcov;II)V	a	openerCountChanged
	m	(Lcav;Lgj;Lcov;)V	b	onClose
	f	Lcmk;	a	this$0
c	cml	net/minecraft/world/level/block/entity/BaseContainerBlockEntity
	m	()Lqk;	C_	getDisplayName
	m	()Lqk;	X	getName
	m	()Lqk;	Z	getCustomName
	m	(ILboi;)Lbqp;	a	createMenu
	m	(Lboj;Lawj;Lqk;)Z	a	canUnlock
	m	(Lok;)V	a	load
	m	(Lqk;)V	a	setCustomName
	m	(Lok;)V	b	saveAdditional
	m	(Lboj;)Z	d	canOpen
	m	()Lqk;	g	getDefaultName
	f	Lawj;	b	lockKey
	f	Lqk;	c	name
c	cmm	net/minecraft/world/level/block/entity/BeaconBlockEntity
	m	()Lqk;	C_	getDisplayName
	m	(I)Laxc;	a	getValidEffectById
	m	(Lcav;)V	a	setLevel
	m	(Lcav;III)I	a	updateBase
	m	(Lcav;Lgj;ILaxc;Laxc;)V	a	applyEffects
	m	(Lcav;Lgj;Lahj;)V	a	playSound
	m	(Lcav;Lgj;Lcov;Lcmm;)V	a	tick
	m	(Lok;)V	a	load
	m	(Lqk;)V	a	setCustomName
	m	()Lok;	aa_	getUpdateTag
	m	()V	ab_	setRemoved
	m	(Lok;)V	b	saveAdditional
	m	()Ljava/util/List;	c	getBeamSections
	m	()Lrq;	f	getUpdatePacket
	m	()Lrc;	h	getUpdatePacket
	f	[[Laxc;	a	BEACON_EFFECTS
	f	I	b	DATA_LEVELS
	f	I	c	DATA_PRIMARY
	f	I	d	DATA_SECONDARY
	f	I	e	NUM_DATA_VALUES
	f	I	f	MAX_LEVELS
	f	Ljava/util/Set;	g	VALID_EFFECTS
	f	I	h	BLOCKS_CHECK_PER_TICK
	f	Ljava/util/List;	i	beamSections
	f	Ljava/util/List;	j	checkingBeamSections
	f	I	k	levels
	f	I	l	lastCheckY
	f	Laxc;	m	primaryPower
	f	Laxc;	q	secondaryPower
	f	Lqk;	r	name
	f	Lawj;	s	lockKey
	f	Lbqz;	t	dataAccess
c	cmm$1	net/minecraft/world/level/block/entity/BeaconBlockEntity$1
	m	()I	a	getCount
	m	(I)I	a	get
	m	(II)V	a	set
	f	Lcmm;	a	this$0
c	cmm$a	net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection
	m	()V	a	increaseHeight
	m	()[F	b	getColor
	m	()I	c	getHeight
	f	[F	a	color
	f	I	b	height
c	cmn	net/minecraft/world/level/block/entity/BedBlockEntity
	m	(Lbts;)V	a	setColor
	m	()Lrq;	c	getUpdatePacket
	m	()Lbts;	d	getColor
	m	()Lrc;	h	getUpdatePacket
	f	Lbts;	a	color
c	cmo	net/minecraft/world/level/block/entity/BeehiveBlockEntity
	m	(ILbie;)V	a	setBeeReleaseData
	m	(Laxk;)Laxk;	a	lambda$releaseOccupant$1
	m	(Laxk;Z)V	a	addOccupant
	m	(Laxk;ZI)V	a	addOccupantWithPresetTicks
	m	(Lboj;Lcov;Lcmo$b;)V	a	emptyAllLivingFromHive
	m	(Lcav;Lgj;Lcov;Lcmo$a;Ljava/util/List;Lcmo$b;Lgj;)Z	a	releaseOccupant
	m	(Lcav;Lgj;Lcov;Lcmo;)V	a	serverTick
	m	(Lcav;Lgj;Lcov;Ljava/util/List;Lgj;)V	a	tickOccupants
	m	(Lcou$a;)Z	a	lambda$releaseOccupant$2
	m	(Lcov;)I	a	getHoneyLevel
	m	(Lcov;Lcmo$b;)Ljava/util/List;	a	releaseAllOccupants
	m	(Lcov;Ljava/util/List;Lcmo$b;Lcmo$a;)Z	a	lambda$releaseAllOccupants$0
	m	(Lok;)V	a	load
	m	(Lok;IZ)V	a	storeBee
	m	(Lok;)V	b	saveAdditional
	m	()Z	c	isFireNearby
	m	()Z	d	isEmpty
	m	(Lok;)V	d	removeIgnoredBeeTags
	m	()V	e	setChanged
	m	()Z	f	isFull
	m	()I	g	getOccupantCount
	m	()Z	i	isSedated
	m	()Loq;	j	writeBees
	m	()Z	v	hasSavedFlowerPos
	f	Ljava/lang/String;	a	TAG_FLOWER_POS
	f	Ljava/lang/String;	b	MIN_OCCUPATION_TICKS
	f	Ljava/lang/String;	c	ENTITY_DATA
	f	Ljava/lang/String;	d	TICKS_IN_HIVE
	f	Ljava/lang/String;	e	HAS_NECTAR
	f	Ljava/lang/String;	f	BEES
	f	I	g	MAX_OCCUPANTS
	f	I	h	MIN_OCCUPATION_TICKS_NECTARLESS
	f	Ljava/util/List;	i	IGNORED_BEE_TAGS
	f	I	j	MIN_TICKS_BEFORE_REENTERING_HIVE
	f	I	k	MIN_OCCUPATION_TICKS_NECTAR
	f	Ljava/util/List;	l	stored
	f	Lgj;	m	savedFlowerPos
c	cmo$a	net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData
	f	Lok;	a	entityData
	f	I	b	ticksInHive
	f	I	c	minOccupationTicks
c	cmo$b	net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus
	m	()[Lcmo$b;	a	$values
	f	Lcmo$b;	a	HONEY_DELIVERED
	f	Lcmo$b;	b	BEE_RELEASED
	f	Lcmo$b;	c	EMERGENCY
	f	[Lcmo$b;	d	$VALUES
c	cmp	net/minecraft/world/level/block/entity/BellBlockEntity
	m	(Laxy;)V	a	glow
	m	(Lcav;Lgj;Lcov;Lcmp;)V	a	clientTick
	m	(Lcav;Lgj;Lcov;Lcmp;Lcmp$a;)V	a	tick
	m	(Lcav;Lgj;Ljava/util/List;)V	a	makeRaidersGlow
	m	(Lgj;ILorg/apache/commons/lang3/mutable/MutableInt;Lcav;Laxy;)V	a	lambda$showBellParticles$3
	m	(Lgj;Laxy;)Z	a	isRaiderWithinRange
	m	(Lgj;Ljava/util/List;)Z	a	areRaidersNearby
	m	(Lgo;)V	a	onHit
	m	(II)Z	a_	triggerEvent
	m	(Lcav;Lgj;Lcov;Lcmp;)V	b	serverTick
	m	(Lcav;Lgj;Ljava/util/List;)V	b	showBellParticles
	m	(Lgj;Laxy;)Z	b	lambda$showBellParticles$2
	m	()V	c	updateEntities
	m	(Lgj;Laxy;)Z	c	lambda$showBellParticles$1
	m	(Lgj;Laxy;)Z	d	lambda$makeRaidersGlow$0
	f	I	a	ticks
	f	Z	b	shaking
	f	Lgo;	c	clickDirection
	f	I	d	DURATION
	f	I	e	GLOW_DURATION
	f	I	f	MIN_TICKS_BETWEEN_SEARCHES
	f	I	g	MAX_RESONATION_TICKS
	f	I	h	TICKS_BEFORE_RESONATION
	f	I	i	SEARCH_RADIUS
	f	I	j	HEAR_BELL_RADIUS
	f	I	k	HIGHLIGHT_RAIDERS_RADIUS
	f	J	l	lastRingTimestamp
	f	Ljava/util/List;	m	nearbyEntities
	f	Z	q	resonating
	f	I	r	resonationTicks
c	cmp$a	net/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction
c	cmq	net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity
	m	(ILboi;)Lbqp;	a	createMenu
	m	(Lbuw;)I	a	getBurnDuration
	m	()Lqk;	g	getDefaultName
c	cmr	net/minecraft/world/level/block/entity/BlockEntity
	m	(Lcav;)V	a	setLevel
	m	(Lcav;Lgj;Lcov;)V	a	setChanged
	m	(Lgj;Lcov;Ljava/lang/String;Lcmt;)Lcmr;	a	lambda$loadStatic$0
	m	(Lgj;Lcov;Lok;)Lcmr;	a	loadStatic
	m	(Ljava/lang/String;)Lcmr;	a	lambda$loadStatic$2
	m	(Lok;)V	a	load
	m	(Lok;Lcmt;)V	a	addEntityType
	m	(Lok;Ljava/lang/String;Lcmr;)Lcmr;	a	lambda$loadStatic$1
	m	(Lr;)V	a	fillCrashReportCategory
	m	(II)Z	a_	triggerEvent
	m	()Lok;	aa_	getUpdateTag
	m	()V	ab_	setRemoved
	m	(Lcov;)V	b	setBlockState
	m	(Lok;)V	b	saveAdditional
	m	(Lok;)Lgj;	c	getPosFromTag
	m	(Lok;)V	d	saveId
	m	()V	e	setChanged
	m	(Lbuw;)V	e	saveToItem
	m	(Lok;)V	e	saveMetadata
	m	()Ljava/lang/String;	f	lambda$fillCrashReportCategory$3
	m	()Lrc;	h	getUpdatePacket
	m	()Lcav;	k	getLevel
	m	()Z	l	hasLevel
	m	()Lok;	m	saveWithFullMetadata
	m	()Lok;	n	saveWithId
	m	()Lok;	o	saveWithoutMetadata
	m	()Lgj;	p	getBlockPos
	m	()Lcov;	q	getBlockState
	m	()Z	r	isRemoved
	m	()V	s	clearRemoved
	m	()Z	t	onlyOpCanSetNbt
	m	()Lcmt;	u	getType
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcmt;	c	type
	f	Lcov;	d	blockState
	f	Lcav;	n	level
	f	Lgj;	o	worldPosition
	f	Z	p	remove
c	cms	net/minecraft/world/level/block/entity/BlockEntityTicker
c	cmt	net/minecraft/world/level/block/entity/BlockEntityType
	m	(Lcab;Lgj;)Lcmr;	a	getBlockEntity
	m	(Lcmt;)Lyt;	a	getKey
	m	(Lcov;)Z	a	isValid
	m	(Lgj;Lcov;)Lcmr;	a	create
	m	(Ljava/lang/String;Lcmt$b;)Lcmt;	a	register
	f	Lcmt;	A	SMOKER
	f	Lcmt;	B	BLAST_FURNACE
	f	Lcmt;	C	LECTERN
	f	Lcmt;	D	BELL
	f	Lcmt;	E	JIGSAW
	f	Lcmt;	F	CAMPFIRE
	f	Lcmt;	G	BEEHIVE
	f	Lcmt;	H	SCULK_SENSOR
	f	Lorg/slf4j/Logger;	I	LOGGER
	f	Lcmt$a;	J	factory
	f	Ljava/util/Set;	K	validBlocks
	f	Lcom/mojang/datafixers/types/Type;	L	dataType
	f	Lcmt;	a	FURNACE
	f	Lcmt;	b	CHEST
	f	Lcmt;	c	TRAPPED_CHEST
	f	Lcmt;	d	ENDER_CHEST
	f	Lcmt;	e	JUKEBOX
	f	Lcmt;	f	DISPENSER
	f	Lcmt;	g	DROPPER
	f	Lcmt;	h	SIGN
	f	Lcmt;	i	MOB_SPAWNER
	f	Lcmt;	j	PISTON
	f	Lcmt;	k	BREWING_STAND
	f	Lcmt;	l	ENCHANTING_TABLE
	f	Lcmt;	m	END_PORTAL
	f	Lcmt;	n	BEACON
	f	Lcmt;	o	SKULL
	f	Lcmt;	p	DAYLIGHT_DETECTOR
	f	Lcmt;	q	HOPPER
	f	Lcmt;	r	COMPARATOR
	f	Lcmt;	s	BANNER
	f	Lcmt;	t	STRUCTURE_BLOCK
	f	Lcmt;	u	END_GATEWAY
	f	Lcmt;	v	COMMAND_BLOCK
	f	Lcmt;	w	SHULKER_BOX
	f	Lcmt;	x	BED
	f	Lcmt;	y	CONDUIT
	f	Lcmt;	z	BARREL
c	cmt$a	net/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier
c	cmt$b	net/minecraft/world/level/block/entity/BlockEntityType$Builder
	m	(Lcmt$a;[Lcdq;)Lcmt$b;	a	of
	m	(Lcom/mojang/datafixers/types/Type;)Lcmt;	a	build
	f	Lcmt$a;	a	factory
	f	Ljava/util/Set;	b	validBlocks
c	cmu	net/minecraft/world/level/block/entity/BrewingStandBlockEntity
	m	()V	a	clearContent
	m	(I)Lbuw;	a	getItem
	m	(II)Lbuw;	a	removeItem
	m	(ILboi;)Lbqp;	a	createMenu
	m	(ILbuw;)V	a	setItem
	m	(ILbuw;Lgo;)Z	a	canPlaceItemThroughFace
	m	(Lboj;)Z	a	stillValid
	m	(Lcav;Lgj;Lcov;Lcmu;)V	a	serverTick
	m	(Lcav;Lgj;Lgx;)V	a	doBrew
	m	(Lgo;)[I	a	getSlotsForFace
	m	(Lgx;)Z	a	isBrewable
	m	(Lok;)V	a	load
	m	()I	b	getContainerSize
	m	(I)Lbuw;	b	removeItemNoUpdate
	m	(ILbuw;)Z	b	canPlaceItem
	m	(ILbuw;Lgo;)Z	b	canTakeItemThroughFace
	m	(Lok;)V	b	saveAdditional
	m	()Z	c	isEmpty
	m	()[Z	f	getPotionBits
	m	()Lqk;	g	getDefaultName
	f	I	b	FUEL_USES
	f	I	c	DATA_BREW_TIME
	f	I	d	DATA_FUEL_USES
	f	I	e	NUM_DATA_VALUES
	f	Lbqz;	f	dataAccess
	f	I	g	INGREDIENT_SLOT
	f	I	h	FUEL_SLOT
	f	[I	i	SLOTS_FOR_UP
	f	[I	j	SLOTS_FOR_DOWN
	f	[I	k	SLOTS_FOR_SIDES
	f	Lgx;	l	items
	f	I	m	brewTime
	f	[Z	q	lastPotionCount
	f	Lbus;	r	ingredient
	f	I	s	fuel
c	cmu$1	net/minecraft/world/level/block/entity/BrewingStandBlockEntity$1
	m	()I	a	getCount
	m	(I)I	a	get
	m	(II)V	a	set
	f	Lcmu;	a	this$0
c	cmv	net/minecraft/world/level/block/entity/CampfireBlockEntity
	m	()V	a	clearContent
	m	(Lawa;Lbxf;)Lbuw;	a	lambda$cookTick$0
	m	(Lbuw;)Ljava/util/Optional;	a	getCookableRecipe
	m	(Lbuw;I)Z	a	placeFood
	m	(Lcav;Lgj;Lcov;Lcmv;)V	a	cookTick
	m	(Lok;)V	a	load
	m	()Lok;	aa_	getUpdateTag
	m	(Lcav;Lgj;Lcov;Lcmv;)V	b	cooldownTick
	m	(Lok;)V	b	saveAdditional
	m	()Lgx;	c	getItems
	m	(Lcav;Lgj;Lcov;Lcmv;)V	c	particleTick
	m	()Lrq;	d	getUpdatePacket
	m	()V	f	dowse
	m	()V	g	markUpdated
	m	()Lrc;	h	getUpdatePacket
	f	I	a	BURN_COOL_SPEED
	f	I	b	NUM_SLOTS
	f	Lgx;	c	items
	f	[I	d	cookingProgress
	f	[I	e	cookingTime
c	cmw	net/minecraft/world/level/block/entity/ChestBlockEntity
	m	(F)F	a	getOpenNess
	m	(ILboi;)Lbqp;	a	createMenu
	m	(Lcab;Lgj;)I	a	getOpenCount
	m	(Lcav;Lgj;Lcov;II)V	a	signalOpenCount
	m	(Lcav;Lgj;Lcov;Lahj;)V	a	playSound
	m	(Lcav;Lgj;Lcov;Lcmw;)V	a	lidAnimateTick
	m	(Lcmw;Lcmw;)V	a	swapContents
	m	(Lgx;)V	a	setItems
	m	(Lok;)V	a	load
	m	(II)Z	a_	triggerEvent
	m	()I	b	getContainerSize
	m	(Lok;)V	b	saveAdditional
	m	(Lboj;)V	b_	startOpen
	m	(Lboj;)V	c_	stopOpen
	m	()Lgx;	f	getItems
	m	()Lqk;	g	getDefaultName
	m	()V	i	recheckOpen
	f	I	b	EVENT_SET_OPEN_COUNT
	f	Lgx;	c	items
	f	Lcnb;	f	openersCounter
	f	Lcmx;	i	chestLidController
c	cmw$1	net/minecraft/world/level/block/entity/ChestBlockEntity$1
	m	(Lboj;)Z	a	isOwnContainer
	m	(Lcav;Lgj;Lcov;)V	a	onOpen
	m	(Lcav;Lgj;Lcov;II)V	a	openerCountChanged
	m	(Lcav;Lgj;Lcov;)V	b	onClose
	f	Lcmw;	a	this$0
c	cmx	net/minecraft/world/level/block/entity/ChestLidController
	m	()V	a	tickLid
	m	(F)F	a	getOpenness
	m	(Z)V	a	shouldBeOpen
	f	Z	a	shouldBeOpen
	f	F	b	openness
	f	F	c	oOpenness
c	cmy	net/minecraft/world/level/block/entity/CommandBlockEntity
	m	(Lok;)V	a	load
	m	(Z)V	a	setPowered
	m	(Lok;)V	b	saveAdditional
	m	(Z)V	b	setAutomatic
	m	()Lbzw;	c	getCommandBlock
	m	()Z	d	isPowered
	m	()Z	f	isAutomatic
	m	()V	g	onModeSwitch
	m	()Z	i	wasConditionMet
	m	()Z	j	markConditionMet
	m	()Z	t	onlyOpCanSetNbt
	m	()Lcmy$a;	v	getMode
	m	()Z	w	isConditional
	m	()V	x	scheduleTick
	f	Z	a	powered
	f	Z	b	auto
	f	Z	c	conditionMet
	f	Lbzw;	d	commandBlock
c	cmy$1	net/minecraft/world/level/block/entity/CommandBlockEntity$1
	m	(Ljava/lang/String;)V	a	setCommand
	m	()Ladw;	e	getLevel
	m	()V	f	onUpdated
	m	()Ldpo;	g	getPosition
	m	()Ldm;	i	createCommandSourceStack
	f	Lcmy;	b	this$0
c	cmy$a	net/minecraft/world/level/block/entity/CommandBlockEntity$Mode
	m	()[Lcmy$a;	a	$values
	f	Lcmy$a;	a	SEQUENCE
	f	Lcmy$a;	b	AUTO
	f	Lcmy$a;	c	REDSTONE
	f	[Lcmy$a;	d	$VALUES
c	cmz	net/minecraft/world/level/block/entity/ComparatorBlockEntity
	m	(I)V	a	setOutputSignal
	m	(Lok;)V	a	load
	m	(Lok;)V	b	saveAdditional
	m	()I	c	getOutputSignal
	f	I	a	output
c	cna	net/minecraft/world/level/block/entity/ConduitBlockEntity
	m	(F)F	a	getActiveRotation
	m	(Laxy;)Z	a	lambda$updateDestroyTarget$0
	m	(Lcav;Lgj;Lcna;)V	a	updateClientTarget
	m	(Lcav;Lgj;Lcov;Lcna;)V	a	clientTick
	m	(Lcav;Lgj;Lcov;Ljava/util/List;Lcna;)V	a	updateDestroyTarget
	m	(Lcav;Lgj;Ljava/util/List;)Z	a	updateShape
	m	(Lcav;Lgj;Ljava/util/List;Laxk;I)V	a	animationTick
	m	(Lcav;Lgj;Ljava/util/UUID;)Laxy;	a	findDestroyTarget
	m	(Lcna;Ljava/util/List;)V	a	updateHunting
	m	(Lgj;)Ldpj;	a	getDestroyRangeAABB
	m	(Ljava/util/UUID;Laxy;)Z	a	lambda$findDestroyTarget$1
	m	(Lok;)V	a	load
	m	(Z)V	a	setHunting
	m	()Lok;	aa_	getUpdateTag
	m	(Lcav;Lgj;Lcov;Lcna;)V	b	serverTick
	m	(Lcav;Lgj;Ljava/util/List;)V	b	applyEffects
	m	(Lok;)V	b	saveAdditional
	m	()Lrq;	c	getUpdatePacket
	m	()Z	d	isActive
	m	()Z	f	isHunting
	m	()Lrc;	h	getUpdatePacket
	f	I	a	tickCount
	f	I	b	BLOCK_REFRESH_RATE
	f	I	c	EFFECT_DURATION
	f	F	d	ROTATION_SPEED
	f	I	e	MIN_ACTIVE_SIZE
	f	I	f	MIN_KILL_SIZE
	f	I	g	KILL_RANGE
	f	[Lcdq;	h	VALID_BLOCKS
	f	F	i	activeRotation
	f	Z	j	isActive
	f	Z	k	isHunting
	f	Ljava/util/List;	l	effectBlocks
	f	Laxy;	m	destroyTarget
	f	Ljava/util/UUID;	q	destroyTargetUUID
	f	J	r	nextAmbientSoundActivation
c	cnb	net/minecraft/world/level/block/entity/ContainerOpenersCounter
	m	()I	a	getOpenerCount
	m	(Lboj;)Z	a	isOwnContainer
	m	(Lboj;Lcav;Lgj;Lcov;)V	a	incrementOpeners
	m	(Lcav;Lgj;)I	a	getOpenCount
	m	(Lcav;Lgj;Lcov;)V	a	onOpen
	m	(Lcav;Lgj;Lcov;II)V	a	openerCountChanged
	m	(Lboj;Lcav;Lgj;Lcov;)V	b	decrementOpeners
	m	(Lcav;Lgj;Lcov;)V	b	onClose
	m	(Lcav;Lgj;Lcov;)V	c	recheckOpeners
	m	(Lcav;Lgj;Lcov;)V	d	scheduleRecheck
	f	I	a	CHECK_TICK_DELAY
	f	I	b	openCount
c	cnc	net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity
c	cnd	net/minecraft/world/level/block/entity/DispenserBlockEntity
	m	(ILboi;)Lbqp;	a	createMenu
	m	(Lbuw;)I	a	addItem
	m	(Lgx;)V	a	setItems
	m	(Lok;)V	a	load
	m	()I	b	getContainerSize
	m	(Lok;)V	b	saveAdditional
	m	()Lgx;	f	getItems
	m	()Lqk;	g	getDefaultName
	m	()I	i	getRandomSlot
	f	I	b	CONTAINER_SIZE
	f	Ljava/util/Random;	c	RANDOM
	f	Lgx;	f	items
c	cne	net/minecraft/world/level/block/entity/DropperBlockEntity
	m	()Lqk;	g	getDefaultName
c	cnf	net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity
	m	()Lqk;	X	getName
	m	()Lqk;	Z	getCustomName
	m	(Lcav;Lgj;Lcov;Lcnf;)V	a	bookAnimationTick
	m	(Lok;)V	a	load
	m	(Lqk;)V	a	setCustomName
	m	(Lok;)V	b	saveAdditional
	f	I	a	time
	f	F	b	flip
	f	F	c	oFlip
	f	F	d	flipT
	f	F	e	flipA
	f	F	f	open
	f	F	g	oOpen
	f	F	h	rot
	f	F	i	oRot
	f	F	j	tRot
	f	Ljava/util/Random;	k	RANDOM
	f	Lqk;	l	name
c	cng	net/minecraft/world/level/block/entity/EnderChestBlockEntity
	m	(F)F	a	getOpenNess
	m	(Lboj;)V	a	startOpen
	m	(Lcav;Lgj;Lcov;Lcng;)V	a	lidAnimateTick
	m	(II)Z	a_	triggerEvent
	m	(Lboj;)V	b	stopOpen
	m	()V	c	recheckOpen
	m	(Lboj;)Z	c	stillValid
	f	Lcmx;	a	chestLidController
	f	Lcnb;	b	openersCounter
c	cng$1	net/minecraft/world/level/block/entity/EnderChestBlockEntity$1
	m	(Lboj;)Z	a	isOwnContainer
	m	(Lcav;Lgj;Lcov;)V	a	onOpen
	m	(Lcav;Lgj;Lcov;II)V	a	openerCountChanged
	m	(Lcav;Lgj;Lcov;)V	b	onClose
	f	Lcng;	a	this$0
c	cnh	net/minecraft/world/level/block/entity/FurnaceBlockEntity
	m	(ILboi;)Lbqp;	a	createMenu
	m	()Lqk;	g	getDefaultName
c	cni	net/minecraft/world/level/block/entity/Hopper
	m	()D	A	getLevelZ
	m	()Ldqh;	M_	getSuckShape
	m	()D	y	getLevelX
	m	()D	z	getLevelY
	f	Ldqh;	k_	INSIDE
	f	Ldqh;	t_	ABOVE
	f	Ldqh;	u_	SUCK
c	cnj	net/minecraft/world/level/block/entity/HopperBlockEntity
	m	()D	A	getLevelZ
	m	(II)Lbuw;	a	removeItem
	m	(ILboi;)Lbqp;	a	createMenu
	m	(ILbuw;)V	a	setItem
	m	(Lawa;I)Z	a	lambda$isEmptyContainer$2
	m	(Lawa;Lawa;Lbuw;ILgo;)Lbuw;	a	tryMoveInItem
	m	(Lawa;Lawa;Lbuw;Lgo;)Lbuw;	a	addItem
	m	(Lawa;Lbli;)Z	a	addItem
	m	(Lawa;Lbuw;ILgo;)Z	a	canPlaceItemInContainer
	m	(Lawa;Lgo;)Ljava/util/stream/IntStream;	a	getSlots
	m	(Lbuw;Lbuw;)Z	a	canMergeItems
	m	(Lcav;DDD)Lawa;	a	getContainerAt
	m	(Lcav;Lcni;)Z	a	suckInItems
	m	(Lcav;Lcni;Ldpj;)Ljava/util/stream/Stream;	a	lambda$getItemsAtAndAbove$4
	m	(Lcav;Lcnj;)Z	a	lambda$pushItemsTick$0
	m	(Lcav;Lgj;)Lawa;	a	getContainerAt
	m	(Lcav;Lgj;Lcov;Lawa;)Z	a	ejectItems
	m	(Lcav;Lgj;Lcov;Laxk;Lcnj;)V	a	entityInside
	m	(Lcav;Lgj;Lcov;Lcnj;)V	a	pushItemsTick
	m	(Lcav;Lgj;Lcov;Lcnj;Ljava/util/function/BooleanSupplier;)Z	a	tryMoveItems
	m	(Lcni;Lawa;ILgo;)Z	a	tryTakeInItemFromSlot
	m	(Lcni;Lawa;Lgo;I)Z	a	lambda$suckInItems$3
	m	(Lcnj;Laxk;)Z	a	lambda$entityInside$5
	m	(Lgx;)V	a	setItems
	m	(Lok;)V	a	load
	m	()I	b	getContainerSize
	m	(Lawa;I)Z	b	lambda$isFullContainer$1
	m	(Lawa;Lbuw;ILgo;)Z	b	canTakeItemFromContainer
	m	(Lawa;Lgo;)Z	b	isFullContainer
	m	(Lcav;Lcni;)Ljava/util/List;	b	getItemsAtAndAbove
	m	(Lcav;Lgj;Lcov;)Lawa;	b	getAttachedContainer
	m	(Lok;)V	b	saveAdditional
	m	(I)V	c	setCooldown
	m	(Lawa;Lgo;)Z	c	isEmptyContainer
	m	(Lcav;Lcni;)Lawa;	c	getSourceContainer
	m	()Lgx;	f	getItems
	m	()Lqk;	g	getDefaultName
	m	()Z	i	inventoryFull
	m	()Z	j	isOnCooldown
	m	()Z	v	isOnCustomCooldown
	m	()D	y	getLevelX
	m	()D	z	getLevelY
	f	I	c	MOVE_ITEM_SPEED
	f	I	f	HOPPER_CONTAINER_SIZE
	f	Lgx;	i	items
	f	I	j	cooldownTime
	f	J	k	tickedGameTime
c	cnk	net/minecraft/world/level/block/entity/JigsawBlockEntity
	m	(Ladw;IZ)V	a	generate
	m	(Lcnk$a;)V	a	setJoint
	m	(Ljava/lang/String;)V	a	setFinalState
	m	(Lok;)V	a	load
	m	(Lyt;)V	a	setName
	m	()Lok;	aa_	getUpdateTag
	m	(Lok;)V	b	saveAdditional
	m	(Lyt;)V	b	setTarget
	m	()Lyt;	c	getName
	m	(Lyt;)V	c	setPool
	m	()Lyt;	d	getTarget
	m	()Lyt;	f	getPool
	m	()Ljava/lang/String;	g	getFinalState
	m	()Lrc;	h	getUpdatePacket
	m	()Lcnk$a;	i	getJoint
	m	()Lrq;	j	getUpdatePacket
	m	()Lcnk$a;	v	lambda$load$0
	f	Ljava/lang/String;	a	TARGET
	f	Ljava/lang/String;	b	POOL
	f	Ljava/lang/String;	c	JOINT
	f	Ljava/lang/String;	d	NAME
	f	Ljava/lang/String;	e	FINAL_STATE
	f	Lyt;	f	name
	f	Lyt;	g	target
	f	Lyt;	h	pool
	f	Lcnk$a;	i	joint
	f	Ljava/lang/String;	j	finalState
c	cnk$a	net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType
	m	()Lqk;	a	getTranslatedName
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byName
	m	(Ljava/lang/String;Lcnk$a;)Z	a	lambda$byName$0
	m	()[Lcnk$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcnk$a;	a	ROLLABLE
	f	Lcnk$a;	b	ALIGNED
	f	Ljava/lang/String;	c	name
	f	[Lcnk$a;	d	$VALUES
c	cnl	net/minecraft/world/level/block/entity/JukeboxBlockEntity
	m	()V	a	clearContent
	m	(Lbuw;)V	a	setRecord
	m	(Lok;)V	a	load
	m	(Lok;)V	b	saveAdditional
	m	()Lbuw;	c	getRecord
	f	Lbuw;	a	record
c	cnm	net/minecraft/world/level/block/entity/LecternBlockEntity
	m	()Lqk;	C_	getDisplayName
	m	()V	a	clearContent
	m	(I)V	a	setPage
	m	(Lboj;)Ldm;	a	createCommandSourceStack
	m	(Lbuw;)V	a	setBook
	m	(Lbuw;Lboj;)V	a	setBook
	m	(Lok;)V	a	load
	m	(Lbuw;Lboj;)Lbuw;	b	resolveBook
	m	(Lok;)V	b	saveAdditional
	m	()Lbuw;	c	getBook
	m	()Z	f	hasBook
	m	()I	g	getPage
	m	()I	i	getRedstoneSignal
	m	()V	j	onBookItemRemove
	m	()Z	t	onlyOpCanSetNbt
	f	I	a	DATA_PAGE
	f	I	b	NUM_DATA
	f	I	c	SLOT_BOOK
	f	I	d	NUM_SLOTS
	f	Lawa;	e	bookAccess
	f	Lbqz;	f	dataAccess
	f	Lbuw;	g	book
	f	I	h	page
	f	I	i	pageCount
c	cnm$1	net/minecraft/world/level/block/entity/LecternBlockEntity$1
	m	()I	N_	getMaxStackSize
	m	()V	a	clearContent
	m	(I)Lbuw;	a	getItem
	m	(II)Lbuw;	a	removeItem
	m	(ILbuw;)V	a	setItem
	m	(Lboj;)Z	a	stillValid
	m	()I	b	getContainerSize
	m	(I)Lbuw;	b	removeItemNoUpdate
	m	(ILbuw;)Z	b	canPlaceItem
	m	()Z	c	isEmpty
	m	()V	e	setChanged
	f	Lcnm;	b	this$0
c	cnm$2	net/minecraft/world/level/block/entity/LecternBlockEntity$2
	m	()I	a	getCount
	m	(I)I	a	get
	m	(II)V	a	set
	f	Lcnm;	a	this$0
c	cnn	net/minecraft/world/level/block/entity/LidBlockEntity
	m	(F)F	a	getOpenNess
c	cno	net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity
	m	()V	a	clearContent
	m	(I)Lbuw;	a	getItem
	m	(II)Lbuw;	a	removeItem
	m	(ILbuw;)V	a	setItem
	m	(Lboj;)Z	a	stillValid
	m	(Lcab;Ljava/util/Random;Lgj;Lyt;)V	a	setLootTable
	m	(Lgx;)V	a	setItems
	m	(Lyt;J)V	a	setLootTable
	m	(I)Lbuw;	b	removeItemNoUpdate
	m	()Z	c	isEmpty
	m	(Lboj;)Z	d	canOpen
	m	(Lok;)Z	d	tryLoadLootTable
	m	(Lboj;)V	e	unpackLootTable
	m	(Lok;)Z	e	trySaveLootTable
	m	()Lgx;	f	getItems
	f	Ljava/lang/String;	d	LOOT_TABLE_TAG
	f	Ljava/lang/String;	e	LOOT_TABLE_SEED_TAG
	f	Lyt;	g	lootTable
	f	J	h	lootTableSeed
c	cnp	net/minecraft/world/level/block/entity/SculkSensorBlockEntity
	m	(Lcav;Lcta;Lcsy;I)V	a	onSignalReceive
	m	(Lcav;Lcta;Lgj;Lcsy;Laxk;)Z	a	shouldListen
	m	(Lok;)V	a	load
	m	(II)I	b	getRedstoneStrengthForDistance
	m	(Lok;)V	b	saveAdditional
	m	()Lctf;	c	getListener
	m	()I	d	getLastVibrationFrequency
	f	Lctf;	a	listener
	f	I	b	lastVibrationFrequency
c	cnq	net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity
	m	(F)F	a	getProgress
	m	(ILboi;)Lbqp;	a	createMenu
	m	(ILbuw;Lgo;)Z	a	canPlaceItemThroughFace
	m	(Lcav;Lgj;Lcov;Lcnq;)V	a	tick
	m	(Lcov;)Ldpj;	a	getBoundingBox
	m	(Lgo;)[I	a	getSlotsForFace
	m	(Lgx;)V	a	setItems
	m	(Lok;)V	a	load
	m	(II)Z	a_	triggerEvent
	m	()I	b	getContainerSize
	m	(ILbuw;Lgo;)Z	b	canTakeItemThroughFace
	m	(Lcav;Lgj;Lcov;)V	b	updateAnimation
	m	(Lok;)V	b	saveAdditional
	m	(Lboj;)V	b_	startOpen
	m	(Lcav;Lgj;Lcov;)V	c	moveCollidedEntities
	m	(Lboj;)V	c_	stopOpen
	m	(Lcav;Lgj;Lcov;)V	d	doNeighborUpdates
	m	()Lgx;	f	getItems
	m	(Lok;)V	f	loadFromTag
	m	()Lqk;	g	getDefaultName
	m	()Lcnq$a;	i	getAnimationStatus
	m	()Lbts;	j	getColor
	m	()Z	v	isClosed
	f	I	b	COLUMNS
	f	I	c	ROWS
	f	I	f	CONTAINER_SIZE
	f	I	i	EVENT_SET_OPEN_COUNT
	f	I	j	OPENING_TICK_LENGTH
	f	F	k	MAX_LID_HEIGHT
	f	F	l	MAX_LID_ROTATION
	f	Ljava/lang/String;	m	ITEMS_TAG
	f	[I	q	SLOTS
	f	Lgx;	r	itemStacks
	f	I	s	openCount
	f	Lcnq$a;	t	animationStatus
	f	F	u	progress
	f	F	v	progressOld
	f	Lbts;	w	color
c	cnq$1	net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$entity$ShulkerBoxBlockEntity$AnimationStatus
c	cnq$a	net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus
	m	()[Lcnq$a;	a	$values
	f	Lcnq$a;	a	CLOSED
	f	Lcnq$a;	b	OPENING
	f	Lcnq$a;	c	OPENED
	f	Lcnq$a;	d	CLOSING
	f	[Lcnq$a;	e	$VALUES
c	cnr	net/minecraft/world/level/block/entity/SignBlockEntity
	m	(ILqk;)V	a	setMessage
	m	(ILqk;Lqk;)V	a	setMessage
	m	(IZ)Lqk;	a	getMessage
	m	(Ladx;)Z	a	executeClickCommands
	m	(Lbts;)Z	a	setColor
	m	(Ljava/lang/String;)Lqk;	a	loadLine
	m	(Ljava/util/UUID;)V	a	setAllowedPlayerEditor
	m	(Lok;)V	a	load
	m	(Z)V	a	setEditable
	m	(ZLjava/util/function/Function;)[Laiz;	a	getRenderMessages
	m	()Lok;	aa_	getUpdateTag
	m	(Ladx;)Ldm;	b	createCommandSourceStack
	m	(Ljava/lang/String;)Lqk;	b	deserializeTextSafe
	m	(Lok;)V	b	saveAdditional
	m	(Z)Z	b	setHasGlowingText
	m	()Lrq;	c	getUpdatePacket
	m	(Z)[Lqk;	c	getMessages
	m	()Z	d	isEditable
	m	()Ljava/util/UUID;	f	getPlayerWhoMayEdit
	m	()Lbts;	g	getColor
	m	()Lrc;	h	getUpdatePacket
	m	()Z	i	hasGlowingText
	m	()V	j	markUpdated
	m	()Z	t	onlyOpCanSetNbt
	f	I	a	LINES
	f	[Ljava/lang/String;	b	RAW_TEXT_FIELD_NAMES
	f	[Ljava/lang/String;	c	FILTERED_TEXT_FIELD_NAMES
	f	[Lqk;	d	messages
	f	[Lqk;	e	filteredMessages
	f	Z	f	isEditable
	f	Ljava/util/UUID;	g	playerWhoMayEdit
	f	[Laiz;	h	renderMessages
	f	Z	i	renderMessagedFiltered
	f	Lbts;	j	color
	f	Z	k	hasGlowingText
c	cns	net/minecraft/world/level/block/entity/SkullBlockEntity
	m	(F)F	a	getMouthAnimation
	m	(Lagj;Lcom/mojang/authlib/minecraft/MinecraftSessionService;Ljava/util/concurrent/Executor;)V	a	setup
	m	(Lcav;Lgj;Lcov;Lcns;)V	a	dragonHeadAnimation
	m	(Lcom/mojang/authlib/GameProfile;)V	a	setOwner
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/function/Consumer;)V	a	updateGameprofile
	m	(Ljava/util/Optional;Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;)V	a	lambda$updateGameprofile$5
	m	(Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;)V	a	lambda$updateGameprofile$4
	m	(Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;Ljava/util/Optional;)V	a	lambda$updateGameprofile$6
	m	(Lok;)V	a	load
	m	()Lok;	aa_	getUpdateTag
	m	(Lcom/mojang/authlib/GameProfile;)V	b	lambda$updateOwnerProfile$0
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/function/Consumer;)V	b	lambda$updateGameprofile$1
	m	(Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;)V	b	lambda$updateGameprofile$3
	m	(Lok;)V	b	saveAdditional
	m	()V	c	clear
	m	(Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;)V	c	lambda$updateGameprofile$2
	m	()Lcom/mojang/authlib/GameProfile;	d	getOwnerProfile
	m	()Lrq;	f	getUpdatePacket
	m	()V	g	updateOwnerProfile
	m	()Lrc;	h	getUpdatePacket
	f	Ljava/lang/String;	a	TAG_SKULL_OWNER
	f	Lagj;	b	profileCache
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	c	sessionService
	f	Ljava/util/concurrent/Executor;	d	mainThreadExecutor
	f	Lcom/mojang/authlib/GameProfile;	e	owner
	f	I	f	mouthTickCount
	f	Z	g	isMovingMouth
c	cnt	net/minecraft/world/level/block/entity/SmokerBlockEntity
	m	(ILboi;)Lbqp;	a	createMenu
	m	(Lbuw;)I	a	getBurnDuration
	m	()Lqk;	g	getDefaultName
c	cnu	net/minecraft/world/level/block/entity/SpawnerBlockEntity
	m	(Lcav;Lgj;Lcov;Lcnu;)V	a	clientTick
	m	(Lok;)V	a	load
	m	(II)Z	a_	triggerEvent
	m	()Lok;	aa_	getUpdateTag
	m	(Lcav;Lgj;Lcov;Lcnu;)V	b	serverTick
	m	(Lok;)V	b	saveAdditional
	m	()Lrq;	c	getUpdatePacket
	m	()Lbzx;	d	getSpawner
	m	()Lrc;	h	getUpdatePacket
	m	()Z	t	onlyOpCanSetNbt
	f	Lbzx;	a	spawner
c	cnu$1	net/minecraft/world/level/block/entity/SpawnerBlockEntity$1
	m	(Lcav;Lgj;I)V	a	broadcastEvent
	m	(Lcav;Lgj;Lcbl;)V	a	setNextSpawnData
	f	Lcnu;	a	this$0
c	cnv	net/minecraft/world/level/block/entity/StructureBlockEntity
	m	()F	A	getIntegrity
	m	()J	B	getSeed
	m	()Z	C	detectSize
	m	()Z	D	saveStructure
	m	()V	E	unloadStructure
	m	()Z	F	isStructureLoadable
	m	()Z	G	isPowered
	m	()Z	H	getShowAir
	m	()Z	I	getShowBoundingBox
	m	()V	J	updateBlockState
	m	(F)V	a	setIntegrity
	m	(J)V	a	setSeed
	m	(Ladw;)Z	a	loadStructure
	m	(Ladw;Lgj;)V	a	lambda$loadStructure$5
	m	(Ladw;Z)Z	a	loadStructure
	m	(Ladw;ZLdhw;)Z	a	loadStructure
	m	(Laxy;)V	a	createdBy
	m	(Lboj;)Z	a	usedBy
	m	(Lchz;)V	a	setMirror
	m	(Lcjm;)V	a	setRotation
	m	(Lcmr;)Lcnv;	a	lambda$getRelatedCorners$3
	m	(Lcnv;)Z	a	lambda$getRelatedCorners$4
	m	(Lcqe;)V	a	setMode
	m	(Lgj;)V	a	setStructurePos
	m	(Lgj;Ldeo;)Z	a	lambda$detectSize$0
	m	(Lgj;Lgj;)Ljava/util/stream/Stream;	a	getRelatedCorners
	m	(Lgj;Ljava/util/stream/Stream;)Ljava/util/Optional;	a	calculateEnclosingBoundingBox
	m	(Lhh;)V	a	setStructureSize
	m	(Ljava/lang/String;)V	a	setStructureName
	m	(Lok;)V	a	load
	m	(Lyt;)V	a	setStructureName
	m	(Z)V	a	setIgnoreEntities
	m	()Lok;	aa_	getUpdateTag
	m	(J)Ljava/util/Random;	b	createRandom
	m	(Lcmr;)Z	b	lambda$getRelatedCorners$2
	m	(Lgj;)Z	b	lambda$getRelatedCorners$1
	m	(Ljava/lang/String;)V	b	setMetaData
	m	(Lok;)V	b	saveAdditional
	m	(Z)Z	b	saveStructure
	m	()Lrq;	c	getUpdatePacket
	m	(Z)V	c	setPowered
	m	()Ljava/lang/String;	d	getStructureName
	m	(Z)V	d	setShowAir
	m	(Z)V	e	setShowBoundingBox
	m	()Ljava/lang/String;	f	getStructurePath
	m	()Z	g	hasStructureName
	m	()Lrc;	h	getUpdatePacket
	m	()Lgj;	i	getStructurePos
	m	()Lhh;	j	getStructureSize
	m	()Lchz;	v	getMirror
	m	()Lcjm;	w	getRotation
	m	()Ljava/lang/String;	x	getMetaData
	m	()Lcqe;	y	getMode
	m	()Z	z	isIgnoreEntities
	f	I	a	MAX_OFFSET_PER_AXIS
	f	I	b	MAX_SIZE_PER_AXIS
	f	Ljava/lang/String;	c	AUTHOR_TAG
	f	I	d	SCAN_CORNER_BLOCKS_RANGE
	f	Lyt;	e	structureName
	f	Ljava/lang/String;	f	author
	f	Ljava/lang/String;	g	metaData
	f	Lgj;	h	structurePos
	f	Lhh;	i	structureSize
	f	Lchz;	j	mirror
	f	Lcjm;	k	rotation
	f	Lcqe;	l	mode
	f	Z	m	ignoreEntities
	f	Z	q	powered
	f	Z	r	showAir
	f	Z	s	showBoundingBox
	f	F	t	integrity
	f	J	u	seed
c	cnv$a	net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType
	m	()[Lcnv$a;	a	$values
	f	Lcnv$a;	a	UPDATE_DATA
	f	Lcnv$a;	b	SAVE_AREA
	f	Lcnv$a;	c	LOAD_AREA
	f	Lcnv$a;	d	SCAN_AREA
	f	[Lcnv$a;	e	$VALUES
c	cnw	net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity
	m	(F)F	a	getSpawnPercent
	m	(Ladw;Ldpo;)Z	a	isChunkEmpty
	m	(Ladw;Lgj;)Lgj;	a	findOrCreateValidTeleportPos
	m	(Ladw;Lgj;Lczy;)V	a	spawnGatewayPortal
	m	(Laxk;)Z	a	canEntityTeleport
	m	(Lcab;Lgj;IZ)Lgj;	a	findTallestBlock
	m	(Lcav;Ldpo;)Lcra;	a	getChunk
	m	(Lcav;Lgj;)Lgj;	a	findExitPosition
	m	(Lcav;Lgj;Lcov;Laxk;Lcnw;)V	a	teleportEntity
	m	(Lcav;Lgj;Lcov;Lcnw;)V	a	beamAnimationTick
	m	(Lcra;)Lgj;	a	findValidSpawnInChunk
	m	(Lgj;Z)V	a	setExitPosition
	m	(Lgo;)Z	a	shouldRenderFace
	m	(Lok;)V	a	load
	m	(II)Z	a_	triggerEvent
	m	()Lok;	aa_	getUpdateTag
	m	(F)F	b	getCooldownPercent
	m	(Ladw;Lgj;)Ldpo;	b	findExitPortalXZPosTentative
	m	(Lcav;Lgj;Lcov;Lcnw;)V	b	teleportTick
	m	(Lok;)V	b	saveAdditional
	m	()Z	c	isSpawning
	m	(Lcav;Lgj;Lcov;Lcnw;)V	c	triggerCooldown
	m	()Z	d	isCoolingDown
	m	()Lrq;	f	getUpdatePacket
	m	()I	g	getParticleAmount
	m	()Lrc;	h	getUpdatePacket
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	SPAWN_TIME
	f	I	c	COOLDOWN_TIME
	f	I	d	ATTENTION_INTERVAL
	f	I	e	EVENT_COOLDOWN
	f	I	f	GATEWAY_HEIGHT_ABOVE_SURFACE
	f	J	g	age
	f	I	h	teleportCooldown
	f	Lgj;	i	exitPortal
	f	Z	j	exactTeleport
c	cnx	net/minecraft/world/level/block/entity/TheEndPortalBlockEntity
	m	(Lgo;)Z	a	shouldRenderFace
c	cny	net/minecraft/world/level/block/entity/TickingBlockEntity
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Lgj;	c	getPos
	m	()Ljava/lang/String;	d	getType
c	cnz	net/minecraft/world/level/block/entity/TrappedChestBlockEntity
	m	(Lcav;Lgj;Lcov;II)V	a	signalOpenCount
c	coa	net/minecraft/world/level/block/entity/package-info
c	cob	net/minecraft/world/level/block/grower/AbstractMegaTreeGrower
	m	(Ladw;Lcqr;Lgj;Lcov;Ljava/util/Random;)Z	a	growTree
	m	(Ladw;Lcqr;Lgj;Lcov;Ljava/util/Random;II)Z	a	placeMega
	m	(Lcov;Lcab;Lgj;II)Z	a	isTwoByTwoSapling
	m	(Ljava/util/Random;)Lgs;	a	getConfiguredMegaFeature
c	coc	net/minecraft/world/level/block/grower/AbstractTreeGrower
	m	(Ladw;Lcqr;Lgj;Lcov;Ljava/util/Random;)Z	a	growTree
	m	(Lcaw;Lgj;)Z	a	hasFlowers
	m	(Ljava/util/Random;Z)Lgs;	a	getConfiguredFeature
c	cod	net/minecraft/world/level/block/grower/AcaciaTreeGrower
	m	(Ljava/util/Random;Z)Lgs;	a	getConfiguredFeature
c	coe	net/minecraft/world/level/block/grower/AzaleaTreeGrower
	m	(Ljava/util/Random;Z)Lgs;	a	getConfiguredFeature
c	cof	net/minecraft/world/level/block/grower/BirchTreeGrower
	m	(Ljava/util/Random;Z)Lgs;	a	getConfiguredFeature
c	cog	net/minecraft/world/level/block/grower/DarkOakTreeGrower
	m	(Ljava/util/Random;)Lgs;	a	getConfiguredMegaFeature
	m	(Ljava/util/Random;Z)Lgs;	a	getConfiguredFeature
c	coh	net/minecraft/world/level/block/grower/JungleTreeGrower
	m	(Ljava/util/Random;)Lgs;	a	getConfiguredMegaFeature
	m	(Ljava/util/Random;Z)Lgs;	a	getConfiguredFeature
c	coi	net/minecraft/world/level/block/grower/OakTreeGrower
	m	(Ljava/util/Random;Z)Lgs;	a	getConfiguredFeature
c	coj	net/minecraft/world/level/block/grower/SpruceTreeGrower
	m	(Ljava/util/Random;)Lgs;	a	getConfiguredMegaFeature
	m	(Ljava/util/Random;Z)Lgs;	a	getConfiguredFeature
c	cok	net/minecraft/world/level/block/grower/package-info
c	col	net/minecraft/world/level/block/package-info
c	com	net/minecraft/world/level/block/piston/MovingPistonBlock
	m	(Lcab;Lgj;)Lcor;	a	getBlockEntity
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcav;Lcov;Lcmt;)Lcms;	a	getTicker
	m	(Lcaw;Lgj;Lcov;)V	a	destroy
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Ldlc$a;)Ljava/util/List;	a	getDrops
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgj;Lcov;)Lcmr;	a	newBlockEntity
	m	(Lgj;Lcov;Lcov;Lgo;ZZ)Lcmr;	a	newMovingBlockEntity
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	f	Lcpp;	a	FACING
	f	Lcpt;	b	TYPE
c	coo	net/minecraft/world/level/block/piston/PistonBaseBlock
	m	(Lbww;)Lcov;	a	getStateForPlacement
	m	(Lcav;Lgj;Lcov;)V	a	checkIfExtend
	m	(Lcav;Lgj;Lcov;Laxy;Lbuw;)V	a	setPlacedBy
	m	(Lcav;Lgj;Lgo;)Z	a	getNeighborSignal
	m	(Lcav;Lgj;Lgo;Z)Z	a	moveBlocks
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;II)Z	a	triggerEvent
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lcav;Lgj;Lgo;ZLgo;)Z	a	isPushable
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	(Lcov;)Z	g_	useShapeForLightOcclusion
	f	Lcpm;	b	EXTENDED
	f	I	c	TRIGGER_EXTEND
	f	I	d	TRIGGER_CONTRACT
	f	I	e	TRIGGER_DROP
	f	F	f	PLATFORM_THICKNESS
	f	Ldqh;	g	EAST_AABB
	f	Ldqh;	h	WEST_AABB
	f	Ldqh;	i	SOUTH_AABB
	f	Ldqh;	j	NORTH_AABB
	f	Ldqh;	k	UP_AABB
	f	Ldqh;	l	DOWN_AABB
	f	Z	m	isSticky
c	coo$1	net/minecraft/world/level/block/piston/PistonBaseBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$material$PushReaction
c	cop	net/minecraft/world/level/block/piston/PistonHeadBlock
	m	(Lcab;Lgj;Lcov;)Lbuw;	a	getCloneItemStack
	m	(Lcav;Lgj;Lcov;Lboj;)V	a	playerWillDestroy
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lcov;)Z	a	isFittingBase
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcow$a;)V	a	createBlockStateDefinition
	m	(Lgo;Z)Ldqh;	a	calculateShape
	m	(Z)[Ldqh;	a	makeShapes
	m	(ZLgo;)Ldqh;	a	lambda$makeShapes$0
	m	(I)[Ldqh;	b	lambda$makeShapes$1
	m	(Lcov;)Z	g_	useShapeForLightOcclusion
	f	Ldqh;	E	DOWN_ARM_AABB
	f	Ldqh;	F	SOUTH_ARM_AABB
	f	Ldqh;	G	NORTH_ARM_AABB
	f	Ldqh;	H	EAST_ARM_AABB
	f	Ldqh;	I	WEST_ARM_AABB
	f	Ldqh;	J	SHORT_UP_ARM_AABB
	f	Ldqh;	K	SHORT_DOWN_ARM_AABB
	f	Ldqh;	L	SHORT_SOUTH_ARM_AABB
	f	Ldqh;	M	SHORT_NORTH_ARM_AABB
	f	Ldqh;	N	SHORT_EAST_ARM_AABB
	f	Ldqh;	O	SHORT_WEST_ARM_AABB
	f	[Ldqh;	P	SHAPES_SHORT
	f	[Ldqh;	Q	SHAPES_LONG
	f	Lcpt;	b	TYPE
	f	Lcpm;	c	SHORT
	f	F	d	PLATFORM
	f	Ldqh;	e	EAST_AABB
	f	Ldqh;	f	WEST_AABB
	f	Ldqh;	g	SOUTH_AABB
	f	Ldqh;	h	NORTH_AABB
	f	Ldqh;	i	UP_AABB
	f	Ldqh;	j	DOWN_AABB
	f	F	k	AABB_OFFSET
	f	F	l	EDGE_MIN
	f	F	m	EDGE_MAX
	f	Ldqh;	n	UP_ARM_AABB
c	cop$1	net/minecraft/world/level/block/piston/PistonHeadBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	coq	net/minecraft/world/level/block/piston/PistonMath
	m	(Ldpj;Lgo;D)Ldpj;	a	getMovementArea
c	coq$1	net/minecraft/world/level/block/piston/PistonMath$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cor	net/minecraft/world/level/block/piston/PistonMovingBlockEntity
	m	(F)F	a	getProgress
	m	(Lcab;Lgj;)Ldqh;	a	getCollisionShape
	m	(Lcav;Lgj;FLcor;)V	a	moveCollidedEntities
	m	(Lcav;Lgj;Lcov;Lcor;)V	a	tick
	m	(Ldpj;Laxk;)Z	a	matchesStickyCritera
	m	(Ldpj;Lgo;Ldpj;)D	a	getMovement
	m	(Lgj;Laxk;Lgo;D)V	a	fixEntityWithinPistonBase
	m	(Lgj;Ldpj;Lcor;)Ldpj;	a	moveByPositionAndProgress
	m	(Lgo;Laxk;DLgo;)V	a	moveEntityByPiston
	m	(Lok;)V	a	load
	m	()Lok;	aa_	getUpdateTag
	m	(F)F	b	getXOff
	m	(Lcav;Lgj;FLcor;)V	b	moveStuckEntities
	m	(Ldpj;Laxk;)Z	b	lambda$moveStuckEntities$1
	m	(Lok;)V	b	saveAdditional
	m	()Z	c	isExtending
	m	(F)F	c	getYOff
	m	()Lgo;	d	getDirection
	m	(F)F	d	getZOff
	m	(F)F	e	getExtendedProgress
	m	()Z	f	isSourcePiston
	m	()Lgo;	g	getMovementDirection
	m	()Lcov;	i	getMovedState
	m	()V	j	finalTick
	m	()J	v	getLastTicked
	m	()Lcov;	w	getCollisionRelatedBlockState
	m	()Z	x	isStickyForEntities
	m	()Lgo;	y	lambda$static$0
	f	D	a	TICK_MOVEMENT
	f	I	b	TICKS_TO_EXTEND
	f	D	c	PUSH_OFFSET
	f	Lcov;	d	movedState
	f	Lgo;	e	direction
	f	Z	f	extending
	f	Z	g	isSourcePiston
	f	Ljava/lang/ThreadLocal;	h	NOCLIP
	f	F	i	progress
	f	F	j	progressO
	f	J	k	lastTicked
	f	I	l	deathTicks
c	cor$1	net/minecraft/world/level/block/piston/PistonMovingBlockEntity$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$core$Direction
c	cos	net/minecraft/world/level/block/piston/PistonStructureResolver
	m	()Z	a	resolve
	m	(II)V	a	reorderListAtCollision
	m	(Lcov;)Z	a	isSticky
	m	(Lcov;Lcov;)Z	a	canStickToEachOther
	m	(Lgj;)Z	a	addBranchingBlocks
	m	(Lgj;Lgo;)Z	a	addBlockLine
	m	()Lgo;	b	getPushDirection
	m	()Ljava/util/List;	c	getToPush
	m	()Ljava/util/List;	d	getToDestroy
	f	I	a	MAX_PUSH_DEPTH
	f	Lcav;	b	level
	f	Lgj;	c	pistonPos
	f	Z	d	extending
	f	Lgj;	e	startPos
	f	Lgo;	f	pushDirection
	f	Ljava/util/List;	g	toPush
	f	Ljava/util/List;	h	toDestroy
	f	Lgo;	i	pistonDirection
c	cot	net/minecraft/world/level/block/piston/package-info
c	cou	net/minecraft/world/level/block/state/BlockBehaviour
	m	()Lcou$b;	U_	getOffsetType
	m	()F	W_	getMaxHorizontalOffset
	m	()F	Z_	getMaxVerticalOffset
	m	(Lcav;Lcov;Ldpk;Lboz;)V	a	onProjectileHit
	m	(Lcov;Ladw;Lgj;Lbuw;)V	a	spawnAfterBreak
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Lcov;Lboj;Lcab;Lgj;)F	a	getDestroyProgress
	m	(Lcov;Lbww;)Z	a	canBeReplaced
	m	(Lcov;Lcab;Lgj;)Ldqh;	a	getInteractionShape
	m	(Lcov;Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcov;Lcab;Lgj;Lgo;)I	a	getSignal
	m	(Lcov;Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcov;Lcav;Lgj;II)Z	a	triggerEvent
	m	(Lcov;Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcov;Lcav;Lgj;Lboj;)V	a	attack
	m	(Lcov;Lcav;Lgj;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcov;Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	a	onRemove
	m	(Lcov;Lcaw;Lgj;II)V	a	updateIndirectNeighbourShapes
	m	(Lcov;Lcay;Lgj;)Z	a	canSurvive
	m	(Lcov;Lchz;)Lcov;	a	mirror
	m	(Lcov;Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lcov;Lgo;)Z	a	skipRendering
	m	(Lcov;Ldiw;)Z	a	canBeReplaced
	m	(Lcov;Ldlc$a;)Ljava/util/List;	a	getDrops
	m	(Lcov;Lgj;)J	a	getSeed
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lcov;Lcab;Lgj;)Z	a_	isCollisionShapeFullBlock
	m	(Lcov;Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcov;Lcab;Lgj;)F	b	getShadeBrightness
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	b	getVisualShape
	m	(Lcov;Lcab;Lgj;Lgo;)I	b	getDirectSignal
	m	(Lcov;Lcav;Lgj;)Lawk;	b	getMenuProvider
	m	(Lcov;Lcav;Lgj;Lcov;Z)V	b	onPlace
	m	(Lcov;)Lcjf;	b_	getRenderShape
	m	(Lcov;Lcab;Lgj;)Ldqh;	b_	getOcclusionShape
	m	(Lcov;Lcab;Lgj;Ldpt;)Ldqh;	c	getCollisionShape
	m	(Lcov;)Ldix;	c_	getFluidState
	m	(Lcov;)Ldjd;	d	getPistonPushReaction
	m	(Lcov;)Z	d_	hasAnalogOutputSignal
	m	(Lcov;Lcab;Lgj;)Ldqh;	f	getBlockSupportShape
	m	(Lcov;)Z	f_	isSignalSource
	m	(Lcov;Lcab;Lgj;)I	g	getLightBlock
	m	(Lcov;)Z	g_	useShapeForLightOcclusion
	m	()Lbus;	l	asItem
	m	()Lcdq;	p	asBlock
	m	()Lyt;	s	getLootTable
	m	()Ldjc;	t	defaultMaterialColor
	m	()F	u	defaultDestroyTime
	f	[Lgo;	aE	UPDATE_SHAPE_ORDER
	f	Ldjb;	aF	material
	f	Z	aG	hasCollision
	f	F	aH	explosionResistance
	f	Z	aI	isRandomlyTicking
	f	Lckg;	aJ	soundType
	f	F	aK	friction
	f	F	aL	speedFactor
	f	F	aM	jumpFactor
	f	Z	aN	dynamicShape
	f	Lcou$c;	aO	properties
	f	Lyt;	aP	drops
c	cou$1	net/minecraft/world/level/block/state/BlockBehaviour$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	cou$a	net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase
	m	()V	a	initCache
	m	(Ladw;Lgj;Lbuw;)V	a	spawnAfterBreak
	m	(Ladw;Lgj;Ljava/util/Random;)V	a	tick
	m	(Laif;)Z	a	is
	m	(Laif;Ljava/util/function/Predicate;)Z	a	is
	m	(Lboj;Lcab;Lgj;)F	a	getDestroyProgress
	m	(Lbww;)Z	a	canBeReplaced
	m	(Lcab;Lgj;)Z	a	propagatesSkylightDown
	m	(Lcab;Lgj;Laxk;)Z	a	entityCanStandOn
	m	(Lcab;Lgj;Laxk;Lgo;)Z	a	entityCanStandOnFace
	m	(Lcab;Lgj;Laxo;)Z	a	isValidSpawn
	m	(Lcab;Lgj;Ldjo;)Z	a	isPathfindable
	m	(Lcab;Lgj;Ldpt;)Ldqh;	a	getShape
	m	(Lcab;Lgj;Lgo;)Ldqh;	a	getFaceOcclusionShape
	m	(Lcab;Lgj;Lgo;Lckw;)Z	a	isFaceSturdy
	m	(Lcav;Lboj;Lawg;Ldpk;)Lawh;	a	use
	m	(Lcav;Lcmt;)Lcms;	a	getTicker
	m	(Lcav;Lcov;Ldpk;Lboz;)V	a	onProjectileHit
	m	(Lcav;Lgj;)I	a	getAnalogOutputSignal
	m	(Lcav;Lgj;II)Z	a	triggerEvent
	m	(Lcav;Lgj;Laxk;)V	a	entityInside
	m	(Lcav;Lgj;Lboj;)V	a	attack
	m	(Lcav;Lgj;Lcdq;Lgj;Z)V	a	neighborChanged
	m	(Lcav;Lgj;Lcov;Z)V	a	onPlace
	m	(Lcaw;Lgj;I)V	a	updateNeighbourShapes
	m	(Lcaw;Lgj;II)V	a	updateNeighbourShapes
	m	(Lcay;Lgj;)Z	a	canSurvive
	m	(Lcdq;)Z	a	is
	m	(Lchz;)Lcov;	a	mirror
	m	(Lcjm;)Lcov;	a	rotate
	m	(Lcov;Lgo;)Z	a	skipRendering
	m	(Ldiw;)Z	a	canBeReplaced
	m	(Ldlc$a;)Ljava/util/List;	a	getDrops
	m	(Lgj;)J	a	getSeed
	m	(Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	m	(Lgt;)Z	a	is
	m	()Lcdq;	b	getBlock
	m	(Ladw;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Lcab;Lgj;)I	b	getLightBlock
	m	(Lcab;Lgj;Ldpt;)Ldqh;	b	getCollisionShape
	m	(Lcab;Lgj;Lgo;)I	b	getSignal
	m	(Lcav;Lgj;)Lawk;	b	getMenuProvider
	m	(Lcav;Lgj;Lcov;Z)V	b	onRemove
	m	(Lcaw;Lgj;I)V	b	updateIndirectNeighbourShapes
	m	(Lcaw;Lgj;II)V	b	updateIndirectNeighbourShapes
	m	()Ldjb;	c	getMaterial
	m	(Lcab;Lgj;)Ldqh;	c	getOcclusionShape
	m	(Lcab;Lgj;Ldpt;)Ldqh;	c	getVisualShape
	m	(Lcab;Lgj;Lgo;)I	c	getDirectSignal
	m	()Z	d	hasLargeCollisionShape
	m	(Lcab;Lgj;)Ldjc;	d	getMapColor
	m	(Lcab;Lgj;Lgo;)Z	d	isFaceSturdy
	m	()Z	e	useShapeForLightOcclusion
	m	(Lcab;Lgj;)Z	e	emissiveRendering
	m	()I	f	getLightEmission
	m	(Lcab;Lgj;)F	f	getShadeBrightness
	m	()Z	g	isAir
	m	(Lcab;Lgj;)Z	g	isRedstoneConductor
	m	()Lcjf;	h	getRenderShape
	m	(Lcab;Lgj;)F	h	getDestroySpeed
	m	()Z	i	isSignalSource
	m	(Lcab;Lgj;)Z	i	isSolidRender
	m	()Z	j	hasAnalogOutputSignal
	m	(Lcab;Lgj;)Ldqh;	j	getShape
	m	()Ldjd;	k	getPistonPushReaction
	m	(Lcab;Lgj;)Ldqh;	k	getCollisionShape
	m	()Z	l	canOcclude
	m	(Lcab;Lgj;)Ldqh;	l	getBlockSupportShape
	m	()Ljava/util/stream/Stream;	m	getTags
	m	(Lcab;Lgj;)Ldqh;	m	getInteractionShape
	m	()Z	n	hasBlockEntity
	m	(Lcab;Lgj;)Ldpo;	n	getOffset
	m	()Ldix;	o	getFluidState
	m	(Lcab;Lgj;)Z	o	isSuffocating
	m	()Z	p	isRandomlyTicking
	m	(Lcab;Lgj;)Z	p	isViewBlocking
	m	()Lckg;	q	getSoundType
	m	(Lcab;Lgj;)Z	q	hasPostProcess
	m	()Lcov;	r	asState
	m	(Lcab;Lgj;)Z	r	isCollisionShapeFullBlock
	m	()Z	s	requiresCorrectToolForDrops
	f	Lcou$a$a;	a	cache
	f	I	b	lightEmission
	f	Z	g	useShapeForLightOcclusion
	f	Z	h	isAir
	f	Ldjb;	i	material
	f	Ldjc;	j	materialColor
	f	F	k	destroySpeed
	f	Z	l	requiresCorrectToolForDrops
	f	Z	m	canOcclude
	f	Lcou$e;	n	isRedstoneConductor
	f	Lcou$e;	o	isSuffocating
	f	Lcou$e;	p	isViewBlocking
	f	Lcou$e;	q	hasPostProcess
	f	Lcou$e;	r	emissiveRendering
c	cou$a$a	net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache
	m	(Lgo$a;)Z	a	lambda$new$0
	m	(Lgo;Lckw;)Z	a	isFaceSturdy
	m	(Lgo;Lckw;)I	b	getFaceSupportIndex
	f	Z	a	solidRender
	f	Ldqh;	b	collisionShape
	f	Z	c	largeCollisionShape
	f	Z	d	isCollisionShapeFullBlock
	f	[Lgo;	e	DIRECTIONS
	f	I	f	SUPPORT_TYPE_COUNT
	f	Z	g	propagatesSkylightDown
	f	I	h	lightBlock
	f	[Ldqh;	i	occlusionShapes
	f	[Z	j	faceSturdy
c	cou$b	net/minecraft/world/level/block/state/BlockBehaviour$OffsetType
	m	()[Lcou$b;	a	$values
	f	Lcou$b;	a	NONE
	f	Lcou$b;	b	XZ
	f	Lcou$b;	c	XYZ
	f	[Lcou$b;	d	$VALUES
c	cou$c	net/minecraft/world/level/block/state/BlockBehaviour$Properties
	m	()Lcou$c;	a	noCollission
	m	(F)Lcou$c;	a	friction
	m	(FF)Lcou$c;	a	strength
	m	(Lcdq;)Lcou$c;	a	dropsLike
	m	(Lckg;)Lcou$c;	a	sound
	m	(Lcou$d;)Lcou$c;	a	isValidSpawn
	m	(Lcou$e;)Lcou$c;	a	isRedstoneConductor
	m	(Lcou;)Lcou$c;	a	copy
	m	(Lcov;)I	a	lambda$new$0
	m	(Lcov;Lcab;Lgj;)Z	a	lambda$new$5
	m	(Lcov;Lcab;Lgj;Laxo;)Z	a	lambda$new$1
	m	(Ldjb;)Lcou$c;	a	of
	m	(Ldjb;Lbts;)Lcou$c;	a	of
	m	(Ldjb;Ldjc;)Lcou$c;	a	of
	m	(Ldjb;Ljava/util/function/Function;)Lcou$c;	a	of
	m	(Ldjc;)Lcou$c;	a	color
	m	(Ldjc;Lcov;)Ldjc;	a	lambda$color$7
	m	(Ljava/util/function/ToIntFunction;)Lcou$c;	a	lightLevel
	m	()Lcou$c;	b	noOcclusion
	m	(F)Lcou$c;	b	speedFactor
	m	(Lcou$e;)Lcou$c;	b	isSuffocating
	m	(Lcov;Lcab;Lgj;)Z	b	lambda$new$4
	m	(Ldjc;Lcov;)Ldjc;	b	lambda$new$6
	m	()Lcou$c;	c	instabreak
	m	(F)Lcou$c;	c	jumpFactor
	m	(Lcou$e;)Lcou$c;	c	isViewBlocking
	m	(Lcov;Lcab;Lgj;)Z	c	lambda$new$3
	m	()Lcou$c;	d	randomTicks
	m	(F)Lcou$c;	d	strength
	m	(Lcou$e;)Lcou$c;	d	hasPostProcess
	m	(Lcov;Lcab;Lgj;)Z	d	lambda$new$2
	m	()Lcou$c;	e	dynamicShape
	m	(F)Lcou$c;	e	destroyTime
	m	(Lcou$e;)Lcou$c;	e	emissiveRendering
	m	()Lcou$c;	f	noDrops
	m	(F)Lcou$c;	f	explosionResistance
	m	()Lcou$c;	g	air
	m	()Lcou$c;	h	requiresCorrectToolForDrops
	f	Ldjb;	a	material
	f	Ljava/util/function/Function;	b	materialColor
	f	Z	c	hasCollision
	f	Lckg;	d	soundType
	f	Ljava/util/function/ToIntFunction;	e	lightEmission
	f	F	f	explosionResistance
	f	F	g	destroyTime
	f	Z	h	requiresCorrectToolForDrops
	f	Z	i	isRandomlyTicking
	f	F	j	friction
	f	F	k	speedFactor
	f	F	l	jumpFactor
	f	Lyt;	m	drops
	f	Z	n	canOcclude
	f	Z	o	isAir
	f	Lcou$d;	p	isValidSpawn
	f	Lcou$e;	q	isRedstoneConductor
	f	Lcou$e;	r	isSuffocating
	f	Lcou$e;	s	isViewBlocking
	f	Lcou$e;	t	hasPostProcess
	f	Lcou$e;	u	emissiveRendering
	f	Z	v	dynamicShape
c	cou$d	net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate
c	cou$e	net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate
c	cov	net/minecraft/world/level/block/state/BlockState
	m	()Lcov;	r	asState
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	cow	net/minecraft/world/level/block/state/StateDefinition
	m	()Lcom/google/common/collect/ImmutableList;	a	getPossibleStates
	m	(Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Lcpy;)Lcom/mojang/serialization/MapCodec;	a	appendPropertyCodec
	m	(Lcow$b;Ljava/lang/Object;Lcom/mojang/serialization/MapCodec;Ljava/util/Map;Ljava/util/List;Ljava/util/List;)V	a	lambda$new$3
	m	(Lcpy;Lcom/mojang/datafixers/util/Pair;)Lcox;	a	lambda$appendPropertyCodec$6
	m	(Lcpy;Lcox;)Lcom/mojang/datafixers/util/Pair;	a	lambda$appendPropertyCodec$7
	m	(Lcpy;Ljava/util/List;)Ljava/util/stream/Stream;	a	lambda$new$2
	m	(Lcpy;Ljava/util/function/Supplier;)Lcpy$a;	a	lambda$appendPropertyCodec$5
	m	(Ljava/lang/String;)Lcpy;	a	getProperty
	m	(Ljava/util/List;Lcpy;Ljava/lang/Comparable;)Ljava/util/List;	a	lambda$new$1
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lcox;	a	lambda$new$0
	m	()Lcox;	b	any
	m	(Ljava/lang/String;)V	b	lambda$appendPropertyCodec$4
	m	()Ljava/lang/Object;	c	getOwner
	m	()Ljava/util/Collection;	d	getProperties
	f	Ljava/util/regex/Pattern;	a	NAME_PATTERN
	f	Ljava/lang/Object;	b	owner
	f	Lcom/google/common/collect/ImmutableSortedMap;	c	propertiesByName
	f	Lcom/google/common/collect/ImmutableList;	d	states
c	cow$a	net/minecraft/world/level/block/state/StateDefinition$Builder
	m	(Lcpy;)V	a	validateProperty
	m	(Ljava/util/function/Function;Lcow$b;)Lcow;	a	create
	m	([Lcpy;)Lcow$a;	a	add
	f	Ljava/lang/Object;	a	owner
	f	Ljava/util/Map;	b	properties
c	cow$b	net/minecraft/world/level/block/state/StateDefinition$Factory
c	cox	net/minecraft/world/level/block/state/StateHolder
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcox;)Ljava/lang/Object;	a	lambda$codec$0
	m	(Lcox;Ljava/util/Optional;)Lcox;	a	lambda$codec$1
	m	(Lcpy;)Ljava/lang/Object;	a	cycle
	m	(Lcpy;Ljava/lang/Comparable;)Ljava/lang/Object;	a	setValue
	m	(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object;	a	findNextInCollection
	m	(Ljava/util/Map;)V	a	populateNeighbours
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;	a	lambda$codec$2
	m	(Lcpy;)Z	b	hasProperty
	m	(Lcpy;Ljava/lang/Comparable;)Ljava/util/Map;	b	makeNeighbourValues
	m	(Lcpy;)Ljava/lang/Comparable;	c	getValue
	m	(Lcpy;)Ljava/util/Optional;	d	getOptionalValue
	m	()Ljava/util/Collection;	t	getProperties
	m	()Lcom/google/common/collect/ImmutableMap;	u	getValues
	f	Ljava/util/function/Function;	a	PROPERTY_ENTRY_TO_STRING_FUNCTION
	f	Lcom/google/common/collect/ImmutableMap;	b	values
	f	Ljava/lang/String;	c	NAME_TAG
	f	Ljava/lang/String;	d	PROPERTIES_TAG
	f	Ljava/lang/Object;	e	owner
	f	Lcom/mojang/serialization/MapCodec;	f	propertiesCodec
	f	Lcom/google/common/collect/Table;	g	neighbours
c	cox$1	net/minecraft/world/level/block/state/StateHolder$1
	m	(Lcpy;Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	apply
c	coy	net/minecraft/world/level/block/state/package-info
c	coz	net/minecraft/world/level/block/state/pattern/BlockInWorld
	m	()Lcov;	a	getState
	m	(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	hasState
	m	(Ljava/util/function/Predicate;Lcoz;)Z	a	lambda$hasState$0
	m	()Lcmr;	b	getEntity
	m	()Lcay;	c	getLevel
	m	()Lgj;	d	getPos
	f	Lcay;	a	level
	f	Lgj;	b	pos
	f	Z	c	loadChunks
	f	Lcov;	d	state
	f	Lcmr;	e	entity
	f	Z	f	cachedEntity
c	cpa	net/minecraft/world/level/block/state/pattern/BlockPattern
	m	()I	a	getDepth
	m	(Lcay;Lgj;)Lcpa$b;	a	find
	m	(Lcay;Lgj;Lgo;Lgo;)Lcpa$b;	a	matches
	m	(Lcay;Z)Lcom/google/common/cache/LoadingCache;	a	createLevelCache
	m	(Lgj;Lgo;Lgo;III)Lgj;	a	translateAndRotate
	m	(Lgj;Lgo;Lgo;Lcom/google/common/cache/LoadingCache;)Lcpa$b;	a	matches
	m	()I	b	getHeight
	m	()I	c	getWidth
	m	()[[[Ljava/util/function/Predicate;	d	getPattern
	f	[[[Ljava/util/function/Predicate;	a	pattern
	f	I	b	depth
	f	I	c	height
	f	I	d	width
c	cpa$a	net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader
	m	(Lgj;)Lcoz;	a	load
	f	Lcay;	a	level
	f	Z	b	loadChunks
c	cpa$b	net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch
	m	()Lgj;	a	getFrontTopLeft
	m	(III)Lcoz;	a	getBlock
	m	()Lgo;	b	getForwards
	m	()Lgo;	c	getUp
	m	()I	d	getWidth
	m	()I	e	getHeight
	m	()I	f	getDepth
	f	Lgj;	a	frontTopLeft
	f	Lgo;	b	forwards
	f	Lgo;	c	up
	f	Lcom/google/common/cache/LoadingCache;	d	cache
	f	I	e	width
	f	I	f	height
	f	I	g	depth
c	cpb	net/minecraft/world/level/block/state/pattern/BlockPatternBuilder
	m	()Lcpb;	a	start
	m	(CLjava/util/function/Predicate;)Lcpb;	a	where
	m	(Lcoz;)Z	a	lambda$new$0
	m	([Ljava/lang/String;)Lcpb;	a	aisle
	m	()Lcpa;	b	build
	m	()[[[Ljava/util/function/Predicate;	c	createPattern
	m	()V	d	ensureAllCharactersMatched
	f	Lcom/google/common/base/Joiner;	a	COMMA_JOINED
	f	Ljava/util/List;	b	pattern
	f	Ljava/util/Map;	c	lookup
	f	I	d	height
	f	I	e	width
c	cpc	net/minecraft/world/level/block/state/pattern/package-info
c	cpd	net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate
	m	(Lcov;)Z	a	test
	m	(Ldjb;)Lcpd;	a	forMaterial
	f	Lcpd;	a	AIR
	f	Ldjb;	b	material
c	cpd$1	net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate$1
	m	(Lcov;)Z	a	test
c	cpe	net/minecraft/world/level/block/state/predicate/BlockPredicate
	m	(Lcdq;)Lcpe;	a	forBlock
	m	(Lcov;)Z	a	test
	f	Lcdq;	a	block
c	cpf	net/minecraft/world/level/block/state/predicate/BlockStatePredicate
	m	(Lcdq;)Lcpf;	a	forBlock
	m	(Lcov;)Z	a	test
	m	(Lcov;Lcpy;Ljava/util/function/Predicate;)Z	a	applies
	m	(Lcpy;Ljava/util/function/Predicate;)Lcpf;	a	where
	m	(Lcov;)Z	b	lambda$static$0
	f	Ljava/util/function/Predicate;	a	ANY
	f	Lcow;	b	definition
	f	Ljava/util/Map;	c	properties
c	cpg	net/minecraft/world/level/block/state/predicate/package-info
c	cph	net/minecraft/world/level/block/state/properties/AttachFace
	m	()[Lcph;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcph;	a	FLOOR
	f	Lcph;	b	WALL
	f	Lcph;	c	CEILING
	f	Ljava/lang/String;	d	name
	f	[Lcph;	e	$VALUES
c	cpi	net/minecraft/world/level/block/state/properties/BambooLeaves
	m	()[Lcpi;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcpi;	a	NONE
	f	Lcpi;	b	SMALL
	f	Lcpi;	c	LARGE
	f	Ljava/lang/String;	d	name
	f	[Lcpi;	e	$VALUES
c	cpj	net/minecraft/world/level/block/state/properties/BedPart
	m	()[Lcpj;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcpj;	a	HEAD
	f	Lcpj;	b	FOOT
	f	Ljava/lang/String;	c	name
	f	[Lcpj;	d	$VALUES
c	cpk	net/minecraft/world/level/block/state/properties/BellAttachType
	m	()[Lcpk;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcpk;	a	FLOOR
	f	Lcpk;	b	CEILING
	f	Lcpk;	c	SINGLE_WALL
	f	Lcpk;	d	DOUBLE_WALL
	f	Ljava/lang/String;	e	name
	f	[Lcpk;	f	$VALUES
c	cpl	net/minecraft/world/level/block/state/properties/BlockStateProperties
	m	(Lcpz;)Z	a	lambda$static$1
	m	(Lgo;)Z	a	lambda$static$0
	f	Lcpm;	A	TRIGGERED
	f	Lcpm;	B	UNSTABLE
	f	Lcpm;	C	WATERLOGGED
	f	Lcpm;	D	VINE_END
	f	Lcpm;	E	BERRIES
	f	Lcpt;	F	HORIZONTAL_AXIS
	f	Lcpt;	G	AXIS
	f	Lcpm;	H	UP
	f	Lcpm;	I	DOWN
	f	Lcpm;	J	NORTH
	f	Lcpm;	K	EAST
	f	Lcpm;	L	SOUTH
	f	Lcpm;	M	WEST
	f	Lcpp;	N	FACING
	f	Lcpp;	O	FACING_HOPPER
	f	Lcpp;	P	HORIZONTAL_FACING
	f	Lcpt;	Q	ORIENTATION
	f	Lcpt;	R	ATTACH_FACE
	f	Lcpt;	S	BELL_ATTACHMENT
	f	Lcpt;	T	EAST_WALL
	f	Lcpt;	U	NORTH_WALL
	f	Lcpt;	V	SOUTH_WALL
	f	Lcpt;	W	WEST_WALL
	f	Lcpt;	X	EAST_REDSTONE
	f	Lcpt;	Y	NORTH_REDSTONE
	f	Lcpt;	Z	SOUTH_REDSTONE
	f	Lcpv;	aA	LAYERS
	f	I	aB	MIN_LEVEL
	f	I	aC	MIN_LEVEL_CAULDRON
	f	I	aD	MAX_LEVEL_3
	f	I	aE	MAX_LEVEL_8
	f	Lcpv;	aF	LEVEL_CAULDRON
	f	Lcpv;	aG	LEVEL_COMPOSTER
	f	Lcpv;	aH	LEVEL_FLOWING
	f	Lcpv;	aI	LEVEL_HONEY
	f	I	aJ	MAX_LEVEL_15
	f	Lcpv;	aK	LEVEL
	f	Lcpv;	aL	MOISTURE
	f	Lcpm;	a	ATTACHED
	f	Lcpv;	aM	NOTE
	f	Lcpv;	aN	PICKLES
	f	Lcpv;	aO	POWER
	f	Lcpv;	aP	STAGE
	f	I	aQ	STABILITY_MAX_DISTANCE
	f	Lcpv;	aR	STABILITY_DISTANCE
	f	I	aS	MIN_RESPAWN_ANCHOR_CHARGES
	f	I	aT	MAX_RESPAWN_ANCHOR_CHARGES
	f	Lcpv;	aU	RESPAWN_ANCHOR_CHARGES
	f	I	aV	MAX_ROTATIONS_16
	f	Lcpv;	aW	ROTATION_16
	f	Lcpt;	aX	BED_PART
	f	Lcpt;	aY	CHEST_TYPE
	f	Lcpt;	aZ	MODE_COMPARATOR
	f	Lcpt;	aa	WEST_REDSTONE
	f	Lcpt;	ab	DOUBLE_BLOCK_HALF
	f	Lcpt;	ac	HALF
	f	Lcpt;	ad	RAIL_SHAPE
	f	Lcpt;	ae	RAIL_SHAPE_STRAIGHT
	f	I	af	MAX_AGE_1
	f	I	ag	MAX_AGE_2
	f	I	ah	MAX_AGE_3
	f	I	ai	MAX_AGE_5
	f	I	aj	MAX_AGE_7
	f	I	ak	MAX_AGE_15
	f	I	al	MAX_AGE_25
	f	Lcpv;	am	AGE_1
	f	Lcpv;	an	AGE_2
	f	Lcpv;	ao	AGE_3
	f	Lcpv;	ap	AGE_5
	f	Lcpv;	aq	AGE_7
	f	Lcpv;	ar	AGE_15
	f	Lcpv;	as	AGE_25
	f	Lcpv;	at	BITES
	f	Lcpv;	au	CANDLES
	f	Lcpv;	av	DELAY
	f	I	aw	MAX_DISTANCE
	f	Lcpv;	ax	DISTANCE
	f	Lcpv;	ay	EGGS
	f	Lcpv;	az	HATCH
	f	Lcpm;	b	BOTTOM
	f	Lcpt;	ba	DOOR_HINGE
	f	Lcpt;	bb	NOTEBLOCK_INSTRUMENT
	f	Lcpt;	bc	PISTON_TYPE
	f	Lcpt;	bd	SLAB_TYPE
	f	Lcpt;	be	STAIRS_SHAPE
	f	Lcpt;	bf	STRUCTUREBLOCK_MODE
	f	Lcpt;	bg	BAMBOO_LEAVES
	f	Lcpt;	bh	TILT
	f	Lcpp;	bi	VERTICAL_DIRECTION
	f	Lcpt;	bj	DRIPSTONE_THICKNESS
	f	Lcpt;	bk	SCULK_SENSOR_PHASE
	f	Lcpm;	c	CONDITIONAL
	f	Lcpm;	d	DISARMED
	f	Lcpm;	e	DRAG
	f	Lcpm;	f	ENABLED
	f	Lcpm;	g	EXTENDED
	f	Lcpm;	h	EYE
	f	Lcpm;	i	FALLING
	f	Lcpm;	j	HANGING
	f	Lcpm;	k	HAS_BOTTLE_0
	f	Lcpm;	l	HAS_BOTTLE_1
	f	Lcpm;	m	HAS_BOTTLE_2
	f	Lcpm;	n	HAS_RECORD
	f	Lcpm;	o	HAS_BOOK
	f	Lcpm;	p	INVERTED
	f	Lcpm;	q	IN_WALL
	f	Lcpm;	r	LIT
	f	Lcpm;	s	LOCKED
	f	Lcpm;	t	OCCUPIED
	f	Lcpm;	u	OPEN
	f	Lcpm;	v	PERSISTENT
	f	Lcpm;	w	POWERED
	f	Lcpm;	x	SHORT
	f	Lcpm;	y	SIGNAL_FIRE
	f	Lcpm;	z	SNOWY
c	cpm	net/minecraft/world/level/block/state/properties/BooleanProperty
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Ljava/lang/Boolean;)Ljava/lang/String;	a	getName
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lcpm;	a	create
	m	()I	b	generateHashCode
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
	f	Lcom/google/common/collect/ImmutableSet;	a	values
c	cpn	net/minecraft/world/level/block/state/properties/ChestType
	m	()Lcpn;	a	getOpposite
	m	()[Lcpn;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcpn;	a	SINGLE
	f	Lcpn;	b	LEFT
	f	Lcpn;	c	RIGHT
	f	[Lcpn;	d	BY_ID
	f	Ljava/lang/String;	e	name
	f	I	f	opposite
	f	[Lcpn;	g	$VALUES
c	cpo	net/minecraft/world/level/block/state/properties/ComparatorMode
	m	()[Lcpo;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcpo;	a	COMPARE
	f	Lcpo;	b	SUBTRACT
	f	Ljava/lang/String;	c	name
	f	[Lcpo;	d	$VALUES
c	cpp	net/minecraft/world/level/block/state/properties/DirectionProperty
	m	(Lgo;)Z	a	lambda$create$0
	m	(Ljava/lang/String;)Lcpp;	a	create
	m	(Ljava/lang/String;Ljava/util/Collection;)Lcpp;	a	create
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Lcpp;	a	create
	m	(Ljava/lang/String;[Lgo;)Lcpp;	a	create
c	cpq	net/minecraft/world/level/block/state/properties/DoorHingeSide
	m	()[Lcpq;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcpq;	a	LEFT
	f	Lcpq;	b	RIGHT
	f	[Lcpq;	c	$VALUES
c	cpr	net/minecraft/world/level/block/state/properties/DoubleBlockHalf
	m	()[Lcpr;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcpr;	a	UPPER
	f	Lcpr;	b	LOWER
	f	[Lcpr;	c	$VALUES
c	cps	net/minecraft/world/level/block/state/properties/DripstoneThickness
	m	()[Lcps;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcps;	a	TIP_MERGE
	f	Lcps;	b	TIP
	f	Lcps;	c	FRUSTUM
	f	Lcps;	d	MIDDLE
	f	Lcps;	e	BASE
	f	Ljava/lang/String;	f	name
	f	[Lcps;	g	$VALUES
c	cpt	net/minecraft/world/level/block/state/properties/EnumProperty
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
	m	(Ljava/lang/Enum;)Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;Ljava/lang/Class;)Lcpt;	a	create
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lcpt;	a	create
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lcpt;	a	create
	m	(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lcpt;	a	create
	m	()I	b	generateHashCode
	m	(Ljava/lang/Enum;)Z	b	lambda$create$0
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
	f	Lcom/google/common/collect/ImmutableSet;	a	values
	f	Ljava/util/Map;	b	names
c	cpu	net/minecraft/world/level/block/state/properties/Half
	m	()[Lcpu;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcpu;	a	TOP
	f	Lcpu;	b	BOTTOM
	f	Ljava/lang/String;	c	name
	f	[Lcpu;	d	$VALUES
c	cpv	net/minecraft/world/level/block/state/properties/IntegerProperty
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
	m	(Ljava/lang/Integer;)Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;II)Lcpv;	a	create
	m	()I	b	generateHashCode
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
	f	Lcom/google/common/collect/ImmutableSet;	a	values
c	cpw	net/minecraft/world/level/block/state/properties/NoteBlockInstrument
	m	()Lahj;	a	getSoundEvent
	m	(Lcov;)Lcpw;	a	byState
	m	()[Lcpw;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcpw;	a	HARP
	f	Lcpw;	b	BASEDRUM
	f	Lcpw;	c	SNARE
	f	Lcpw;	d	HAT
	f	Lcpw;	e	BASS
	f	Lcpw;	f	FLUTE
	f	Lcpw;	g	BELL
	f	Lcpw;	h	GUITAR
	f	Lcpw;	i	CHIME
	f	Lcpw;	j	XYLOPHONE
	f	Lcpw;	k	IRON_XYLOPHONE
	f	Lcpw;	l	COW_BELL
	f	Lcpw;	m	DIDGERIDOO
	f	Lcpw;	n	BIT
	f	Lcpw;	o	BANJO
	f	Lcpw;	p	PLING
	f	Ljava/lang/String;	q	name
	f	Lahj;	r	soundEvent
	f	[Lcpw;	s	$VALUES
c	cpx	net/minecraft/world/level/block/state/properties/PistonType
	m	()[Lcpx;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcpx;	a	DEFAULT
	f	Lcpx;	b	STICKY
	f	Ljava/lang/String;	c	name
	f	[Lcpx;	d	$VALUES
c	cpy	net/minecraft/world/level/block/state/properties/Property
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Lcom/mojang/serialization/DynamicOps;Lcox;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	parseValue
	m	(Lcox;)Lcpy$a;	a	value
	m	(Lcox;Ljava/lang/Comparable;)Lcox;	a	lambda$parseValue$2
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$new$1
	m	()I	b	generateHashCode
	m	(Ljava/lang/Comparable;)Lcpy$a;	b	value
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
	m	()Ljava/util/stream/Stream;	c	getAllValues
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$new$0
	m	()Lcom/mojang/serialization/Codec;	d	codec
	m	()Lcom/mojang/serialization/Codec;	e	valueCodec
	m	()Ljava/lang/String;	f	getName
	m	()Ljava/lang/Class;	g	getValueClass
	f	Ljava/lang/Class;	a	clazz
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/Integer;	c	hashCode
	f	Lcom/mojang/serialization/Codec;	d	codec
	f	Lcom/mojang/serialization/Codec;	e	valueCodec
c	cpy$a	net/minecraft/world/level/block/state/properties/Property$Value
	m	()Lcpy;	a	property
	m	()Ljava/lang/Comparable;	b	value
	f	Lcpy;	a	property
	f	Ljava/lang/Comparable;	b	value
c	cpz	net/minecraft/world/level/block/state/properties/RailShape
	m	()Ljava/lang/String;	a	getName
	m	()Z	b	isAscending
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcpz;	d	$values
	f	Lcpz;	a	NORTH_SOUTH
	f	Lcpz;	b	EAST_WEST
	f	Lcpz;	c	ASCENDING_EAST
	f	Lcpz;	d	ASCENDING_WEST
	f	Lcpz;	e	ASCENDING_NORTH
	f	Lcpz;	f	ASCENDING_SOUTH
	f	Lcpz;	g	SOUTH_EAST
	f	Lcpz;	h	SOUTH_WEST
	f	Lcpz;	i	NORTH_WEST
	f	Lcpz;	j	NORTH_EAST
	f	Ljava/lang/String;	k	name
	f	[Lcpz;	l	$VALUES
c	cqa	net/minecraft/world/level/block/state/properties/RedstoneSide
	m	()Z	a	isConnected
	m	()[Lcqa;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcqa;	a	UP
	f	Lcqa;	b	SIDE
	f	Lcqa;	c	NONE
	f	Ljava/lang/String;	d	name
	f	[Lcqa;	e	$VALUES
c	cqb	net/minecraft/world/level/block/state/properties/SculkSensorPhase
	m	()[Lcqb;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcqb;	a	INACTIVE
	f	Lcqb;	b	ACTIVE
	f	Lcqb;	c	COOLDOWN
	f	Ljava/lang/String;	d	name
	f	[Lcqb;	e	$VALUES
c	cqc	net/minecraft/world/level/block/state/properties/SlabType
	m	()[Lcqc;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcqc;	a	TOP
	f	Lcqc;	b	BOTTOM
	f	Lcqc;	c	DOUBLE
	f	Ljava/lang/String;	d	name
	f	[Lcqc;	e	$VALUES
c	cqd	net/minecraft/world/level/block/state/properties/StairsShape
	m	()[Lcqd;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcqd;	a	STRAIGHT
	f	Lcqd;	b	INNER_LEFT
	f	Lcqd;	c	INNER_RIGHT
	f	Lcqd;	d	OUTER_LEFT
	f	Lcqd;	e	OUTER_RIGHT
	f	Ljava/lang/String;	f	name
	f	[Lcqd;	g	$VALUES
c	cqe	net/minecraft/world/level/block/state/properties/StructureMode
	m	()Lqk;	a	getDisplayName
	m	()[Lcqe;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcqe;	a	SAVE
	f	Lcqe;	b	LOAD
	f	Lcqe;	c	CORNER
	f	Lcqe;	d	DATA
	f	Ljava/lang/String;	e	name
	f	Lqk;	f	displayName
	f	[Lcqe;	g	$VALUES
c	cqf	net/minecraft/world/level/block/state/properties/Tilt
	m	()Z	a	causesVibration
	m	()[Lcqf;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcqf;	a	NONE
	f	Lcqf;	b	UNSTABLE
	f	Lcqf;	c	PARTIAL
	f	Lcqf;	d	FULL
	f	Ljava/lang/String;	e	name
	f	Z	f	causesVibration
	f	[Lcqf;	g	$VALUES
c	cqg	net/minecraft/world/level/block/state/properties/WallSide
	m	()[Lcqg;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcqg;	a	NONE
	f	Lcqg;	b	LOW
	f	Lcqg;	c	TALL
	f	Ljava/lang/String;	d	name
	f	[Lcqg;	e	$VALUES
c	cqh	net/minecraft/world/level/block/state/properties/WoodType
	m	()Ljava/util/stream/Stream;	a	values
	m	(Lcqh;)Lcqh;	a	register
	m	()Ljava/lang/String;	b	name
	f	Lcqh;	a	OAK
	f	Lcqh;	b	SPRUCE
	f	Lcqh;	c	BIRCH
	f	Lcqh;	d	ACACIA
	f	Lcqh;	e	JUNGLE
	f	Lcqh;	f	DARK_OAK
	f	Lcqh;	g	CRIMSON
	f	Lcqh;	h	WARPED
	f	Ljava/util/Set;	i	VALUES
	f	Ljava/lang/String;	j	name
c	cqi	net/minecraft/world/level/block/state/properties/package-info
c	cqj	net/minecraft/world/level/border/BorderChangeListener
	m	(Lcql;D)V	a	onBorderSizeSet
	m	(Lcql;DD)V	a	onBorderCenterSet
	m	(Lcql;DDJ)V	a	onBorderSizeLerping
	m	(Lcql;I)V	a	onBorderSetWarningTime
	m	(Lcql;D)V	b	onBorderSetDamagePerBlock
	m	(Lcql;I)V	b	onBorderSetWarningBlocks
	m	(Lcql;D)V	c	onBorderSetDamageSafeZOne
c	cqj$a	net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener
	m	(Lcql;D)V	a	onBorderSizeSet
	m	(Lcql;DD)V	a	onBorderCenterSet
	m	(Lcql;DDJ)V	a	onBorderSizeLerping
	m	(Lcql;I)V	a	onBorderSetWarningTime
	m	(Lcql;D)V	b	onBorderSetDamagePerBlock
	m	(Lcql;I)V	b	onBorderSetWarningBlocks
	m	(Lcql;D)V	c	onBorderSetDamageSafeZOne
	f	Lcql;	a	worldBorder
c	cqk	net/minecraft/world/level/border/BorderStatus
	m	()I	a	getColor
	m	()[Lcqk;	b	$values
	f	Lcqk;	a	GROWING
	f	Lcqk;	b	SHRINKING
	f	Lcqk;	c	STATIONARY
	f	I	d	color
	f	[Lcqk;	e	$VALUES
c	cql	net/minecraft/world/level/border/WorldBorder
	m	()D	a	getCenterX
	m	(D)V	a	setSize
	m	(DD)Z	a	isWithinBounds
	m	(DDD)Z	a	isWithinBounds
	m	(DDJ)V	a	lerpSizeBetween
	m	(I)V	a	setAbsoluteMaxSize
	m	(Laxk;)D	a	getDistanceToBorder
	m	(Laxk;Ldpj;)Z	a	isInsideCloseToBorder
	m	(Lcac;)Z	a	isWithinBounds
	m	(Lcqj;)V	a	addListener
	m	(Lcql$c;)V	a	applySettings
	m	(Ldpj;)Z	a	isWithinBounds
	m	(Lgj;)Z	a	isWithinBounds
	m	()D	b	getCenterZ
	m	(D)V	b	setDamageSafeZone
	m	(DD)D	b	getDistanceToBorder
	m	(DDD)Lgj;	b	clampToBounds
	m	(I)V	b	setWarningTime
	m	(Lcqj;)V	b	removeListener
	m	()Ldqh;	c	getCollisionShape
	m	(D)V	c	setDamagePerBlock
	m	(DD)V	c	setCenter
	m	(I)V	c	setWarningBlocks
	m	()Lcqk;	d	getStatus
	m	()D	e	getMinX
	m	()D	f	getMinZ
	m	()D	g	getMaxX
	m	()D	h	getMaxZ
	m	()D	i	getSize
	m	()J	j	getLerpRemainingTime
	m	()D	k	getLerpTarget
	m	()Ljava/util/List;	l	getListeners
	m	()I	m	getAbsoluteMaxSize
	m	()D	n	getDamageSafeZone
	m	()D	o	getDamagePerBlock
	m	()D	p	getLerpSpeed
	m	()I	q	getWarningTime
	m	()I	r	getWarningBlocks
	m	()V	s	tick
	m	()Lcql$c;	t	createSettings
	f	Ljava/util/List;	a	listeners
	f	D	b	MAX_SIZE
	f	D	c	MAX_CENTER_COORDINATE
	f	Lcql$c;	d	DEFAULT_SETTINGS
	f	D	e	damagePerBlock
	f	D	f	damageSafeZone
	f	I	g	warningTime
	f	I	h	warningBlocks
	f	D	i	centerX
	f	D	j	centerZ
	f	I	k	absoluteMaxSize
	f	Lcql$a;	l	extent
c	cql$a	net/minecraft/world/level/border/WorldBorder$BorderExtent
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Lcqk;	i	getStatus
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Lcql$a;	l	update
	m	()Ldqh;	m	getCollisionShape
c	cql$b	net/minecraft/world/level/border/WorldBorder$MovingBorderExtent
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Lcqk;	i	getStatus
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Lcql$a;	l	update
	m	()Ldqh;	m	getCollisionShape
	f	Lcql;	a	this$0
	f	D	b	from
	f	D	c	to
	f	J	d	lerpEnd
	f	J	e	lerpBegin
	f	D	f	lerpDuration
c	cql$c	net/minecraft/world/level/border/WorldBorder$Settings
	m	()D	a	getCenterX
	m	(Lcom/mojang/serialization/DynamicLike;Lcql$c;)Lcql$c;	a	read
	m	(Lok;)V	a	write
	m	()D	b	getCenterZ
	m	()D	c	getDamagePerBlock
	m	()D	d	getSafeZone
	m	()I	e	getWarningBlocks
	m	()I	f	getWarningTime
	m	()D	g	getSize
	m	()J	h	getSizeLerpTime
	m	()D	i	getSizeLerpTarget
	f	D	a	centerX
	f	D	b	centerZ
	f	D	c	damagePerBlock
	f	D	d	safeZone
	f	I	e	warningBlocks
	f	I	f	warningTime
	f	D	g	size
	f	J	h	sizeLerpTime
	f	D	i	sizeLerpTarget
c	cql$d	net/minecraft/world/level/border/WorldBorder$StaticBorderExtent
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Lcqk;	i	getStatus
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Lcql$a;	l	update
	m	()Ldqh;	m	getCollisionShape
	m	()V	n	updateBox
	f	Lcql;	a	this$0
	f	D	b	size
	f	D	c	minX
	f	D	d	minZ
	f	D	e	maxX
	f	D	f	maxZ
	f	Ldqh;	g	shape
c	cqm	net/minecraft/world/level/border/package-info
c	cqn	net/minecraft/world/level/chunk/BlockColumn
	m	(I)Lcov;	a	getBlock
	m	(ILcov;)V	a	setBlock
c	cqo	net/minecraft/world/level/chunk/BulkSectionAccess
	m	(Lgj;)Lcrb;	a	getSection
	m	(Lgj;IJ)Lcrb;	a	lambda$getSection$0
	m	(Lgj;)Lcov;	b	getBlockState
	f	Lcaw;	a	level
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	b	acquiredSections
	f	Lcrb;	c	lastSection
	f	J	d	lastSectionKey
c	cqp	net/minecraft/world/level/chunk/CarvingMask
	m	()[J	a	toArray
	m	(III)V	a	set
	m	(Lcac;)Ljava/util/stream/Stream;	a	stream
	m	(Lcac;I)Lgj;	a	lambda$stream$1
	m	(Lcqp$a;)V	a	setAdditionalMask
	m	(III)Z	b	get
	m	(III)I	c	getIndex
	m	(III)Z	d	lambda$new$0
	f	I	a	minY
	f	Ljava/util/BitSet;	b	mask
	f	Lcqp$a;	c	additionalMask
c	cqp$a	net/minecraft/world/level/chunk/CarvingMask$Mask
c	cqq	net/minecraft/world/level/chunk/ChunkAccess
	m	()Lcrb;	a	getHighestSection
	m	(I)Lcsz;	a	getEventDispatcher
	m	(II)Z	a	isYSpaceEmpty
	m	(III)Ljava/lang/String;	a	lambda$getNoiseBiome$2
	m	(J)V	a	incrementInhabitedTime
	m	(Laxk;)V	a	addEntity
	m	(Lcax;Lhb;[Lcrb;)V	a	replaceMissingSections
	m	(Lcbu;Lcbz$f;)V	a	fillBiomesFromNoise
	m	(Lcmr;)V	a	setBlockEntity
	m	(Lctw$a;)Lctw;	a	getOrCreateHeightmapUnprimed
	m	(Lctw$a;II)I	a	getHeight
	m	(Lctw$a;[J)V	a	setHeightmap
	m	(Lcuc;Ljava/util/function/Supplier;Lcub;Lcti$a;Lcuy;)Lcua;	a	getOrCreateNoiseChunk
	m	(Lcuz;)V	a	setBlendingData
	m	(Lcwr;)Ldfr;	a	getStartForFeature
	m	(Lcwr;J)V	a	addReferenceForFeature
	m	(Lcwr;Ldfr;)V	a	setStartForFeature
	m	(Lgj;Lcov;Z)Lcov;	a	setBlockState
	m	(Ljava/util/Map;)V	a	setAllStarts
	m	(Ljava/util/function/Supplier;)Lgs;	a	carverBiome
	m	(Lok;)V	a	setBlockEntityNbt
	m	(SI)V	a	addPackedPostProcess
	m	(Z)V	a	setUnsaved
	m	([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList;	a	getOrCreateOffsetList
	m	()I	b	getHighestSectionPosition
	m	(I)Lcrb;	b	getSection
	m	(J)V	b	setInhabitedTime
	m	(Lctw$a;)Z	b	hasPrimedHeightmap
	m	(Lcwr;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForFeature
	m	(Ljava/util/Map;)V	b	setAllReferences
	m	(Z)V	b	setLightCorrect
	m	()Ljava/util/Set;	c	getBlockEntitiesPos
	m	(Lctw$a;)Lctw;	c	lambda$getOrCreateHeightmapUnprimed$0
	m	(Lcwr;)Lit/unimi/dsi/fastutil/longs/LongSet;	c	lambda$addReferenceForFeature$1
	m	()[Lcrb;	d	getSections
	m	(Lgj;)V	d	removeBlockEntity
	m	()Ljava/util/Collection;	e	getHeightmaps
	m	(Lgj;)V	e	markPosForPostprocessing
	m	()Lcac;	f	getPos
	m	(Lgj;)Lok;	f	getBlockEntityNbt
	m	()Ljava/util/Map;	g	getAllStarts
	m	(Lgj;)Lok;	g	getBlockEntityNbtForSaving
	m	()Ljava/util/Map;	h	getAllReferences
	m	()Z	i	isUnsaved
	m	()Lcqt;	j	getStatus
	m	()[Lit/unimi/dsi/fastutil/shorts/ShortList;	m	getPostProcessing
	m	()Ljava/util/stream/Stream;	n	getLights
	m	()Ldrb;	o	getBlockTicks
	m	()Ldrb;	p	getFluidTicks
	m	()Lcqq$a;	q	getTicksForSerialization
	m	()Lcrk;	r	getUpgradeData
	m	()Z	s	isOldNoiseGeneration
	m	()Lcuz;	t	getBlendingData
	m	()J	u	getInhabitedTime
	m	()I	u_	getMinBuildHeight
	m	()Z	v	isLightCorrect
	m	()I	v_	getHeight
	m	()Z	w	hasAnyStructureReferences
	m	()Lctk;	x	getBelowZeroRetrogen
	m	()Z	y	isUpgrading
	m	()Lcax;	z	getHeightAccessorForGeneration
	f	[Lit/unimi/dsi/fastutil/shorts/ShortList;	a	postProcessing
	f	Z	b	unsaved
	f	Lcac;	c	chunkPos
	f	Lcua;	d	noiseChunk
	f	Lcrk;	e	upgradeData
	f	Lcuz;	f	blendingData
	f	Ljava/util/Map;	g	heightmaps
	f	Ljava/util/Map;	h	pendingBlockEntities
	f	Ljava/util/Map;	i	blockEntities
	f	Lcax;	j	levelHeightAccessor
	f	[Lcrb;	k	sections
	f	Lorg/slf4j/Logger;	l	LOGGER
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	m	EMPTY_REFERENCE_SET
	f	Z	n	isLightCorrect
	f	J	o	inhabitedTime
	f	Lgs;	p	carverBiome
	f	Ljava/util/Map;	q	structureStarts
	f	Ljava/util/Map;	r	structuresRefences
c	cqq$a	net/minecraft/world/level/chunk/ChunkAccess$TicksToSave
	m	()Ldqz;	a	blocks
	m	()Ldqz;	b	fluids
	f	Ldqz;	a	blocks
	f	Ldqz;	b	fluids
c	cqr	net/minecraft/world/level/chunk/ChunkGenerator
	m	()Ljava/util/stream/Stream;	a	possibleStructureSets
	m	(IILcax;)Lcbh;	a	getBaseColumn
	m	(IILctw$a;Lcax;)I	a	getBaseHeight
	m	(J)Lcqr;	a	withSeed
	m	(Ladw;Lgt;Lgj;IZ)Lcom/mojang/datafixers/util/Pair;	a	findNearestMapFeature
	m	(Laed;)V	a	spawnOriginalMobs
	m	(Laed;JLcbt;Lcbm;Lcqq;Lcts$a;)V	a	applyCarvers
	m	(Laed;Lcbm;Lcqq;)V	a	buildSurface
	m	(Lcax;)I	a	getSpawnHeight
	m	(Lcbm;Lcqq;Lhf;Lcwr;)I	a	fetchReferences
	m	(Lcbm;Lgj;Ldfr;)Z	a	lambda$getMobsAt$16
	m	(Lcbm;Lhf;Lcqq;JLcac;Lhc;Ldhr;Lgs;)V	a	lambda$createStructures$20
	m	(Lcbn;Lcbm;Lcqq;)V	a	createReferences
	m	(Lcbn;Lcbm;Lcuv;Lcqq;Lcac;Ldfr;)V	a	lambda$applyBiomeDecoration$13
	m	(Lcbn;Lcqq;Lcbm;)V	a	applyBiomeDecoration
	m	(Lcbn;Ljava/util/Set;Lcac;)V	a	lambda$applyBiomeDecoration$11
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1;	a	commonCodec
	m	(Lcqq;)Ldeo;	a	getWritableArea
	m	(Lcqr;)Lhb;	a	lambda$commonCodec$0
	m	(Lcwr;)Ljava/lang/Integer;	a	lambda$applyBiomeDecoration$9
	m	(Lczd;Lcwr;)Z	a	lambda$allConfigurations$19
	m	(Ldfp$a;)Ljava/util/stream/Stream;	a	lambda$generateRingPositions$4
	m	(Ldfp$a;Lcbm;Lhc;Ldhr;JLcqq;Lcac;Lhf;)Z	a	tryGenerateStructure
	m	(Ldfr;)Ljava/lang/String;	a	lambda$createReferences$25
	m	(Ldfr;Lhb;)Ljava/lang/String;	a	lambda$createReferences$22
	m	(Ldgd;)Ljava/util/List;	a	getRingPositionsFor
	m	(Ldgg;)Ljava/util/Set;	a	lambda$findNearestMapFeature$8
	m	(Lgj;Ldfr;)Z	a	lambda$getMobsAt$17
	m	(Lgj;Ldgd;)Lgj;	a	getNearestGeneratedStructure
	m	(Lgs;)Lgs;	a	adjustBiome
	m	(Lgs;Lcbm;Layb;Lgj;)Lauw;	a	getMobsAt
	m	(Lgs;Ldgd;)Ljava/util/concurrent/CompletableFuture;	a	generateRingPositions
	m	(Lgt;Lgs;)Z	a	lambda$tryGenerateStructure$21
	m	(Lhb;Lcwr;)Ljava/lang/String;	a	lambda$applyBiomeDecoration$12
	m	(Lhb;Lczd;)Ljava/util/stream/Stream;	a	allConfigurations
	m	(Lhb;Lded;)Ljava/lang/String;	a	lambda$applyBiomeDecoration$15
	m	(Lhb;Ljava/util/concurrent/Executor;Lcuy;Lcbm;Lcqq;)Ljava/util/concurrent/CompletableFuture;	a	createBiomes
	m	(Lhc;Lcbm;Lcqq;Ldhr;J)V	a	createStructures
	m	(Lit/unimi/dsi/fastutil/ints/IntSet;Lcbv$b;Lded;)V	a	lambda$applyBiomeDecoration$14
	m	(Ljava/util/List;Lgj;)V	a	addDebugScreenInfo
	m	(Ljava/util/Optional;Ldfr;)Ljava/lang/String;	a	lambda$createReferences$23
	m	(Ljava/util/Set;Lcay;Lcbm;IIIZJLdge;)Lcom/mojang/datafixers/util/Pair;	a	getNearestGeneratedStructure
	m	(Ljava/util/Set;Ldfp$a;)Z	a	lambda$generatePositions$2
	m	(Ljava/util/Set;Lgs;)V	a	lambda$applyBiomeDecoration$10
	m	(Ljava/util/concurrent/Executor;Lcuy;Lcbm;Lcqq;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/util/function/Predicate;Ldfr;)V	a	lambda$getMobsAt$18
	m	(Lys;JIII)Z	a	hasFeatureChunkInRange
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	(IILctw$a;Lcax;)I	b	getFirstFreeHeight
	m	(Lcqq;)Lcqq;	b	lambda$createBiomes$6
	m	(Lcwr;)Ljava/util/List;	b	lambda$generatePositions$1
	m	(Ldfr;)Ljava/lang/String;	b	lambda$createReferences$24
	m	(Lgs;)Ljava/util/List;	b	getPlacementsForFeature
	m	(Lgs;Ldgd;)Ljava/util/List;	b	lambda$generateRingPositions$5
	m	(Ljava/util/Set;Lgs;)V	b	lambda$generatePositions$3
	m	()Ljava/util/Optional;	c	getTypeNameForDataFixer
	m	(IILctw$a;Lcax;)I	c	getFirstOccupiedHeight
	m	(Lgs;)Ljava/util/stream/Stream;	c	lambda$findNearestMapFeature$7
	m	()Lcbz$f;	d	climateSampler
	m	()Lcbv;	e	getBiomeSource
	m	()I	f	getGenDepth
	m	()I	g	getSeaLevel
	m	()I	h	getMinY
	m	()V	i	ensureStructuresGenerated
	m	()V	j	generatePositions
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhb;	b	structureSets
	f	Lcbv;	c	biomeSource
	f	Lcbv;	d	runtimeBiomeSource
	f	Ljava/util/Optional;	e	structureOverrides
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Ljava/util/Map;	g	placementsForFeature
	f	Ljava/util/Map;	h	ringPositions
	f	Z	i	hasGeneratedPositions
	f	J	j	ringPlacementSeed
c	cqs	net/minecraft/world/level/chunk/ChunkSource
	m	(II)Lcra;	a	getChunkNow
	m	(IILcqt;Z)Lcqq;	a	getChunk
	m	(IIZ)Lcra;	a	getChunk
	m	(Lcac;Z)V	a	updateChunkForced
	m	(Ljava/util/function/BooleanSupplier;Z)V	a	tick
	m	(ZZ)V	a	setSpawnSettings
	m	(II)Z	b	hasChunk
	m	(II)Lcab;	c	getChunkForLighting
	m	()Ljava/lang/String;	e	gatherStats
	m	()I	h	getLoadedChunksCount
	m	()Ldio;	n	getLightEngine
c	cqt	net/minecraft/world/level/chunk/ChunkStatus
	m	()Ljava/util/List;	a	getStatusList
	m	(I)Lcqt;	a	getStatusAroundFullChunk
	m	(Ladw;Ldhr;Ladz;Ljava/util/function/Function;Lcqq;)Ljava/util/concurrent/CompletableFuture;	a	load
	m	(Lath;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$generate$20
	m	(Lcqt;)I	a	getDistance
	m	(Lcqt;Ladw;Lcqr;Ljava/util/List;Lcqq;)V	a	lambda$static$16
	m	(Lcqt;Ladw;Ldhr;Ladz;Ljava/util/function/Function;Lcqq;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$18
	m	(Lcqt;Ladz;Lcqq;)Ljava/util/concurrent/CompletableFuture;	a	lightChunk
	m	(Lcqt;Lcqq;)Z	a	isLighted
	m	(Lcqt;Ljava/util/concurrent/Executor;Ladw;Lcqr;Ldhr;Ladz;Ljava/util/function/Function;Ljava/util/List;Lcqq;Z)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$17
	m	(Lit/unimi/dsi/fastutil/ints/IntArrayList;)V	a	lambda$static$19
	m	(Ljava/lang/String;)Lcqt;	a	byName
	m	(Ljava/lang/String;Lcqt;ILjava/util/EnumSet;Lcqt$a;Lcqt$b;)Lcqt;	a	register
	m	(Ljava/lang/String;Lcqt;ILjava/util/EnumSet;Lcqt$a;Lcqt$b;Lcqt$c;)Lcqt;	a	register
	m	(Ljava/lang/String;Lcqt;ILjava/util/EnumSet;Lcqt$a;Lcqt$d;)Lcqt;	a	registerSimple
	m	(Ljava/util/concurrent/Executor;Ladw;Lcqr;Ldhr;Ladz;Ljava/util/function/Function;Ljava/util/List;Z)Ljava/util/concurrent/CompletableFuture;	a	generate
	m	()I	b	maxDistance
	m	(Lcqt;)Z	b	isOrAfter
	m	(Lcqt;Ladw;Lcqr;Ljava/util/List;Lcqq;)V	b	lambda$static$15
	m	(Lcqt;Ladw;Ldhr;Ladz;Ljava/util/function/Function;Lcqq;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$14
	m	(Lcqt;Lcqq;)Lcom/mojang/datafixers/util/Either;	b	lambda$static$7
	m	(Lcqt;Ljava/util/concurrent/Executor;Ladw;Lcqr;Ldhr;Ladz;Ljava/util/function/Function;Ljava/util/List;Lcqq;Z)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$13
	m	()I	c	getIndex
	m	(Lcqt;Ladw;Lcqr;Ljava/util/List;Lcqq;)V	c	lambda$static$11
	m	(Lcqt;Ladw;Ldhr;Ladz;Ljava/util/function/Function;Lcqq;)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$3
	m	(Lcqt;Lcqq;)Lcom/mojang/datafixers/util/Either;	c	lambda$static$5
	m	(Lcqt;Ljava/util/concurrent/Executor;Ladw;Lcqr;Ldhr;Ladz;Ljava/util/function/Function;Ljava/util/List;Lcqq;Z)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$12
	m	()Ljava/lang/String;	d	getName
	m	(Lcqt;Ladw;Lcqr;Ljava/util/List;Lcqq;)V	d	lambda$static$10
	m	(Lcqt;Ladw;Ldhr;Ladz;Ljava/util/function/Function;Lcqq;)Ljava/util/concurrent/CompletableFuture;	d	lambda$static$0
	m	(Lcqt;Ljava/util/concurrent/Executor;Ladw;Lcqr;Ldhr;Ladz;Ljava/util/function/Function;Ljava/util/List;Lcqq;Z)Ljava/util/concurrent/CompletableFuture;	d	lambda$static$8
	m	()Lcqt;	e	getParent
	m	(Lcqt;Ladw;Lcqr;Ljava/util/List;Lcqq;)V	e	lambda$static$9
	m	(Lcqt;Ljava/util/concurrent/Executor;Ladw;Lcqr;Ldhr;Ladz;Ljava/util/function/Function;Ljava/util/List;Lcqq;Z)Ljava/util/concurrent/CompletableFuture;	e	lambda$static$6
	m	()I	f	getRange
	m	(Lcqt;Ladw;Lcqr;Ljava/util/List;Lcqq;)V	f	lambda$static$4
	m	(Lcqt;Ljava/util/concurrent/Executor;Ladw;Lcqr;Ldhr;Ladz;Ljava/util/function/Function;Ljava/util/List;Lcqq;Z)Ljava/util/concurrent/CompletableFuture;	f	lambda$static$2
	m	()Lcqt$a;	g	getChunkType
	m	(Lcqt;Ladw;Lcqr;Ljava/util/List;Lcqq;)V	g	lambda$static$1
	m	()Ljava/util/EnumSet;	h	heightmapsAfter
	f	Ljava/util/EnumSet;	A	heightmapsAfter
	f	I	a	MAX_STRUCTURE_DISTANCE
	f	Ljava/util/EnumSet;	b	POST_FEATURES
	f	Lcqt;	c	EMPTY
	f	Lcqt;	d	STRUCTURE_STARTS
	f	Lcqt;	e	STRUCTURE_REFERENCES
	f	Lcqt;	f	BIOMES
	f	Lcqt;	g	NOISE
	f	Lcqt;	h	SURFACE
	f	Lcqt;	i	CARVERS
	f	Lcqt;	j	LIQUID_CARVERS
	f	Lcqt;	k	FEATURES
	f	Lcqt;	l	LIGHT
	f	Lcqt;	m	SPAWN
	f	Lcqt;	n	HEIGHTMAPS
	f	Lcqt;	o	FULL
	f	Ljava/util/EnumSet;	p	PRE_FEATURES
	f	Lcqt$c;	q	PASSTHROUGH_LOAD_TASK
	f	Ljava/util/List;	r	STATUS_BY_RANGE
	f	Lit/unimi/dsi/fastutil/ints/IntList;	s	RANGE_BY_STATUS
	f	Ljava/lang/String;	t	name
	f	I	u	index
	f	Lcqt;	v	parent
	f	Lcqt$b;	w	generationTask
	f	Lcqt$c;	x	loadingTask
	f	I	y	range
	f	Lcqt$a;	z	chunkType
c	cqt$a	net/minecraft/world/level/chunk/ChunkStatus$ChunkType
	m	()[Lcqt$a;	a	$values
	f	Lcqt$a;	a	PROTOCHUNK
	f	Lcqt$a;	b	LEVELCHUNK
	f	[Lcqt$a;	c	$VALUES
c	cqt$b	net/minecraft/world/level/chunk/ChunkStatus$GenerationTask
c	cqt$c	net/minecraft/world/level/chunk/ChunkStatus$LoadingTask
c	cqt$d	net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask
c	cqu	net/minecraft/world/level/chunk/DataLayer
	m	()[B	a	getData
	m	(I)Ljava/lang/String;	a	layerToString
	m	(II)V	a	set
	m	(III)I	a	get
	m	(IIII)V	a	set
	m	()Lcqu;	b	copy
	m	(I)I	b	get
	m	(III)I	b	getIndex
	m	()Z	c	isEmpty
	m	(I)I	c	getNibbleIndex
	m	(I)I	d	getByteIndex
	f	I	a	LAYER_COUNT
	f	I	b	LAYER_SIZE
	f	I	c	SIZE
	f	[B	d	data
	f	I	e	NIBBLE_SIZE
c	cqv	net/minecraft/world/level/chunk/EmptyLevelChunk
	m	()Z	A	isEmpty
	m	()Ladi$c;	B	getFullStatus
	m	(II)Z	a	isYSpaceEmpty
	m	(Lcmr;)V	a	setBlockEntity
	m	(Lgj;Lcov;Z)Lcov;	a	setBlockState
	m	(Lgj;Lcra$b;)Lcmr;	a	getBlockEntity
	m	(Lgj;)Lcov;	a_	getBlockState
	m	(Lcmr;)V	b	addAndRegisterBlockEntity
	m	(Lgj;)Ldix;	b_	getFluidState
	m	(Lgj;)V	d	removeBlockEntity
	m	(Lgj;)I	h	getLightEmission
	f	Lgs;	l	biome
c	cqw	net/minecraft/world/level/chunk/FeatureAccess
	m	(Lcwr;)Ldfr;	a	getStartForFeature
	m	(Lcwr;J)V	a	addReferenceForFeature
	m	(Lcwr;Ldfr;)V	a	setStartForFeature
	m	(Lcwr;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForFeature
	m	(Ljava/util/Map;)V	b	setAllReferences
	m	()Ljava/util/Map;	h	getAllReferences
c	cqx	net/minecraft/world/level/chunk/GlobalPalette
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
	m	(ILgu;Lcrg;Ljava/util/List;)Lcrf;	a	create
	m	(Ljava/lang/Object;)I	a	idFor
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
	m	(Lpy;)V	a	read
	m	()I	b	getSize
	m	(Lpy;)V	b	write
	m	()Lcrf;	c	copy
	f	Lgu;	a	registry
c	cqy	net/minecraft/world/level/chunk/HashMapPalette
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
	m	(ILgu;Lcrg;Ljava/util/List;)Lcrf;	a	create
	m	(Ljava/lang/Object;)I	a	idFor
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
	m	(Lpy;)V	a	read
	m	()I	b	getSize
	m	(Lpy;)V	b	write
	m	()Lcrf;	c	copy
	m	()Ljava/util/List;	d	getEntries
	f	Lgu;	a	registry
	f	Laim;	b	values
	f	Lcrg;	c	resizeHandler
	f	I	d	bits
c	cqz	net/minecraft/world/level/chunk/ImposterProtoChunk
	m	()Lcra;	A	getWrapped
	m	()I	N	getMaxLightLevel
	m	(Laxk;)V	a	addEntity
	m	(Lcbu;Lcbz$f;)V	a	fillBiomesFromNoise
	m	(Lcmr;)V	a	setBlockEntity
	m	(Lcqt;)V	a	setStatus
	m	(Lcts$a;)Lcqp;	a	getCarvingMask
	m	(Lctw$a;)Lctw;	a	getOrCreateHeightmapUnprimed
	m	(Lctw$a;II)I	a	getHeight
	m	(Lctw$a;[J)V	a	setHeightmap
	m	(Lcuz;)V	a	setBlendingData
	m	(Lcwr;)Ldfr;	a	getStartForFeature
	m	(Lcwr;J)V	a	addReferenceForFeature
	m	(Lcwr;Ldfr;)V	a	setStartForFeature
	m	(Lgj;Lcov;Z)Lcov;	a	setBlockState
	m	(Ljava/util/Map;)V	a	setAllStarts
	m	(Lok;)V	a	setBlockEntityNbt
	m	(Z)V	a	setUnsaved
	m	(Lgj;)Lcov;	a_	getBlockState
	m	(I)Lcrb;	b	getSection
	m	(Lcts$a;)Lcqp;	b	getOrCreateCarvingMask
	m	(Lcwr;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForFeature
	m	(Ljava/util/Map;)V	b	setAllReferences
	m	(Z)V	b	setLightCorrect
	m	(Lgj;)Ldix;	b_	getFluidState
	m	(Lctw$a;)Lctw$a;	c	fixType
	m	(Lgj;)Lcmr;	c_	getBlockEntity
	m	()[Lcrb;	d	getSections
	m	(Lgj;)V	d	removeBlockEntity
	m	(Lgj;)V	e	markPosForPostprocessing
	m	()Lcac;	f	getPos
	m	(Lgj;)Lok;	f	getBlockEntityNbt
	m	()Ljava/util/Map;	g	getAllStarts
	m	(Lgj;)Lok;	g	getBlockEntityNbtForSaving
	m	()Ljava/util/Map;	h	getAllReferences
	m	()Z	i	isUnsaved
	m	()Lcqt;	j	getStatus
	m	()Ljava/util/stream/Stream;	n	getLights
	m	()Ldrb;	o	getBlockTicks
	m	()Ldrb;	p	getFluidTicks
	m	()Lcqq$a;	q	getTicksForSerialization
	m	()Lcuz;	t	getBlendingData
	m	()Z	v	isLightCorrect
	f	Lcra;	l	wrapped
	f	Z	m	allowWrites
c	cra	net/minecraft/world/level/chunk/LevelChunk
	m	()Z	A	isEmpty
	m	()Ladi$c;	B	getFullStatus
	m	()V	C	runPostLoad
	m	()Lcav;	D	getLevel
	m	()Ljava/util/Map;	E	getBlockEntities
	m	()V	F	postProcessGeneration
	m	()V	G	clearAllBlockEntities
	m	()V	H	registerAllBlockEntitiesAfterLevelLoad
	m	()Z	I	isClientLightReady
	m	()Z	J	isInLevel
	m	(I)Lcsz;	a	getEventDispatcher
	m	(III)Ldix;	a	getFluidState
	m	(Ladw;)V	a	registerTickContainerInLevel
	m	(Laxk;)V	a	addEntity
	m	(Lcmr;)V	a	setBlockEntity
	m	(Lcmr;Lcms;)Lcny;	a	createTicker
	m	(Lcmr;Lcms;Lgj;Lcra$d;)Lcra$d;	a	lambda$updateBlockEntityTicker$7
	m	(Lcra$d;)V	a	lambda$clearAllBlockEntities$5
	m	(Lgj;Lcmt;Lok;)V	a	lambda$replaceWithPacketData$3
	m	(Lgj;Lcov;Z)Lcov;	a	setBlockState
	m	(Lgj;Lcra$b;)Lcmr;	a	getBlockEntity
	m	(Lgj;Lok;)Lcmr;	a	promotePendingBlockEntity
	m	(Lpy;Lok;Ljava/util/function/Consumer;)V	a	replaceWithPacketData
	m	(Lgj;)Lcov;	a_	getBlockState
	m	(III)Ljava/lang/String;	b	lambda$getFluidState$2
	m	(Ladw;)V	b	unregisterTickContainerFromLevel
	m	(Lcmr;)V	b	addAndRegisterBlockEntity
	m	(Ljava/util/function/Supplier;)V	b	setFullStatus
	m	(Lgj;)Ldix;	b_	getFluidState
	m	(I)Lcsz;	c	lambda$getEventDispatcher$0
	m	(III)Ljava/lang/String;	c	lambda$getBlockState$1
	m	(J)V	c	unpackTicks
	m	(Lcmr;)V	c	removeGameEventListener
	m	(Z)V	c	setLoaded
	m	(Lgj;)Lcmr;	c_	getBlockEntity
	m	(Lcmr;)V	d	addGameEventListener
	m	(Lgj;)V	d	removeBlockEntity
	m	(Z)V	d	setClientLightReady
	m	(Lcmr;)V	e	updateBlockEntityTicker
	m	(Lcmr;)V	f	lambda$registerAllBlockEntitiesAfterLevelLoad$6
	m	(Lgj;)Lok;	g	getBlockEntityNbtForSaving
	m	()Lcqt;	j	getStatus
	m	(Lgj;)Lcmr;	j	createBlockEntity
	m	(Lgj;)Z	k	isTicking
	m	(Lgj;)V	l	removeBlockEntityTicker
	m	(Lgj;)Z	m	lambda$getLights$4
	m	()Ljava/util/stream/Stream;	n	getLights
	m	()Ldrb;	o	getBlockTicks
	m	()Ldrb;	p	getFluidTicks
	m	()Lcqq$a;	q	getTicksForSerialization
	f	Lorg/slf4j/Logger;	l	LOGGER
	f	Lcny;	m	NULL_TICKER
	f	Ljava/util/Map;	n	tickersInLevel
	f	Z	o	loaded
	f	Z	p	clientLightReady
	f	Lcav;	q	level
	f	Ljava/util/function/Supplier;	r	fullStatus
	f	Lcra$c;	s	postLoad
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	t	gameEventDispatcherSections
	f	Ldqt;	u	blockTicks
	f	Ldqt;	v	fluidTicks
c	cra$1	net/minecraft/world/level/chunk/LevelChunk$1
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Lgj;	c	getPos
	m	()Ljava/lang/String;	d	getType
c	cra$a	net/minecraft/world/level/chunk/LevelChunk$BoundTickingBlockEntity
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Lgj;	c	getPos
	m	()Ljava/lang/String;	d	getType
	f	Lcra;	a	this$0
	f	Lcmr;	b	blockEntity
	f	Lcms;	c	ticker
	f	Z	d	loggedInvalidBlockState
c	cra$b	net/minecraft/world/level/chunk/LevelChunk$EntityCreationType
	m	()[Lcra$b;	a	$values
	f	Lcra$b;	a	IMMEDIATE
	f	Lcra$b;	b	QUEUED
	f	Lcra$b;	c	CHECK
	f	[Lcra$b;	d	$VALUES
c	cra$c	net/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor
c	cra$d	net/minecraft/world/level/chunk/LevelChunk$RebindableTickingBlockEntityWrapper
	m	()V	a	tick
	m	(Lcny;)V	a	rebind
	m	()Z	b	isRemoved
	m	()Lgj;	c	getPos
	m	()Ljava/lang/String;	d	getType
	f	Lcra;	a	this$0
	f	Lcny;	b	ticker
c	crb	net/minecraft/world/level/chunk/LevelChunkSection
	m	()V	a	acquire
	m	(I)I	a	getBottomBlockY
	m	(III)Lcov;	a	getBlockState
	m	(IIILcov;)Lcov;	a	setBlockState
	m	(IIILcov;Z)Lcov;	a	setBlockState
	m	(Lcbu;Lcbz$f;II)V	a	fillBiomesFromNoise
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
	m	(Lpy;)V	a	read
	m	()V	b	release
	m	(III)Ldix;	b	getFluidState
	m	(Lpy;)V	b	write
	m	()Z	c	hasOnlyAir
	m	(III)Lgs;	c	getNoiseBiome
	m	()Z	d	isRandomlyTicking
	m	()Z	e	isRandomlyTickingBlocks
	m	()Z	f	isRandomlyTickingFluids
	m	()I	g	bottomBlockY
	m	()V	h	recalcBlockCounts
	m	()Lcrh;	i	getStates
	m	()Lcrh;	j	getBiomes
	m	()I	k	getSerializedSize
	f	I	a	SECTION_WIDTH
	f	I	b	SECTION_HEIGHT
	f	I	c	SECTION_SIZE
	f	I	d	BIOME_CONTAINER_BITS
	f	I	e	bottomBlockY
	f	S	f	nonEmptyBlockCount
	f	S	g	tickingBlockCount
	f	S	h	tickingFluidCount
	f	Lcrh;	i	states
	f	Lcrh;	j	biomes
c	crb$a	net/minecraft/world/level/chunk/LevelChunkSection$1BlockCounter
	m	(Lcov;I)V	a	accept
	f	I	a	nonEmptyBlockCount
	f	I	b	tickingBlockCount
	f	I	c	tickingFluidCount
	f	Lcrb;	d	this$0
c	crc	net/minecraft/world/level/chunk/LightChunkGetter
	m	(Lcbe;Lhf;)V	a	onLightUpdate
	m	(II)Lcab;	c	getChunkForLighting
	m	()Lcab;	o	getLevel
c	crd	net/minecraft/world/level/chunk/LinearPalette
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
	m	(ILgu;Lcrg;Ljava/util/List;)Lcrf;	a	create
	m	(Ljava/lang/Object;)I	a	idFor
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
	m	(Lpy;)V	a	read
	m	()I	b	getSize
	m	(Lpy;)V	b	write
	m	()Lcrf;	c	copy
	f	Lgu;	a	registry
	f	[Ljava/lang/Object;	b	values
	f	Lcrg;	c	resizeHandler
	f	I	d	bits
	f	I	e	size
c	cre	net/minecraft/world/level/chunk/MissingPaletteEntryException
c	crf	net/minecraft/world/level/chunk/Palette
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
	m	(Ljava/lang/Object;)I	a	idFor
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
	m	(Lpy;)V	a	read
	m	()I	b	getSize
	m	(Lpy;)V	b	write
	m	()Lcrf;	c	copy
c	crf$a	net/minecraft/world/level/chunk/Palette$Factory
c	crg	net/minecraft/world/level/chunk/PaletteResize
c	crh	net/minecraft/world/level/chunk/PalettedContainer
	m	()V	a	acquire
	m	(I)Ljava/lang/Object;	a	get
	m	(III)Ljava/lang/Object;	a	get
	m	(IIILjava/lang/Object;)Ljava/lang/Object;	a	getAndSet
	m	(ILjava/lang/Object;)Ljava/lang/Object;	a	getAndSet
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$1
	m	(Lcqy;I)I	a	lambda$write$7
	m	(Lcrh$b;)V	a	count
	m	(Lcrh$b;Lit/unimi/dsi/fastutil/ints/Int2IntMap$Entry;)V	a	lambda$count$9
	m	(Lcrh$c;I)Lcrh$c;	a	createOrReuseData
	m	(Lgu;Lcom/mojang/serialization/Codec;Lcrh$e;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lgu;Lcrf;I)I	a	lambda$read$6
	m	(Lgu;Lcrh$e;)Lcrh$d;	a	write
	m	(Lgu;Lcrh$e;Lcrh$d;)Lcom/mojang/serialization/DataResult;	a	read
	m	(Lgu;Lcrh$e;Lcrh;)Lcrh$d;	a	lambda$codec$3
	m	(Lit/unimi/dsi/fastutil/ints/Int2IntOpenHashMap;I)V	a	lambda$count$8
	m	(Ljava/util/function/Consumer;)V	a	getAll
	m	(Ljava/util/function/Consumer;Lcrf;I)V	a	lambda$getAll$4
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
	m	(Lpy;)V	a	read
	m	([ILjava/util/function/IntUnaryOperator;)V	a	swapPalette
	m	()V	b	release
	m	(IIILjava/lang/Object;)Ljava/lang/Object;	b	getAndSetUnchecked
	m	(ILjava/lang/Object;)V	b	set
	m	(Lgu;Lcrh$e;Lcrh$d;)Lcom/mojang/serialization/DataResult;	b	lambda$codec$2
	m	(Lpy;)V	b	write
	m	()I	c	getSerializedSize
	m	(IIILjava/lang/Object;)V	c	set
	m	(ILjava/lang/Object;)I	c	lambda$read$5
	m	()Lcrh;	d	copy
	m	(ILjava/lang/Object;)I	d	lambda$new$0
	f	I	a	MIN_PALETTE_BITS
	f	Lcrg;	b	dummyPaletteResize
	f	Lgu;	c	registry
	f	Lcrh$c;	d	data
	f	Lcrh$e;	e	strategy
	f	Lajw;	f	threadingDetector
c	crh$a	net/minecraft/world/level/chunk/PalettedContainer$Configuration
	m	()Lcrf$a;	a	factory
	m	(Lgu;Lcrg;I)Lcrh$c;	a	createData
	m	()I	b	bits
	f	Lcrf$a;	a	factory
	f	I	b	bits
c	crh$b	net/minecraft/world/level/chunk/PalettedContainer$CountConsumer
c	crh$c	net/minecraft/world/level/chunk/PalettedContainer$Data
	m	()I	a	getSerializedSize
	m	(Lcrf;Laik;)V	a	copyFrom
	m	(Lpy;)V	a	write
	m	()Lcrh$a;	b	configuration
	m	()Laik;	c	storage
	m	()Lcrf;	d	palette
	f	Lcrh$a;	a	configuration
	f	Laik;	b	storage
	f	Lcrf;	c	palette
c	crh$d	net/minecraft/world/level/chunk/PalettedContainer$DiscData
	m	()Ljava/util/List;	a	paletteEntries
	m	()Ljava/util/Optional;	b	storage
	f	Ljava/util/List;	a	paletteEntries
	f	Ljava/util/Optional;	b	storage
c	crh$e	net/minecraft/world/level/chunk/PalettedContainer$Strategy
	m	()I	a	size
	m	(III)I	a	getIndex
	m	(Lgu;I)Lcrh$a;	a	getConfiguration
	m	(Lgu;I)I	b	calculateBitsForSerialization
	f	Lcrf$a;	a	SINGLE_VALUE_PALETTE_FACTORY
	f	Lcrf$a;	b	LINEAR_PALETTE_FACTORY
	f	Lcrf$a;	c	HASHMAP_PALETTE_FACTORY
	f	Lcrh$e;	d	SECTION_STATES
	f	Lcrh$e;	e	SECTION_BIOMES
	f	Lcrf$a;	f	GLOBAL_PALETTE_FACTORY
	f	I	g	sizeBits
c	crh$e$1	net/minecraft/world/level/chunk/PalettedContainer$Strategy$1
	m	(Lgu;I)Lcrh$a;	a	getConfiguration
c	crh$e$2	net/minecraft/world/level/chunk/PalettedContainer$Strategy$2
	m	(Lgu;I)Lcrh$a;	a	getConfiguration
c	cri	net/minecraft/world/level/chunk/ProtoChunk
	m	()[Lit/unimi/dsi/fastutil/shorts/ShortList;	B	getPackedLights
	m	()Ljava/util/Map;	C	getBlockEntities
	m	()Ljava/util/List;	D	getEntities
	m	()Ljava/util/Map;	E	getBlockEntityNbts
	m	()Ldqt;	F	unpackBlockTicks
	m	()Ldqt;	G	unpackFluidTicks
	m	(Laxk;)V	a	addEntity
	m	(Lcmr;)V	a	setBlockEntity
	m	(Lcqt;)V	a	setStatus
	m	(Lctk;)V	a	setBelowZeroRetrogen
	m	(Lcts$a;)Lcqp;	a	getCarvingMask
	m	(Lcts$a;Lcqp;)V	a	setCarvingMask
	m	(Lcwr;Ldfr;)V	a	setStartForFeature
	m	(Ldio;)V	a	setLightEngine
	m	(Ldqw;)Ldqt;	a	unpackTicks
	m	(Lgj;Lcov;Z)Lcov;	a	setBlockState
	m	(SI)V	a	addPackedPostProcess
	m	(SILcac;)Lgj;	a	unpackOffsetCoordinates
	m	(Lgj;)Lcov;	a_	getBlockState
	m	(Lcts$a;)Lcqp;	b	getOrCreateCarvingMask
	m	(Lok;)V	b	addEntity
	m	(SI)V	b	addLight
	m	(Lgj;)Ldix;	b_	getFluidState
	m	(Lcts$a;)Lcqp;	c	lambda$getOrCreateCarvingMask$0
	m	(Lgj;)Lcmr;	c_	getBlockEntity
	m	(Lgj;)V	d	removeBlockEntity
	m	(Lgj;)V	e	markPosForPostprocessing
	m	(Lgj;)Lok;	g	getBlockEntityNbtForSaving
	m	()Lcqt;	j	getStatus
	m	(Lgj;)V	j	addLight
	m	(Lgj;)S	k	packOffsetCoordinates
	m	()Ljava/util/stream/Stream;	n	getLights
	m	()Ldrb;	o	getBlockTicks
	m	()Ldrb;	p	getFluidTicks
	m	()Lcqq$a;	q	getTicksForSerialization
	m	()Lctk;	x	getBelowZeroRetrogen
	m	()Lcax;	z	getHeightAccessorForGeneration
	f	Ldio;	l	lightEngine
	f	Lcqt;	m	status
	f	Ljava/util/List;	n	entities
	f	Ljava/util/List;	o	lights
	f	Ljava/util/Map;	p	carvingMasks
	f	Lctk;	q	belowZeroRetrogen
	f	Ldqw;	r	blockTicks
	f	Ldqw;	s	fluidTicks
c	crj	net/minecraft/world/level/chunk/SingleValuePalette
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
	m	(ILgu;Lcrg;Ljava/util/List;)Lcrf;	a	create
	m	(Ljava/lang/Object;)I	a	idFor
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
	m	(Lpy;)V	a	read
	m	()I	b	getSize
	m	(Lpy;)V	b	write
	m	()Lcrf;	c	copy
	f	Lgu;	a	registry
	f	Ljava/lang/Object;	b	value
	f	Lcrg;	c	resizeHandler
c	crk	net/minecraft/world/level/chunk/UpgradeData
	m	()Z	a	isEmpty
	m	(Lcav;Lcrk$a;)V	a	lambda$upgrade$6
	m	(Lcav;Ldqx;)V	a	lambda$upgrade$5
	m	(Lcdq;)Ljava/lang/String;	a	lambda$write$7
	m	(Lcov;Lgo;Lcaw;Lgj;Lgj;)Lcov;	a	updateState
	m	(Lcra;)V	a	upgrade
	m	(Lcra;Lgp;)V	a	upgradeSides
	m	(Ldiw;)Ljava/lang/String;	a	lambda$write$9
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	lambda$new$3
	m	(Lok;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/List;)V	a	loadTicks
	m	(Loq;Ldqx;)V	a	lambda$write$10
	m	()Lok;	b	write
	m	(Lcav;Ldqx;)V	b	lambda$upgrade$4
	m	(Lcra;)V	b	upgradeInside
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	lambda$new$1
	m	(Loq;Ldqx;)V	b	lambda$write$8
	m	()Ljava/util/Optional;	c	lambda$new$2
	m	()Ljava/util/Optional;	d	lambda$new$0
	f	Lcrk;	a	EMPTY
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	TAG_INDICES
	f	[Lgp;	d	DIRECTIONS
	f	Ljava/util/EnumSet;	e	sides
	f	Ljava/util/List;	f	neighborBlockTicks
	f	Ljava/util/List;	g	neighborFluidTicks
	f	[[I	h	index
	f	Ljava/util/Map;	i	MAP
	f	Ljava/util/Set;	j	CHUNKY_FIXERS
c	crk$a	net/minecraft/world/level/chunk/UpgradeData$BlockFixer
	m	(Lcaw;)V	a	processChunk
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
c	crk$b	net/minecraft/world/level/chunk/UpgradeData$BlockFixers
	m	()[Lcrk$b;	a	$values
	f	Lcrk$b;	a	BLACKLIST
	f	Lcrk$b;	b	DEFAULT
	f	Lcrk$b;	c	CHEST
	f	Lcrk$b;	d	LEAVES
	f	Lcrk$b;	e	STEM_BLOCK
	f	[Lgo;	f	DIRECTIONS
	f	[Lcrk$b;	g	$VALUES
c	crk$b$1	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$1
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
c	crk$b$2	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$2
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
c	crk$b$3	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$3
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
c	crk$b$4	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$4
	m	()Ljava/util/List;	a	lambda$$0
	m	(Lcaw;)V	a	processChunk
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
	f	Ljava/lang/ThreadLocal;	g	queue
c	crk$b$5	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$5
	m	(Lcov;Lgo;Lcov;Lcaw;Lgj;Lgj;)Lcov;	a	updateShape
c	crl	net/minecraft/world/level/chunk/package-info
c	crm	net/minecraft/world/level/chunk/storage/ChunkScanAccess
	m	(Lcac;Lpa;)Ljava/util/concurrent/CompletableFuture;	a	scanChunk
c	crn	net/minecraft/world/level/chunk/storage/ChunkSerializer
	m	(Ladw;Lbhs;Lcac;Lok;)Lcri;	a	read
	m	(Ladw;Lcqq;)Lok;	a	write
	m	(Ladw;Lok;)Lcra$c;	a	postLoadChunk
	m	(Ladw;Lok;Lcqq$a;)V	a	saveTicks
	m	(Lcac;ILjava/lang/String;)V	a	logErrors
	m	(Lcac;Lyt;J)Z	a	lambda$unpackStructureReferences$11
	m	(Lcdq;)Ljava/lang/String;	a	lambda$saveTicks$8
	m	(Ldfz;Lcac;Ljava/util/Map;Ljava/util/Map;)Lok;	a	packStructureData
	m	(Ldfz;Lok;J)Ljava/util/Map;	a	unpackStructureStart
	m	(Ldiw;)Ljava/lang/String;	a	lambda$saveTicks$9
	m	(Lhb;)Lcom/mojang/serialization/Codec;	a	makeBiomeCodec
	m	(Lhc;Lcac;Lok;)Ljava/util/Map;	a	unpackStructureReferences
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	lambda$read$5
	m	(Lok;)Lcqt$a;	a	getChunkTypeFromTag
	m	(Lok;Ljava/lang/String;)Loq;	a	getListOfCompoundsOrNull
	m	(Lok;Lpd;)V	a	lambda$write$7
	m	(Loq;Ladw;Loq;Lcra;)V	a	lambda$postLoadChunk$10
	m	([Lit/unimi/dsi/fastutil/shorts/ShortList;)Loq;	a	packOffsets
	m	(Lcac;ILjava/lang/String;)V	b	lambda$read$1
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	lambda$read$4
	m	(Lok;Lpd;)V	b	lambda$write$6
	m	(Lcac;ILjava/lang/String;)V	c	lambda$read$0
	m	(Ljava/lang/String;)Ljava/util/Optional;	c	lambda$read$3
	m	(Ljava/lang/String;)Ljava/util/Optional;	d	lambda$read$2
	f	Lcom/mojang/serialization/Codec;	a	BLOCK_STATE_CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	TAG_UPGRADE_DATA
	f	Ljava/lang/String;	d	BLOCK_TICKS_TAG
	f	Ljava/lang/String;	e	FLUID_TICKS_TAG
c	cro	net/minecraft/world/level/chunk/storage/ChunkStorage
	m	(Lcac;Lok;)V	a	write
	m	(Lok;)I	a	getVersion
	m	(Lok;Lys;)V	a	lambda$injectDatafixingContext$0
	m	(Lok;Lys;Ljava/util/Optional;)V	a	injectDatafixingContext
	m	(Lys;Ljava/util/function/Supplier;Lok;Ljava/util/Optional;)Lok;	a	upgradeChunkTag
	m	(Lcac;)Lok;	f	read
	m	()V	m	flushWorker
	m	()Lcrm;	n	chunkScanner
	f	Lcrq;	a	worker
	f	Ldew;	b	legacyStructureHandler
	f	I	d	LAST_MONOLYTH_STRUCTURE_DATA_VERSION
	f	Lcom/mojang/datafixers/DataFixer;	e	fixerUpper
c	crp	net/minecraft/world/level/chunk/storage/EntityStorage
	m	(Lcac;)Ljava/util/concurrent/CompletableFuture;	a	loadEntities
	m	(Lcac;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$storeEntities$2
	m	(Lcac;Lok;)Lcse;	a	lambda$loadEntities$0
	m	(Lcse;)V	a	storeEntities
	m	(Lok;)I	a	getVersion
	m	(Lok;Lcac;)V	a	writeChunkPos
	m	(Loq;Laxk;)V	a	lambda$storeEntities$1
	m	(Z)V	a	flush
	m	(Lcac;)Lcse;	b	emptyChunk
	m	(Lok;)Lcac;	b	readChunkPos
	m	(Lok;)Lok;	c	upgradeChunkTag
	f	Lcom/mojang/datafixers/DataFixer;	a	fixerUpper
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	ENTITIES_TAG
	f	Ljava/lang/String;	d	POSITION_TAG
	f	Ladw;	e	level
	f	Lcrq;	f	worker
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	g	emptyChunks
	f	Lavc;	h	entityDeserializerQueue
c	crq	net/minecraft/world/level/chunk/storage/IOWorker
	m	()V	a	storePendingChunk
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$synchronize$4
	m	(Lavb;)Lave$b;	a	lambda$close$14
	m	(Lavb;Ljava/util/function/Supplier;)V	a	lambda$submitTask$11
	m	(Lcac;)Lok;	a	load
	m	(Lcac;Lcrq$a;)V	a	runStore
	m	(Lcac;Lok;)Ljava/util/concurrent/CompletableFuture;	a	store
	m	(Lcac;Lpa;)Ljava/util/concurrent/CompletableFuture;	a	scanChunk
	m	(Lcrq$a;)Ljava/util/concurrent/CompletableFuture;	a	lambda$synchronize$3
	m	(Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage;	a	lambda$synchronize$9
	m	(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	submitTask
	m	(Ljava/util/function/Supplier;Lavb;)Lave$b;	a	lambda$submitTask$12
	m	(Lok;Lcac;)Lcrq$a;	a	lambda$store$0
	m	(Z)Ljava/util/concurrent/CompletableFuture;	a	synchronize
	m	()V	b	tellStorePending
	m	(Lavb;)V	b	lambda$close$13
	m	(Lcac;)Ljava/util/concurrent/CompletableFuture;	b	loadAsync
	m	(Lcac;Lok;)Lcom/mojang/datafixers/util/Either;	b	lambda$store$1
	m	(Lcac;Lpa;)Lcom/mojang/datafixers/util/Either;	b	lambda$scanChunk$10
	m	(Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage;	b	lambda$synchronize$7
	m	()Lcom/mojang/datafixers/util/Either;	c	lambda$synchronize$8
	m	(Lcac;)Lcom/mojang/datafixers/util/Either;	c	lambda$loadAsync$2
	m	()Lcom/mojang/datafixers/util/Either;	d	lambda$synchronize$6
	m	()Lcom/mojang/datafixers/util/Either;	e	lambda$synchronize$5
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	b	shutdownRequested
	f	Lavc;	c	mailbox
	f	Lcrt;	d	storage
	f	Ljava/util/Map;	e	pendingWrites
c	crq$a	net/minecraft/world/level/chunk/storage/IOWorker$PendingStore
	f	Lok;	a	data
	f	Ljava/util/concurrent/CompletableFuture;	b	result
c	crq$b	net/minecraft/world/level/chunk/storage/IOWorker$Priority
	m	()[Lcrq$b;	a	$values
	f	Lcrq$b;	a	FOREGROUND
	f	Lcrq$b;	b	BACKGROUND
	f	Lcrq$b;	c	SHUTDOWN
	f	[Lcrq$b;	d	$VALUES
c	crr	net/minecraft/world/level/chunk/storage/RegionBitmap
	m	()Lit/unimi/dsi/fastutil/ints/IntSet;	a	getUsed
	m	(I)I	a	allocate
	m	(II)V	a	force
	m	(II)V	b	free
	f	Ljava/util/BitSet;	a	used
c	crs	net/minecraft/world/level/chunk/storage/RegionFile
	m	()V	a	flush
	m	(B)Z	a	isExternalStreamChunk
	m	(I)I	a	getNumSectors
	m	(II)I	a	packSectorOffset
	m	(Lcac;)Ljava/io/DataInputStream;	a	getChunkDataInputStream
	m	(Lcac;B)Ljava/io/DataInputStream;	a	createExternalChunkInputStream
	m	(Lcac;BLjava/io/InputStream;)Ljava/io/DataInputStream;	a	createChunkInputStream
	m	(Lcac;Ljava/nio/ByteBuffer;)V	a	write
	m	(Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream;	a	createStream
	m	(Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Lcrs$b;	a	writeToExternalFile
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	lambda$writeToExternalFile$1
	m	()I	b	getTimestamp
	m	(B)B	b	getExternalChunkVersion
	m	(I)I	b	getSectorNumber
	m	(Lcac;)Z	b	doesChunkExist
	m	()Ljava/nio/ByteBuffer;	c	createExternalStub
	m	(I)I	c	sizeToSectors
	m	(Lcac;)Ljava/io/DataOutputStream;	c	getChunkDataOutputStream
	m	()V	d	writeHeader
	m	(Lcac;)V	d	clear
	m	()V	e	padToFullSector
	m	(Lcac;)Z	e	hasChunk
	m	(Lcac;)Ljava/nio/file/Path;	f	getExternalChunkPath
	m	(Lcac;)I	g	getOffset
	m	(Lcac;)I	h	getOffsetIndex
	m	(Lcac;)V	i	lambda$write$0
	f	I	a	SECTOR_INTS
	f	Lcrr;	b	usedSectors
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	SECTOR_BYTES
	f	I	e	CHUNK_HEADER_SIZE
	f	I	f	HEADER_OFFSET
	f	Ljava/nio/ByteBuffer;	g	PADDING_BUFFER
	f	Ljava/lang/String;	h	EXTERNAL_FILE_EXTENSION
	f	I	i	EXTERNAL_STREAM_FLAG
	f	I	j	EXTERNAL_CHUNK_THRESHOLD
	f	I	k	CHUNK_NOT_PRESENT
	f	Ljava/nio/channels/FileChannel;	l	file
	f	Ljava/nio/file/Path;	m	externalFileDir
	f	Lcru;	n	version
	f	Ljava/nio/ByteBuffer;	o	header
	f	Ljava/nio/IntBuffer;	p	offsets
	f	Ljava/nio/IntBuffer;	q	timestamps
c	crs$a	net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer
	f	Lcrs;	a	this$0
	f	Lcac;	b	pos
c	crs$b	net/minecraft/world/level/chunk/storage/RegionFile$CommitOp
c	crt	net/minecraft/world/level/chunk/storage/RegionFileStorage
	m	()V	a	flush
	m	(Lcac;)Lok;	a	read
	m	(Lcac;Lok;)V	a	write
	m	(Lcac;Lpa;)V	a	scanChunk
	m	(Lcac;)Lcrs;	b	getRegionFile
	f	Ljava/lang/String;	a	ANVIL_EXTENSION
	f	I	b	MAX_CACHE_SIZE
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	c	regionCache
	f	Ljava/nio/file/Path;	d	folder
	f	Z	e	sync
c	cru	net/minecraft/world/level/chunk/storage/RegionFileVersion
	m	()I	a	getId
	m	(I)Lcru;	a	fromId
	m	(Lcru;)Lcru;	a	register
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	a	wrap
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	a	wrap
	m	(I)Z	b	isValidVersion
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	b	lambda$static$4
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	b	lambda$static$5
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	c	lambda$static$2
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	c	lambda$static$3
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	d	lambda$static$0
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	d	lambda$static$1
	f	Lcru;	a	VERSION_GZIP
	f	Lcru;	b	VERSION_DEFLATE
	f	Lcru;	c	VERSION_NONE
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	d	VERSIONS
	f	I	e	id
	f	Lcru$a;	f	inputWrapper
	f	Lcru$a;	g	outputWrapper
c	cru$a	net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper
c	crv	net/minecraft/world/level/chunk/storage/SectionStorage
	m	()Z	a	hasWork
	m	(J)V	a	setDirty
	m	(JLcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$readColumn$2
	m	(JZLjava/lang/Object;)V	a	lambda$readColumn$3
	m	(Lcac;)V	a	flush
	m	(Lcac;I)J	a	getKey
	m	(Lcac;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	writeColumn
	m	(Lcac;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V	a	readColumn
	m	(Lcom/mojang/serialization/Dynamic;)I	a	getVersion
	m	(Ljava/util/Map;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;Ljava/lang/Object;)V	a	lambda$writeColumn$5
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
	m	(J)V	b	onSectionLoad
	m	(Lcac;)V	b	readColumn
	m	(J)Ljava/util/Optional;	c	get
	m	(Lcac;)Lok;	c	tryRead
	m	(J)Ljava/util/Optional;	d	getOrLoad
	m	(Lcac;)V	d	writeColumn
	m	(J)Z	e	outsideStoredRange
	m	(J)Ljava/lang/Object;	f	getOrCreate
	m	(J)V	g	lambda$writeColumn$4
	m	(J)V	h	lambda$readColumn$1
	m	(J)V	i	lambda$getOrCreate$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	SECTIONS_TAG
	f	Lcax;	c	levelHeightAccessor
	f	Lcrq;	d	worker
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	e	storage
	f	Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;	f	dirty
	f	Ljava/util/function/Function;	g	codec
	f	Ljava/util/function/Function;	h	factory
	f	Lcom/mojang/datafixers/DataFixer;	i	fixerUpper
	f	Lakd;	j	type
c	crw	net/minecraft/world/level/chunk/storage/package-info
c	crx	net/minecraft/world/level/dimension/DimensionDefaults
	f	I	a	OVERWORLD_MIN_Y
	f	I	b	OVERWORLD_LEVEL_HEIGHT
	f	I	c	OVERWORLD_GENERATION_HEIGHT
	f	I	d	OVERWORLD_LOGICAL_HEIGHT
	f	I	e	NETHER_MIN_Y
	f	I	f	NETHER_LEVEL_HEIGHT
	f	I	g	NETHER_GENERATION_HEIGHT
	f	I	h	NETHER_LOGICAL_HEIGHT
	f	I	i	END_MIN_Y
	f	I	j	END_LEVEL_HEIGHT
	f	I	k	END_GENERATION_HEIGHT
	f	I	l	END_LOGICAL_HEIGHT
c	cry	net/minecraft/world/level/dimension/DimensionType
	m	()Z	a	hasSkyLight
	m	(F)[F	a	fillBrightnessRamp
	m	(I)F	a	brightness
	m	(J)F	a	timeOfDay
	m	(Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$create$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	parseLegacy
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Lcry;)Lcom/mojang/serialization/DataResult;	a	guardY
	m	(Lcry;Lcry;)D	a	getTeleportationScale
	m	(Lhc$e;)Lhc$e;	a	registerBuiltin
	m	(Lhc;J)Lhb;	a	defaultDimensions
	m	(Lhc;JZ)Lhb;	a	defaultDimensions
	m	(Ljava/util/Optional;)Ljava/util/OptionalLong;	a	lambda$static$0
	m	(Ljava/util/OptionalLong;)Ljava/util/Optional;	a	lambda$static$1
	m	(Ljava/util/OptionalLong;ZZZZDZZZZZIIILaif;Lyt;F)Lcry;	a	create
	m	(Lys;Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	getStorageFolder
	m	()Z	b	hasCeiling
	m	(J)I	b	moonPhase
	m	(Lcry;)Ljava/lang/Float;	b	lambda$static$5
	m	()Z	c	ultraWarm
	m	(Lcry;)Lyt;	c	lambda$static$4
	m	()Z	d	natural
	m	(Lcry;)Laif;	d	lambda$static$3
	m	()D	e	coordinateScale
	m	(Lcry;)Ljava/util/OptionalLong;	e	lambda$static$2
	m	()Z	f	piglinSafe
	m	()Z	g	bedWorks
	m	()Z	h	respawnAnchorWorks
	m	()Z	i	hasRaids
	m	()I	j	minY
	m	()I	k	height
	m	()I	l	logicalHeight
	m	()Z	m	createDragonFight
	m	()Z	n	hasFixedTime
	m	()Laif;	o	infiniburn
	m	()Lyt;	p	effectsLocation
	f	Z	A	natural
	f	D	B	coordinateScale
	f	Z	C	createDragonFight
	f	Z	D	piglinSafe
	f	Z	E	bedWorks
	f	Z	F	respawnAnchorWorks
	f	Z	G	hasRaids
	f	I	H	minY
	f	I	I	height
	f	I	J	logicalHeight
	f	Laif;	K	infiniburn
	f	Lyt;	L	effectsLocation
	f	F	M	ambientLight
	f	[F	N	brightnessRamp
	f	I	a	BITS_FOR_Y
	f	I	b	MIN_HEIGHT
	f	I	c	Y_SIZE
	f	I	d	MAX_Y
	f	I	e	MIN_Y
	f	I	f	WAY_ABOVE_MAX_Y
	f	I	g	WAY_BELOW_MIN_Y
	f	Lyt;	h	OVERWORLD_EFFECTS
	f	Lyt;	i	NETHER_EFFECTS
	f	Lyt;	j	END_EFFECTS
	f	Lcom/mojang/serialization/Codec;	k	DIRECT_CODEC
	f	[F	l	MOON_BRIGHTNESS_PER_PHASE
	f	Lys;	m	OVERWORLD_LOCATION
	f	Lys;	n	NETHER_LOCATION
	f	Lys;	o	END_LOCATION
	f	Lcry;	p	DEFAULT_OVERWORLD
	f	Lcry;	q	DEFAULT_NETHER
	f	Lcry;	r	DEFAULT_END
	f	Lys;	s	OVERWORLD_CAVES_LOCATION
	f	Lcry;	t	DEFAULT_OVERWORLD_CAVES
	f	Lcom/mojang/serialization/Codec;	u	CODEC
	f	I	v	MOON_PHASES
	f	Ljava/util/OptionalLong;	w	fixedTime
	f	Z	x	hasSkylight
	f	Z	y	hasCeiling
	f	Z	z	ultraWarm
c	crz	net/minecraft/world/level/dimension/LevelStem
	m	()Lgs;	a	typeHolder
	m	(JLhb;)Z	a	stable
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lhb;)Lhb;	a	sortMap
	m	()Lcqr;	b	generator
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lys;	b	OVERWORLD
	f	Lys;	c	NETHER
	f	Lys;	d	END
	f	Ljava/util/Set;	e	BUILTIN_ORDER
	f	Lgs;	f	type
	f	Lcqr;	g	generator
c	csa	net/minecraft/world/level/dimension/end/DragonRespawnAnimation
	m	()[Lcsa;	a	$values
	m	(Ladw;Lcsb;Ljava/util/List;ILgj;)V	a	tick
	f	Lcsa;	a	START
	f	Lcsa;	b	PREPARING_TO_SUMMON_PILLARS
	f	Lcsa;	c	SUMMONING_PILLARS
	f	Lcsa;	d	SUMMONING_DRAGON
	f	Lcsa;	e	END
	f	[Lcsa;	f	$VALUES
c	csa$1	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$1
	m	(Ladw;Lcsb;Ljava/util/List;ILgj;)V	a	tick
c	csa$2	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$2
	m	(Ladw;Lcsb;Ljava/util/List;ILgj;)V	a	tick
c	csa$3	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$3
	m	(Ladw;Lcsb;Ljava/util/List;ILgj;)V	a	tick
c	csa$4	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$4
	m	(Ladw;Lcsb;Ljava/util/List;ILgj;)V	a	tick
c	csa$5	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$5
	m	(Ladw;Lcsb;Ljava/util/List;ILgj;)V	a	tick
c	csb	net/minecraft/world/level/dimension/end/EndDragonFight
	m	()Lok;	a	saveData
	m	(Lbkc;Lawu;)V	a	onCrystalDestroyed
	m	(Lbkd;)V	a	setDragonKilled
	m	(Lcsa;)V	a	setRespawnStage
	m	(Lgj;)V	a	spawnNewGateway
	m	(Ljava/util/List;)V	a	respawnDragon
	m	(Z)V	a	spawnExitPortal
	m	()V	b	tick
	m	(Lbkd;)V	b	updateDragon
	m	()I	c	getCrystalsAlive
	m	()Z	d	hasPreviouslyKilledDragon
	m	()V	e	tryRespawn
	m	()V	f	resetSpikeCrystals
	m	()V	g	scanState
	m	()V	h	findOrCreateDragon
	m	()Z	i	hasActiveExitPortal
	m	()Lcpa$b;	j	findExitPortal
	m	()Z	k	isArenaLoaded
	m	()V	l	updatePlayers
	m	()V	m	updateCrystalCount
	m	()V	n	spawnNewGateway
	m	()Lbkd;	o	createNewDragon
	f	I	a	ARENA_TICKET_LEVEL
	f	I	b	DRAGON_SPAWN_Y
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	MAX_TICKS_BEFORE_DRAGON_RESPAWN
	f	I	e	TIME_BETWEEN_CRYSTAL_SCANS
	f	I	f	TIME_BETWEEN_PLAYER_SCANS
	f	I	g	ARENA_SIZE_CHUNKS
	f	I	h	GATEWAY_COUNT
	f	I	i	GATEWAY_DISTANCE
	f	Ljava/util/function/Predicate;	j	VALID_PLAYER
	f	Ladt;	k	dragonEvent
	f	Ladw;	l	level
	f	Ljava/util/List;	m	gateways
	f	Lcpa;	n	exitPortalPattern
	f	I	o	ticksSinceDragonSeen
	f	I	p	crystalsAlive
	f	I	q	ticksSinceCrystalsScanned
	f	I	r	ticksSinceLastPlayerScan
	f	Z	s	dragonKilled
	f	Z	t	previouslyKilled
	f	Ljava/util/UUID;	u	dragonUUID
	f	Z	v	needsStateScanning
	f	Lgj;	w	portalLocation
	f	Lcsa;	x	respawnStage
	f	I	y	respawnTime
	f	Ljava/util/List;	z	respawnCrystals
c	csc	net/minecraft/world/level/dimension/end/package-info
c	csd	net/minecraft/world/level/dimension/package-info
c	cse	net/minecraft/world/level/entity/ChunkEntities
	m	()Lcac;	a	getPos
	m	()Ljava/util/stream/Stream;	b	getEntities
	m	()Z	c	isEmpty
	f	Lcac;	a	pos
	f	Ljava/util/List;	b	entities
c	csf	net/minecraft/world/level/entity/ChunkStatusUpdateListener
c	csg	net/minecraft/world/level/entity/EntityAccess
	m	(Lcsh;)V	a	setLevelCallback
	m	()I	ae	getId
	m	(Laxk$c;)V	b	setRemoved
	m	()Ljava/util/stream/Stream;	cH	getSelfAndPassengers
	m	()Ljava/util/stream/Stream;	cI	getPassengersAndSelf
	m	()Lgj;	cW	blockPosition
	m	()Ljava/util/UUID;	cm	getUUID
	m	()Ldpj;	cw	getBoundingBox
	m	()Z	ds	shouldBeSaved
	m	()Z	dt	isAlwaysTicking
c	csh	net/minecraft/world/level/entity/EntityInLevelCallback
	m	()V	a	onMove
	m	(Laxk$c;)V	a	onRemove
	f	Lcsh;	a	NULL
c	csh$1	net/minecraft/world/level/entity/EntityInLevelCallback$1
	m	()V	a	onMove
	m	(Laxk$c;)V	a	onRemove
c	csi	net/minecraft/world/level/entity/EntityLookup
	m	()Ljava/lang/Iterable;	a	getAllEntities
	m	(I)Lcsg;	a	getEntity
	m	(Lcsg;)V	a	add
	m	(Lcsn;Ljava/util/function/Consumer;)V	a	getEntities
	m	(Ljava/util/UUID;)Lcsg;	a	getEntity
	m	()I	b	count
	m	(Lcsg;)V	b	remove
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	byId
	f	Ljava/util/Map;	c	byUuid
c	csj	net/minecraft/world/level/entity/EntityPersistentStorage
	m	(Lcac;)Ljava/util/concurrent/CompletableFuture;	a	loadEntities
	m	(Lcse;)V	a	storeEntities
	m	(Z)V	a	flush
c	csk	net/minecraft/world/level/entity/EntitySection
	m	()Z	a	isEmpty
	m	(Lcsg;)V	a	add
	m	(Lcsn;Ldpj;Ljava/util/function/Consumer;)V	a	getEntities
	m	(Lcst;)Lcst;	a	updateChunkStatus
	m	(Ldpj;Ljava/util/function/Consumer;)V	a	getEntities
	m	()Ljava/util/stream/Stream;	b	getEntities
	m	(Lcsg;)Z	b	remove
	m	()Lcst;	c	getStatus
	m	()I	d	size
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lail;	b	storage
	f	Lcst;	c	chunkStatus
c	csl	net/minecraft/world/level/entity/EntitySectionStorage
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getAllChunksWithExistingSections
	m	(II)Lit/unimi/dsi/fastutil/longs/LongSortedSet;	a	getChunkSections
	m	(J)Ljava/util/stream/LongStream;	a	getExistingSectionPositionsInChunk
	m	(Lcsn;Ldpj;Ljava/util/function/Consumer;)V	a	getEntities
	m	(Lcsn;Ldpj;Ljava/util/function/Consumer;Lcsk;)V	a	lambda$getEntities$2
	m	(Ldpj;Ljava/util/function/Consumer;)V	a	forEachAccessibleNonEmptySection
	m	(Ldpj;Ljava/util/function/Consumer;Lcsk;)V	a	lambda$getEntities$1
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;J)V	a	lambda$getAllChunksWithExistingSections$0
	m	()I	b	count
	m	(J)Ljava/util/stream/Stream;	b	getExistingSectionsInChunk
	m	(Ldpj;Ljava/util/function/Consumer;)V	b	getEntities
	m	(J)Lcsk;	c	getOrCreateSection
	m	(J)Lcsk;	d	getSection
	m	(J)V	e	remove
	m	(J)J	f	getChunkKeyFromSectionKey
	m	(J)Lcsk;	g	createSection
	f	Ljava/lang/Class;	a	entityClass
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectFunction;	b	intialSectionVisibility
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	c	sections
	f	Lit/unimi/dsi/fastutil/longs/LongSortedSet;	d	sectionIds
c	csm	net/minecraft/world/level/entity/EntityTickList
	m	()V	a	ensureActiveIsNotIterated
	m	(Laxk;)V	a	add
	m	(Ljava/util/function/Consumer;)V	a	forEach
	m	(Laxk;)V	b	remove
	m	(Laxk;)Z	c	contains
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	active
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	passive
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	c	iterated
c	csn	net/minecraft/world/level/entity/EntityTypeTest
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Ljava/lang/Class;)Lcsn;	a	forClass
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
c	csn$1	net/minecraft/world/level/entity/EntityTypeTest$1
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
	f	Ljava/lang/Class;	a	val$cls
c	cso	net/minecraft/world/level/entity/LevelCallback
	m	(Ljava/lang/Object;)V	a	onTrackingEnd
	m	(Ljava/lang/Object;)V	b	onTrackingStart
	m	(Ljava/lang/Object;)V	c	onTickingEnd
	m	(Ljava/lang/Object;)V	d	onTickingStart
	m	(Ljava/lang/Object;)V	e	onDestroyed
	m	(Ljava/lang/Object;)V	f	onCreated
c	csp	net/minecraft/world/level/entity/LevelEntityGetter
	m	()Ljava/lang/Iterable;	a	getAll
	m	(I)Lcsg;	a	get
	m	(Lcsn;Ldpj;Ljava/util/function/Consumer;)V	a	get
	m	(Lcsn;Ljava/util/function/Consumer;)V	a	get
	m	(Ldpj;Ljava/util/function/Consumer;)V	a	get
	m	(Ljava/util/UUID;)Lcsg;	a	get
c	csq	net/minecraft/world/level/entity/LevelEntityGetterAdapter
	m	()Ljava/lang/Iterable;	a	getAll
	m	(I)Lcsg;	a	get
	m	(Lcsn;Ldpj;Ljava/util/function/Consumer;)V	a	get
	m	(Lcsn;Ljava/util/function/Consumer;)V	a	get
	m	(Ldpj;Ljava/util/function/Consumer;)V	a	get
	m	(Ljava/util/UUID;)Lcsg;	a	get
	f	Lcsi;	a	visibleEntities
	f	Lcsl;	b	sectionStorage
c	csr	net/minecraft/world/level/entity/PersistentEntitySectionManager
	m	()V	a	tick
	m	(J)Z	a	areEntitiesLoaded
	m	(JLcsk;)V	a	removeSectionIfEmpty
	m	(JLjava/util/function/Consumer;)Z	a	storeChunkSections
	m	(Laip;J)V	a	lambda$dumpSections$17
	m	(Laip;Lcsr$b;J)V	a	lambda$dumpSections$16
	m	(Lcac;)Z	a	canPositionTick
	m	(Lcac;Ladi$c;)V	a	updateChunkStatus
	m	(Lcac;Lcst;)V	a	updateChunkStatus
	m	(Lcac;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$requestChunkLoad$8
	m	(Lcsg;)Z	a	addNewEntity
	m	(Lcsg;Lcst;)Lcst;	a	getEffectiveStatus
	m	(Lcsg;Z)Z	a	addEntity
	m	(Lcsk;)Ljava/util/stream/Stream;	a	lambda$storeChunkSections$7
	m	(Lcst;Lcsk;)V	a	lambda$updateChunkStatus$6
	m	(Lgj;)Z	a	canPositionTick
	m	(Ljava/io/Writer;)V	a	dumpSections
	m	(Ljava/util/UUID;)Z	a	isLoaded
	m	(Ljava/util/stream/Stream;)V	a	addLegacyChunkEntities
	m	()V	b	autoSave
	m	(J)V	b	ensureChunkQueuedForLoad
	m	(Lcsg;)Z	b	addEntityUuid
	m	(Ljava/util/stream/Stream;)V	b	addWorldGenChunkEntities
	m	()V	c	saveAll
	m	(J)V	c	requestChunkLoad
	m	(Lcsg;)V	c	startTicking
	m	()Lcsp;	d	getEntityGetter
	m	(J)Z	d	processChunkUnload
	m	(Lcsg;)V	d	stopTicking
	m	()Ljava/lang/String;	e	gatherStats
	m	(J)Z	e	lambda$saveAll$15
	m	(Lcsg;)V	e	startTracking
	m	()V	f	processUnloads
	m	(J)V	f	lambda$autoSave$13
	m	(Lcsg;)V	f	stopTracking
	m	()V	g	processPendingLoads
	m	(J)Z	g	lambda$processUnloads$10
	m	(Lcsg;)V	g	unloadEntity
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	h	getAllChunksToSave
	m	(Lcsg;)V	h	lambda$saveAll$14
	m	(Lcsg;)V	i	lambda$autoSave$12
	m	(Lcsg;)V	j	lambda$processPendingLoads$11
	m	(Lcsg;)V	k	lambda$processChunkUnload$9
	m	(Lcsg;)Z	l	lambda$updateChunkStatus$5
	m	(Lcsg;)Z	m	lambda$updateChunkStatus$4
	m	(Lcsg;)Z	n	lambda$updateChunkStatus$3
	m	(Lcsg;)Z	o	lambda$updateChunkStatus$2
	m	(Lcsg;)V	p	lambda$addWorldGenChunkEntities$1
	m	(Lcsg;)V	q	lambda$addLegacyChunkEntities$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	b	knownUuids
	f	Lcso;	c	callbacks
	f	Lcsj;	d	permanentStorage
	f	Lcsi;	e	visibleEntityStorage
	f	Lcsl;	f	sectionStorage
	f	Lcsp;	g	entityGetter
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	h	chunkVisibility
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	i	chunkLoadStatuses
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	j	chunksToUnload
	f	Ljava/util/Queue;	k	loadingInbox
c	csr$a	net/minecraft/world/level/entity/PersistentEntitySectionManager$Callback
	m	()V	a	onMove
	m	(Laxk$c;)V	a	onRemove
	m	(Lcst;Lcst;)V	a	updateStatus
	f	Lcsr;	b	this$0
	f	Lcsg;	c	entity
	f	J	d	currentSectionKey
	f	Lcsk;	e	currentSection
c	csr$b	net/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus
	m	()[Lcsr$b;	a	$values
	f	Lcsr$b;	a	FRESH
	f	Lcsr$b;	b	PENDING
	f	Lcsr$b;	c	LOADED
	f	[Lcsr$b;	d	$VALUES
c	css	net/minecraft/world/level/entity/TransientEntitySectionManager
	m	()Lcsp;	a	getEntityGetter
	m	(J)Lcst;	a	lambda$new$0
	m	(JLcsk;)V	a	removeSectionIfEmpty
	m	(Lcac;)V	a	startTicking
	m	(Lcsg;)V	a	addEntity
	m	(Lcsk;)V	a	lambda$stopTicking$4
	m	()I	b	count
	m	(Lcac;)V	b	stopTicking
	m	(Lcsg;)Z	b	lambda$stopTicking$3
	m	(Lcsk;)V	b	lambda$startTicking$2
	m	()Ljava/lang/String;	c	gatherStats
	m	(Lcsg;)Z	c	lambda$startTicking$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcso;	b	callbacks
	f	Lcsi;	c	entityStorage
	f	Lcsl;	d	sectionStorage
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	tickingChunks
	f	Lcsp;	f	entityGetter
c	css$a	net/minecraft/world/level/entity/TransientEntitySectionManager$Callback
	m	()V	a	onMove
	m	(Laxk$c;)V	a	onRemove
	f	Lcss;	b	this$0
	f	Lcsg;	c	entity
	f	J	d	currentSectionKey
	f	Lcsk;	e	currentSection
c	cst	net/minecraft/world/level/entity/Visibility
	m	()Z	a	isTicking
	m	(Ladi$c;)Lcst;	a	fromFullChunkStatus
	m	()Z	b	isAccessible
	m	()[Lcst;	c	$values
	f	Lcst;	a	HIDDEN
	f	Lcst;	b	TRACKED
	f	Lcst;	c	TICKING
	f	Z	d	accessible
	f	Z	e	ticking
	f	[Lcst;	f	$VALUES
c	csu	net/minecraft/world/level/entity/package-info
c	csv	net/minecraft/world/level/gameevent/BlockPositionSource
	m	()Lctd;	a	getType
	m	(Lcav;)Ljava/util/Optional;	a	getPosition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcsv;)Ljava/util/Optional;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	c	pos
c	csv$a	net/minecraft/world/level/gameevent/BlockPositionSource$Type
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lpy;)Lcsv;	a	read
	m	(Lpy;Lcsv;)V	a	write
	m	(Lpy;Lctc;)V	a	write
	m	(Lpy;)Lctc;	b	read
c	csw	net/minecraft/world/level/gameevent/EntityPositionSource
	m	()Lctd;	a	getType
	m	(Lcav;)Ljava/util/Optional;	a	getPosition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcsw;)Ljava/lang/Integer;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	sourceEntityId
	f	Ljava/util/Optional;	d	sourceEntity
c	csw$a	net/minecraft/world/level/gameevent/EntityPositionSource$Type
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lpy;)Lcsw;	a	read
	m	(Lpy;Lcsw;)V	a	write
	m	(Lpy;Lctc;)V	a	write
	m	(Lpy;)Lctc;	b	read
c	csx	net/minecraft/world/level/gameevent/EuclideanGameEventDispatcher
	m	()Z	a	isEmpty
	m	(Lcav;Lcsy;Laxk;Lgj;Lcta;)Z	a	postToListener
	m	(Lcsy;Laxk;Lgj;)V	a	post
	m	(Lcta;)V	a	register
	m	(Lcta;)V	b	unregister
	f	Ljava/util/List;	b	listeners
	f	Lcav;	c	level
c	csy	net/minecraft/world/level/gameevent/GameEvent
	m	()Ljava/lang/String;	a	getName
	m	(Laif;)Z	a	is
	m	(Ljava/lang/String;)Lcsy;	a	register
	m	(Ljava/lang/String;I)Lcsy;	a	register
	m	()I	b	getNotificationRadius
	m	()Lgs$c;	c	builtInRegistryHolder
	f	Lcsy;	A	FLUID_PLACE
	f	Lcsy;	B	HIT_GROUND
	f	Lcsy;	C	MOB_INTERACT
	f	Lcsy;	D	LIGHTNING_STRIKE
	f	Lcsy;	E	MINECART_MOVING
	f	Lcsy;	F	PISTON_CONTRACT
	f	Lcsy;	G	PISTON_EXTEND
	f	Lcsy;	H	PRIME_FUSE
	f	Lcsy;	I	PROJECTILE_LAND
	f	Lcsy;	J	PROJECTILE_SHOOT
	f	Lcsy;	K	RAVAGER_ROAR
	f	Lcsy;	L	RING_BELL
	f	Lcsy;	M	SHEAR
	f	Lcsy;	N	SHULKER_CLOSE
	f	Lcsy;	O	SHULKER_OPEN
	f	Lcsy;	P	SPLASH
	f	Lcsy;	Q	STEP
	f	Lcsy;	R	SWIM
	f	Lcsy;	S	WOLF_SHAKING
	f	I	T	DEFAULT_NOTIFICATION_RADIUS
	f	Ljava/lang/String;	U	name
	f	I	V	notificationRadius
	f	Lgs$c;	W	builtInRegistryHolder
	f	Lcsy;	a	BLOCK_ATTACH
	f	Lcsy;	b	BLOCK_CHANGE
	f	Lcsy;	c	BLOCK_CLOSE
	f	Lcsy;	d	BLOCK_DESTROY
	f	Lcsy;	e	BLOCK_DETACH
	f	Lcsy;	f	BLOCK_OPEN
	f	Lcsy;	g	BLOCK_PLACE
	f	Lcsy;	h	BLOCK_PRESS
	f	Lcsy;	i	BLOCK_SWITCH
	f	Lcsy;	j	BLOCK_UNPRESS
	f	Lcsy;	k	BLOCK_UNSWITCH
	f	Lcsy;	l	CONTAINER_CLOSE
	f	Lcsy;	m	CONTAINER_OPEN
	f	Lcsy;	n	DISPENSE_FAIL
	f	Lcsy;	o	DRINKING_FINISH
	f	Lcsy;	p	EAT
	f	Lcsy;	q	ELYTRA_FREE_FALL
	f	Lcsy;	r	ENTITY_DAMAGED
	f	Lcsy;	s	ENTITY_KILLED
	f	Lcsy;	t	ENTITY_PLACE
	f	Lcsy;	u	EQUIP
	f	Lcsy;	v	EXPLODE
	f	Lcsy;	w	FISHING_ROD_CAST
	f	Lcsy;	x	FISHING_ROD_REEL_IN
	f	Lcsy;	y	FLAP
	f	Lcsy;	z	FLUID_PICKUP
c	csz	net/minecraft/world/level/gameevent/GameEventDispatcher
	m	()Z	a	isEmpty
	m	(Lcsy;Laxk;Lgj;)V	a	post
	m	(Lcta;)V	a	register
	m	(Lcta;)V	b	unregister
	f	Lcsz;	a	NOOP
c	csz$1	net/minecraft/world/level/gameevent/GameEventDispatcher$1
	m	()Z	a	isEmpty
	m	(Lcsy;Laxk;Lgj;)V	a	post
	m	(Lcta;)V	a	register
	m	(Lcta;)V	b	unregister
c	cta	net/minecraft/world/level/gameevent/GameEventListener
	m	()Lctc;	a	getListenerSource
	m	(Lcav;Lcsy;Laxk;Lgj;)Z	a	handleGameEvent
	m	()I	b	getListenerRadius
c	ctb	net/minecraft/world/level/gameevent/GameEventListenerRegistrar
	m	(Lcav;)V	a	onListenerRemoved
	m	(Lcav;Lhf;Ljava/util/function/Consumer;)V	a	ifEventDispatcherExists
	m	(Lcsz;)V	a	lambda$onListenerMove$2
	m	(Lcav;)V	b	onListenerMove
	m	(Lcsz;)V	b	lambda$onListenerMove$1
	m	(Lcsz;)V	c	lambda$onListenerRemoved$0
	f	Lcta;	a	listener
	f	Lhf;	b	sectionPos
c	ctc	net/minecraft/world/level/gameevent/PositionSource
	m	()Lctd;	a	getType
	m	(Lcav;)Ljava/util/Optional;	a	getPosition
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	ctd	net/minecraft/world/level/gameevent/PositionSourceType
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lctc;Lpy;)V	a	toNetwork
	m	(Ljava/lang/String;Lctd;)Lctd;	a	register
	m	(Lpy;Lctc;)V	a	write
	m	(Lyt;)Ljava/lang/IllegalArgumentException;	a	lambda$fromNetwork$0
	m	(Lpy;)Lctc;	b	read
	m	(Lpy;)Lctc;	c	fromNetwork
	f	Lctd;	a	BLOCK
	f	Lctd;	b	ENTITY
c	cte	net/minecraft/world/level/gameevent/package-info
c	ctf	net/minecraft/world/level/gameevent/vibrations/VibrationListener
	m	()Lctc;	a	getListenerSource
	m	(Lcav;)V	a	tick
	m	(Lcav;Lcsy;Laxk;Lgj;)Z	a	handleGameEvent
	m	(Lcav;Lcsy;Lgj;Lgj;)V	a	sendSignal
	m	(Lcav;Lgj;Lgj;)Z	a	isOccluded
	m	(Lcov;)Z	a	lambda$isOccluded$0
	m	(Lcsy;Laxk;)Z	a	isValidVibration
	m	()I	b	getListenerRadius
	f	Lctc;	a	listenerSource
	f	I	b	listenerRange
	f	Lctf$a;	c	config
	f	Ljava/util/Optional;	d	receivingEvent
	f	I	e	receivingDistance
	f	I	f	travelTimeInTicks
c	ctf$a	net/minecraft/world/level/gameevent/vibrations/VibrationListener$VibrationListenerConfig
	m	(Lcav;Lcta;Lcsy;I)V	a	onSignalReceive
	m	(Lcav;Lcta;Lgj;Lcsy;Laxk;)Z	a	shouldListen
c	ctg	net/minecraft/world/level/gameevent/vibrations/VibrationPath
	m	()I	a	getArrivalInTicks
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lctg;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lpy;)Lctg;	a	read
	m	(Lpy;Lctg;)V	a	write
	m	()Lgj;	b	getOrigin
	m	(Lctg;)Lctc;	b	lambda$static$1
	m	()Lctc;	c	getDestination
	m	(Lctg;)Lgj;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgj;	b	origin
	f	Lctc;	c	destination
	f	I	d	arrivalInTicks
c	cth	net/minecraft/world/level/gameevent/vibrations/package-info
c	cti	net/minecraft/world/level/levelgen/Aquifer
	m	()Z	a	shouldScheduleFluidUpdate
	m	(Lcti$a;)Lcti;	a	createDisabled
	m	(Lctp$b;D)Lcov;	a	computeSubstance
	m	(Lcua;Lcac;Lctp;Lctp;Lctp;Lctp;Lcum;IILcti$a;)Lcti;	a	create
c	cti$1	net/minecraft/world/level/levelgen/Aquifer$1
	m	()Z	a	shouldScheduleFluidUpdate
	m	(Lctp$b;D)Lcov;	a	computeSubstance
	f	Lcti$a;	a	val$fluidRule
c	cti$a	net/minecraft/world/level/levelgen/Aquifer$FluidPicker
c	cti$b	net/minecraft/world/level/levelgen/Aquifer$FluidStatus
	m	(I)Lcov;	a	at
	f	I	a	fluidLevel
	f	Lcov;	b	fluidType
c	cti$c	net/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer
	m	()Z	a	shouldScheduleFluidUpdate
	m	(I)I	a	gridX
	m	(II)D	a	similarity
	m	(III)I	a	getIndex
	m	(J)Lcti$b;	a	getAquiferStatus
	m	(Lctp$b;D)Lcov;	a	computeSubstance
	m	(Lctp$b;Lorg/apache/commons/lang3/mutable/MutableDouble;Lcti$b;Lcti$b;)D	a	calculatePressure
	m	(I)I	b	gridY
	m	(III)Lcti$b;	b	computeFluid
	m	(I)I	c	gridZ
	f	[[I	A	SURFACE_SAMPLING_OFFSETS_IN_CHUNKS
	f	I	a	X_RANGE
	f	I	b	Y_RANGE
	f	I	c	Z_RANGE
	f	I	d	X_SEPARATION
	f	I	e	Y_SEPARATION
	f	I	f	Z_SEPARATION
	f	I	g	X_SPACING
	f	I	h	Y_SPACING
	f	I	i	Z_SPACING
	f	I	j	MAX_REASONABLE_DISTANCE_TO_AQUIFER_CENTER
	f	D	k	FLOWING_UPDATE_SIMULARITY
	f	Lcua;	l	noiseChunk
	f	Lctp;	m	barrierNoise
	f	Lctp;	n	fluidLevelFloodednessNoise
	f	Lctp;	o	fluidLevelSpreadNoise
	f	Lctp;	p	lavaNoise
	f	Lcum;	q	positionalRandomFactory
	f	[Lcti$b;	r	aquiferCache
	f	[J	s	aquiferLocationCache
	f	Lcti$a;	t	globalFluidPicker
	f	Z	u	shouldScheduleFluidUpdate
	f	I	v	minGridX
	f	I	w	minGridY
	f	I	x	minGridZ
	f	I	y	gridSizeX
	f	I	z	gridSizeZ
c	ctj	net/minecraft/world/level/levelgen/Beardifier
	m	()D	a	minValue
	m	(III)D	a	getBuryContribution
	m	(Lcac;IILdfr;)V	a	lambda$new$2
	m	(Lctp$b;)D	a	compute
	m	(Lcwr;)Z	a	lambda$new$1
	m	([F)V	a	lambda$static$0
	m	()D	b	maxValue
	m	(III)D	b	getBeardContribution
	m	(III)D	c	computeBeardContribution
	f	I	a	BEARD_KERNEL_RADIUS
	f	I	f	BEARD_KERNEL_SIZE
	f	[F	g	BEARD_KERNEL
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	h	rigids
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	i	junctions
	f	Lit/unimi/dsi/fastutil/objects/ObjectListIterator;	j	pieceIterator
	f	Lit/unimi/dsi/fastutil/objects/ObjectListIterator;	k	junctionIterator
c	ctk	net/minecraft/world/level/levelgen/BelowZeroRetrogen
	m	()Lcqt;	a	targetStatus
	m	(II)Z	a	hasBedrockHole
	m	(Lcbu;Lcqq;)Lcbu;	a	getBiomeResolver
	m	(Lcbu;Ljava/util/function/Predicate;Lcqq;IIILcbz$f;)Lgs;	a	lambda$getBiomeResolver$7
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lcqt;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
	m	(Lcri;)V	a	replaceOldBedrock
	m	(Lcri;Lgj;)V	a	lambda$applyBedrockMask$6
	m	(Lctk;)Ljava/util/Optional;	a	lambda$static$3
	m	(Ljava/util/BitSet;)Ljava/util/stream/LongStream;	a	lambda$static$1
	m	(Ljava/util/stream/LongStream;)Ljava/util/BitSet;	a	lambda$static$0
	m	(Lok;)Lctk;	a	read
	m	()Z	b	hasBedrockHoles
	m	(Lcri;)V	b	applyBedrockMask
	m	(Lcri;Lgj;)V	b	lambda$replaceOldBedrock$5
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcax;	b	UPGRADE_HEIGHT_ACCESSOR
	f	Ljava/util/BitSet;	c	EMPTY
	f	Lcom/mojang/serialization/Codec;	d	BITSET_CODEC
	f	Lcom/mojang/serialization/Codec;	e	NON_EMPTY_CHUNK_STATUS
	f	Ljava/util/Set;	f	RETAINED_RETROGEN_BIOMES
	f	Lcqt;	g	targetStatus
	f	Ljava/util/BitSet;	h	missingBedrock
c	ctk$1	net/minecraft/world/level/levelgen/BelowZeroRetrogen$1
	m	()I	u_	getMinBuildHeight
	m	()I	v_	getHeight
c	ctl	net/minecraft/world/level/levelgen/BitRandomSource
	m	(I)I	a	next
	f	F	a	FLOAT_MULTIPLIER
	f	D	b	DOUBLE_MULTIPLIER
c	ctm	net/minecraft/world/level/levelgen/Column
	m	()Lctm;	a	line
	m	(I)Lctm;	a	below
	m	(II)Lctm$b;	a	around
	m	(Lcbb;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lgj$a;ILgo;)Ljava/util/OptionalInt;	a	scanDirection
	m	(Lcbb;Lgj;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/Optional;	a	scan
	m	(Ljava/util/OptionalInt;)Lctm;	a	withFloor
	m	(Ljava/util/OptionalInt;Ljava/util/OptionalInt;)Lctm;	a	create
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	(I)Lctm;	b	fromHighest
	m	(II)Lctm$b;	b	inside
	m	(Ljava/util/OptionalInt;)Lctm;	b	withCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	(I)Lctm;	c	above
	m	()Ljava/util/OptionalInt;	d	getHeight
	m	(I)Lctm;	d	fromLowest
c	ctm$a	net/minecraft/world/level/levelgen/Column$Line
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	f	Lctm$a;	a	INSTANCE
c	ctm$b	net/minecraft/world/level/levelgen/Column$Range
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	m	()I	e	ceiling
	m	()I	f	floor
	m	()I	g	height
	f	I	a	floor
	f	I	b	ceiling
c	ctm$c	net/minecraft/world/level/levelgen/Column$Ray
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	f	I	a	edge
	f	Z	b	pointingUp
c	ctn	net/minecraft/world/level/levelgen/DebugLevelSource
	m	(II)Lcov;	a	getBlockStateFor
	m	(IILcax;)Lcbh;	a	getBaseColumn
	m	(IILctw$a;Lcax;)I	a	getBaseHeight
	m	(J)Lcqr;	a	withSeed
	m	(Laed;)V	a	spawnOriginalMobs
	m	(Laed;JLcbt;Lcbm;Lcqq;Lcts$a;)V	a	applyCarvers
	m	(Laed;Lcbm;Lcqq;)V	a	buildSurface
	m	(Lcbn;Lcqq;Lcbm;)V	a	applyBiomeDecoration
	m	(Lcdq;)Ljava/util/stream/Stream;	a	lambda$static$2
	m	(Lctn;)Lhb;	a	lambda$static$0
	m	(Ljava/util/List;Lgj;)V	a	addDebugScreenInfo
	m	(Ljava/util/concurrent/Executor;Lcuy;Lcbm;Lcqq;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Lcbz$f;	d	climateSampler
	m	()I	f	getGenDepth
	m	()I	g	getSeaLevel
	m	()I	h	getMinY
	m	()Lhb;	j	biomes
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Lcov;	g	AIR
	f	Lcov;	h	BARRIER
	f	I	i	HEIGHT
	f	I	j	BARRIER_HEIGHT
	f	I	k	BLOCK_MARGIN
	f	Ljava/util/List;	l	ALL_BLOCKS
	f	I	m	GRID_WIDTH
	f	I	n	GRID_HEIGHT
	f	Lhb;	o	biomes
c	cto	net/minecraft/world/level/levelgen/Density
	f	D	a	SURFACE
	f	D	b	UNRECOVERABLY_DENSE
	f	D	c	UNRECOVERABLY_THIN
c	ctp	net/minecraft/world/level/levelgen/DensityFunction
	m	()D	a	minValue
	m	(DD)Lctp;	a	clamp
	m	(Lctp$b;)D	a	compute
	m	(Lctp$e;)Lctp;	a	mapAll
	m	(Lctp;)Lgs;	a	lambda$static$0
	m	([DLctp$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lctp;	d	abs
	m	()Lctp;	e	square
	m	()Lctp;	f	cube
	m	()Lctp;	g	halfNegative
	m	()Lctp;	h	quarterNegative
	m	()Lctp;	i	squeeze
	f	Lcom/mojang/serialization/Codec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	HOLDER_HELPER_CODEC
c	ctp$a	net/minecraft/world/level/levelgen/DensityFunction$ContextProvider
	m	(I)Lctp$b;	a	forIndex
	m	([DLctp;)V	a	fillAllDirectly
c	ctp$b	net/minecraft/world/level/levelgen/DensityFunction$FunctionContext
	m	()I	a	blockX
	m	()I	b	blockY
	m	()I	c	blockZ
	m	()Lcuy;	d	getBlender
c	ctp$c	net/minecraft/world/level/levelgen/DensityFunction$SimpleFunction
	m	(Lctp$e;)Lctp;	a	mapAll
	m	([DLctp$a;)V	a	fillArray
c	ctp$d	net/minecraft/world/level/levelgen/DensityFunction$SinglePointContext
	m	()I	a	blockX
	m	()I	b	blockY
	m	()I	c	blockZ
	f	I	a	blockX
	f	I	b	blockY
	f	I	c	blockZ
c	ctp$e	net/minecraft/world/level/levelgen/DensityFunction$Visitor
c	ctq	net/minecraft/world/level/levelgen/DensityFunctions
	m	()Lctp;	a	zero
	m	(D)Lctp;	a	constant
	m	(IIDD)Lctp;	a	yClampedGradient
	m	(J)Lctp;	a	endIslands
	m	(Lcom/mojang/datafixers/util/Either;)Lctp;	a	lambda$static$0
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	singleArgumentCodec
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec;	a	makeCodec
	m	(Lctp;)Lctp;	a	interpolated
	m	(Lctp;DD)Lctp;	a	mapFromUnitTo
	m	(Lctp;DDLctp;Lctp;)Lctp;	a	rangeChoice
	m	(Lctp;Lctp;)Lctp;	a	add
	m	(Lctp;Lctp;DLgs;)Lctp;	a	shiftedNoise2d
	m	(Lctp;Lctp;Lctp;)Lctp;	a	lerp
	m	(Lctp;Lctp;Lctp;Lctq$y$b;DD)Lctp;	a	terrainShaperSpline
	m	(Lctp;Lctq$k$a;)Lctp;	a	map
	m	(Lctp;Lgs;Lctq$ab$a;)Lctp;	a	weirdScaledSampler
	m	(Lcug;Lctp;)Lctp;	a	slide
	m	(Lgs;)Lctp;	a	noise
	m	(Lgs;D)Lctp;	a	noise
	m	(Lgs;DD)Lctp;	a	mappedNoise
	m	(Lgs;DDD)Lctp;	a	mappedNoise
	m	(Lgs;DDDD)Lctp;	a	mappedNoise
	m	(Lhb;)Lcom/mojang/serialization/Codec;	a	bootstrap
	m	(Lhb;Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	register
	m	(Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	doubleFunctionArgumentCodec
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	singleFunctionArgumentCodec
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BiFunction;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$doubleFunctionArgumentCodec$2
	m	()Lctp;	b	blendAlpha
	m	(Lctp;)Lctp;	b	flatCache
	m	(Lctp;Lctp;)Lctp;	b	mul
	m	(Lgs;)Lctp;	b	shiftA
	m	(Lgs;DD)Lctp;	b	noise
	m	()Lctp;	c	blendOffset
	m	(Lctp;)Lctp;	c	cache2d
	m	(Lctp;Lctp;)Lctp;	c	min
	m	(Lgs;)Lctp;	c	shiftB
	m	(Lctp;)Lctp;	d	cacheOnce
	m	(Lctp;Lctp;)Lctp;	d	max
	m	(Lgs;)Lctp;	d	shift
	m	(Lctp;)Lctp;	e	cacheAllInCell
	m	(Lctp;)Lctp;	f	blendDensity
	m	(Lctp;)Lcom/mojang/datafixers/util/Either;	g	lambda$static$1
	f	D	a	MAX_REASONABLE_NOISE_VALUE
	f	Lcom/mojang/serialization/Codec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	NOISE_VALUE_CODEC
c	ctq$1	net/minecraft/world/level/levelgen/DensityFunctions$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$Mapped$Type
	f	[I	b	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$TwoArgumentSimpleFunction$Type
	f	[I	c	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$MulOrAdd$Type
c	ctq$a	net/minecraft/world/level/levelgen/DensityFunctions$Ap2
	m	()D	a	minValue
	m	(Lctp$b;)D	a	compute
	m	(Lctp$e;)Lctp;	a	mapAll
	m	([DLctp$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lctq$aa$a;	j	type
	m	()Lctp;	k	argument1
	m	()Lctp;	l	argument2
	f	Lctq$aa$a;	e	type
	f	Lctp;	f	argument1
	f	Lctp;	g	argument2
	f	D	h	minValue
	f	D	i	maxValue
c	ctq$b	net/minecraft/world/level/levelgen/DensityFunctions$BeardifierMarker
	m	()D	a	minValue
	m	(Lctp$b;)D	a	compute
	m	([DLctp$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()[Lctq$b;	j	$values
	f	Lctq$b;	a	INSTANCE
	f	[Lctq$b;	f	$VALUES
c	ctq$c	net/minecraft/world/level/levelgen/DensityFunctions$BeardifierOrMarker
	m	()Lcom/mojang/serialization/Codec;	c	codec
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	ctq$d	net/minecraft/world/level/levelgen/DensityFunctions$BlendAlpha
	m	()D	a	minValue
	m	(Lctp$b;)D	a	compute
	m	([DLctp$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()[Lctq$d;	j	$values
	f	Lctq$d;	a	INSTANCE
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	[Lctq$d;	f	$VALUES
c	ctq$e	net/minecraft/world/level/levelgen/DensityFunctions$BlendDensity
	m	()D	a	minValue
	m	(Lctp$b;D)D	a	transform
	m	(Lctp$e;)Lctp;	a	mapAll
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lctp;	j	input
	f	Lctp;	a	input
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	ctq$f	net/minecraft/world/level/levelgen/DensityFunctions$BlendOffset
	m	()D	a	minValue
	m	(Lctp$b;)D	a	compute
	m	([DLctp$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()[Lctq$f;	j	$values
	f	Lctq$f;	a	INSTANCE
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	[Lctq$f;	f	$VALUES
c	ctq$g	net/minecraft/world/level/levelgen/DensityFunctions$Clamp
	m	()D	a	minValue
	m	(D)D	a	transform
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lctp$e;)Lctp;	a	mapAll
	m	()Lctp;	ac_	input
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lctp;	e	input
	f	D	f	minValue
	f	D	g	maxValue
	f	Lcom/mojang/serialization/MapCodec;	h	DATA_CODEC
c	ctq$h	net/minecraft/world/level/levelgen/DensityFunctions$Constant
	m	()D	a	minValue
	m	(Lctp$b;)D	a	compute
	m	([DLctp$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()D	j	value
	f	D	a	value
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lctq$h;	f	ZERO
c	ctq$i	net/minecraft/world/level/levelgen/DensityFunctions$EndIslandDensityFunction
	m	()D	a	minValue
	m	(Lctp$b;)D	a	compute
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldif;	e	islandNoise
c	ctq$j	net/minecraft/world/level/levelgen/DensityFunctions$HolderHolder
	m	()D	a	minValue
	m	(Lctp$b;)D	a	compute
	m	(Lctp$e;)Lctp;	a	mapAll
	m	([DLctp$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lgs;	j	function
	f	Lgs;	a	function
c	ctq$k	net/minecraft/world/level/levelgen/DensityFunctions$Mapped
	m	()D	a	minValue
	m	(D)D	a	transform
	m	(Lctp$e;)Lctp;	a	mapAll
	m	(Lctq$k$a;D)D	a	transform
	m	(Lctq$k$a;Lctp;)Lctq$k;	a	create
	m	()Lctp;	ac_	input
	m	()D	b	maxValue
	m	(Lctp$e;)Lctq$k;	b	mapAll
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lctq$k$a;	k	type
	f	Lctq$k$a;	a	type
	f	Lctp;	e	input
	f	D	f	minValue
	f	D	g	maxValue
c	ctq$k$a	net/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type
	m	()[Lctq$k$a;	a	$values
	m	(Lctp;)Lctq$k;	a	lambda$new$0
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lctq$k$a;	a	ABS
	f	Lctq$k$a;	b	SQUARE
	f	Lctq$k$a;	c	CUBE
	f	Lctq$k$a;	d	HALF_NEGATIVE
	f	Lctq$k$a;	e	QUARTER_NEGATIVE
	f	Lctq$k$a;	f	SQUEEZE
	f	Ljava/lang/String;	g	name
	f	Lcom/mojang/serialization/Codec;	h	codec
	f	[Lctq$k$a;	i	$VALUES
c	ctq$l	net/minecraft/world/level/levelgen/DensityFunctions$Marker
	m	()D	a	minValue
	m	(Lctp$b;)D	a	compute
	m	(Lctp$e;)Lctp;	a	mapAll
	m	([DLctp$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lctq$l$a;	j	type
	m	()Lctp;	k	wrapped
	f	Lctq$l$a;	a	type
	f	Lctp;	e	wrapped
c	ctq$l$a	net/minecraft/world/level/levelgen/DensityFunctions$Marker$Type
	m	()[Lctq$l$a;	a	$values
	m	(Lctp;)Lctq$m;	a	lambda$new$0
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lctq$l$a;	a	Interpolated
	f	Lctq$l$a;	b	FlatCache
	f	Lctq$l$a;	c	Cache2D
	f	Lctq$l$a;	d	CacheOnce
	f	Lctq$l$a;	e	CacheAllInCell
	f	Ljava/lang/String;	f	name
	f	Lcom/mojang/serialization/Codec;	g	codec
	f	[Lctq$l$a;	h	$VALUES
c	ctq$m	net/minecraft/world/level/levelgen/DensityFunctions$MarkerOrMarked
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lctq$l$a;	j	type
	m	()Lctp;	k	wrapped
c	ctq$n	net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd
	m	()D	a	minValue
	m	(D)D	a	transform
	m	(Lctp$e;)Lctp;	a	mapAll
	m	()Lctp;	ac_	input
	m	()D	b	maxValue
	m	()Lctq$aa$a;	j	type
	m	()Lctp;	k	argument1
	m	()Lctp;	l	argument2
	m	()Lctq$n$a;	m	specificType
	m	()D	n	argument
	f	Lctq$n$a;	e	specificType
	f	Lctp;	f	input
	f	D	g	minValue
	f	D	h	maxValue
	f	D	i	argument
c	ctq$n$a	net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type
	m	()[Lctq$n$a;	a	$values
	f	Lctq$n$a;	a	MUL
	f	Lctq$n$a;	b	ADD
	f	[Lctq$n$a;	c	$VALUES
c	ctq$o	net/minecraft/world/level/levelgen/DensityFunctions$Noise
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lctp$b;)D	a	compute
	m	(Lgs;DD)Lctq$o;	a	createUnseeded
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lgs;	j	noiseData
	m	()Ldic;	k	noise
	m	()D	l	xzScale
	m	()D	m	yScale
	f	Lcom/mojang/serialization/MapCodec;	a	DATA_CODEC
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lgs;	f	noiseData
	f	Ldic;	g	noise
	f	D	h	xzScale
	f	D	i	yScale
c	ctq$p	net/minecraft/world/level/levelgen/DensityFunctions$PureTransformer
	m	(D)D	a	transform
	m	(Lctp$b;)D	a	compute
	m	([DLctp$a;)V	a	fillArray
	m	()Lctp;	ac_	input
c	ctq$q	net/minecraft/world/level/levelgen/DensityFunctions$RangeChoice
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lctp$b;)D	a	compute
	m	(Lctp$e;)Lctp;	a	mapAll
	m	([DLctp$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lctp;	j	input
	m	()D	k	minInclusive
	m	()D	l	maxExclusive
	m	()Lctp;	m	whenInRange
	m	()Lctp;	n	whenOutOfRange
	f	Lcom/mojang/serialization/MapCodec;	a	DATA_CODEC
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lctp;	f	input
	f	D	g	minInclusive
	f	D	h	maxExclusive
	f	Lctp;	i	whenInRange
	f	Lctp;	j	whenOutOfRange
c	ctq$r	net/minecraft/world/level/levelgen/DensityFunctions$Shift
	m	(Lctp$b;)D	a	compute
	m	(Ldic;)Lctq$u;	a	withNewNoise
	m	(Lgs;)Lctq$r;	a	lambda$static$0
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lgs;	j	noiseData
	m	()Ldic;	k	offsetNoise
	f	Lgs;	a	noiseData
	f	Ldic;	e	offsetNoise
	f	Lcom/mojang/serialization/Codec;	f	CODEC
c	ctq$s	net/minecraft/world/level/levelgen/DensityFunctions$ShiftA
	m	(Lctp$b;)D	a	compute
	m	(Ldic;)Lctq$u;	a	withNewNoise
	m	(Lgs;)Lctq$s;	a	lambda$static$0
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lgs;	j	noiseData
	m	()Ldic;	k	offsetNoise
	f	Lgs;	a	noiseData
	f	Ldic;	e	offsetNoise
	f	Lcom/mojang/serialization/Codec;	f	CODEC
c	ctq$t	net/minecraft/world/level/levelgen/DensityFunctions$ShiftB
	m	(Lctp$b;)D	a	compute
	m	(Ldic;)Lctq$u;	a	withNewNoise
	m	(Lgs;)Lctq$t;	a	lambda$static$0
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lgs;	j	noiseData
	m	()Ldic;	k	offsetNoise
	f	Lgs;	a	noiseData
	f	Ldic;	e	offsetNoise
	f	Lcom/mojang/serialization/Codec;	f	CODEC
c	ctq$u	net/minecraft/world/level/levelgen/DensityFunctions$ShiftNoise
	m	()D	a	minValue
	m	(DDD)D	a	compute
	m	(Ldic;)Lctq$u;	a	withNewNoise
	m	()D	b	maxValue
	m	()Lgs;	j	noiseData
	m	()Ldic;	k	offsetNoise
c	ctq$v	net/minecraft/world/level/levelgen/DensityFunctions$ShiftedNoise
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lctp$b;)D	a	compute
	m	(Lctp$e;)Lctp;	a	mapAll
	m	(Lctp;Lctp;Lctp;DDLgs;)Lctq$v;	a	createUnseeded
	m	([DLctp$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lctp;	j	shiftX
	m	()Lctp;	k	shiftY
	m	()Lctp;	l	shiftZ
	m	()D	m	xzScale
	m	()D	n	yScale
	m	()Lgs;	o	noiseData
	m	()Ldic;	p	noise
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lctp;	e	shiftX
	f	Lctp;	f	shiftY
	f	Lctp;	g	shiftZ
	f	D	h	xzScale
	f	D	i	yScale
	f	Lgs;	j	noiseData
	f	Ldic;	k	noise
	f	Lcom/mojang/serialization/MapCodec;	l	DATA_CODEC
c	ctq$w	net/minecraft/world/level/levelgen/DensityFunctions$Slide
	m	()D	a	minValue
	m	(Lctp$b;D)D	a	transform
	m	(Lctp$e;)Lctp;	a	mapAll
	m	(Lctp;)Lctq$w;	a	lambda$static$0
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lctp;	j	input
	m	()Lcug;	k	settings
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcug;	e	settings
	f	Lctp;	f	input
c	ctq$x	net/minecraft/world/level/levelgen/DensityFunctions$Spline
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lctp$b;)D	a	compute
	m	(Lctp$e;)Lctp;	a	mapAll
	m	(Lctp$e;Lajy;)Lajy;	a	lambda$mapAll$1
	m	([DLctp$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lair;	j	spline
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lair;	e	spline
	f	D	f	minValue
	f	D	g	maxValue
	f	Lcom/mojang/serialization/MapCodec;	h	DATA_CODEC
c	ctq$y	net/minecraft/world/level/levelgen/DensityFunctions$TerrainShaperSpline
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lctp$b;)D	a	compute
	m	(Lctp$e;)Lctp;	a	mapAll
	m	(Lctp;Lctp;Lctp;Lctq$y$b;DD)Lctq$y;	a	createUnseeded
	m	([DLctp$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lctp;	j	continentalness
	m	()Lctp;	k	erosion
	m	()Lctp;	l	weirdness
	m	()Lcce;	m	shaper
	m	()Lctq$y$b;	n	spline
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lctp;	e	continentalness
	f	Lctp;	f	erosion
	f	Lctp;	g	weirdness
	f	Lcce;	h	shaper
	f	Lctq$y$b;	i	spline
	f	D	j	minValue
	f	D	k	maxValue
	f	Lcom/mojang/serialization/MapCodec;	l	DATA_CODEC
c	ctq$y$a	net/minecraft/world/level/levelgen/DensityFunctions$TerrainShaperSpline$Spline
c	ctq$y$b	net/minecraft/world/level/levelgen/DensityFunctions$TerrainShaperSpline$SplineType
	m	()[Lctq$y$b;	a	$values
	m	(Lctq$y$b;)Lctq$y$b;	a	lambda$static$0
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lctq$y$b;	a	OFFSET
	f	Lctq$y$b;	b	FACTOR
	f	Lctq$y$b;	c	JAGGEDNESS
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/util/Map;	e	BY_NAME
	f	Ljava/lang/String;	f	name
	f	Lctq$y$a;	g	spline
	f	[Lctq$y$b;	h	$VALUES
c	ctq$z	net/minecraft/world/level/levelgen/DensityFunctions$TransformerWithContext
	m	(Lctp$b;)D	a	compute
	m	(Lctp$b;D)D	a	transform
	m	([DLctp$a;)V	a	fillArray
	m	()Lctp;	j	input
c	ctq$aa	net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction
	m	(Lctq$aa$a;Lctp;Lctp;)Lctq$aa;	a	create
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lctq$aa$a;	j	type
	m	()Lctp;	k	argument1
	m	()Lctp;	l	argument2
	f	Lorg/slf4j/Logger;	a	LOGGER
c	ctq$aa$a	net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type
	m	()[Lctq$aa$a;	a	$values
	m	(Lctp;Lctp;)Lctq$aa;	a	lambda$new$0
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lctq$aa$a;	a	ADD
	f	Lctq$aa$a;	b	MUL
	f	Lctq$aa$a;	c	MIN
	f	Lctq$aa$a;	d	MAX
	f	Lcom/mojang/serialization/Codec;	e	codec
	f	Ljava/lang/String;	f	name
	f	[Lctq$aa$a;	g	$VALUES
c	ctq$ab	net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lctp$b;D)D	a	transform
	m	(Lctp$e;)Lctp;	a	mapAll
	m	(Lctp;Lgs;Lctq$ab$a;)Lctq$ab;	a	createUnseeded
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lctp;	j	input
	m	()Lgs;	k	noiseData
	m	()Ldic;	l	noise
	m	()Lctq$ab$a;	m	rarityValueMapper
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lctp;	e	input
	f	Lgs;	f	noiseData
	f	Ldic;	g	noise
	f	Lctq$ab$a;	h	rarityValueMapper
	f	Lcom/mojang/serialization/MapCodec;	i	DATA_CODEC
c	ctq$ab$a	net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper
	m	()[Lctq$ab$a;	a	$values
	m	(Lctq$ab$a;)Lctq$ab$a;	a	lambda$static$0
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lctq$ab$a;	a	TYPE1
	f	Lctq$ab$a;	b	TYPE2
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/util/Map;	d	BY_NAME
	f	Ljava/lang/String;	e	name
	f	Lit/unimi/dsi/fastutil/doubles/Double2DoubleFunction;	f	mapper
	f	D	g	maxRarity
	f	[Lctq$ab$a;	h	$VALUES
c	ctq$ac	net/minecraft/world/level/levelgen/DensityFunctions$YClampedGradient
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lctp$b;)D	a	compute
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()I	j	fromY
	m	()I	k	toY
	m	()D	l	fromValue
	m	()D	m	toValue
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	e	fromY
	f	I	f	toY
	f	D	g	fromValue
	f	D	h	toValue
	f	Lcom/mojang/serialization/MapCodec;	i	DATA_CODEC
c	ctr	net/minecraft/world/level/levelgen/FlatLevelSource
	m	(I)[Lcov;	a	lambda$getBaseColumn$2
	m	(IILcax;)Lcbh;	a	getBaseColumn
	m	(IILctw$a;Lcax;)I	a	getBaseHeight
	m	(J)Lcqr;	a	withSeed
	m	(Laed;)V	a	spawnOriginalMobs
	m	(Laed;JLcbt;Lcbm;Lcqq;Lcts$a;)V	a	applyCarvers
	m	(Laed;Lcbm;Lcqq;)V	a	buildSurface
	m	(Lcax;)I	a	getSpawnHeight
	m	(Lcov;)Lcov;	a	lambda$getBaseColumn$1
	m	(Lgs;)Lgs;	a	adjustBiome
	m	(Ljava/util/List;Lgj;)V	a	addDebugScreenInfo
	m	(Ljava/util/concurrent/Executor;Lcuy;Lcbm;Lcqq;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()Lcbz$f;	d	climateSampler
	m	()I	f	getGenDepth
	m	()I	g	getSeaLevel
	m	()I	h	getMinY
	m	()Lddc;	j	settings
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Lddc;	g	settings
c	cts	net/minecraft/world/level/levelgen/GenerationStep
c	cts$a	net/minecraft/world/level/levelgen/GenerationStep$Carving
	m	()Ljava/lang/String;	a	getName
	m	(Lcts$a;)Lcts$a;	a	lambda$static$0
	m	(Ljava/lang/String;)Lcts$a;	a	byName
	m	()[Lcts$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcts$a;	a	AIR
	f	Lcts$a;	b	LIQUID
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/util/Map;	d	BY_NAME
	f	Ljava/lang/String;	e	name
	f	[Lcts$a;	f	$VALUES
c	cts$b	net/minecraft/world/level/levelgen/GenerationStep$Decoration
	m	()[Lcts$b;	a	$values
	f	Lcts$b;	a	RAW_GENERATION
	f	Lcts$b;	b	LAKES
	f	Lcts$b;	c	LOCAL_MODIFICATIONS
	f	Lcts$b;	d	UNDERGROUND_STRUCTURES
	f	Lcts$b;	e	SURFACE_STRUCTURES
	f	Lcts$b;	f	STRONGHOLDS
	f	Lcts$b;	g	UNDERGROUND_ORES
	f	Lcts$b;	h	UNDERGROUND_DECORATION
	f	Lcts$b;	i	FLUID_SPRINGS
	f	Lcts$b;	j	VEGETAL_DECORATION
	f	Lcts$b;	k	TOP_LAYER_MODIFICATION
	f	[Lcts$b;	l	$VALUES
c	ctt	net/minecraft/world/level/levelgen/GeodeBlockSettings
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
	m	(Lctt;)Laif;	a	lambda$static$7
	m	(Lctt;)Laif;	b	lambda$static$6
	m	(Lctt;)Ljava/util/List;	c	lambda$static$5
	m	(Lctt;)Ldby;	d	lambda$static$4
	m	(Lctt;)Ldby;	e	lambda$static$3
	m	(Lctt;)Ldby;	f	lambda$static$2
	m	(Lctt;)Ldby;	g	lambda$static$1
	m	(Lctt;)Ldby;	h	lambda$static$0
	f	Ldby;	a	fillingProvider
	f	Ldby;	b	innerLayerProvider
	f	Ldby;	c	alternateInnerLayerProvider
	f	Ldby;	d	middleLayerProvider
	f	Ldby;	e	outerLayerProvider
	f	Ljava/util/List;	f	innerPlacements
	f	Laif;	g	cannotReplace
	f	Laif;	h	invalidBlocks
	f	Lcom/mojang/serialization/Codec;	i	CODEC
c	ctu	net/minecraft/world/level/levelgen/GeodeCrackSettings
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lctu;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lctu;)Ljava/lang/Double;	b	lambda$static$1
	m	(Lctu;)Ljava/lang/Double;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	generateCrackChance
	f	D	c	baseCrackSize
	f	I	d	crackPointOffset
c	ctv	net/minecraft/world/level/levelgen/GeodeLayerSettings
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lctv;)Ljava/lang/Double;	a	lambda$static$3
	m	(Lctv;)Ljava/lang/Double;	b	lambda$static$2
	m	(Lctv;)Ljava/lang/Double;	c	lambda$static$1
	m	(Lctv;)Ljava/lang/Double;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	filling
	f	D	c	innerLayer
	f	D	d	middleLayer
	f	D	e	outerLayer
	f	Lcom/mojang/serialization/Codec;	f	LAYER_RANGE
c	ctw	net/minecraft/world/level/levelgen/Heightmap
	m	()[J	a	getRawData
	m	(I)I	a	getFirstAvailable
	m	(II)I	a	getFirstAvailable
	m	(III)V	a	setHeight
	m	(IIILcov;)Z	a	update
	m	(Lcov;)Z	a	lambda$static$1
	m	(Lcqq;Lctw$a;[J)V	a	setRawData
	m	(Lcqq;Ljava/util/Set;)V	a	primeHeightmaps
	m	(II)I	b	getHighestTaken
	m	(Lcov;)Z	b	lambda$static$0
	m	(II)I	c	getIndex
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/Predicate;	b	NOT_AIR
	f	Ljava/util/function/Predicate;	c	MATERIAL_MOTION_BLOCKING
	f	Laik;	d	data
	f	Ljava/util/function/Predicate;	e	isOpaque
	f	Lcqq;	f	chunk
c	ctw$a	net/minecraft/world/level/levelgen/Heightmap$Types
	m	()Ljava/lang/String;	a	getSerializationKey
	m	(Lcov;)Z	a	lambda$static$1
	m	(Ljava/lang/String;)Lctw$a;	a	getFromKey
	m	(Ljava/util/HashMap;)V	a	lambda$static$2
	m	()Z	b	sendToClient
	m	(Lcov;)Z	b	lambda$static$0
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	keepAfterWorldgen
	m	()Ljava/util/function/Predicate;	e	isOpaque
	m	()[Lctw$a;	f	$values
	f	Lctw$a;	a	WORLD_SURFACE_WG
	f	Lctw$a;	b	WORLD_SURFACE
	f	Lctw$a;	c	OCEAN_FLOOR_WG
	f	Lctw$a;	d	OCEAN_FLOOR
	f	Lctw$a;	e	MOTION_BLOCKING
	f	Lctw$a;	f	MOTION_BLOCKING_NO_LEAVES
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Ljava/lang/String;	h	serializationKey
	f	Lctw$b;	i	usage
	f	Ljava/util/function/Predicate;	j	isOpaque
	f	Ljava/util/Map;	k	REVERSE_LOOKUP
	f	[Lctw$a;	l	$VALUES
c	ctw$b	net/minecraft/world/level/levelgen/Heightmap$Usage
	m	()[Lctw$b;	a	$values
	f	Lctw$b;	a	WORLDGEN
	f	Lctw$b;	b	LIVE_WORLD
	f	Lctw$b;	c	CLIENT
	f	[Lctw$b;	d	$VALUES
c	ctx	net/minecraft/world/level/levelgen/LegacyRandomSource
	m	()Lcun;	a	fork
	m	(I)I	a	next
	m	()Lcum;	b	forkPositional
	f	I	c	MODULUS_BITS
	f	J	d	MODULUS_MASK
	f	J	e	MULTIPLIER
	f	J	f	INCREMENT
	f	Ljava/util/concurrent/atomic/AtomicLong;	g	seed
	f	Lcty;	h	gaussianSource
c	ctx$a	net/minecraft/world/level/levelgen/LegacyRandomSource$LegacyPositionalRandomFactory
	m	(III)Lcun;	a	at
	m	(Ljava/lang/String;)Lcun;	a	fromHashOf
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
	f	J	a	seed
c	cty	net/minecraft/world/level/levelgen/MarsagliaPolarGaussian
	m	()V	a	reset
	m	()D	b	nextGaussian
	f	Lcun;	a	randomSource
	f	D	b	nextNextGaussian
	f	Z	c	haveNextNextGaussian
c	ctz	net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator
	m	(III)Lgs;	a	lambda$applyCarvers$9
	m	(IILcax;)Lcbh;	a	getBaseColumn
	m	(IILctw$a;Lcax;)I	a	getBaseHeight
	m	(II[Lcov;Ljava/util/function/Predicate;II)Ljava/util/OptionalInt;	a	iterateNoiseColumn
	m	(J)Lcqr;	a	withSeed
	m	(JLys;)Z	a	stable
	m	(Laed;)V	a	spawnOriginalMobs
	m	(Laed;JLcbt;Lcbm;Lcqq;Lcts$a;)V	a	applyCarvers
	m	(Laed;Lcbm;Lcqq;)V	a	buildSurface
	m	(Lcac;)Lgs;	a	lambda$applyCarvers$11
	m	(Lcbm;Lcqq;)Lctq$c;	a	lambda$doFill$14
	m	(Lcti$b;ILcti$b;Lcti$b;III)Lcti$b;	a	lambda$new$5
	m	(Lctz;)Lgs;	a	lambda$static$3
	m	(Lcua;IIILcov;)Lcov;	a	debugPreliminarySurfaceLevel
	m	(Lcuy;Lcbm;Lcqq;)V	a	doCreateBiomes
	m	(Lcuy;Lcbm;Lcqq;II)Lcqq;	a	doFill
	m	(Lcvw;Ljava/util/function/Function;Lcqq;Lcua;Lgj;Z)Ljava/util/Optional;	a	topMaterial
	m	(Lhb;Ljava/util/concurrent/Executor;Lcuy;Lcbm;Lcqq;)Ljava/util/concurrent/CompletableFuture;	a	createBiomes
	m	(Ljava/util/List;Lgj;)V	a	addDebugScreenInfo
	m	(Ljava/util/Set;Lcqq;Ljava/lang/Throwable;)V	a	lambda$fillFromNoise$13
	m	(Ljava/util/concurrent/Executor;Lcuy;Lcbm;Lcqq;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	(Lcbm;Lcqq;)Lctq$c;	b	lambda$applyCarvers$10
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
	m	(Lctz;)Ljava/lang/Long;	b	lambda$static$2
	m	(Lcuy;Lcbm;Lcqq;)Lcqq;	b	lambda$createBiomes$6
	m	(Lcuy;Lcbm;Lcqq;II)Lcqq;	b	lambda$fillFromNoise$12
	m	(Lcbm;Lcqq;)Lctq$c;	c	lambda$buildSurface$8
	m	(Lctz;)Lcbv;	c	lambda$static$1
	m	()Lcbz$f;	d	climateSampler
	m	(Lcbm;Lcqq;)Lctq$c;	d	lambda$doCreateBiomes$7
	m	(Lctz;)Lhb;	d	lambda$static$0
	m	()I	f	getGenDepth
	m	()I	g	getSeaLevel
	m	()I	h	getMinY
	m	()Lcuc;	j	router
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Lcov;	g	defaultBlock
	f	Lgs;	h	settings
	f	Lcov;	i	AIR
	f	[Lcov;	j	EMPTY_COLUMN
	f	Lhb;	k	noises
	f	J	l	seed
	f	Lcuc;	m	router
	f	Lcbz$f;	n	sampler
	f	Lcur;	o	surfaceSystem
	f	Lcti$a;	p	globalFluidPicker
c	cua	net/minecraft/world/level/levelgen/NoiseChunk
	m	()I	a	blockX
	m	(DLcua$i;)V	a	lambda$updateForZ$4
	m	(I)Lctp$b;	a	forIndex
	m	(ID)V	a	updateForY
	m	(II)I	a	preliminarySurfaceLevel
	m	(IIIILcuc;Lcub;Lcti$a;)Lcua;	a	forColumn
	m	(IILcua$i;)V	a	lambda$selectCellYZ$1
	m	(J)I	a	computePreliminarySurfaceLevel
	m	(Lcqq;Lcuc;Ljava/util/function/Supplier;Lcub;Lcti$a;Lcuy;)Lcua;	a	forChunk
	m	(Lctp;)Lctp;	a	wrap
	m	(Lctp;Lctp$b;)Lcov;	a	lambda$new$0
	m	(Lcuc;)Lcbz$f;	a	cachedClimateSampler
	m	(ZI)V	a	fillSlice
	m	([DLctp;)V	a	fillAllDirectly
	m	()I	b	blockY
	m	(DLcua$i;)V	b	lambda$updateForX$3
	m	(I)V	b	advanceCellX
	m	(ID)V	b	updateForX
	m	(II)V	b	selectCellYZ
	m	(Lctp;)Lctp;	b	wrapNew
	m	()I	c	blockZ
	m	(DLcua$i;)V	c	lambda$updateForY$2
	m	(I)Lcua;	c	forIndex
	m	(ID)V	c	updateForZ
	m	(II)Lcuy$a;	c	getOrComputeBlendingOutput
	m	()Lcuy;	d	getBlender
	m	()Lcov;	e	getInterpolatedState
	m	()V	f	initializeForFirstCellX
	m	()V	g	stopInterpolation
	m	()V	h	swapSlices
	m	()Lcti;	i	aquifer
	f	I	A	cellStartBlockX
	f	I	B	cellStartBlockY
	f	I	C	cellStartBlockZ
	f	I	D	inCellX
	f	I	E	inCellY
	f	I	F	inCellZ
	f	J	G	interpolationCounter
	f	J	H	arrayInterpolationCounter
	f	I	I	arrayIndex
	f	Lctp$a;	J	sliceFillingContextProvider
	f	Lcug;	a	noiseSettings
	f	I	b	cellCountXZ
	f	I	c	cellCountY
	f	I	d	cellNoiseMinY
	f	I	e	firstCellX
	f	I	f	firstCellZ
	f	I	g	firstNoiseX
	f	I	h	firstNoiseZ
	f	Ljava/util/List;	i	interpolators
	f	Ljava/util/List;	j	cellCaches
	f	Ljava/util/Map;	k	wrapped
	f	Lit/unimi/dsi/fastutil/longs/Long2IntMap;	l	preliminarySurfaceLevel
	f	Lcti;	m	aquifer
	f	Lctp;	n	initialDensityNoJaggedness
	f	Lcua$c;	o	blockStateRule
	f	Lcuy;	p	blender
	f	Lcua$g;	q	blendAlpha
	f	Lcua$g;	r	blendOffset
	f	Lctq$c;	s	beardifier
	f	J	t	lastBlendingDataPos
	f	Lcuy$a;	u	lastBlendingOutput
	f	I	v	noiseSizeXZ
	f	I	w	cellWidth
	f	I	x	cellHeight
	f	Z	y	interpolating
	f	Z	z	fillingCell
c	cua$1	net/minecraft/world/level/levelgen/NoiseChunk$1
	m	(I)Lctp$b;	a	forIndex
	m	([DLctp;)V	a	fillAllDirectly
	f	Lcua;	a	this$0
c	cua$2	net/minecraft/world/level/levelgen/NoiseChunk$2
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$Marker$Type
c	cua$a	net/minecraft/world/level/levelgen/NoiseChunk$BlendAlpha
	m	()D	a	minValue
	m	(Lctp$b;)D	a	compute
	m	([DLctp$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lctp;	k	wrapped
	f	Lcua;	a	this$0
c	cua$b	net/minecraft/world/level/levelgen/NoiseChunk$BlendOffset
	m	()D	a	minValue
	m	(Lctp$b;)D	a	compute
	m	([DLctp$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lctp;	k	wrapped
	f	Lcua;	a	this$0
c	cua$c	net/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller
c	cua$d	net/minecraft/world/level/levelgen/NoiseChunk$Cache2D
	m	(Lctp$b;)D	a	compute
	m	([DLctp$a;)V	a	fillArray
	m	()Lctq$l$a;	j	type
	m	()Lctp;	k	wrapped
	f	Lctp;	a	function
	f	J	e	lastPos2D
	f	D	f	lastValue
c	cua$e	net/minecraft/world/level/levelgen/NoiseChunk$CacheAllInCell
	m	(Lctp$b;)D	a	compute
	m	([DLctp$a;)V	a	fillArray
	m	()Lctq$l$a;	j	type
	m	()Lctp;	k	wrapped
	f	Lcua;	a	this$0
	f	Lctp;	e	noiseFiller
	f	[D	f	values
c	cua$f	net/minecraft/world/level/levelgen/NoiseChunk$CacheOnce
	m	(Lctp$b;)D	a	compute
	m	([DLctp$a;)V	a	fillArray
	m	()Lctq$l$a;	j	type
	m	()Lctp;	k	wrapped
	f	Lcua;	a	this$0
	f	Lctp;	e	function
	f	J	f	lastCounter
	f	J	g	lastArrayCounter
	f	D	h	lastValue
	f	[D	i	lastArray
c	cua$g	net/minecraft/world/level/levelgen/NoiseChunk$FlatCache
	m	(Lctp$b;)D	a	compute
	m	([DLctp$a;)V	a	fillArray
	m	()Lctq$l$a;	j	type
	m	()Lctp;	k	wrapped
	f	Lcua;	a	this$0
	f	Lctp;	e	noiseFiller
	f	[[D	f	values
c	cua$h	net/minecraft/world/level/levelgen/NoiseChunk$NoiseChunkDensityFunction
	m	()D	a	minValue
	m	(Lctp$e;)Lctp;	a	mapAll
	m	()D	b	maxValue
	m	()Lctp;	k	wrapped
c	cua$i	net/minecraft/world/level/levelgen/NoiseChunk$NoiseInterpolator
	m	(D)V	a	updateForY
	m	(II)[[D	a	allocateSlice
	m	(Lctp$b;)D	a	compute
	m	([DLctp$a;)V	a	fillArray
	m	(D)V	b	updateForX
	m	(II)V	b	selectCellYZ
	m	(D)V	c	updateForZ
	m	()Lctq$l$a;	j	type
	m	()Lctp;	k	wrapped
	m	()V	l	swapSlices
	f	Lcua;	a	this$0
	f	[[D	e	slice0
	f	[[D	f	slice1
	f	Lctp;	g	noiseFiller
	f	D	h	noise000
	f	D	i	noise001
	f	D	j	noise100
	f	D	k	noise101
	f	D	l	noise010
	f	D	m	noise011
	f	D	n	noise110
	f	D	o	noise111
	f	D	p	valueXZ00
	f	D	q	valueXZ10
	f	D	r	valueXZ01
	f	D	s	valueXZ11
	f	D	t	valueZ0
	f	D	u	valueZ1
	f	D	v	value
c	cub	net/minecraft/world/level/levelgen/NoiseGeneratorSettings
	m	()Z	a	disableMobGeneration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lhb;J)Lcuc;	a	createNoiseRouter
	m	(Lys;Lcub;)V	a	register
	m	(ZZ)Lcub;	a	overworld
	m	()Z	b	isAquifersEnabled
	m	()Z	c	oreVeinsEnabled
	m	()Lcuv$a;	d	getRandomSource
	m	()Lgs;	e	bootstrap
	m	()Lcug;	f	noiseSettings
	m	()Lcov;	g	defaultBlock
	m	()Lcov;	h	defaultFluid
	m	()Lcue;	i	noiseRouter
	m	()Lcuq$o;	j	surfaceRule
	m	()I	k	seaLevel
	m	()Z	l	aquifersEnabled
	m	()Z	m	useLegacyRandomSource
	m	()Lcub;	n	end
	m	()Lcub;	o	nether
	m	()Lcub;	p	caves
	m	()Lcub;	q	floatingIslands
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lys;	c	OVERWORLD
	f	Lys;	d	LARGE_BIOMES
	f	Lys;	e	AMPLIFIED
	f	Lys;	f	NETHER
	f	Lys;	g	END
	f	Lys;	h	CAVES
	f	Lys;	i	FLOATING_ISLANDS
	f	Lcug;	j	noiseSettings
	f	Lcov;	k	defaultBlock
	f	Lcov;	l	defaultFluid
	f	Lcue;	m	noiseRouter
	f	Lcuq$o;	n	surfaceRule
	f	I	o	seaLevel
	f	Z	p	disableMobGeneration
	f	Z	q	aquifersEnabled
	f	Z	r	oreVeinsEnabled
	f	Z	s	useLegacyRandomSource
c	cuc	net/minecraft/world/level/levelgen/NoiseRouter
	m	()Lctp;	a	barrierNoise
	m	()Lctp;	b	fluidLevelFloodednessNoise
	m	()Lctp;	c	fluidLevelSpreadNoise
	m	()Lctp;	d	lavaNoise
	m	()Lcum;	e	aquiferPositionalRandomFactory
	m	()Lcum;	f	oreVeinsPositionalRandomFactory
	m	()Lctp;	g	temperature
	m	()Lctp;	h	humidity
	m	()Lctp;	i	continents
	m	()Lctp;	j	erosion
	m	()Lctp;	k	depth
	m	()Lctp;	l	ridges
	m	()Lctp;	m	initialDensityWithoutJaggedness
	m	()Lctp;	n	finalDensity
	m	()Lctp;	o	veinToggle
	m	()Lctp;	p	veinRidged
	m	()Lctp;	q	veinGap
	m	()Ljava/util/List;	r	spawnTarget
	f	Lctp;	a	barrierNoise
	f	Lctp;	b	fluidLevelFloodednessNoise
	f	Lctp;	c	fluidLevelSpreadNoise
	f	Lctp;	d	lavaNoise
	f	Lcum;	e	aquiferPositionalRandomFactory
	f	Lcum;	f	oreVeinsPositionalRandomFactory
	f	Lctp;	g	temperature
	f	Lctp;	h	humidity
	f	Lctp;	i	continents
	f	Lctp;	j	erosion
	f	Lctp;	k	depth
	f	Lctp;	l	ridges
	f	Lctp;	m	initialDensityWithoutJaggedness
	f	Lctp;	n	finalDensity
	f	Lctp;	o	veinToggle
	f	Lctp;	p	veinRidged
	f	Lctp;	q	veinGap
	f	Ljava/util/List;	r	spawnTarget
c	cud	net/minecraft/world/level/levelgen/NoiseRouterData
	m	()Lgs;	a	bootstrap
	m	(Lctp;)Lctp;	a	underground
	m	(Lctp;Lctp;)Lctp;	a	noiseGradientDensity
	m	(Lctp;Lctp;III)Lctp;	a	yLimitedInterpolatable
	m	(Lctp;Lctp;Lctp;Lctp;Lctp;Lctp;)Lctp;	a	slopedCheese
	m	(Lctp;Lctp;Lctp;Lctq$y$b;DDLctp;)Lctp;	a	splineWithBlending
	m	(Lcug;)Lcue;	a	overworldWithoutCaves
	m	(Lcug;DD)D	a	applySlide
	m	(Lcug;JLhb;Lcuv$a;Lcue;)Lcuc;	a	createNoiseRouter
	m	(Lcug;Lctp;)Lctp;	a	postProcess
	m	(Lcug;Lctp;II)D	a	computePreliminarySurfaceLevelScanning
	m	(Lcug;Z)Lcue;	a	overworld
	m	(Lcuj$a;)I	a	lambda$overworldWithNewCaves$1
	m	(Lcum;Lhb;Lgs;)Ldic;	a	seedNoise
	m	(Lcum;Lhb;ZLcuv$a;JLcug;Lctp;)Lctp;	a	lambda$createNoiseRouter$2
	m	(Ljava/lang/String;)Lys;	a	createKey
	m	(Ljava/util/Map;Lctp$e;Lctp;)Lctp;	a	lambda$createNoiseRouter$3
	m	(Lys;)Lgs;	a	getNoise
	m	(Lys;Lctp;)Lctp;	a	register
	m	()Lctp;	b	spaghettiRoughnessFunction
	m	(Lcug;)Lcue;	b	nether
	m	(Lcug;Z)Lcue;	b	overworldWithNewCaves
	m	(Lcuj$a;)I	b	lambda$overworldWithNewCaves$0
	m	(Lys;)Lctp;	b	getFunction
	m	()Lctp;	c	entrances
	m	(Lcug;)Lcue;	c	end
	m	()Lctp;	d	noodle
	m	(Lcug;)Lcue;	d	noNewCaves
	m	()Lctp;	e	pillars
	m	()Lctp;	f	spaghetti2D
	f	Lys;	A	PILLARS
	f	Lys;	B	SPAGHETTI_2D_THICKNESS_MODULATOR
	f	Lys;	C	SPAGHETTI_2D
	f	F	a	ORE_THICKNESS
	f	D	b	VEININESS_FREQUENCY
	f	D	c	NOODLE_SPACING_AND_STRAIGHTNESS
	f	D	d	SURFACE_DENSITY_THRESHOLD
	f	Lctp;	e	BLENDING_FACTOR
	f	Lctp;	f	BLENDING_JAGGEDNESS
	f	Lys;	g	ZERO
	f	Lys;	h	Y
	f	Lys;	i	SHIFT_X
	f	Lys;	j	SHIFT_Z
	f	Lys;	k	BASE_3D_NOISE
	f	Lys;	l	CONTINENTS
	f	Lys;	m	EROSION
	f	Lys;	n	RIDGES
	f	Lys;	o	FACTOR
	f	Lys;	p	DEPTH
	f	Lys;	q	SLOPED_CHEESE
	f	Lys;	r	CONTINENTS_LARGE
	f	Lys;	s	EROSION_LARGE
	f	Lys;	t	FACTOR_LARGE
	f	Lys;	u	DEPTH_LARGE
	f	Lys;	v	SLOPED_CHEESE_LARGE
	f	Lys;	w	SLOPED_CHEESE_END
	f	Lys;	x	SPAGHETTI_ROUGHNESS_FUNCTION
	f	Lys;	y	ENTRANCES
	f	Lys;	z	NOODLE
c	cud$a	net/minecraft/world/level/levelgen/NoiseRouterData$QuantizedSpaghettiRarity
	m	(D)D	a	getSphaghettiRarity2D
	m	(D)D	b	getSpaghettiRarity3D
c	cue	net/minecraft/world/level/levelgen/NoiseRouterWithOnlyNoises
	m	()Lctp;	a	barrierNoise
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lctp$e;)Lcue;	a	mapAll
	m	(Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	field
	m	()Lctp;	b	fluidLevelFloodednessNoise
	m	()Lctp;	c	fluidLevelSpreadNoise
	m	()Lctp;	d	lavaNoise
	m	()Lctp;	e	temperature
	m	()Lctp;	f	vegetation
	m	()Lctp;	g	continents
	m	()Lctp;	h	erosion
	m	()Lctp;	i	depth
	m	()Lctp;	j	ridges
	m	()Lctp;	k	initialDensityWithoutJaggedness
	m	()Lctp;	l	finalDensity
	m	()Lctp;	m	veinToggle
	m	()Lctp;	n	veinRidged
	m	()Lctp;	o	veinGap
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lctp;	b	barrierNoise
	f	Lctp;	c	fluidLevelFloodednessNoise
	f	Lctp;	d	fluidLevelSpreadNoise
	f	Lctp;	e	lavaNoise
	f	Lctp;	f	temperature
	f	Lctp;	g	vegetation
	f	Lctp;	h	continents
	f	Lctp;	i	erosion
	f	Lctp;	j	depth
	f	Lctp;	k	ridges
	f	Lctp;	l	initialDensityWithoutJaggedness
	f	Lctp;	m	finalDensity
	f	Lctp;	n	veinToggle
	f	Lctp;	o	veinRidged
	f	Lctp;	p	veinGap
c	cuf	net/minecraft/world/level/levelgen/NoiseSamplingSettings
	m	()D	a	xzScale
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()D	b	yScale
	m	()D	c	xzFactor
	m	()D	d	yFactor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	xzScale
	f	D	c	yScale
	f	D	d	xzFactor
	f	D	e	yFactor
	f	Lcom/mojang/serialization/Codec;	f	SCALE_RANGE
c	cug	net/minecraft/world/level/levelgen/NoiseSettings
	m	()I	a	getCellHeight
	m	(IILcuf;Lcuh;Lcuh;IILcce;)Lcug;	a	create
	m	(Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$create$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lcug;)Lcom/mojang/serialization/DataResult;	a	guardY
	m	(Z)Lcug;	a	overworldNoiseSettings
	m	()I	b	getCellWidth
	m	()I	c	getCellCountY
	m	()I	d	getMinCellY
	m	()I	e	minY
	m	()I	f	height
	m	()Lcuf;	g	noiseSamplingSettings
	m	()Lcuh;	h	topSlideSettings
	m	()Lcuh;	i	bottomSlideSettings
	m	()I	j	noiseSizeHorizontal
	m	()I	k	noiseSizeVertical
	m	()Lcce;	l	terrainShaper
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcug;	b	NETHER_NOISE_SETTINGS
	f	Lcug;	c	END_NOISE_SETTINGS
	f	Lcug;	d	CAVES_NOISE_SETTINGS
	f	Lcug;	e	FLOATING_ISLANDS_NOISE_SETTINGS
	f	I	f	minY
	f	I	g	height
	f	Lcuf;	h	noiseSamplingSettings
	f	Lcuh;	i	topSlideSettings
	f	Lcuh;	j	bottomSlideSettings
	f	I	k	noiseSizeHorizontal
	f	I	l	noiseSizeVertical
	f	Lcce;	m	terrainShaper
c	cuh	net/minecraft/world/level/levelgen/NoiseSlider
	m	()D	a	target
	m	(DD)D	a	applySlide
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lcuh;)Ljava/lang/Integer;	a	lambda$static$2
	m	()I	b	size
	m	(Lcuh;)Ljava/lang/Integer;	b	lambda$static$1
	m	()I	c	offset
	m	(Lcuh;)Ljava/lang/Double;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	target
	f	I	c	size
	f	I	d	offset
c	cui	net/minecraft/world/level/levelgen/Noises
	m	(Lcum;Lgs;)Ldic;	a	instantiate
	m	(Lhb;Lcum;Lys;)Ldic;	a	instantiate
	m	(Ljava/lang/String;)Lys;	a	createKey
	f	Lys;	A	SPAGHETTI_ROUGHNESS_MODULATOR
	f	Lys;	B	CAVE_ENTRANCE
	f	Lys;	C	CAVE_LAYER
	f	Lys;	D	CAVE_CHEESE
	f	Lys;	E	ORE_VEININESS
	f	Lys;	F	ORE_VEIN_A
	f	Lys;	G	ORE_VEIN_B
	f	Lys;	H	ORE_GAP
	f	Lys;	I	NOODLE
	f	Lys;	J	NOODLE_THICKNESS
	f	Lys;	K	NOODLE_RIDGE_A
	f	Lys;	L	NOODLE_RIDGE_B
	f	Lys;	M	JAGGED
	f	Lys;	N	SURFACE
	f	Lys;	O	SURFACE_SECONDARY
	f	Lys;	P	CLAY_BANDS_OFFSET
	f	Lys;	Q	BADLANDS_PILLAR
	f	Lys;	R	BADLANDS_PILLAR_ROOF
	f	Lys;	S	BADLANDS_SURFACE
	f	Lys;	T	ICEBERG_PILLAR
	f	Lys;	U	ICEBERG_PILLAR_ROOF
	f	Lys;	V	ICEBERG_SURFACE
	f	Lys;	W	SWAMP
	f	Lys;	X	CALCITE
	f	Lys;	Y	GRAVEL
	f	Lys;	Z	POWDER_SNOW
	f	Lys;	a	TEMPERATURE
	f	Lys;	aa	PACKED_ICE
	f	Lys;	ab	ICE
	f	Lys;	ac	SOUL_SAND_LAYER
	f	Lys;	ad	GRAVEL_LAYER
	f	Lys;	ae	PATCH
	f	Lys;	af	NETHERRACK
	f	Lys;	ag	NETHER_WART
	f	Lys;	ah	NETHER_STATE_SELECTOR
	f	Lys;	b	VEGETATION
	f	Lys;	c	CONTINENTALNESS
	f	Lys;	d	EROSION
	f	Lys;	e	TEMPERATURE_LARGE
	f	Lys;	f	VEGETATION_LARGE
	f	Lys;	g	CONTINENTALNESS_LARGE
	f	Lys;	h	EROSION_LARGE
	f	Lys;	i	RIDGE
	f	Lys;	j	SHIFT
	f	Lys;	k	AQUIFER_BARRIER
	f	Lys;	l	AQUIFER_FLUID_LEVEL_FLOODEDNESS
	f	Lys;	m	AQUIFER_LAVA
	f	Lys;	n	AQUIFER_FLUID_LEVEL_SPREAD
	f	Lys;	o	PILLAR
	f	Lys;	p	PILLAR_RARENESS
	f	Lys;	q	PILLAR_THICKNESS
	f	Lys;	r	SPAGHETTI_2D
	f	Lys;	s	SPAGHETTI_2D_ELEVATION
	f	Lys;	t	SPAGHETTI_2D_MODULATOR
	f	Lys;	u	SPAGHETTI_2D_THICKNESS
	f	Lys;	v	SPAGHETTI_3D_1
	f	Lys;	w	SPAGHETTI_3D_2
	f	Lys;	x	SPAGHETTI_3D_RARITY
	f	Lys;	y	SPAGHETTI_3D_THICKNESS
	f	Lys;	z	SPAGHETTI_ROUGHNESS
c	cuj	net/minecraft/world/level/levelgen/OreVeinifier
	m	(Lctp;Lcov;Lcum;Lctp;Lctp;Lctp$b;)Lcov;	a	lambda$create$0
	m	(Lctp;Lctp;Lctp;Lcum;)Lcua$c;	a	create
	f	F	a	VEININESS_THRESHOLD
	f	I	b	EDGE_ROUNDOFF_BEGIN
	f	D	c	MAX_EDGE_ROUNDOFF
	f	F	d	VEIN_SOLIDNESS
	f	F	e	MIN_RICHNESS
	f	F	f	MAX_RICHNESS
	f	F	g	MAX_RICHNESS_THRESHOLD
	f	F	h	CHANCE_OF_RAW_ORE_BLOCK
	f	F	i	SKIP_ORE_IF_GAP_NOISE_IS_BELOW
c	cuj$a	net/minecraft/world/level/levelgen/OreVeinifier$VeinType
	m	()[Lcuj$a;	a	$values
	f	Lcuj$a;	a	COPPER
	f	Lcuj$a;	b	IRON
	f	I	c	minY
	f	I	d	maxY
	f	Lcov;	e	ore
	f	Lcov;	f	rawOreBlock
	f	Lcov;	g	filler
	f	[Lcuj$a;	h	$VALUES
c	cuk	net/minecraft/world/level/levelgen/PatrolSpawner
	m	(Ladw;Lgj;Ljava/util/Random;Z)Z	a	spawnPatrolMember
	m	(Ladw;ZZ)I	a	tick
	f	I	a	nextTick
c	cul	net/minecraft/world/level/levelgen/PhantomSpawner
	m	(Ladw;ZZ)I	a	tick
	f	I	a	nextTick
c	cum	net/minecraft/world/level/levelgen/PositionalRandomFactory
	m	(III)Lcun;	a	at
	m	(Lgj;)Lcun;	a	at
	m	(Ljava/lang/String;)Lcun;	a	fromHashOf
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
	m	(Lyt;)Lcun;	a	fromHashOf
c	cun	net/minecraft/world/level/levelgen/RandomSource
	m	()Lcun;	a	fork
	m	(II)I	a	nextIntBetweenInclusive
	m	()Lcum;	b	forkPositional
	m	(I)V	b	consumeCount
c	cuo	net/minecraft/world/level/levelgen/RandomSupport
	m	()J	a	seedUniquifier
	m	(J)J	a	mixStafford13
	m	(J)Lcuo$a;	b	upgradeSeedTo128bit
	m	(J)J	c	lambda$seedUniquifier$0
	f	J	a	GOLDEN_RATIO_64
	f	J	b	SILVER_RATIO_64
	f	Ljava/util/concurrent/atomic/AtomicLong;	c	SEED_UNIQUIFIER
c	cuo$a	net/minecraft/world/level/levelgen/RandomSupport$Seed128bit
	m	()J	a	seedLo
	m	()J	b	seedHi
	f	J	a	seedLo
	f	J	b	seedHi
c	cup	net/minecraft/world/level/levelgen/SingleThreadedRandomSource
	m	()Lcun;	a	fork
	m	(I)I	a	next
	m	()Lcum;	b	forkPositional
	f	I	c	MODULUS_BITS
	f	J	d	MODULUS_MASK
	f	J	e	MULTIPLIER
	f	J	f	INCREMENT
	f	J	g	seed
	f	Lcty;	h	gaussianSource
c	cuq	net/minecraft/world/level/levelgen/SurfaceRules
	m	()Lcuq$f;	a	steep
	m	(II)Lcuq$f;	a	waterBlockCheck
	m	(IZILddu;)Lcuq$f;	a	stoneDepthCheck
	m	(IZLddu;)Lcuq$f;	a	stoneDepthCheck
	m	(Lcov;)Lcuq$o;	a	state
	m	(Lcuq$f;)Lcuq$f;	a	not
	m	(Lcuq$f;Lcuq$o;)Lcuq$o;	a	ifTrue
	m	(Lcus;I)Lcuq$f;	a	yBlockCheck
	m	(Ljava/lang/String;Lcus;Lcus;)Lcuq$f;	a	verticalGradient
	m	(Ljava/util/List;)Lcuq$c;	a	isBiome
	m	(Lys;D)Lcuq$f;	a	noiseCondition
	m	(Lys;DD)Lcuq$f;	a	noiseCondition
	m	([Lcuq$o;)Lcuq$o;	a	sequence
	m	([Lys;)Lcuq$f;	a	isBiome
	m	()Lcuq$f;	b	hole
	m	(II)Lcuq$f;	b	waterStartCheck
	m	(Lcus;I)Lcuq$f;	b	yStartCheck
	m	()Lcuq$f;	c	abovePreliminarySurface
	m	()Lcuq$f;	d	temperature
	m	()Lcuq$o;	e	bandlands
	f	Lcuq$f;	a	ON_FLOOR
	f	Lcuq$f;	b	UNDER_FLOOR
	f	Lcuq$f;	c	DEEP_UNDER_FLOOR
	f	Lcuq$f;	d	VERY_DEEP_UNDER_FLOOR
	f	Lcuq$f;	e	ON_CEILING
	f	Lcuq$f;	f	UNDER_CEILING
c	cuq$a	net/minecraft/world/level/levelgen/SurfaceRules$AbovePreliminarySurface
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcuq$g;)Lcuq$e;	a	apply
	m	()[Lcuq$a;	b	$values
	f	Lcuq$a;	a	INSTANCE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	[Lcuq$a;	d	$VALUES
c	cuq$b	net/minecraft/world/level/levelgen/SurfaceRules$Bandlands
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcuq$g;)Lcuq$u;	a	apply
	m	()[Lcuq$b;	b	$values
	f	Lcuq$b;	a	INSTANCE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	[Lcuq$b;	d	$VALUES
c	cuq$c	net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcuq$c;)Ljava/util/List;	a	lambda$static$0
	m	(Lcuq$g;)Lcuq$e;	a	apply
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	c	biomes
	f	Ljava/util/function/Predicate;	d	biomeNameTest
c	cuq$c$a	net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource$1BiomeCondition
	m	()Z	a	compute
	f	Lcuq$g;	a	val$ruleContext
	f	Lcuq$c;	b	this$0
c	cuq$d	net/minecraft/world/level/levelgen/SurfaceRules$BlockRuleSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcuq$g;)Lcuq$u;	a	apply
	m	()Lcov;	b	resultState
	m	()Lcuq$r;	c	rule
	f	Lcov;	a	resultState
	f	Lcuq$r;	c	rule
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	cuq$e	net/minecraft/world/level/levelgen/SurfaceRules$Condition
	m	()Z	b	test
c	cuq$f	net/minecraft/world/level/levelgen/SurfaceRules$ConditionSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lhb;)Lcom/mojang/serialization/Codec;	a	bootstrap
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	cuq$g	net/minecraft/world/level/levelgen/SurfaceRules$Context
	m	()D	a	getSurfaceSecondary
	m	(I)I	a	blockCoordToSurfaceCell
	m	(II)V	a	updateXZ
	m	(III)Lgs;	a	lambda$updateY$0
	m	(IIIIII)V	a	updateY
	m	()I	b	getMinSurfaceLevel
	m	(I)I	b	surfaceCellToBlockCoord
	f	I	A	blockY
	f	I	B	waterHeight
	f	I	C	stoneDepthBelow
	f	I	D	stoneDepthAbove
	f	I	a	HOW_FAR_BELOW_PRELIMINARY_SURFACE_LEVEL_TO_BUILD_SURFACE
	f	I	b	SURFACE_CELL_BITS
	f	I	c	SURFACE_CELL_SIZE
	f	I	d	SURFACE_CELL_MASK
	f	Lcur;	e	system
	f	Lcuq$e;	f	temperature
	f	Lcuq$e;	g	steep
	f	Lcuq$e;	h	hole
	f	Lcuq$e;	i	abovePreliminarySurface
	f	Lcqq;	j	chunk
	f	Lcua;	k	noiseChunk
	f	Ljava/util/function/Function;	l	biomeGetter
	f	Lcuu;	m	context
	f	J	n	lastPreliminarySurfaceCellOrigin
	f	[I	o	preliminarySurfaceCache
	f	J	p	lastUpdateXZ
	f	I	q	blockX
	f	I	r	blockZ
	f	I	s	surfaceDepth
	f	J	t	lastSurfaceDepth2Update
	f	D	u	surfaceSecondary
	f	J	v	lastMinSurfaceLevelUpdate
	f	I	w	minSurfaceLevel
	f	J	x	lastUpdateY
	f	Lgj$a;	y	pos
	f	Ljava/util/function/Supplier;	z	biome
c	cuq$g$a	net/minecraft/world/level/levelgen/SurfaceRules$Context$AbovePreliminarySurfaceCondition
	m	()Z	b	test
	f	Lcuq$g;	a	this$0
c	cuq$g$b	net/minecraft/world/level/levelgen/SurfaceRules$Context$HoleCondition
	m	()Z	a	compute
c	cuq$g$c	net/minecraft/world/level/levelgen/SurfaceRules$Context$SteepMaterialCondition
	m	()Z	a	compute
c	cuq$g$d	net/minecraft/world/level/levelgen/SurfaceRules$Context$TemperatureHelperCondition
	m	()Z	a	compute
c	cuq$h	net/minecraft/world/level/levelgen/SurfaceRules$Hole
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcuq$g;)Lcuq$e;	a	apply
	m	()[Lcuq$h;	b	$values
	f	Lcuq$h;	a	INSTANCE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	[Lcuq$h;	d	$VALUES
c	cuq$i	net/minecraft/world/level/levelgen/SurfaceRules$LazyCondition
	m	()Z	a	compute
	m	()Z	b	test
	m	()J	c	getContextLastUpdate
	f	J	a	lastUpdate
	f	Lcuq$g;	c	context
	f	Ljava/lang/Boolean;	d	result
c	cuq$j	net/minecraft/world/level/levelgen/SurfaceRules$LazyXZCondition
	m	()J	c	getContextLastUpdate
c	cuq$k	net/minecraft/world/level/levelgen/SurfaceRules$LazyYCondition
	m	()J	c	getContextLastUpdate
c	cuq$l	net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lcuq$g;)Lcuq$e;	a	apply
	m	()Lys;	b	noise
	m	()D	c	minThreshold
	m	()D	d	maxThreshold
	f	Lys;	a	noise
	f	D	c	minThreshold
	f	D	d	maxThreshold
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	cuq$l$a	net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource$1NoiseThresholdCondition
	m	()Z	a	compute
	f	Lcuq$g;	a	val$ruleContext
	f	Ldic;	b	val$noise
	f	Lcuq$l;	e	this$0
c	cuq$m	net/minecraft/world/level/levelgen/SurfaceRules$NotCondition
	m	()Lcuq$e;	a	target
	m	()Z	b	test
	f	Lcuq$e;	a	target
c	cuq$n	net/minecraft/world/level/levelgen/SurfaceRules$NotConditionSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcuq$g;)Lcuq$e;	a	apply
	m	()Lcuq$f;	b	target
	f	Lcuq$f;	a	target
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	cuq$o	net/minecraft/world/level/levelgen/SurfaceRules$RuleSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lhb;)Lcom/mojang/serialization/Codec;	a	bootstrap
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	cuq$p	net/minecraft/world/level/levelgen/SurfaceRules$SequenceRule
	m	()Ljava/util/List;	a	rules
	f	Ljava/util/List;	a	rules
c	cuq$q	net/minecraft/world/level/levelgen/SurfaceRules$SequenceRuleSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcuq$g;)Lcuq$u;	a	apply
	m	()Ljava/util/List;	b	sequence
	f	Ljava/util/List;	a	sequence
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	cuq$r	net/minecraft/world/level/levelgen/SurfaceRules$StateRule
	m	()Lcov;	a	state
	f	Lcov;	a	state
c	cuq$s	net/minecraft/world/level/levelgen/SurfaceRules$Steep
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcuq$g;)Lcuq$e;	a	apply
	m	()[Lcuq$s;	b	$values
	f	Lcuq$s;	a	INSTANCE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	[Lcuq$s;	d	$VALUES
c	cuq$t	net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lcuq$g;)Lcuq$e;	a	apply
	m	()I	b	offset
	m	()Z	c	addSurfaceDepth
	m	()I	d	secondaryDepthRange
	m	()Lddu;	e	surfaceType
	f	I	a	offset
	f	Z	c	addSurfaceDepth
	f	I	d	secondaryDepthRange
	f	Lddu;	e	surfaceType
	f	Lcom/mojang/serialization/Codec;	f	CODEC
c	cuq$t$a	net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck$1StoneDepthCondition
	m	()Z	a	compute
	f	Lcuq$g;	a	val$ruleContext
	f	Z	b	val$ceiling
	f	Lcuq$t;	e	this$0
c	cuq$u	net/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule
c	cuq$v	net/minecraft/world/level/levelgen/SurfaceRules$Temperature
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcuq$g;)Lcuq$e;	a	apply
	m	()[Lcuq$v;	b	$values
	f	Lcuq$v;	a	INSTANCE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	[Lcuq$v;	d	$VALUES
c	cuq$w	net/minecraft/world/level/levelgen/SurfaceRules$TestRule
	m	()Lcuq$e;	a	condition
	m	()Lcuq$u;	b	followup
	f	Lcuq$e;	a	condition
	f	Lcuq$u;	b	followup
c	cuq$x	net/minecraft/world/level/levelgen/SurfaceRules$TestRuleSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lcuq$g;)Lcuq$u;	a	apply
	m	()Lcuq$f;	b	ifTrue
	m	()Lcuq$o;	c	thenRun
	f	Lcuq$f;	a	ifTrue
	f	Lcuq$o;	c	thenRun
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	cuq$y	net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lcuq$g;)Lcuq$e;	a	apply
	m	()Lyt;	b	randomName
	m	()Lcus;	c	trueAtAndBelow
	m	()Lcus;	d	falseAtAndAbove
	f	Lyt;	a	randomName
	f	Lcus;	c	trueAtAndBelow
	f	Lcus;	d	falseAtAndAbove
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	cuq$y$a	net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource$1VerticalGradientCondition
	m	()Z	a	compute
	f	Lcuq$g;	a	val$ruleContext
	f	I	b	val$trueAtAndBelow
	f	I	e	val$falseAtAndAbove
	f	Lcum;	f	val$randomFactory
	f	Lcuq$y;	g	this$0
c	cuq$z	net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lcuq$g;)Lcuq$e;	a	apply
	m	()I	b	offset
	m	()I	c	surfaceDepthMultiplier
	m	()Z	d	addStoneDepth
	f	I	a	offset
	f	I	c	surfaceDepthMultiplier
	f	Z	d	addStoneDepth
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	cuq$z$a	net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource$1WaterCondition
	m	()Z	a	compute
	f	Lcuq$g;	a	val$ruleContext
	f	Lcuq$z;	b	this$0
c	cuq$aa	net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lcuq$g;)Lcuq$e;	a	apply
	m	()Lcus;	b	anchor
	m	()I	c	surfaceDepthMultiplier
	m	()Z	d	addStoneDepth
	f	Lcus;	a	anchor
	f	I	c	surfaceDepthMultiplier
	f	Z	d	addStoneDepth
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	cuq$aa$a	net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource$1YCondition
	m	()Z	a	compute
	f	Lcuq$g;	a	val$ruleContext
	f	Lcuq$aa;	b	this$0
c	cur	net/minecraft/world/level/levelgen/SurfaceSystem
	m	(II)I	a	getSurfaceDepth
	m	(III)Lcov;	a	getBand
	m	(ILcbr;Lcqn;Lgj$a;III)V	a	frozenOceanExtension
	m	(Lcbt;Lhb;ZLcuu;Lcqq;Lcua;Lcuq$o;)V	a	buildSurface
	m	(Lcov;)Z	a	isStone
	m	(Lcqn;IIILcax;)V	a	erodedBadlandsExtension
	m	(Lcun;)[Lcov;	a	generateBands
	m	(Lcun;[Lcov;ILcov;)V	a	makeBands
	m	(Lcuq$o;Lcvw;Ljava/util/function/Function;Lcqq;Lcua;Lgj;Z)Ljava/util/Optional;	a	topMaterial
	m	(Lys;)Ldic;	a	getOrCreateNoise
	m	(Lys;Lys;)Ldic;	a	lambda$getOrCreateNoise$0
	m	(Lyt;)Lcum;	a	getOrCreateRandomFactory
	m	(Lyt;Lyt;)Lcum;	a	lambda$getOrCreateRandomFactory$1
	m	(II)D	b	getSurfaceSecondary
	f	Lcov;	a	WHITE_TERRACOTTA
	f	Lcov;	b	ORANGE_TERRACOTTA
	f	Lcov;	c	TERRACOTTA
	f	Lcov;	d	YELLOW_TERRACOTTA
	f	Lcov;	e	BROWN_TERRACOTTA
	f	Lcov;	f	RED_TERRACOTTA
	f	Lcov;	g	LIGHT_GRAY_TERRACOTTA
	f	Lcov;	h	PACKED_ICE
	f	Lcov;	i	SNOW_BLOCK
	f	Lcov;	j	defaultBlock
	f	I	k	seaLevel
	f	[Lcov;	l	clayBands
	f	Ldic;	m	clayBandsOffsetNoise
	f	Ldic;	n	badlandsPillarNoise
	f	Ldic;	o	badlandsPillarRoofNoise
	f	Ldic;	p	badlandsSurfaceNoise
	f	Ldic;	q	icebergPillarNoise
	f	Ldic;	r	icebergPillarRoofNoise
	f	Ldic;	s	icebergSurfaceNoise
	f	Lhb;	t	noises
	f	Ljava/util/Map;	u	noiseIntances
	f	Ljava/util/Map;	v	positionalRandoms
	f	Lcum;	w	randomFactory
	f	Ldic;	x	surfaceNoise
	f	Ldic;	y	surfaceSecondaryNoise
c	cur$1	net/minecraft/world/level/levelgen/SurfaceSystem$1
	m	(I)Lcov;	a	getBlock
	m	(ILcov;)V	a	setBlock
	f	Lcqq;	a	val$protoChunk
	f	Lgj$a;	b	val$columnPos
	f	Lcac;	c	val$chunkPos
	f	Lcur;	d	this$0
c	cus	net/minecraft/world/level/levelgen/VerticalAnchor
	m	()Lcus;	a	bottom
	m	(I)Lcus;	a	absolute
	m	(Lcom/mojang/datafixers/util/Either;)Lcus;	a	merge
	m	(Lcus;)Lcom/mojang/datafixers/util/Either;	a	split
	m	(Lcuu;)I	a	resolveY
	m	()Lcus;	b	top
	m	(I)Lcus;	b	aboveBottom
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/Record;	b	lambda$merge$0
	m	(I)Lcus;	c	belowTop
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcus;	b	BOTTOM
	f	Lcus;	c	TOP
c	cus$a	net/minecraft/world/level/levelgen/VerticalAnchor$AboveBottom
	m	(Lcuu;)I	a	resolveY
	m	()I	c	offset
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	offset
c	cus$b	net/minecraft/world/level/levelgen/VerticalAnchor$Absolute
	m	(Lcuu;)I	a	resolveY
	m	()I	c	y
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	y
c	cus$c	net/minecraft/world/level/levelgen/VerticalAnchor$BelowTop
	m	(Lcuu;)I	a	resolveY
	m	()I	c	offset
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	offset
c	cut	net/minecraft/world/level/levelgen/WorldGenSettings
	m	()J	a	seed
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcut;)Ljava/util/Optional;	a	lambda$static$0
	m	(Lhb;Lgs;Lcqr;)Lhb;	a	withOverworld
	m	(Lhb;Lhb;)Lddc;	a	lambda$create$2
	m	(Lhb;Lhb;Lcqr;)Lhb;	a	withOverworld
	m	(Lhc;)Lcut;	a	demoSettings
	m	(Lhc;J)Lctz;	a	makeDefaultOverworld
	m	(Lhc;JLys;)Lctz;	a	makeOverworld
	m	(Lhc;JLys;Z)Lctz;	a	makeOverworld
	m	(Lhc;JZ)Lctz;	a	makeDefaultOverworld
	m	(Lhc;Lacy$a;)Lcut;	a	create
	m	(Ljava/lang/String;)Ljava/util/OptionalLong;	a	parseSeed
	m	(Lys;)Lys;	a	levelStemToLevel
	m	(ZLjava/util/OptionalLong;)Lcut;	a	withSeed
	m	()Z	b	generateFeatures
	m	(Lhc;)Lcut;	b	makeDefault
	m	(Lys;)Lys;	b	levelToLevelStem
	m	()Z	c	generateBonusChest
	m	()Lhb;	d	dimensions
	m	()Lcqr;	e	overworld
	m	()Lcom/google/common/collect/ImmutableSet;	f	levels
	m	()Z	g	isDebug
	m	()Z	h	isFlatWorld
	m	()Z	i	isOldCustomizedWorld
	m	()Lcut;	j	withBonusChest
	m	()Lcut;	k	withFeaturesToggled
	m	()Lcut;	l	withBonusChestToggled
	m	()Lcom/mojang/serialization/DataResult;	m	guardExperimental
	m	()Z	n	stable
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	J	c	seed
	f	Z	d	generateFeatures
	f	Z	e	generateBonusChest
	f	Lhb;	f	dimensions
	f	Ljava/util/Optional;	g	legacyCustomOptions
c	cuu	net/minecraft/world/level/levelgen/WorldGenerationContext
	m	()I	a	getMinGenY
	m	()I	b	getGenDepth
	f	I	a	minY
	f	I	b	height
c	cuv	net/minecraft/world/level/levelgen/WorldgenRandom
	m	()Lcun;	a	fork
	m	(IIJJ)Ljava/util/Random;	a	seedSlimeChunk
	m	(JII)J	a	setDecorationSeed
	m	(JIII)V	a	setLargeFeatureWithSalt
	m	()Lcum;	b	forkPositional
	m	(JII)V	b	setFeatureSeed
	m	()I	c	getCount
	m	(JII)V	c	setLargeFeatureSeed
	f	Lcun;	a	randomSource
	f	I	b	count
c	cuv$a	net/minecraft/world/level/levelgen/WorldgenRandom$Algorithm
	m	()[Lcuv$a;	a	$values
	m	(J)Lcun;	a	newInstance
	f	Lcuv$a;	a	LEGACY
	f	Lcuv$a;	b	XOROSHIRO
	f	Ljava/util/function/LongFunction;	c	constructor
	f	[Lcuv$a;	d	$VALUES
c	cuw	net/minecraft/world/level/levelgen/Xoroshiro128PlusPlus
	m	()J	a	nextLong
	f	J	a	seedLo
	f	J	b	seedHi
c	cux	net/minecraft/world/level/levelgen/XoroshiroRandomSource
	m	()Lcun;	a	fork
	m	(I)J	a	nextBits
	m	()Lcum;	b	forkPositional
	m	(I)V	b	consumeCount
	f	F	a	FLOAT_UNIT
	f	D	b	DOUBLE_UNIT
	f	Lcuw;	c	randomNumberGenerator
	f	Lcty;	d	gaussianSource
c	cux$a	net/minecraft/world/level/levelgen/XoroshiroRandomSource$XoroshiroPositionalRandomFactory
	m	(III)Lcun;	a	at
	m	(Ljava/lang/String;)Lcun;	a	fromHashOf
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
	f	Lcom/google/common/hash/HashFunction;	a	MD5_128
	f	J	b	seedLo
	f	J	c	seedHi
c	cuy	net/minecraft/world/level/levelgen/blending/Blender
	m	()Lcuy;	a	empty
	m	(D)D	a	heightToOffset
	m	(DDDDD)D	a	lambda$makeOffsetOldChunkDistanceGetter$11
	m	(DDDDDD)D	a	distanceToCube
	m	(DDLorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableObject;IILgs;)V	a	lambda$blendBiome$5
	m	(DDLorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableObject;Ljava/lang/Long;Lcuz;)V	a	lambda$blendBiome$6
	m	(II)Lcuy$a;	a	blendOffsetAndFactor
	m	(IIILcuy$b;)D	a	getBlendingDataValue
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;IIID)V	a	lambda$blendDensity$2
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Ljava/lang/Long;Lcuz;)V	a	lambda$blendDensity$3
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;IID)V	a	lambda$blendOffsetAndFactor$0
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Ljava/lang/Long;Lcuz;)V	a	lambda$blendOffsetAndFactor$1
	m	(Laed;)Lcuy;	a	of
	m	(Laed;Lcqq;)V	a	generateBorderTicks
	m	(Lcbn;Lcri;)V	a	addAroundOldChunksCarvingMaskFilter
	m	(Lcbu;)Lcbu;	a	getBiomeResolver
	m	(Lcbu;IIILcbz$f;)Lgs;	a	lambda$getBiomeResolver$4
	m	(Lcqp$a;Lcqp;)V	a	lambda$addAroundOldChunksCarvingMaskFilter$8
	m	(Lcqq;Lgj;)V	a	generateBorderTick
	m	(Lctp$b;D)D	a	blendDensity
	m	(Lcuy$b;IIIII)D	a	getBlendingDataValue
	m	(Lcuy$c;III)Z	a	lambda$addAroundOldChunksCarvingMaskFilter$7
	m	(Lgp;)Lcuy$c;	a	makeOffsetOldChunkDistanceGetter
	m	(Ljava/util/List;DDD)D	a	lambda$makeOldChunkDistanceGetter$10
	m	(Ljava/util/List;Lgp;)V	a	lambda$makeOldChunkDistanceGetter$9
	m	(ZLjava/util/Set;)Lcuy$c;	a	makeOldChunkDistanceGetter
	m	(II)Lgs;	b	blendBiome
	f	Lcuy;	a	EMPTY
	f	Ldic;	b	SHIFT_NOISE
	f	I	c	HEIGHT_BLENDING_RANGE_CELLS
	f	I	d	HEIGHT_BLENDING_RANGE_CHUNKS
	f	I	e	DENSITY_BLENDING_RANGE_CELLS
	f	I	f	DENSITY_BLENDING_RANGE_CHUNKS
	f	D	g	OLD_CHUNK_Y_RADIUS
	f	D	h	OLD_CHUNK_CENTER_Y
	f	D	i	OLD_CHUNK_XZ_RADIUS
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	j	blendingData
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	k	blendingDataForDensityBlending
c	cuy$1	net/minecraft/world/level/levelgen/blending/Blender$1
	m	(II)Lcuy$a;	a	blendOffsetAndFactor
	m	(Lcbu;)Lcbu;	a	getBiomeResolver
	m	(Lctp$b;D)D	a	blendDensity
c	cuy$a	net/minecraft/world/level/levelgen/blending/Blender$BlendingOutput
	m	()D	a	alpha
	m	()D	b	blendingOffset
	f	D	a	alpha
	f	D	b	blendingOffset
c	cuy$b	net/minecraft/world/level/levelgen/blending/Blender$CellValueGetter
c	cuy$c	net/minecraft/world/level/levelgen/blending/Blender$DistanceGetter
c	cuz	net/minecraft/world/level/levelgen/blending/BlendingData
	m	()Z	a	oldNoise
	m	(D)Z	a	lambda$static$0
	m	(I)I	a	getX
	m	(II)I	a	getFloorIndex
	m	(III)D	a	getHeight
	m	(IIIILcuz$b;)V	a	iterateDensities
	m	(IILcuz$a;)V	a	iterateBiomes
	m	(IILcuz$c;)V	a	iterateHeights
	m	(ILcqq;II)V	a	addValuesForColumn
	m	(Laed;II)Lcuz;	a	getOrUpdateBlendingData
	m	(Lcbn;IIZ)Ljava/util/Set;	a	sideByGenerationAge
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lcqq;II)I	a	getHeightAtXZ
	m	(Lcqq;III)[D	a	getDensityColumn
	m	(Lcqq;Lgj$a;)D	a	read1
	m	(Lcqq;Lgj;)Z	a	isGround
	m	(Lcqq;Ljava/util/Set;)V	a	calculateData
	m	(Lcuz;)Lcom/mojang/serialization/DataResult;	a	validateArraySize
	m	([D)V	a	lambda$new$3
	m	([DI)D	a	getDensity
	m	()I	b	cellCountPerColumn
	m	(I)I	b	getZ
	m	(II)I	b	getInsideIndex
	m	(III)D	b	getDensity
	m	(Lcqq;Lgj$a;)D	b	read7
	m	(Lcuz;)Ljava/util/Optional;	b	lambda$static$1
	m	()I	c	getColumnMinY
	m	(I)I	c	zeroIfNegative
	m	(II)I	c	getOutsideIndex
	m	()I	d	getMinY
	f	Lcax;	a	AREA_WITH_OLD_GENERATION
	f	I	b	CELL_WIDTH
	f	I	c	CELL_HEIGHT
	f	I	d	CELL_RATIO
	f	D	e	NO_VALUE
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	D	g	BLENDING_DENSITY_FACTOR
	f	I	h	CELLS_PER_SECTION_Y
	f	I	i	QUARTS_PER_SECTION
	f	I	j	CELL_HORIZONTAL_MAX_INDEX_INSIDE
	f	I	k	CELL_HORIZONTAL_MAX_INDEX_OUTSIDE
	f	I	l	CELL_COLUMN_INSIDE_COUNT
	f	I	m	CELL_COLUMN_OUTSIDE_COUNT
	f	I	n	CELL_COLUMN_COUNT
	f	I	o	CELL_HORIZONTAL_FLOOR_COUNT
	f	Ljava/util/List;	p	SURFACE_BLOCKS
	f	Z	q	oldNoise
	f	Z	r	hasCalculatedData
	f	[D	s	heights
	f	Ljava/util/List;	t	biomes
	f	[[D	u	densities
	f	[D	v	floorDensities
	f	Lcom/mojang/serialization/Codec;	w	DOUBLE_ARRAY_CODEC
c	cuz$1	net/minecraft/world/level/levelgen/blending/BlendingData$1
	m	()I	u_	getMinBuildHeight
	m	()I	v_	getHeight
c	cuz$a	net/minecraft/world/level/levelgen/blending/BlendingData$BiomeConsumer
c	cuz$b	net/minecraft/world/level/levelgen/blending/BlendingData$DensityConsumer
c	cuz$c	net/minecraft/world/level/levelgen/blending/BlendingData$HeightConsumer
c	cva	net/minecraft/world/level/levelgen/blending/package-info
c	cvb	net/minecraft/world/level/levelgen/blockpredicates/AllOfPredicate
	m	()Lcve;	a	type
	m	(Lcbn;Lgj;)Z	a	test
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	cvc	net/minecraft/world/level/levelgen/blockpredicates/AnyOfPredicate
	m	()Lcve;	a	type
	m	(Lcbn;Lgj;)Z	a	test
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	cvd	net/minecraft/world/level/levelgen/blockpredicates/BlockPredicate
	m	()Lcve;	a	type
	m	(Laif;)Lcvd;	a	matchesTag
	m	(Laif;Lhh;)Lcvd;	a	matchesTag
	m	(Lcdq;Lhh;)Lcvd;	a	matchesBlock
	m	(Lcov;Lhh;)Lcvd;	a	wouldSurvive
	m	(Lcvd;)Lcvd;	a	not
	m	(Lcvd;Lcvd;)Lcvd;	a	allOf
	m	(Ldiw;Lhh;)Lcvd;	a	matchesFluid
	m	(Lgo;)Lcvd;	a	hasSturdyFace
	m	(Lhh;)Lcvd;	a	replaceable
	m	(Lhh;Lgo;)Lcvd;	a	hasSturdyFace
	m	(Ljava/util/List;)Lcvd;	a	allOf
	m	(Ljava/util/List;Lhh;)Lcvd;	a	matchesBlocks
	m	([Lcvd;)Lcvd;	a	allOf
	m	()Lcvd;	b	replaceable
	m	(Lcvd;Lcvd;)Lcvd;	b	anyOf
	m	(Lhh;)Lcvd;	b	solid
	m	(Ljava/util/List;)Lcvd;	b	anyOf
	m	(Ljava/util/List;Lhh;)Lcvd;	b	matchesFluids
	m	([Lcvd;)Lcvd;	b	anyOf
	m	()Lcvd;	c	solid
	m	(Lhh;)Lcvd;	c	insideWorld
	m	(Ljava/util/List;)Lcvd;	c	matchesBlocks
	m	()Lcvd;	d	alwaysTrue
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcvd;	c	ONLY_IN_AIR_PREDICATE
	f	Lcvd;	d	ONLY_IN_AIR_OR_WATER_PREDICATE
c	cve	net/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcve;	a	register
	f	Lcve;	a	MATCHING_BLOCKS
	f	Lcve;	b	MATCHING_BLOCK_TAG
	f	Lcve;	c	MATCHING_FLUIDS
	f	Lcve;	d	HAS_STURDY_FACE
	f	Lcve;	e	SOLID
	f	Lcve;	f	REPLACEABLE
	f	Lcve;	g	WOULD_SURVIVE
	f	Lcve;	h	INSIDE_WORLD_BOUNDS
	f	Lcve;	i	ANY_OF
	f	Lcve;	j	ALL_OF
	f	Lcve;	k	NOT
	f	Lcve;	l	TRUE
c	cvf	net/minecraft/world/level/levelgen/blockpredicates/CombiningPredicate
	m	(Lcvf;)Ljava/util/List;	a	lambda$codec$0
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$1
	f	Ljava/util/List;	e	predicates
c	cvg	net/minecraft/world/level/levelgen/blockpredicates/HasSturdyFacePredicate
	m	()Lcve;	a	type
	m	(Lcbn;Lgj;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lcvg;)Lgo;	a	lambda$static$1
	m	(Lcvg;)Lhh;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhh;	e	offset
	f	Lgo;	f	direction
c	cvh	net/minecraft/world/level/levelgen/blockpredicates/InsideWorldBoundsPredicate
	m	()Lcve;	a	type
	m	(Lcbn;Lgj;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcvh;)Lhh;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhh;	e	offset
c	cvi	net/minecraft/world/level/levelgen/blockpredicates/MatchingBlockTagPredicate
	m	()Lcve;	a	type
	m	(Lcov;)Z	a	test
	m	(Lcvi;)Laif;	a	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	f	Laif;	a	tag
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	cvj	net/minecraft/world/level/levelgen/blockpredicates/MatchingBlocksPredicate
	m	()Lcve;	a	type
	m	(Lcov;)Z	a	test
	m	(Lcvj;)Lgt;	a	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgt;	e	blocks
c	cvk	net/minecraft/world/level/levelgen/blockpredicates/MatchingFluidsPredicate
	m	()Lcve;	a	type
	m	(Lcov;)Z	a	test
	m	(Lcvk;)Lgt;	a	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgt;	e	fluids
c	cvl	net/minecraft/world/level/levelgen/blockpredicates/NotPredicate
	m	()Lcve;	a	type
	m	(Lcbn;Lgj;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcvl;)Lcvd;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcvd;	e	predicate
c	cvm	net/minecraft/world/level/levelgen/blockpredicates/ReplaceablePredicate
	m	()Lcve;	a	type
	m	(Lcov;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	cvn	net/minecraft/world/level/levelgen/blockpredicates/SolidPredicate
	m	()Lcve;	a	type
	m	(Lcov;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	cvo	net/minecraft/world/level/levelgen/blockpredicates/StateTestingPredicate
	m	(Lcbn;Lgj;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1;	a	stateTestingCodec
	m	(Lcov;)Z	a	test
	m	(Lcvo;)Lhh;	a	lambda$stateTestingCodec$0
	f	Lhh;	f	offset
c	cvp	net/minecraft/world/level/levelgen/blockpredicates/TrueBlockPredicate
	m	()Lcve;	a	type
	m	(Lcbn;Lgj;)Z	a	test
	m	()Lcvp;	e	lambda$static$0
	f	Lcvp;	a	INSTANCE
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	cvq	net/minecraft/world/level/levelgen/blockpredicates/WouldSurvivePredicate
	m	()Lcve;	a	type
	m	(Lcbn;Lgj;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lcvq;)Lcov;	a	lambda$static$1
	m	(Lcvq;)Lhh;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhh;	e	offset
	f	Lcov;	f	state
c	cvr	net/minecraft/world/level/levelgen/blockpredicates/package-info
c	cvs	net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lcvs;)Lcvs$a;	a	lambda$static$2
	m	(Lcvs;)Lavm;	b	lambda$static$1
	m	(Lcvs;)Lcvu;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lavm;	b	verticalRotation
	f	Lcvs$a;	c	shape
c	cvs$a	net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration$CanyonShapeConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Lcvs$a;)Ljava/lang/Float;	a	lambda$static$5
	m	(Lcvs$a;)Ljava/lang/Float;	b	lambda$static$4
	m	(Lcvs$a;)Lavm;	c	lambda$static$3
	m	(Lcvs$a;)Ljava/lang/Integer;	d	lambda$static$2
	m	(Lcvs$a;)Lavm;	e	lambda$static$1
	m	(Lcvs$a;)Lavm;	f	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lavm;	b	distanceFactor
	f	Lavm;	c	thickness
	f	I	d	widthSmoothness
	f	Lavm;	e	horizontalRadiusFactor
	f	F	f	verticalRadiusDefaultFactor
	f	F	g	verticalRadiusCenterFactor
c	cvt	net/minecraft/world/level/levelgen/carver/CanyonWorldCarver
	m	(Lcvs;Ljava/util/Random;)Z	a	isStartChunk
	m	(Lcvs;Ljava/util/Random;DFF)D	a	updateVerticalRadius
	m	(Lcvu;Ljava/util/Random;)Z	a	isStartChunk
	m	(Lcvw;Lcvs;Lcqq;Ljava/util/function/Function;JLcti;DDDFFFIIDLcqp;)V	a	doCarve
	m	(Lcvw;Lcvs;Lcqq;Ljava/util/function/Function;Ljava/util/Random;Lcti;Lcac;Lcqp;)Z	a	carve
	m	(Lcvw;Lcvs;Ljava/util/Random;)[F	a	initWidthFactors
	m	(Lcvw;Lcvu;Lcqq;Ljava/util/function/Function;Ljava/util/Random;Lcti;Lcac;Lcqp;)Z	a	carve
	m	(Lcvw;[FDDDI)Z	a	shouldSkip
	m	([FLcvw;DDDI)Z	a	lambda$doCarve$0
c	cvu	net/minecraft/world/level/levelgen/carver/CarverConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Lcvu;)Lcvv;	a	lambda$static$4
	m	(Lcvu;)Lcus;	b	lambda$static$3
	m	(Lcvu;)Lavm;	c	lambda$static$2
	m	(Lcvu;)Lddg;	d	lambda$static$1
	m	(Lcvu;)Ljava/lang/Float;	e	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Lddg;	e	y
	f	Lavm;	f	yScale
	f	Lcus;	g	lavaLevel
	f	Lcvv;	h	debugSettings
c	cvv	net/minecraft/world/level/levelgen/carver/CarverDebugSettings
	m	()Z	a	isDebugMode
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lcov;Lcov;Lcov;Lcov;)Lcvv;	a	of
	m	(ZLcov;)Lcvv;	a	of
	m	(ZLcov;Lcov;Lcov;Lcov;)Lcvv;	a	of
	m	()Lcov;	b	getAirState
	m	()Lcov;	c	getWaterState
	m	()Lcov;	d	getLavaState
	m	()Lcov;	e	getBarrierState
	f	Lcvv;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Z	c	debugMode
	f	Lcov;	d	airState
	f	Lcov;	e	waterState
	f	Lcov;	f	lavaState
	f	Lcov;	g	barrierState
c	cvw	net/minecraft/world/level/levelgen/carver/CarvingContext
	m	(Ljava/util/function/Function;Lcqq;Lgj;Z)Ljava/util/Optional;	a	topMaterial
	m	()Lhc;	c	registryAccess
	f	Lctz;	a	generator
	f	Lhc;	b	registryAccess
	f	Lcua;	c	noiseChunk
c	cvx	net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lcvx;)Lavm;	a	lambda$static$3
	m	(Lcvx;)Lavm;	b	lambda$static$2
	m	(Lcvx;)Lavm;	c	lambda$static$1
	m	(Lcvx;)Lcvu;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lavm;	b	horizontalRadiusMultiplier
	f	Lavm;	c	verticalRadiusMultiplier
	f	Lavm;	i	floorLevel
c	cvy	net/minecraft/world/level/levelgen/carver/CaveWorldCarver
	m	()I	a	getCaveBound
	m	(DDDD)Z	a	shouldSkip
	m	(DLcvw;DDDI)Z	a	lambda$carve$0
	m	(Lcvu;Ljava/util/Random;)Z	a	isStartChunk
	m	(Lcvw;Lcvu;Lcqq;Ljava/util/function/Function;Ljava/util/Random;Lcti;Lcac;Lcqp;)Z	a	carve
	m	(Lcvw;Lcvx;Lcqq;Ljava/util/function/Function;JLcti;DDDDDFFFIIDLcqp;Lcwb$a;)V	a	createTunnel
	m	(Lcvw;Lcvx;Lcqq;Ljava/util/function/Function;Lcti;DDDFDLcqp;Lcwb$a;)V	a	createRoom
	m	(Lcvw;Lcvx;Lcqq;Ljava/util/function/Function;Ljava/util/Random;Lcti;Lcac;Lcqp;)Z	a	carve
	m	(Lcvx;Ljava/util/Random;)Z	a	isStartChunk
	m	(Ljava/util/Random;)F	a	getThickness
	m	()D	b	getYScale
c	cvz	net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver
	m	()Lcwb;	a	worldCarver
	m	(Lcvw;Lcqq;Ljava/util/function/Function;Ljava/util/Random;Lcti;Lcac;Lcqp;)Z	a	carve
	m	(Lcvz;)Lcwb;	a	lambda$static$0
	m	(Ljava/util/Random;)Z	a	isStartChunk
	m	()Lcvu;	b	config
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Lcwb;	d	worldCarver
	f	Lcvu;	e	config
c	cwa	net/minecraft/world/level/levelgen/carver/NetherWorldCarver
	m	()I	a	getCaveBound
	m	(Lcvw;Lcvu;Lcqq;Ljava/util/function/Function;Lcqp;Lgj$a;Lgj$a;Lcti;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
	m	(Lcvw;Lcvx;Lcqq;Ljava/util/function/Function;Lcqp;Lgj$a;Lgj$a;Lcti;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
	m	(Ljava/util/Random;)F	a	getThickness
	m	()D	b	getYScale
c	cwb	net/minecraft/world/level/levelgen/carver/WorldCarver
	m	(Lcac;DDIIF)Z	a	canReach
	m	(Lcov;)Z	a	canReplaceBlock
	m	(Lcqq;Lgj$a;Lcov;)V	a	lambda$carveBlock$0
	m	(Lcvu;)Lcvz;	a	configured
	m	(Lcvu;Lcov;)Lcov;	a	getDebugState
	m	(Lcvu;Ljava/util/Random;)Z	a	isStartChunk
	m	(Lcvw;Lcvu;Lcqq;Ljava/util/function/Function;Lcqp;Lgj$a;Lgj$a;Lcti;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
	m	(Lcvw;Lcvu;Lcqq;Ljava/util/function/Function;Lcti;DDDDDLcqp;Lcwb$a;)Z	a	carveEllipsoid
	m	(Lcvw;Lcvu;Lcqq;Ljava/util/function/Function;Ljava/util/Random;Lcti;Lcac;Lcqp;)Z	a	carve
	m	(Lcvw;Lcvu;Lgj;Lcti;)Lcov;	a	getCarveState
	m	(Ljava/lang/String;Lcwb;)Lcwb;	a	register
	m	(Lcvu;)Z	b	isDebugEnabled
	m	()Lcom/mojang/serialization/Codec;	c	configuredCodec
	m	()I	d	getRange
	f	Lcwb;	a	CAVE
	f	Lcwb;	b	NETHER_CAVE
	f	Lcwb;	c	CANYON
	f	Lcov;	d	AIR
	f	Lcov;	e	CAVE_AIR
	f	Ldix;	f	WATER
	f	Ldix;	g	LAVA
	f	Ljava/util/Set;	h	replaceableBlocks
	f	Ljava/util/Set;	i	liquids
	f	Lcom/mojang/serialization/Codec;	j	configuredCodec
c	cwb$a	net/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker
c	cwc	net/minecraft/world/level/levelgen/carver/package-info
c	cwd	net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature
	m	(IIII)I	a	getTreeRadiusForHeight
	m	(Lcaw;Lgj;ILgj$a;Ldac;)Z	a	isValidPosition
	m	(Lcaw;Ljava/util/Random;Lgj;ILgj$a;Ldac;)V	a	makeCap
	m	(Lcaw;Ljava/util/Random;Lgj;Ldac;ILgj$a;)V	a	placeTrunk
	m	(Lcxi;)Z	a	place
	m	(Ljava/util/Random;)I	a	getTreeHeight
c	cwe	net/minecraft/world/level/levelgen/feature/BambooFeature
	m	(Lcxi;)Z	a	place
	f	Lcov;	a	BAMBOO_TRUNK
	f	Lcov;	b	BAMBOO_FINAL_LARGE
	f	Lcov;	c	BAMBOO_TOP_LARGE
	f	Lcov;	d	BAMBOO_TOP_SMALL
c	cwf	net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature
	m	(Lcaw;ILgj$a;)Z	a	canPlaceAt
	m	(Lcaw;ILgj$a;I)Lgj;	a	findSurface
	m	(Lcaw;ILgj;)Z	a	isAirOrLavaOcean
	m	(Lcaw;ILgj;II)Z	a	placeColumn
	m	(Lcaw;Lgj$a;I)Lgj;	a	findAir
	m	(Lcxi;)Z	a	place
	f	Lcom/google/common/collect/ImmutableList;	a	CANNOT_PLACE_ON
	f	I	b	CLUSTERED_REACH
	f	I	c	CLUSTERED_SIZE
	f	I	d	UNCLUSTERED_REACH
	f	I	e	UNCLUSTERED_SIZE
c	cwg	net/minecraft/world/level/levelgen/feature/BasaltPillarFeature
	m	(Lcaw;Ljava/util/Random;Lgj;)V	a	placeBaseHangOff
	m	(Lcxi;)Z	a	place
	m	(Lcaw;Ljava/util/Random;Lgj;)Z	b	placeHangOff
c	cwh	net/minecraft/world/level/levelgen/feature/BaseDiskFeature
	m	(Lcxi;)Z	a	place
c	cwi	net/minecraft/world/level/levelgen/feature/BastionFeature
	m	(Ldfx$a;)Z	a	lambda$new$0
	f	I	a	BASTION_SPAWN_HEIGHT
c	cwj	net/minecraft/world/level/levelgen/feature/BlockBlobFeature
	m	(Lcxi;)Z	a	place
c	cwk	net/minecraft/world/level/levelgen/feature/BlockColumnFeature
	m	(Lcxi;)Z	a	place
	m	([IIIZ)V	a	truncate
c	cwl	net/minecraft/world/level/levelgen/feature/BlockPileFeature
	m	(Lcaw;Lgj;Ljava/util/Random;)Z	a	mayPlaceOn
	m	(Lcaw;Lgj;Ljava/util/Random;Lczr;)V	a	tryPlaceBlock
	m	(Lcxi;)Z	a	place
c	cwm	net/minecraft/world/level/levelgen/feature/BlueIceFeature
	m	(Lcxi;)Z	a	place
c	cwn	net/minecraft/world/level/levelgen/feature/BonusChestFeature
	m	(Lcxi;)Z	a	place
c	cwo	net/minecraft/world/level/levelgen/feature/BuriedTreasureFeature
	m	(Ldfx$a;)Z	a	checkLocation
	m	(Ldgb;Ldfw$a;)V	a	generatePieces
	f	I	a	RANDOM_SALT
c	cwp	net/minecraft/world/level/levelgen/feature/ChorusPlantFeature
	m	(Lcxi;)Z	a	place
c	cwq	net/minecraft/world/level/levelgen/feature/ConfiguredFeature
	m	()Ljava/util/stream/Stream;	a	getFeatures
	m	(Lcbn;Lcqr;Ljava/util/Random;Lgj;)Z	a	place
	m	(Lcwq;)Lcxg;	a	lambda$static$0
	m	()Lcxg;	b	feature
	m	()Lczz;	c	config
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Lcxg;	d	feature
	f	Lczz;	e	config
c	cwr	net/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature
	m	()Lgt;	a	biomes
	m	(Lcwr;)Lczd;	a	lambda$static$0
	m	(Ldeo;)Ldeo;	a	adjustBoundingBox
	m	(Lhc;Lcqr;Lcbv;Ldhr;JLcac;ILcax;Ljava/util/function/Predicate;)Ldfr;	a	generate
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Lczd;	d	feature
	f	Lczz;	e	config
	f	Lgt;	f	biomes
	f	Ljava/util/Map;	g	spawnOverrides
	f	Z	h	adaptNoise
c	cws	net/minecraft/world/level/levelgen/feature/CoralClawFeature
	m	(Lcaw;Ljava/util/Random;Lgj;Lcov;)Z	a	placeFeature
c	cwt	net/minecraft/world/level/levelgen/feature/CoralFeature
	m	(Lcaw;Lgj;Lcdq;)V	a	lambda$placeCoralBlock$2
	m	(Lcaw;Ljava/util/Random;Lgj;Lcov;)Z	a	placeFeature
	m	(Lcxi;)Z	a	place
	m	(Lgo;Lcaw;Lgj;Lcdq;)V	a	lambda$placeCoralBlock$4
	m	(Ljava/util/Random;Lgt$c;)Ljava/util/Optional;	a	lambda$placeCoralBlock$3
	m	(Lcaw;Ljava/util/Random;Lgj;Lcov;)Z	b	placeCoralBlock
	m	(Ljava/util/Random;Lgt$c;)Ljava/util/Optional;	b	lambda$placeCoralBlock$1
	m	(Ljava/util/Random;Lgt$c;)Ljava/util/Optional;	c	lambda$place$0
c	cwu	net/minecraft/world/level/levelgen/feature/CoralMushroomFeature
	m	(Lcaw;Ljava/util/Random;Lgj;Lcov;)Z	a	placeFeature
c	cwv	net/minecraft/world/level/levelgen/feature/CoralTreeFeature
	m	(Lcaw;Ljava/util/Random;Lgj;Lcov;)Z	a	placeFeature
c	cww	net/minecraft/world/level/levelgen/feature/DeltaFeature
	m	(Lcaw;Lgj;Lczv;)Z	a	isClear
	m	(Lcxi;)Z	a	place
	f	Lcom/google/common/collect/ImmutableList;	a	CANNOT_REPLACE
	f	[Lgo;	b	DIRECTIONS
	f	D	c	RIM_SPAWN_CHANCE
c	cwx	net/minecraft/world/level/levelgen/feature/DesertPyramidFeature
	m	(Ldfx$a;)Z	a	checkLocation
	m	(Ldgb;Ldfw$a;)V	a	generatePieces
c	cwy	net/minecraft/world/level/levelgen/feature/DesertWellFeature
	m	(Lcxi;)Z	a	place
	f	Lcpf;	a	IS_SAND
	f	Lcov;	b	sandSlab
	f	Lcov;	c	sandstone
	f	Lcov;	d	water
c	cwz	net/minecraft/world/level/levelgen/feature/DiskReplaceFeature
	m	(Lcxi;)Z	a	place
c	cxa	net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature
	m	(IIIILczx;)D	a	getChanceOfStalagmiteOrStalactite
	m	(Lcaw;Lgj;)Z	a	canBeAdjacentToWater
	m	(Lcay;Lgj;)Z	a	isLava
	m	(Lcbn;Lgj;ILgo;)V	a	replaceBlocksWithDripstoneBlocks
	m	(Lcbn;Ljava/util/Random;Lgj;IIFDIFLczx;)V	a	placeColumn
	m	(Lcxi;)Z	a	place
	m	(Ljava/util/Random;FFFF)F	a	randomBetweenBiased
	m	(Ljava/util/Random;IIFILczx;)I	a	getDripstoneHeight
	m	(Lcbn;Lgj;)Z	b	canPlacePool
c	cxb	net/minecraft/world/level/levelgen/feature/DripstoneUtils
	m	(DDDD)D	a	getDripstoneHeight
	m	(Lcaw;Lgj$a;Lgo;Lcov;)V	a	lambda$growPointedDripstone$0
	m	(Lcaw;Lgj;)Z	a	isEmptyOrWater
	m	(Lcaw;Lgj;Lgo;IZ)V	a	growPointedDripstone
	m	(Lcbn;Lgj;I)Z	a	isCircleMostlyEmbeddedInStone
	m	(Lcov;)Z	a	isDripstoneBaseOrLava
	m	(Lgo;IZLjava/util/function/Consumer;)V	a	buildBaseToTipColumn
	m	(Lgo;Lcps;)Lcov;	a	createPointedDripstone
	m	(Lcaw;Lgj;)Z	b	isEmptyOrWaterOrLava
	m	(Lcov;)Z	b	isDripstoneBase
	m	(Lcaw;Lgj;)Z	c	placeDripstoneBlockIfPossible
	m	(Lcov;)Z	c	isEmptyOrWater
	m	(Lcov;)Z	d	isNeitherEmptyNorWater
	m	(Lcov;)Z	e	isEmptyOrWaterOrLava
c	cxc	net/minecraft/world/level/levelgen/feature/EndCityFeature
	m	(Lcac;Lcqr;Lcax;)I	a	getYPositionForFeature
	m	(Ldfx$a;)Ljava/util/Optional;	a	pieceGeneratorSupplier
	m	(Lgj;Ldgb;Ldfw$a;)V	a	lambda$pieceGeneratorSupplier$0
	f	I	a	RANDOM_SALT
c	cxd	net/minecraft/world/level/levelgen/feature/EndGatewayFeature
	m	(Lcbn;Lgj;Lczy;Lgj;)V	a	lambda$place$0
	m	(Lcxi;)Z	a	place
c	cxe	net/minecraft/world/level/levelgen/feature/EndIslandFeature
	m	(Lcxi;)Z	a	place
c	cxf	net/minecraft/world/level/levelgen/feature/EndPodiumFeature
	m	(Lcxi;)Z	a	place
	f	I	a	PODIUM_RADIUS
	f	Z	ao	active
	f	I	b	PODIUM_PILLAR_HEIGHT
	f	I	c	RIM_RADIUS
	f	F	d	CORNER_ROUNDING
	f	Lgj;	e	END_PODIUM_LOCATION
c	cxg	net/minecraft/world/level/levelgen/feature/Feature
	m	()Lcom/mojang/serialization/Codec;	a	configuredCodec
	m	(Laif;)Ljava/util/function/Predicate;	a	isReplaceable
	m	(Laif;Lcov;)Z	a	lambda$isReplaceable$1
	m	(Lcbb;Lgj;)Z	a	isGrassOrDirt
	m	(Lcbd;Lgj;Lcov;)V	a	setBlock
	m	(Lcbn;Lgj;)V	a	markAboveForPostProcessing
	m	(Lcbn;Lgj;Lcov;Ljava/util/function/Predicate;)V	a	safeSetBlock
	m	(Lcov;)Z	a	isStone
	m	(Lcxi;)Z	a	place
	m	(Lczz;)Lcwq;	a	lambda$new$0
	m	(Lczz;Lcbn;Lcqr;Ljava/util/Random;Lgj;)Z	a	place
	m	(Ljava/lang/String;Lcxg;)Lcxg;	a	register
	m	(Ljava/util/function/Function;Lgj;)Z	a	isAdjacentToAir
	m	(Ljava/util/function/Function;Lgj;Ljava/util/function/Predicate;)Z	a	checkNeighbors
	m	(Lcbb;Lgj;)Z	b	isAir
	m	(Lcov;)Z	b	isDirt
	f	Lcxg;	A	ROOT_SYSTEM
	f	Lcxg;	B	GLOW_LICHEN
	f	Lcxg;	C	UNDERWATER_MAGMA
	f	Lcxg;	D	MONSTER_ROOM
	f	Lcxg;	E	BLUE_ICE
	f	Lcxg;	F	ICEBERG
	f	Lcxg;	G	FOREST_ROCK
	f	Lcxg;	H	DISK
	f	Lcxg;	I	ICE_PATCH
	f	Lcxg;	J	LAKE
	f	Lcxg;	K	ORE
	f	Lcxg;	L	END_SPIKE
	f	Lcxg;	M	END_ISLAND
	f	Lcxg;	N	END_GATEWAY
	f	Lcyv;	O	SEAGRASS
	f	Lcxg;	P	KELP
	f	Lcxg;	Q	CORAL_TREE
	f	Lcxg;	R	CORAL_MUSHROOM
	f	Lcxg;	S	CORAL_CLAW
	f	Lcxg;	T	SEA_PICKLE
	f	Lcxg;	U	SIMPLE_BLOCK
	f	Lcxg;	V	BAMBOO
	f	Lcxg;	W	HUGE_FUNGUS
	f	Lcxg;	X	NETHER_FOREST_VEGETATION
	f	Lcxg;	Y	WEEPING_VINES
	f	Lcxg;	Z	TWISTING_VINES
	f	Lcom/mojang/serialization/Codec;	a	configuredCodec
	f	Lcxg;	aa	BASALT_COLUMNS
	f	Lcxg;	ab	DELTA_FEATURE
	f	Lcxg;	ac	REPLACE_BLOBS
	f	Lcxg;	ad	FILL_LAYER
	f	Lcwn;	ae	BONUS_CHEST
	f	Lcxg;	af	BASALT_PILLAR
	f	Lcxg;	ag	SCATTERED_ORE
	f	Lcxg;	ah	RANDOM_SELECTOR
	f	Lcxg;	ai	SIMPLE_RANDOM_SELECTOR
	f	Lcxg;	aj	RANDOM_BOOLEAN_SELECTOR
	f	Lcxg;	ak	GEODE
	f	Lcxg;	al	DRIPSTONE_CLUSTER
	f	Lcxg;	am	LARGE_DRIPSTONE
	f	Lcxg;	an	POINTED_DRIPSTONE
	f	Lcxg;	f	NO_OP
	f	Lcxg;	g	TREE
	f	Lcxg;	h	FLOWER
	f	Lcxg;	i	NO_BONEMEAL_FLOWER
	f	Lcxg;	j	RANDOM_PATCH
	f	Lcxg;	k	BLOCK_PILE
	f	Lcxg;	l	SPRING
	f	Lcxg;	m	CHORUS_PLANT
	f	Lcxg;	n	REPLACE_SINGLE_BLOCK
	f	Lcxg;	o	VOID_START_PLATFORM
	f	Lcxg;	p	DESERT_WELL
	f	Lcxg;	q	FOSSIL
	f	Lcxg;	r	HUGE_RED_MUSHROOM
	f	Lcxg;	s	HUGE_BROWN_MUSHROOM
	f	Lcxg;	t	ICE_SPIKE
	f	Lcxg;	u	GLOWSTONE_BLOB
	f	Lcxg;	v	FREEZE_TOP_LAYER
	f	Lcxg;	w	VINES
	f	Lcxg;	x	BLOCK_COLUMN
	f	Lcxg;	y	VEGETATION_PATCH
	f	Lcxg;	z	WATERLOGGED_VEGETATION_PATCH
c	cxh	net/minecraft/world/level/levelgen/feature/FeatureCountTracker
	m	()V	a	clearCounts
	m	(Ladw;)V	a	chunkDecorated
	m	(Ladw;Lcwq;Ljava/util/Optional;)V	a	featurePlaced
	m	(Ladw;Lcxh$b;)V	a	lambda$logCounts$2
	m	(Lcxh$a;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$featurePlaced$0
	m	(Ljava/lang/String;Ljava/lang/Integer;Lhb;Lcxh$a;Ljava/lang/Integer;)V	a	lambda$logCounts$1
	m	()V	b	logCounts
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/common/cache/LoadingCache;	b	data
c	cxh$1	net/minecraft/world/level/levelgen/feature/FeatureCountTracker$1
	m	(Ladw;)Lcxh$b;	a	load
c	cxh$a	net/minecraft/world/level/levelgen/feature/FeatureCountTracker$FeatureData
	m	()Lcwq;	a	feature
	m	()Ljava/util/Optional;	b	topFeature
	f	Lcwq;	a	feature
	f	Ljava/util/Optional;	b	topFeature
c	cxh$b	net/minecraft/world/level/levelgen/feature/FeatureCountTracker$LevelData
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	featureData
	m	()Lorg/apache/commons/lang3/mutable/MutableInt;	b	chunksWithFeatures
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	featureData
	f	Lorg/apache/commons/lang3/mutable/MutableInt;	b	chunksWithFeatures
c	cxi	net/minecraft/world/level/levelgen/feature/FeaturePlaceContext
	m	()Ljava/util/Optional;	a	topFeature
	m	()Lcbn;	b	level
	m	()Lcqr;	c	chunkGenerator
	m	()Ljava/util/Random;	d	random
	m	()Lgj;	e	origin
	m	()Lczz;	f	config
	f	Ljava/util/Optional;	a	topFeature
	f	Lcbn;	b	level
	f	Lcqr;	c	chunkGenerator
	f	Ljava/util/Random;	d	random
	f	Lgj;	e	origin
	f	Lczz;	f	config
c	cxj	net/minecraft/world/level/levelgen/feature/FillLayerFeature
	m	(Lcxi;)Z	a	place
c	cxk	net/minecraft/world/level/levelgen/feature/FossilFeature
	m	(Lcbn;Ldeo;)I	a	countEmptyCorners
	m	(Lcbn;Lorg/apache/commons/lang3/mutable/MutableInt;Lgj;)V	a	lambda$countEmptyCorners$0
	m	(Lcxi;)Z	a	place
c	cxl	net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Lcxl;)Ljava/lang/Integer;	a	lambda$static$4
	m	(Lcxl;)Lgs;	b	lambda$static$3
	m	(Lcxl;)Lgs;	c	lambda$static$2
	m	(Lcxl;)Ljava/util/List;	d	lambda$static$1
	m	(Lcxl;)Ljava/util/List;	e	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	fossilStructures
	f	Ljava/util/List;	c	overlayStructures
	f	Lgs;	d	fossilProcessors
	f	Lgs;	e	overlayProcessors
	f	I	f	maxEmptyCornersAllowed
c	cxm	net/minecraft/world/level/levelgen/feature/GeodeFeature
	m	(Lcxi;)Z	a	place
	f	[Lgo;	a	DIRECTIONS
c	cxn	net/minecraft/world/level/levelgen/feature/GlowLichenFeature
	m	(Lcbn;Lgj;Lcov;Ldab;Ljava/util/Random;Ljava/util/List;)Z	a	placeGlowLichenIfPossible
	m	(Lcxi;)Z	a	place
	m	(Ldab;Ljava/util/Random;)Ljava/util/List;	a	getShuffledDirections
	m	(Ldab;Ljava/util/Random;Lgo;)Ljava/util/List;	a	getShuffledDirectionsExcept
	m	(Lgo;Lgo;)Z	a	lambda$getShuffledDirectionsExcept$0
	m	(Lcov;)Z	c	isAirOrWater
c	cxo	net/minecraft/world/level/levelgen/feature/GlowstoneFeature
	m	(Lcxi;)Z	a	place
c	cxp	net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature
	m	(IIII)I	a	getTreeRadiusForHeight
	m	(Lcaw;Ljava/util/Random;Lgj;ILgj$a;Ldac;)V	a	makeCap
c	cxq	net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Lcxq;)Ljava/lang/Boolean;	a	lambda$static$4
	m	(Lcxq;)Lcov;	b	lambda$static$3
	m	(Lcxq;)Lcov;	c	lambda$static$2
	m	(Lcxq;)Lcov;	d	lambda$static$1
	m	(Lcxq;)Lcov;	e	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcov;	b	validBaseState
	f	Lcov;	c	stemState
	f	Lcov;	d	hatState
	f	Lcov;	e	decorState
	f	Z	f	planted
c	cxr	net/minecraft/world/level/levelgen/feature/HugeFungusFeature
	m	(Lcaw;Lgj;Z)Z	a	isReplaceable
	m	(Lcaw;Ljava/util/Random;Lcxq;Lgj$a;FFF)V	a	placeHatBlock
	m	(Lcaw;Ljava/util/Random;Lcxq;Lgj;IZ)V	a	placeStem
	m	(Lcaw;Ljava/util/Random;Lgj;Lcov;Z)V	a	placeHatDropBlock
	m	(Lcxi;)Z	a	place
	m	(Lgj;Lcaw;Ljava/util/Random;)V	a	tryPlaceWeepingVines
	m	(ZLcov;)Z	a	lambda$isReplaceable$0
	m	(Lcaw;Ljava/util/Random;Lcxq;Lgj;IZ)V	b	placeHat
	f	F	a	HUGE_PROBABILITY
c	cxs	net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature
	m	(IIII)I	a	getTreeRadiusForHeight
	m	(Lcaw;Ljava/util/Random;Lgj;ILgj$a;Ldac;)V	a	makeCap
c	cxt	net/minecraft/world/level/levelgen/feature/IcePatchFeature
	m	(Lcxi;)Z	a	place
c	cxu	net/minecraft/world/level/levelgen/feature/IceSpikeFeature
	m	(Lcxi;)Z	a	place
c	cxv	net/minecraft/world/level/levelgen/feature/IcebergFeature
	m	(III)I	a	getEllipseC
	m	(IILgj;IID)D	a	signedDistanceEllipse
	m	(IILgj;ILjava/util/Random;)D	a	signedDistanceCircle
	m	(IILgj;Lcaw;ZDLgj;II)V	a	carve
	m	(Lcab;Lgj;)Z	a	belowIsAir
	m	(Lcaw;Lgj;)V	a	removeFloatingSnowLayer
	m	(Lcaw;Lgj;IIZI)V	a	smooth
	m	(Lcaw;Ljava/util/Random;Lgj;IIIIIIZIDZLcov;)V	a	generateIcebergBlock
	m	(Lcxi;)Z	a	place
	m	(Lgj;Lcaw;Ljava/util/Random;IIZZLcov;)V	a	setIcebergBlock
	m	(Ljava/util/Random;III)I	a	heightDependentRadiusRound
	m	(Ljava/util/Random;Lcaw;IILgj;ZIDI)V	a	generateCutOut
	m	(III)I	b	heightDependentRadiusEllipse
	m	(Ljava/util/Random;III)I	b	heightDependentRadiusSteep
	m	(Lcov;)Z	c	isIcebergState
c	cxw	net/minecraft/world/level/levelgen/feature/IglooFeature
	m	(Ldgb;Ldfw$a;)V	a	generatePieces
c	cxx	net/minecraft/world/level/levelgen/feature/JigsawFeature
	m	(Ljava/util/function/Predicate;IZZLdfx$a;)Ljava/util/Optional;	a	lambda$new$0
c	cxy	net/minecraft/world/level/levelgen/feature/JunglePyramidFeature
	m	(Ldfx$a;)Z	a	checkLocation
	m	(Ldgb;Ldfw$a;)V	a	generatePieces
c	cxz	net/minecraft/world/level/levelgen/feature/KelpFeature
	m	(Lcxi;)Z	a	place
c	cya	net/minecraft/world/level/levelgen/feature/LakeFeature
	m	(Lcxi;)Z	a	place
	m	(Lcov;)Z	c	canReplaceBlock
	f	Lcov;	a	AIR
c	cya$a	net/minecraft/world/level/levelgen/feature/LakeFeature$Configuration
	m	()Ldby;	a	fluid
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ldby;	b	barrier
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldby;	b	fluid
	f	Ldby;	c	barrier
c	cyb	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature
	m	(Lcbn;Lgj;Lctm$b;Lcyb$b;)V	a	placeDebugMarkers
	m	(Lcxi;)Z	a	place
	m	(Lgj;ZLjava/util/Random;ILavm;Lavm;)Lcyb$a;	a	makeDripstone
c	cyb$a	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone
	m	()I	a	getHeight
	m	(F)I	a	getHeightAtRadius
	m	(Lcbn;Lcyb$b;)Z	a	moveBackUntilBaseIsInsideStoneAndShrinkRadiusIfNecessary
	m	(Lcbn;Ljava/util/Random;Lcyb$b;)V	a	placeBlocks
	m	(Ldae;)Z	a	isSuitableForWind
	m	()I	b	getMinY
	m	()I	c	getMaxY
	f	Lgj;	a	root
	f	Z	b	pointingUp
	f	I	c	radius
	f	D	d	bluntness
	f	D	e	scale
c	cyb$b	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter
	m	()Lcyb$b;	a	noWind
	m	(Lgj;)Lgj;	a	offset
	f	I	a	originY
	f	Ldpo;	b	windSpeed
c	cyc	net/minecraft/world/level/levelgen/feature/MineshaftFeature
	m	(Ldfx$a;)Z	a	checkLocation
	m	(Ldgb;Ldfw$a;)V	a	generatePieces
c	cyc$a	net/minecraft/world/level/levelgen/feature/MineshaftFeature$Type
	m	()Ljava/lang/String;	a	getName
	m	(I)Lcyc$a;	a	byId
	m	(Lcyc$a;)Lcyc$a;	a	lambda$static$0
	m	(Ljava/lang/String;)Lcyc$a;	a	byName
	m	()Lcov;	b	getWoodState
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lcov;	d	getPlanksState
	m	()Lcov;	e	getFenceState
	m	()[Lcyc$a;	f	$values
	f	Lcyc$a;	a	NORMAL
	f	Lcyc$a;	b	MESA
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/util/Map;	d	BY_NAME
	f	Ljava/lang/String;	e	name
	f	Lcov;	f	woodState
	f	Lcov;	g	planksState
	f	Lcov;	h	fenceState
	f	[Lcyc$a;	i	$VALUES
c	cyd	net/minecraft/world/level/levelgen/feature/MonsterRoomFeature
	m	(Lcxi;)Z	a	place
	m	(Ljava/util/Random;)Laxo;	a	randomEntityId
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	[Laxo;	b	MOBS
	f	Lcov;	c	AIR
c	cye	net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature
	m	(Lcxi;)Z	a	place
c	cyf	net/minecraft/world/level/levelgen/feature/NetherFortressFeature
	m	(Ldfx$a;)Z	a	checkLocation
	m	(Ldgb;Ldfw$a;)V	a	generatePieces
	f	Lauw;	a	FORTRESS_ENEMIES
c	cyg	net/minecraft/world/level/levelgen/feature/NoOpFeature
	m	(Lcxi;)Z	a	place
c	cyh	net/minecraft/world/level/levelgen/feature/NoiseEffect
	m	()[Lcyh;	a	$values
	f	Lcyh;	a	NONE
	f	Lcyh;	b	BURY
	f	Lcyh;	c	BEARD
	f	[Lcyh;	d	$VALUES
c	cyi	net/minecraft/world/level/levelgen/feature/OceanMonumentFeature
	m	(Lcac;JLdfy;)Ldfy;	a	regeneratePiecesAfterLoad
	m	(Lcac;Lcuv;)Ldfn;	a	createTopPiece
	m	(Ldfx$a;)Z	a	checkLocation
	m	(Ldgb;Ldfw$a;)V	a	generatePieces
c	cyj	net/minecraft/world/level/levelgen/feature/OreFeature
	m	(Lcbn;Ljava/util/Random;Ldak;DDDDDDIIIII)Z	a	doPlace
	m	(Lcov;Ljava/util/function/Function;Ljava/util/Random;Ldak;Ldak$a;Lgj$a;)Z	a	canPlaceOre
	m	(Lcxi;)Z	a	place
	m	(Ljava/util/Random;F)Z	a	shouldSkipAirCheck
c	cyk	net/minecraft/world/level/levelgen/feature/PillagerOutpostFeature
	m	(Ldfx$a;)Z	a	checkLocation
c	cyl	net/minecraft/world/level/levelgen/feature/PointedDripstoneFeature
	m	(Lcaw;Lgj;Ljava/util/Random;)Ljava/util/Optional;	a	getTipDirection
	m	(Lcaw;Ljava/util/Random;Lgj;Ldal;)V	a	createPatchOfDripstoneBlocks
	m	(Lcxi;)Z	a	place
c	cym	net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature
	m	(Lcxi;)Z	a	place
c	cyn	net/minecraft/world/level/levelgen/feature/RandomPatchFeature
	m	(Lcxi;)Z	a	place
c	cyo	net/minecraft/world/level/levelgen/feature/RandomSelectorFeature
	m	(Lcxi;)Z	a	place
c	cyp	net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature
	m	(Lcaw;Lgj$a;Lcdq;)Lgj;	a	findTarget
	m	(Lcxi;)Z	a	place
c	cyq	net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature
	m	(Lcxi;)Z	a	place
c	cyr	net/minecraft/world/level/levelgen/feature/RootSystemFeature
	m	(Lcbn;Lcqr;Ldat;Ljava/util/Random;Lgj$a;Lgj;)Z	a	placeDirtAndTree
	m	(Lcbn;Ldat;Lgj;)Z	a	spaceForTree
	m	(Lcbn;Ldat;Ljava/util/Random;IILgj$a;)V	a	placeRootedDirt
	m	(Lcbn;Ldat;Ljava/util/Random;Lgj;Lgj$a;)V	a	placeRoots
	m	(Lcov;II)Z	a	isAllowedTreeSpace
	m	(Lcxi;)Z	a	place
	m	(Ldat;Lcov;)Z	a	lambda$placeRootedDirt$0
	m	(Lgj;ILcbn;Ldat;Ljava/util/Random;)V	a	placeDirt
c	cys	net/minecraft/world/level/levelgen/feature/RuinedPortalFeature
	m	(Lcqr;Lcax;Lgj;)Lcbh;	a	lambda$findSuitableY$1
	m	(Ldau;Ldfg$a;Lgj;Ldfx$a;Ldfg$b;Lyt;Ldhw;Lcjm;Lchz;Lgj;Ldgb;Ldfw$a;)V	a	lambda$pieceGeneratorSupplier$0
	m	(Ldfx$a;)Ljava/util/Optional;	a	pieceGeneratorSupplier
	m	(Lgj;Lgs;)Z	a	isCold
	m	(Ljava/util/Random;II)I	a	getRandomWithinInterval
	m	(Ljava/util/Random;Lcqr;Ldfg$b;ZIILdeo;Lcax;)I	a	findSuitableY
	f	F	A	SWAMP_MOSSINESS
	f	I	B	MIN_Y_INDEX
	f	[Ljava/lang/String;	a	STRUCTURE_LOCATION_PORTALS
	f	[Ljava/lang/String;	u	STRUCTURE_LOCATION_GIANT_PORTALS
	f	F	v	PROBABILITY_OF_GIANT_PORTAL
	f	F	w	PROBABILITY_OF_AIR_POCKET
	f	F	x	PROBABILITY_OF_UNDERGROUND
	f	F	y	UNDERWATER_MOSSINESS
	f	F	z	JUNGLE_MOSSINESS
c	cys$a	net/minecraft/world/level/levelgen/feature/RuinedPortalFeature$Type
	m	()Ljava/lang/String;	a	getName
	m	(Lcys$a;)Lcys$a;	a	lambda$static$0
	m	(Ljava/lang/String;)Lcys$a;	a	byName
	m	()[Lcys$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcys$a;	a	STANDARD
	f	Lcys$a;	b	DESERT
	f	Lcys$a;	c	JUNGLE
	f	Lcys$a;	d	SWAMP
	f	Lcys$a;	e	MOUNTAIN
	f	Lcys$a;	f	OCEAN
	f	Lcys$a;	g	NETHER
	f	Lcom/mojang/serialization/Codec;	h	CODEC
	f	Ljava/util/Map;	i	BY_NAME
	f	Ljava/lang/String;	j	name
	f	[Lcys$a;	k	$VALUES
c	cyt	net/minecraft/world/level/levelgen/feature/ScatteredOreFeature
	m	(Lcxi;)Z	a	place
	m	(Lgj$a;Ljava/util/Random;Lgj;I)V	a	offsetTargetPos
	m	(Ljava/util/Random;I)I	a	getRandomPlacementInOneAxisRelativeToOrigin
	f	I	a	MAX_DIST_FROM_ORIGIN
c	cyu	net/minecraft/world/level/levelgen/feature/SeaPickleFeature
	m	(Lcxi;)Z	a	place
c	cyv	net/minecraft/world/level/levelgen/feature/SeagrassFeature
	m	(Lcxi;)Z	a	place
c	cyw	net/minecraft/world/level/levelgen/feature/ShipwreckFeature
	m	(Ldfx$a;)Z	a	checkLocation
	m	(Ldgb;Ldfw$a;)V	a	generatePieces
c	cyx	net/minecraft/world/level/levelgen/feature/SimpleBlockFeature
	m	(Lcxi;)Z	a	place
c	cyy	net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature
	m	(Lcxi;)Z	a	place
c	cyz	net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature
	m	(Lcxi;)Z	a	place
c	cza	net/minecraft/world/level/levelgen/feature/SpikeFeature
	m	(Lcbk;Ljava/util/Random;Lday;Lcza$a;)V	a	placeSpike
	m	(Lcbn;)Ljava/util/List;	a	getSpikesForLevel
	m	(Lcxi;)Z	a	place
	f	I	a	NUMBER_OF_SPIKES
	f	I	b	SPIKE_DISTANCE
	f	Lcom/google/common/cache/LoadingCache;	c	SPIKE_CACHE
c	cza$a	net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike
	m	()I	a	getCenterX
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Lcza$a;)Ljava/lang/Boolean;	a	lambda$static$4
	m	(Lgj;)Z	a	isCenterWithinChunk
	m	()I	b	getCenterZ
	m	(Lcza$a;)Ljava/lang/Integer;	b	lambda$static$3
	m	()I	c	getRadius
	m	(Lcza$a;)Ljava/lang/Integer;	c	lambda$static$2
	m	()I	d	getHeight
	m	(Lcza$a;)Ljava/lang/Integer;	d	lambda$static$1
	m	()Z	e	isGuarded
	m	(Lcza$a;)Ljava/lang/Integer;	e	lambda$static$0
	m	()Ldpj;	f	getTopBoundingBox
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	centerX
	f	I	c	centerZ
	f	I	d	radius
	f	I	e	height
	f	Z	f	guarded
	f	Ldpj;	g	topBoundingBox
c	cza$b	net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader
	m	(Ljava/lang/Long;)Ljava/util/List;	a	load
c	czb	net/minecraft/world/level/levelgen/feature/SpringFeature
	m	(Lcxi;)Z	a	place
c	czc	net/minecraft/world/level/levelgen/feature/StrongholdFeature
	m	(Ldfx$a;)Z	a	checkLocation
	m	(Ldgb;Ldfw$a;)V	a	generatePieces
c	czd	net/minecraft/world/level/levelgen/feature/StructureFeature
	m	()Lcts$b;	a	step
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$new$4
	m	(Lcwr;)Ljava/util/Map;	a	lambda$new$2
	m	(Lczz;Laif;)Lcwr;	a	configured
	m	(Lczz;Laif;Ljava/util/Map;)Lcwr;	a	configured
	m	(Lczz;Laif;Z)Lcwr;	a	configured
	m	(Lczz;Laif;ZLjava/util/Map;)Lcwr;	a	configured
	m	(Lczz;Lgt;Ljava/lang/Boolean;Ljava/util/Map;)Lcwr;	a	lambda$new$3
	m	(Ldfz;Lok;J)Ldfr;	a	loadStaticStart
	m	(Ldge;Lcac;)Lgj;	a	getLocatePos
	m	(Lhc;Lcqr;Lcbv;Ldhr;JLcac;Lczz;Lcax;Ljava/util/function/Predicate;)Z	a	canGenerate
	m	(Ljava/lang/String;Lczd;Lcts$b;)Lczd;	a	register
	m	()V	b	bootstrap
	m	(Lcwr;)Ljava/lang/Boolean;	b	lambda$new$1
	m	()Lcom/mojang/serialization/Codec;	c	configuredStructureCodec
	m	(Lcwr;)Lczz;	c	lambda$new$0
	m	()Ldfx;	d	pieceGeneratorSupplier
	m	()Ldff;	e	getPostPlacementProcessor
	f	Ljava/util/Map;	a	STEP
	f	Lczd;	b	PILLAGER_OUTPOST
	f	Lczd;	c	MINESHAFT
	f	Lczd;	d	WOODLAND_MANSION
	f	Lczd;	e	JUNGLE_TEMPLE
	f	Lczd;	f	DESERT_PYRAMID
	f	Lczd;	g	IGLOO
	f	Lczd;	h	RUINED_PORTAL
	f	Lczd;	i	SHIPWRECK
	f	Lczd;	j	SWAMP_HUT
	f	Lczd;	k	STRONGHOLD
	f	Lczd;	l	OCEAN_MONUMENT
	f	Lczd;	m	OCEAN_RUIN
	f	Lczd;	n	FORTRESS
	f	Lczd;	o	END_CITY
	f	Lczd;	p	BURIED_TREASURE
	f	Lczd;	q	VILLAGE
	f	Lczd;	r	NETHER_FOSSIL
	f	Lczd;	s	BASTION_REMNANT
	f	I	t	MAX_STRUCTURE_RANGE
	f	Lorg/slf4j/Logger;	u	LOGGER
	f	Lcom/mojang/serialization/Codec;	v	configuredStructureCodec
	f	Ldfx;	w	pieceGenerator
	f	Ldff;	x	postPlacementProcessor
c	cze	net/minecraft/world/level/levelgen/feature/SwamplandHutFeature
	m	(Ldgb;Ldfw$a;)V	a	generatePieces
c	czf	net/minecraft/world/level/levelgen/feature/TreeFeature
	m	(Lcaw;Ldeo;Ljava/util/Set;Ljava/util/Set;)Ldpx;	a	updateLeaves
	m	(Lcbb;ILgj;Ldba;)I	a	getMaxFreeTreeHeight
	m	(Lcbd;Lgj;Lcov;)V	a	setBlock
	m	(Lcbn;Ljava/util/Random;Lgj;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Ldba;)Z	a	doPlace
	m	(Lcbn;Ljava/util/Set;Ljava/util/Set;Ldeo;)Ljava/lang/Boolean;	a	lambda$place$10
	m	(Lcbn;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ldcn;)V	a	lambda$place$9
	m	(Lcxi;)Z	a	place
	m	(Ldba;Lcbn;Ljava/util/function/BiConsumer;Ljava/util/Random;IIILdbp$a;)V	a	lambda$doPlace$5
	m	(Ljava/util/Set;Lcbn;Lgj;Lcov;)V	a	lambda$place$8
	m	(Lcbd;Lgj;Lcov;)V	b	setBlockKnownShape
	m	(Ljava/util/Set;Lcbn;Lgj;Lcov;)V	b	lambda$place$7
	m	(Lcbb;Lgj;)Z	c	isFree
	m	(Lcov;)Z	c	lambda$isReplaceablePlant$4
	m	(Ljava/util/Set;Lcbn;Lgj;Lcov;)V	c	lambda$place$6
	m	(Lcbb;Lgj;)Z	d	isAirOrLeaves
	m	(Lcov;)Z	d	lambda$isAirOrLeaves$3
	m	(Lcbb;Lgj;)Z	e	validTreePos
	m	(Lcov;)Z	e	lambda$isBlockWater$2
	m	(Lcbb;Lgj;)Z	f	isVine
	m	(Lcov;)Z	f	lambda$isVine$1
	m	(Lcbb;Lgj;)Z	g	isBlockWater
	m	(Lcov;)Z	g	lambda$isFree$0
	m	(Lcbb;Lgj;)Z	h	isReplaceablePlant
	f	I	a	BLOCK_UPDATE_FLAGS
c	czg	net/minecraft/world/level/levelgen/feature/TwistingVinesFeature
	m	(Lcaw;Lgj$a;)Z	a	findFirstAirBlockAboveGround
	m	(Lcaw;Lgj;)Z	a	isInvalidPlacementLocation
	m	(Lcaw;Ljava/util/Random;Lgj$a;III)V	a	placeWeepingVinesColumn
	m	(Lcxi;)Z	a	place
c	czh	net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature
	m	(Lcaw;Lgj;)Z	a	isWaterOrAir
	m	(Lcbn;Lgj;Ldbc;)Ljava/util/OptionalInt;	a	getFloorY
	m	(Lcxi;)Z	a	place
	m	(Ljava/util/Random;Ldbc;Lgj;)Z	a	lambda$place$0
	m	(Lcbn;Lgj;)Z	b	isValidPlacement
	m	(Lcbn;Lgj;)I	c	lambda$place$2
	m	(Lcov;)Z	c	lambda$getFloorY$4
	m	(Lcbn;Lgj;)Z	d	lambda$place$1
	m	(Lcov;)Z	d	lambda$getFloorY$3
c	czi	net/minecraft/world/level/levelgen/feature/VegetationPatchFeature
	m	(Lcbn;Ldbd;Lcqr;Ljava/util/Random;Lgj;)Z	a	placeVegetation
	m	(Lcbn;Ldbd;Ljava/util/Random;Lgj;Ljava/util/function/Predicate;II)Ljava/util/Set;	a	placeGroundPatch
	m	(Lcbn;Ldbd;Ljava/util/function/Predicate;Ljava/util/Random;Lgj$a;I)Z	a	placeGround
	m	(Lcxi;)Z	a	place
	m	(Lcxi;Lcbn;Ldbd;Ljava/util/Random;Ljava/util/Set;II)V	a	distributeVegetation
	m	(Ldbd;Lcov;)Z	a	lambda$place$0
	m	(Lcov;)Z	c	lambda$placeGroundPatch$1
c	czj	net/minecraft/world/level/levelgen/feature/VillageFeature
	m	(Ldfx$a;)Z	a	lambda$new$0
c	czk	net/minecraft/world/level/levelgen/feature/VinesFeature
	m	(Lcxi;)Z	a	place
c	czl	net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature
	m	(IIII)I	a	checkerboardDistance
	m	(Lcxi;)Z	a	place
	f	Lgj;	a	PLATFORM_OFFSET
	f	Lcac;	b	PLATFORM_ORIGIN_CHUNK
	f	I	c	PLATFORM_RADIUS
	f	I	d	PLATFORM_RADIUS_CHUNKS
c	czm	net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature
	m	(Lcbn;Ldbd;Lcqr;Ljava/util/Random;Lgj;)Z	a	placeVegetation
	m	(Lcbn;Ldbd;Ljava/util/Random;Lgj;Ljava/util/function/Predicate;II)Ljava/util/Set;	a	placeGroundPatch
	m	(Lcbn;Lgj;Lgj$a;Lgo;)Z	a	isExposedDirection
	m	(Lcbn;Ljava/util/Set;Lgj;Lgj$a;)Z	a	isExposed
c	czn	net/minecraft/world/level/levelgen/feature/WeepingVinesFeature
	m	(Lcaw;Ljava/util/Random;Lgj$a;III)V	a	placeWeepingVinesColumn
	m	(Lcaw;Ljava/util/Random;Lgj;)V	a	placeRoofNetherWart
	m	(Lcxi;)Z	a	place
	m	(Lcaw;Ljava/util/Random;Lgj;)V	b	placeRoofWeepingVines
	f	[Lgo;	a	DIRECTIONS
c	czo	net/minecraft/world/level/levelgen/feature/WeightedPlacedFeature
	m	(Lcbn;Lcqr;Ljava/util/Random;Lgj;)Z	a	place
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lczo;)Ljava/lang/Float;	a	lambda$static$1
	m	(Lczo;)Lgs;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgs;	b	feature
	f	F	c	chance
c	czp	net/minecraft/world/level/levelgen/feature/WoodlandMansionFeature
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Ldfy;)V	a	afterPlace
	m	(Ldfx$a;)Ljava/util/Optional;	a	pieceGeneratorSupplier
	m	(Lgj;Lcjm;Lcuv;Ldgb;Ldfw$a;)V	a	lambda$pieceGeneratorSupplier$0
c	czq	net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration
	m	()Ljava/util/List;	a	layers
	m	(Lavo;Ldby;)Lczq$a;	a	layer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Lgo;	b	direction
	m	(Lavo;Ldby;)Lczq;	b	simple
	m	()Lcvd;	c	allowedPlacement
	m	()Z	d	prioritizeTip
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	layers
	f	Lgo;	c	direction
	f	Lcvd;	d	allowedPlacement
	f	Z	e	prioritizeTip
c	czq$a	net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$Layer
	m	()Lavo;	a	height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ldby;	b	state
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lavo;	b	height
	f	Ldby;	c	state
c	czr	net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration
	m	(Lczr;)Ldby;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldby;	b	stateProvider
c	czs	net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration
	m	(Lczs;)Lcov;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcov;	b	state
c	czt	net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration
	m	()Lavo;	a	reach
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lczt;)Lavo;	a	lambda$static$1
	m	()Lavo;	b	height
	m	(Lczt;)Lavo;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lavo;	b	reach
	f	Lavo;	c	height
c	czu	net/minecraft/world/level/levelgen/feature/configurations/CountConfiguration
	m	()Lavo;	a	count
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lavo;	b	count
c	czv	net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration
	m	()Lcov;	a	contents
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lczv;)Lavo;	a	lambda$static$3
	m	()Lcov;	b	rim
	m	(Lczv;)Lavo;	b	lambda$static$2
	m	()Lavo;	c	size
	m	(Lczv;)Lcov;	c	lambda$static$1
	m	()Lavo;	d	rimSize
	m	(Lczv;)Lcov;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcov;	b	contents
	f	Lcov;	c	rim
	f	Lavo;	d	size
	f	Lavo;	e	rimSize
c	czw	net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration
	m	()Lcov;	a	state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Lavo;	b	radius
	m	()I	c	halfHeight
	m	()Ljava/util/List;	d	targets
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcov;	b	state
	f	Lavo;	c	radius
	f	I	d	halfHeight
	f	Ljava/util/List;	e	targets
c	czx	net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$11
	m	(Lczx;)Ljava/lang/Integer;	a	lambda$static$10
	m	(Lczx;)Ljava/lang/Integer;	b	lambda$static$9
	m	(Lczx;)Ljava/lang/Float;	c	lambda$static$8
	m	(Lczx;)Lavm;	d	lambda$static$7
	m	(Lczx;)Lavm;	e	lambda$static$6
	m	(Lczx;)Lavo;	f	lambda$static$5
	m	(Lczx;)Ljava/lang/Integer;	g	lambda$static$4
	m	(Lczx;)Ljava/lang/Integer;	h	lambda$static$3
	m	(Lczx;)Lavo;	i	lambda$static$2
	m	(Lczx;)Lavo;	j	lambda$static$1
	m	(Lczx;)Ljava/lang/Integer;	k	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorToCeilingSearchRange
	f	Lavo;	c	height
	f	Lavo;	d	radius
	f	I	e	maxStalagmiteStalactiteHeightDiff
	f	I	f	heightDeviation
	f	Lavo;	g	dripstoneBlockLayerThickness
	f	Lavm;	h	density
	f	Lavm;	i	wetness
	f	F	j	chanceOfDripstoneColumnAtMaxDistanceFromCenter
	f	I	k	maxDistanceFromEdgeAffectingChanceOfDripstoneColumn
	f	I	l	maxDistanceFromCenterAffectingHeightBias
c	czy	net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration
	m	()Lczy;	a	delayedExitSearch
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lczy;)Ljava/lang/Boolean;	a	lambda$static$1
	m	(Lgj;Z)Lczy;	a	knownExit
	m	()Ljava/util/Optional;	b	getExit
	m	(Lczy;)Ljava/util/Optional;	b	lambda$static$0
	m	()Z	c	isExitExact
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	exit
	f	Z	c	exact
c	czz	net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Ldai;	m	NONE
c	daa	net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$13
	m	(Ldaa;)Ljava/lang/Integer;	a	lambda$static$12
	m	(Ldaa;)Ljava/lang/Double;	b	lambda$static$11
	m	(Ldaa;)Ljava/lang/Integer;	c	lambda$static$10
	m	(Ldaa;)Ljava/lang/Integer;	d	lambda$static$9
	m	(Ldaa;)Lavo;	e	lambda$static$8
	m	(Ldaa;)Lavo;	f	lambda$static$7
	m	(Ldaa;)Lavo;	g	lambda$static$6
	m	(Ldaa;)Ljava/lang/Boolean;	h	lambda$static$5
	m	(Ldaa;)Ljava/lang/Double;	i	lambda$static$4
	m	(Ldaa;)Ljava/lang/Double;	j	lambda$static$3
	m	(Ldaa;)Lctu;	k	lambda$static$2
	m	(Ldaa;)Lctv;	l	lambda$static$1
	m	(Ldaa;)Lctt;	m	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CHANCE_RANGE
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lctt;	c	geodeBlockSettings
	f	Lctv;	d	geodeLayerSettings
	f	Lctu;	e	geodeCrackSettings
	f	D	f	usePotentialPlacementsChance
	f	D	g	useAlternateLayer0Chance
	f	Z	h	placementsRequireLayer0Alternate
	f	Lavo;	i	outerWallDistance
	f	Lavo;	j	distributionPoints
	f	Lavo;	k	pointOffset
	f	I	l	minGenOffset
	f	I	n	maxGenOffset
	f	D	o	noiseMultiplier
	f	I	p	invalidBlocksThreshold
c	dab	net/minecraft/world/level/levelgen/feature/configurations/GlowLichenConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Ldab;)Lgt;	a	lambda$static$5
	m	(Ldab;)Ljava/lang/Float;	b	lambda$static$4
	m	(Ldab;)Ljava/lang/Boolean;	c	lambda$static$3
	m	(Ldab;)Ljava/lang/Boolean;	d	lambda$static$2
	m	(Ldab;)Ljava/lang/Boolean;	e	lambda$static$1
	m	(Ldab;)Ljava/lang/Integer;	f	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	searchRange
	f	Z	c	canPlaceOnFloor
	f	Z	d	canPlaceOnCeiling
	f	Z	e	canPlaceOnWall
	f	F	f	chanceOfSpreading
	f	Lgt;	g	canBePlacedOn
	f	Ljava/util/List;	h	validDirections
c	dac	net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldac;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Ldac;)Ldby;	b	lambda$static$1
	m	(Ldac;)Ldby;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldby;	b	capProvider
	f	Ldby;	c	stemProvider
	f	I	d	foliageRadius
c	dad	net/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration
	m	()I	a	maxDepth
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Lgs;	b	startPool
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgs;	b	startPool
	f	I	c	maxDepth
c	dae	net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$9
	m	(Ldae;)Ljava/lang/Float;	a	lambda$static$8
	m	(Ldae;)Ljava/lang/Integer;	b	lambda$static$7
	m	(Ldae;)Lavm;	c	lambda$static$6
	m	(Ldae;)Lavm;	d	lambda$static$5
	m	(Ldae;)Lavm;	e	lambda$static$4
	m	(Ldae;)Ljava/lang/Float;	f	lambda$static$3
	m	(Ldae;)Lavm;	g	lambda$static$2
	m	(Ldae;)Lavo;	h	lambda$static$1
	m	(Ldae;)Ljava/lang/Integer;	i	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorToCeilingSearchRange
	f	Lavo;	c	columnRadius
	f	Lavm;	d	heightScale
	f	F	e	maxColumnRadiusToCaveHeightRatio
	f	Lavm;	f	stalactiteBluntness
	f	Lavm;	g	stalagmiteBluntness
	f	Lavm;	h	windSpeed
	f	I	i	minRadiusForWind
	f	F	j	minBluntnessForWind
c	daf	net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldaf;)Lcov;	a	lambda$static$1
	m	(Ldaf;)Ljava/lang/Integer;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
	f	Lcov;	c	state
c	dag	net/minecraft/world/level/levelgen/feature/configurations/MineshaftConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldag;)Lcyc$a;	a	lambda$static$1
	m	(Ldag;)Ljava/lang/Float;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	probability
	f	Lcyc$a;	c	type
c	dah	net/minecraft/world/level/levelgen/feature/configurations/NetherForestVegetationConfig
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldah;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Ldah;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Ldah;)Ldby;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	I	d	spreadWidth
	f	I	e	spreadHeight
c	dai	net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration
	m	()Ldai;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldai;	b	INSTANCE
c	daj	net/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldaj;)Ljava/lang/Float;	a	lambda$static$2
	m	(Ldaj;)Ljava/lang/Float;	b	lambda$static$1
	m	(Ldaj;)Ldfc$a;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldfc$a;	b	biomeTemp
	f	F	c	largeProbability
	f	F	d	clusterProbability
c	dak	net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldak;)Ljava/lang/Float;	a	lambda$static$2
	m	(Ldhp;Lcov;)Ldak$a;	a	target
	m	(Ldak;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Ldak;)Ljava/util/List;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	targetStates
	f	I	c	size
	f	F	d	discardChanceOnAirExposure
c	dak$a	net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldak$a;)Lcov;	a	lambda$static$1
	m	(Ldak$a;)Ldhp;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldhp;	b	target
	f	Lcov;	c	state
c	dal	net/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Ldal;)Ljava/lang/Float;	a	lambda$static$3
	m	(Ldal;)Ljava/lang/Float;	b	lambda$static$2
	m	(Ldal;)Ljava/lang/Float;	c	lambda$static$1
	m	(Ldal;)Ljava/lang/Float;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	chanceOfTallerDripstone
	f	F	c	chanceOfDirectionalSpread
	f	F	d	chanceOfSpreadRadius2
	f	F	e	chanceOfSpreadRadius3
c	dam	net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldam;)Ljava/lang/Float;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	j	CODEC
	f	F	k	probability
c	dan	net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldan;)Lgs;	a	lambda$static$1
	m	(Ldan;)Lgs;	b	lambda$static$0
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgs;	b	featureTrue
	f	Lgs;	c	featureFalse
c	dao	net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lczo;)Ljava/util/stream/Stream;	a	lambda$getFeatures$3
	m	(Ldao;)Lgs;	a	lambda$static$1
	m	(Ldao;)Ljava/util/List;	b	lambda$static$0
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	features
	f	Lgs;	c	defaultFeature
c	dap	net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration
	m	()I	a	tries
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()I	b	xzSpread
	m	()I	c	ySpread
	m	()Lgs;	d	feature
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	tries
	f	I	c	xzSpread
	f	I	d	ySpread
	f	Lgs;	e	feature
c	daq	net/minecraft/world/level/levelgen/feature/configurations/RangeConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldaq;)Lddg;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lddg;	b	height
c	dar	net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldar;)Ljava/util/List;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	targetStates
c	das	net/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration
	m	()Lavo;	a	radius
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldas;)Lavo;	a	lambda$static$2
	m	(Ldas;)Lcov;	b	lambda$static$1
	m	(Ldas;)Lcov;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcov;	b	targetState
	f	Lcov;	c	replaceState
	f	Lavo;	d	radius
c	dat	net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$13
	m	(Ldat;)Lcvd;	a	lambda$static$12
	m	(Ldat;)Ljava/lang/Integer;	b	lambda$static$11
	m	(Ldat;)Ljava/lang/Integer;	c	lambda$static$10
	m	(Ldat;)Ldby;	d	lambda$static$9
	m	(Ldat;)Ljava/lang/Integer;	e	lambda$static$8
	m	(Ldat;)Ljava/lang/Integer;	f	lambda$static$7
	m	(Ldat;)Ljava/lang/Integer;	g	lambda$static$6
	m	(Ldat;)Ljava/lang/Integer;	h	lambda$static$5
	m	(Ldat;)Ldby;	i	lambda$static$4
	m	(Ldat;)Laif;	j	lambda$static$3
	m	(Ldat;)Ljava/lang/Integer;	k	lambda$static$2
	m	(Ldat;)Ljava/lang/Integer;	l	lambda$static$1
	m	(Ldat;)Lgs;	m	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgs;	b	treeFeature
	f	I	c	requiredVerticalSpaceForTree
	f	I	d	rootRadius
	f	Laif;	e	rootReplaceable
	f	Ldby;	f	rootStateProvider
	f	I	g	rootPlacementAttempts
	f	I	h	rootColumnMaxHeight
	f	I	i	hangingRootRadius
	f	I	j	hangingRootsVerticalSpan
	f	Ldby;	k	hangingRootStateProvider
	f	I	l	hangingRootPlacementAttempts
	f	I	n	allowedVerticalWaterForTree
	f	Lcvd;	o	allowedTreePosition
c	dau	net/minecraft/world/level/levelgen/feature/configurations/RuinedPortalConfiguration
	m	(Ldau;)Lcys$a;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcys$a;	b	portalType
c	dav	net/minecraft/world/level/levelgen/feature/configurations/ShipwreckConfiguration
	m	(Ldav;)Ljava/lang/Boolean;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	isBeached
c	daw	net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration
	m	()Ldby;	a	toPlace
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldaw;)Ldby;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldby;	b	toPlace
c	dax	net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration
	m	(Ldax;)Lgt;	a	lambda$static$0
	m	(Lgs;)Ljava/util/stream/Stream;	a	lambda$getFeatures$1
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgt;	b	features
c	day	net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration
	m	()Z	a	isCrystalInvulnerable
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lday;)Ljava/util/Optional;	a	lambda$static$2
	m	()Ljava/util/List;	b	getSpikes
	m	(Lday;)Ljava/util/List;	b	lambda$static$1
	m	()Lgj;	c	getCrystalBeamTarget
	m	(Lday;)Ljava/lang/Boolean;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	crystalInvulnerable
	f	Ljava/util/List;	c	spikes
	f	Lgj;	d	crystalBeamTarget
c	daz	net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Ldaz;)Lgt;	a	lambda$static$4
	m	(Ldaz;)Ljava/lang/Integer;	b	lambda$static$3
	m	(Ldaz;)Ljava/lang/Integer;	c	lambda$static$2
	m	(Ldaz;)Ljava/lang/Boolean;	d	lambda$static$1
	m	(Ldaz;)Ldix;	e	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldix;	b	state
	f	Z	c	requiresBlockBelow
	f	I	d	rockCount
	f	I	e	holeCount
	f	Lgt;	f	validBlocks
c	dba	net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$9
	m	(Ldba;)Ljava/lang/Boolean;	a	lambda$static$8
	m	(Ldba;)Ljava/lang/Boolean;	b	lambda$static$7
	m	(Ldba;)Ljava/util/List;	c	lambda$static$6
	m	(Ldba;)Ldbf;	d	lambda$static$5
	m	(Ldba;)Ldby;	e	lambda$static$4
	m	(Ldba;)Ldbp;	f	lambda$static$3
	m	(Ldba;)Ldby;	g	lambda$static$2
	m	(Ldba;)Ldcy;	h	lambda$static$1
	m	(Ldba;)Ldby;	i	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldby;	b	trunkProvider
	f	Ldby;	c	dirtProvider
	f	Ldcy;	d	trunkPlacer
	f	Ldby;	e	foliageProvider
	f	Ldbp;	f	foliagePlacer
	f	Ldbf;	g	minimumSize
	f	Ljava/util/List;	h	decorators
	f	Z	i	ignoreVines
	f	Z	j	forceDirt
c	dba$a	net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder
	m	()Ldba$a;	a	ignoreVines
	m	(Ldby;)Ldba$a;	a	dirt
	m	(Ljava/util/List;)Ldba$a;	a	decorators
	m	()Ldba$a;	b	forceDirt
	m	()Ldba;	c	build
	f	Ldby;	a	trunkProvider
	f	Ldby;	b	foliageProvider
	f	Ldcy;	c	trunkPlacer
	f	Ldbp;	d	foliagePlacer
	f	Ldby;	e	dirtProvider
	f	Ldbf;	f	minimumSize
	f	Ljava/util/List;	g	decorators
	f	Z	h	ignoreVines
	f	Z	i	forceDirt
c	dbb	net/minecraft/world/level/levelgen/feature/configurations/TwistingVinesConfig
	m	()I	a	spreadWidth
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()I	b	spreadHeight
	m	()I	c	maxHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	spreadWidth
	f	I	c	spreadHeight
	f	I	d	maxHeight
c	dbc	net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldbc;)Ljava/lang/Float;	a	lambda$static$2
	m	(Ldbc;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Ldbc;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorSearchRange
	f	I	c	placementRadiusAroundFloor
	f	F	d	placementProbabilityPerValidPosition
c	dbd	net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
	m	(Ldbd;)Ljava/lang/Float;	a	lambda$static$9
	m	(Ldbd;)Lavo;	b	lambda$static$8
	m	(Ldbd;)Ljava/lang/Float;	c	lambda$static$7
	m	(Ldbd;)Ljava/lang/Integer;	d	lambda$static$6
	m	(Ldbd;)Ljava/lang/Float;	e	lambda$static$5
	m	(Ldbd;)Lavo;	f	lambda$static$4
	m	(Ldbd;)Lddu;	g	lambda$static$3
	m	(Ldbd;)Lgs;	h	lambda$static$2
	m	(Ldbd;)Ldby;	i	lambda$static$1
	m	(Ldbd;)Laif;	j	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laif;	b	replaceable
	f	Ldby;	c	groundState
	f	Lgs;	d	vegetationFeature
	f	Lddu;	e	surface
	f	Lavo;	f	depth
	f	F	g	extraBottomBlockChance
	f	I	h	verticalRange
	f	F	i	vegetationChance
	f	Lavo;	j	xzRadius
	f	F	k	extraEdgeColumnChance
c	dbe	net/minecraft/world/level/levelgen/feature/configurations/package-info
c	dbf	net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	minClippedHeightCodec
	m	(II)I	a	getSizeAtHeight
	m	(Ldbf;)Ljava/util/OptionalInt;	a	lambda$minClippedHeightCodec$2
	m	(Ljava/util/Optional;)Ljava/util/OptionalInt;	a	lambda$minClippedHeightCodec$0
	m	(Ljava/util/OptionalInt;)Ljava/util/Optional;	a	lambda$minClippedHeightCodec$1
	m	()Ldbg;	b	type
	m	()Ljava/util/OptionalInt;	c	minClippedHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	MAX_WIDTH
	f	Ljava/util/OptionalInt;	c	minClippedHeight
c	dbg	net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldbg;	a	register
	f	Ldbg;	a	TWO_LAYERS_FEATURE_SIZE
	f	Ldbg;	b	THREE_LAYERS_FEATURE_SIZE
	f	Lcom/mojang/serialization/Codec;	c	codec
c	dbh	net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize
	m	(II)I	a	getSizeAtHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Ldbh;)Ljava/lang/Integer;	a	lambda$static$4
	m	()Ldbg;	b	type
	m	(Ldbh;)Ljava/lang/Integer;	b	lambda$static$3
	m	(Ldbh;)Ljava/lang/Integer;	c	lambda$static$2
	m	(Ldbh;)Ljava/lang/Integer;	d	lambda$static$1
	m	(Ldbh;)Ljava/lang/Integer;	e	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	limit
	f	I	f	upperLimit
	f	I	g	lowerSize
	f	I	h	middleSize
	f	I	i	upperSize
c	dbi	net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize
	m	(II)I	a	getSizeAtHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldbi;)Ljava/lang/Integer;	a	lambda$static$2
	m	()Ldbg;	b	type
	m	(Ldbi;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Ldbi;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	limit
	f	I	f	lowerSize
	f	I	g	upperSize
c	dbj	net/minecraft/world/level/levelgen/feature/featuresize/package-info
c	dbk	net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer
	m	()Ldbq;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ldba;ILdbp$a;III)V	a	createFoliage
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ljava/util/Random;IIIIZ)Z	a	shouldSkipLocation
	m	(Ljava/util/Random;ILdba;)I	a	foliageHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dbl	net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer
	m	()Ldbq;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ldba;ILdbp$a;III)V	a	createFoliage
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	blobParts
	m	(Ldbl;)Ljava/lang/Integer;	a	lambda$blobParts$1
	m	(Ljava/util/Random;IIIIZ)Z	a	shouldSkipLocation
	m	(Ljava/util/Random;ILdba;)I	a	foliageHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
c	dbm	net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer
	m	()Ldbq;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ldba;ILdbp$a;III)V	a	createFoliage
	m	(Ljava/util/Random;IIIIZ)Z	a	shouldSkipLocation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dbn	net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer
	m	()Ldbq;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ldba;ILdbp$a;III)V	a	createFoliage
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ljava/util/Random;IIIIZ)Z	a	shouldSkipLocation
	m	(Ljava/util/Random;ILdba;)I	a	foliageHeight
	m	(Ljava/util/Random;IIIIZ)Z	b	shouldSkipLocationSigned
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dbo	net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer
	m	()Ldbq;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ldba;ILdbp$a;III)V	a	createFoliage
	m	(Ljava/util/Random;IIIIZ)Z	a	shouldSkipLocation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dbp	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer
	m	()Ldbq;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ldba;ILdbp$a;II)V	a	createFoliage
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ldba;ILdbp$a;III)V	a	createFoliage
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ldba;Lgj;)V	a	tryPlaceLeaf
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ldba;Lgj;IIZ)V	a	placeLeavesRow
	m	(Ldbp;)Lavo;	a	lambda$foliagePlacerParts$1
	m	(Ljava/util/Random;)I	a	offset
	m	(Ljava/util/Random;I)I	a	foliageRadius
	m	(Ljava/util/Random;IIIIZ)Z	a	shouldSkipLocation
	m	(Ljava/util/Random;ILdba;)I	a	foliageHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2;	b	foliagePlacerParts
	m	(Ldbp;)Lavo;	b	lambda$foliagePlacerParts$0
	m	(Ljava/util/Random;IIIIZ)Z	b	shouldSkipLocationSigned
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lavo;	e	radius
	f	Lavo;	f	offset
c	dbp$a	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment
	m	()Lgj;	a	pos
	m	()I	b	radiusOffset
	m	()Z	c	doubleTrunk
	f	Lgj;	a	pos
	f	I	b	radiusOffset
	f	Z	c	doubleTrunk
c	dbq	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldbq;	a	register
	f	Ldbq;	a	BLOB_FOLIAGE_PLACER
	f	Ldbq;	b	SPRUCE_FOLIAGE_PLACER
	f	Ldbq;	c	PINE_FOLIAGE_PLACER
	f	Ldbq;	d	ACACIA_FOLIAGE_PLACER
	f	Ldbq;	e	BUSH_FOLIAGE_PLACER
	f	Ldbq;	f	FANCY_FOLIAGE_PLACER
	f	Ldbq;	g	MEGA_JUNGLE_FOLIAGE_PLACER
	f	Ldbq;	h	MEGA_PINE_FOLIAGE_PLACER
	f	Ldbq;	i	DARK_OAK_FOLIAGE_PLACER
	f	Ldbq;	j	RANDOM_SPREAD_FOLIAGE_PLACER
	f	Lcom/mojang/serialization/Codec;	k	codec
c	dbr	net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer
	m	()Ldbq;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ldba;ILdbp$a;III)V	a	createFoliage
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldbr;)Ljava/lang/Integer;	a	lambda$static$0
	m	(Ljava/util/Random;IIIIZ)Z	a	shouldSkipLocation
	m	(Ljava/util/Random;ILdba;)I	a	foliageHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
c	dbs	net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer
	m	()Ldbq;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ldba;ILdbp$a;III)V	a	createFoliage
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldbs;)Lavo;	a	lambda$static$0
	m	(Ljava/util/Random;IIIIZ)Z	a	shouldSkipLocation
	m	(Ljava/util/Random;ILdba;)I	a	foliageHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lavo;	b	crownHeight
c	dbt	net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer
	m	()Ldbq;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ldba;ILdbp$a;III)V	a	createFoliage
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldbt;)Lavo;	a	lambda$static$0
	m	(Ljava/util/Random;I)I	a	foliageRadius
	m	(Ljava/util/Random;IIIIZ)Z	a	shouldSkipLocation
	m	(Ljava/util/Random;ILdba;)I	a	foliageHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lavo;	b	height
c	dbu	net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer
	m	()Ldbq;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ldba;ILdbp$a;III)V	a	createFoliage
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldbu;)Ljava/lang/Integer;	a	lambda$static$1
	m	(Ljava/util/Random;IIIIZ)Z	a	shouldSkipLocation
	m	(Ljava/util/Random;ILdba;)I	a	foliageHeight
	m	(Ldbu;)Lavo;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lavo;	b	foliageHeight
	f	I	c	leafPlacementAttempts
c	dbv	net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer
	m	()Ldbq;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ldba;ILdbp$a;III)V	a	createFoliage
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldbv;)Lavo;	a	lambda$static$0
	m	(Ljava/util/Random;IIIIZ)Z	a	shouldSkipLocation
	m	(Ljava/util/Random;ILdba;)I	a	foliageHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lavo;	b	trunkHeight
c	dbw	net/minecraft/world/level/levelgen/feature/foliageplacers/package-info
c	dbx	net/minecraft/world/level/levelgen/feature/package-info
c	dby	net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider
	m	()Ldbz;	a	type
	m	(Lcdq;)Ldcg;	a	simple
	m	(Lcov;)Ldcg;	a	simple
	m	(Ljava/util/Random;Lgj;)Lcov;	a	getState
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dbz	net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldbz;	a	register
	f	Ldbz;	a	SIMPLE_STATE_PROVIDER
	f	Ldbz;	b	WEIGHTED_STATE_PROVIDER
	f	Ldbz;	c	NOISE_THRESHOLD_PROVIDER
	f	Ldbz;	d	NOISE_PROVIDER
	f	Ldbz;	e	DUAL_NOISE_PROVIDER
	f	Ldbz;	f	ROTATED_BLOCK_PROVIDER
	f	Ldbz;	g	RANDOMIZED_INT_STATE_PROVIDER
	f	Lcom/mojang/serialization/Codec;	h	codec
c	dca	net/minecraft/world/level/levelgen/feature/stateproviders/DualNoiseProvider
	m	()Ldbz;	a	type
	m	(Ldca;)Ljava/lang/Float;	a	lambda$static$2
	m	(Lgj;)D	a	getSlowNoiseValue
	m	(Ljava/util/Random;Lgj;)Lcov;	a	getState
	m	(Ldca;)Ldic$a;	b	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$3
	m	(Ldca;)Lajf;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lajf;	i	variety
	f	Ldic$a;	j	slowNoiseParameters
	f	F	k	slowScale
	f	Ldic;	l	slowNoise
c	dcb	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseBasedStateProvider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	noiseCodec
	m	(Ldcb;)Ljava/lang/Float;	a	lambda$noiseCodec$2
	m	(Lgj;D)D	a	getNoiseValue
	m	(Ldcb;)Ldic$a;	b	lambda$noiseCodec$1
	m	(Ldcb;)Ljava/lang/Long;	c	lambda$noiseCodec$0
	f	J	c	seed
	f	Ldic$a;	d	parameters
	f	F	e	scale
	f	Ldic;	f	noise
c	dcc	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseProvider
	m	()Ldbz;	a	type
	m	(Ldcc;)Ljava/util/List;	a	lambda$noiseProviderCodec$0
	m	(Ljava/util/List;D)Lcov;	a	getRandomState
	m	(Ljava/util/List;Lgj;D)Lcov;	a	getRandomState
	m	(Ljava/util/Random;Lgj;)Lcov;	a	getState
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4;	b	noiseProviderCodec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Ljava/util/List;	h	states
c	dcd	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider
	m	()Ldbz;	a	type
	m	(Ldcd;)Ljava/util/List;	a	lambda$static$4
	m	(Ljava/util/Random;Lgj;)Lcov;	a	getState
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$5
	m	(Ldcd;)Ljava/util/List;	b	lambda$static$3
	m	(Ldcd;)Lcov;	c	lambda$static$2
	m	(Ldcd;)Ljava/lang/Float;	d	lambda$static$1
	m	(Ldcd;)Ljava/lang/Float;	e	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	F	g	threshold
	f	F	h	highChance
	f	Lcov;	i	defaultState
	f	Ljava/util/List;	j	lowStates
	f	Ljava/util/List;	k	highStates
c	dce	net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider
	m	()Ldbz;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lcov;Ljava/lang/String;)Lcpv;	a	findProperty
	m	(Lcpy;)Lcpv;	a	lambda$findProperty$6
	m	(Ldce;)Lavo;	a	lambda$static$2
	m	(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;	a	lambda$findProperty$7
	m	(Ljava/lang/String;Lcpy;)Z	a	lambda$findProperty$4
	m	(Ljava/util/Random;Lgj;)Lcov;	a	getState
	m	(Lcpy;)Z	b	lambda$findProperty$5
	m	(Ldce;)Ljava/lang/String;	b	lambda$static$1
	m	(Ldce;)Ldby;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldby;	c	source
	f	Ljava/lang/String;	d	propertyName
	f	Lcpv;	e	property
	f	Lavo;	f	values
c	dcf	net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider
	m	()Ldbz;	a	type
	m	(Ldcf;)Lcdq;	a	lambda$static$0
	m	(Ljava/util/Random;Lgj;)Lcov;	a	getState
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcdq;	c	block
c	dcg	net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider
	m	()Ldbz;	a	type
	m	(Ldcg;)Lcov;	a	lambda$static$0
	m	(Ljava/util/Random;Lgj;)Lcov;	a	getState
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcov;	c	state
c	dch	net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider
	m	()Ldbz;	a	type
	m	(Laus;)Lcom/mojang/serialization/DataResult;	a	create
	m	(Ldch;)Laus;	a	lambda$static$0
	m	(Ljava/util/Random;Lgj;)Lcov;	a	getState
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Laus;	c	weightedList
c	dci	net/minecraft/world/level/levelgen/feature/stateproviders/package-info
c	dcj	net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator
	m	()Ldco;	a	type
	m	(ILgj;)Z	a	lambda$place$1
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Lgj;)V	a	placeCircle
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V	a	place
	m	(Ldcj;)Ldby;	a	lambda$static$0
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Lgj;)V	b	placeBlockAt
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Lgj;)V	c	lambda$place$2
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldby;	b	provider
c	dck	net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator
	m	()Ldco;	a	type
	m	(I)[Lgo;	a	lambda$static$2
	m	(ILgj;)Z	a	lambda$place$3
	m	(Lcbb;Lgj;)Z	a	lambda$place$5
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V	a	place
	m	(Ldck;)Ljava/lang/Float;	a	lambda$static$0
	m	(Lgj;)Ljava/util/stream/Stream;	a	lambda$place$4
	m	(Lgo;)Z	a	lambda$static$1
	m	(Ljava/util/Random;Lcmo;)V	a	lambda$place$6
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgo;	b	WORLDGEN_FACING
	f	[Lgo;	d	SPAWN_DIRECTIONS
	f	F	e	probability
c	dcl	net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator
	m	()Ldco;	a	type
	m	(ILgj;)Z	a	lambda$place$1
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V	a	place
	m	(Ldcl;)Ljava/lang/Float;	a	lambda$static$0
	m	(Ljava/util/Random;Lcbb;Ljava/util/function/BiConsumer;Lgj;)V	a	lambda$place$2
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	probability
c	dcm	net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator
	m	()Ldco;	a	type
	m	(Lcbb;Lgj;Lcpm;Ljava/util/function/BiConsumer;)V	a	addHangingVine
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V	a	place
	m	(Ljava/util/Random;Lcbb;Ljava/util/function/BiConsumer;Lgj;)V	a	lambda$place$1
	m	()Ldcm;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldcm;	b	INSTANCE
c	dcn	net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator
	m	()Ldco;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V	a	place
	m	(Ljava/util/function/BiConsumer;Lgj;Lcpm;)V	a	placeVine
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dco	net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldco;	a	register
	f	Ldco;	a	TRUNK_VINE
	f	Ldco;	b	LEAVE_VINE
	f	Ldco;	c	COCOA
	f	Ldco;	d	BEEHIVE
	f	Ldco;	e	ALTER_GROUND
	f	Lcom/mojang/serialization/Codec;	f	codec
c	dcp	net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator
	m	()Ldco;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V	a	place
	m	(Ljava/util/Random;Lcbb;Ljava/util/function/BiConsumer;Lgj;)V	a	lambda$place$1
	m	()Ldcp;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldcp;	b	INSTANCE
c	dcq	net/minecraft/world/level/levelgen/feature/treedecorators/package-info
c	dcr	net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer
	m	()Ldcz;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;ILgj;Ldba;)Ljava/util/List;	a	placeTrunk
	m	(Ldcr;)Lavo;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Ldcr;)Ljava/lang/Integer;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	minHeightForLeaves
	f	Lavo;	h	bendLength
c	dcs	net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer
	m	()Ldcz;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;ILgj;Ldba;)Ljava/util/List;	a	placeTrunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dct	net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer
	m	()Ldcz;	a	type
	m	(II)Z	a	trimBranches
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;ILgj;Ldba;)Ljava/util/List;	a	placeTrunk
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;ILgj;Ljava/util/List;Ldba;)V	a	makeBranches
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Lgj;Lgj;ZLdba;)Z	a	makeLimb
	m	(Lgj;)I	a	getSteps
	m	(Lgj;Lgj;)Lgo$a;	a	getLogAxis
	m	(Lgj;Lgj;Lcov;)Lcov;	a	lambda$makeLimb$1
	m	(II)F	b	treeShape
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	TRUNK_HEIGHT_SCALE
	f	D	h	CLUSTER_DENSITY_MAGIC
	f	D	i	BRANCH_SLOPE
	f	D	j	BRANCH_LENGTH_MAGIC
c	dct$a	net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords
	m	()I	a	getBranchBase
	f	Ldbp$a;	a	attachment
	f	I	b	branchBase
c	dcu	net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer
	m	()Ldcz;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;ILgj;Ldba;)Ljava/util/List;	a	placeTrunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dcv	net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer
	m	()Ldcz;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;ILgj;Ldba;)Ljava/util/List;	a	placeTrunk
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Lgj$a;Ldba;Lgj;III)V	a	placeLogIfFreeWithOffset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dcw	net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer
	m	()Ldcz;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;ILgj;Ldba;)Ljava/util/List;	a	placeTrunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dcx	net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer
	m	()Ldcz;	a	type
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;ILgj;Ldba;)Ljava/util/List;	a	placeTrunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dcy	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer
	m	()Ldcz;	a	type
	m	(Lcbb;Lgj;)Z	a	isDirt
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;ILgj;Ldba;)Ljava/util/List;	a	placeTrunk
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Lgj$a;Ldba;)V	a	placeLogIfFree
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Lgj;Ldba;)V	a	setDirtAt
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Lgj;Ldba;Ljava/util/function/Function;)Z	a	placeLog
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	trunkPlacerParts
	m	(Lcov;)Z	a	lambda$isDirt$3
	m	(Ldcy;)Ljava/lang/Integer;	a	lambda$trunkPlacerParts$2
	m	(Ljava/util/Random;)I	a	getTreeHeight
	m	(Lcbb;Ljava/util/function/BiConsumer;Ljava/util/Random;Lgj;Ldba;)Z	b	placeLog
	m	(Ldcy;)Ljava/lang/Integer;	b	lambda$trunkPlacerParts$1
	m	(Ldcy;)Ljava/lang/Integer;	c	lambda$trunkPlacerParts$0
	f	I	a	MAX_BASE_HEIGHT
	f	I	b	MAX_RAND
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	I	d	MAX_HEIGHT
	f	I	e	baseHeight
	f	I	f	heightRandA
	f	I	g	heightRandB
c	dcz	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldcz;	a	register
	f	Ldcz;	a	STRAIGHT_TRUNK_PLACER
	f	Ldcz;	b	FORKING_TRUNK_PLACER
	f	Ldcz;	c	GIANT_TRUNK_PLACER
	f	Ldcz;	d	MEGA_JUNGLE_TRUNK_PLACER
	f	Ldcz;	e	DARK_OAK_TRUNK_PLACER
	f	Ldcz;	f	FANCY_TRUNK_PLACER
	f	Ldcz;	g	BENDING_TRUNK_PLACER
	f	Lcom/mojang/serialization/Codec;	h	codec
c	dda	net/minecraft/world/level/levelgen/feature/trunkplacers/package-info
c	ddb	net/minecraft/world/level/levelgen/flat/FlatLayerInfo
	m	()I	a	getHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lddb;)Lcdq;	a	lambda$static$0
	m	()Lcov;	b	getBlockState
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcdq;	b	block
	f	I	c	height
c	ddc	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings
	m	()V	a	setDecoration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Lcov;)Z	a	lambda$updateLayers$6
	m	(Lddc;)Lcom/mojang/serialization/DataResult;	a	validateHeight
	m	(Lgs;)V	a	setBiome
	m	(Lhb;Lhb;)Lddc;	a	getDefault
	m	(Ljava/util/List;Ljava/util/Optional;)Lddc;	a	withLayers
	m	()V	b	setAddLakes
	m	(Lddc;)Ljava/util/Optional;	b	lambda$static$4
	m	()Lgs;	c	getBiomeFromSettings
	m	(Lddc;)Ljava/lang/Boolean;	c	lambda$static$3
	m	()Ljava/util/Optional;	d	structureOverrides
	m	(Lddc;)Ljava/lang/Boolean;	d	lambda$static$2
	m	()Lgs;	e	getBiome
	m	(Lddc;)Ljava/util/Optional;	e	lambda$static$1
	m	()Ljava/util/List;	f	getLayersInfo
	m	(Lddc;)Lhb;	f	lambda$static$0
	m	()Ljava/util/List;	g	getLayers
	m	()V	h	updateLayers
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lhb;	c	biomes
	f	Ljava/util/Optional;	d	structureOverrides
	f	Ljava/util/List;	e	layersInfo
	f	Lgs;	f	biome
	f	Ljava/util/List;	g	layers
	f	Z	h	voidGen
	f	Z	i	decoration
	f	Z	j	addLakes
c	ddd	net/minecraft/world/level/levelgen/flat/package-info
c	dde	net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight
	m	()Lddh;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lcus;Lcus;I)Ldde;	a	of
	m	(Ldde;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Ljava/util/Random;Lcuu;)I	a	sample
	m	(Ldde;)Lcus;	b	lambda$static$1
	m	(Ldde;)Lcus;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcus;	d	minInclusive
	f	Lcus;	e	maxInclusive
	f	I	f	inner
c	ddf	net/minecraft/world/level/levelgen/heightproviders/ConstantHeight
	m	()Lddh;	a	getType
	m	(Lcom/mojang/datafixers/util/Either;)Lddf;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcus;)Lddf;	a	of
	m	(Lddf;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$4
	m	(Ljava/util/Random;Lcuu;)I	a	sample
	m	()Lcus;	b	getValue
	m	(Lddf;)Lddf;	b	lambda$static$2
	m	(Lddf;)Lcus;	c	lambda$static$0
	f	Lddf;	a	ZERO
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcus;	d	value
c	ddg	net/minecraft/world/level/levelgen/heightproviders/HeightProvider
	m	()Lddh;	a	getType
	m	(Lcom/mojang/datafixers/util/Either;)Lddg;	a	lambda$static$1
	m	(Lddg;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
	m	(Ljava/util/Random;Lcuu;)I	a	sample
	m	(Lddg;)Lddg;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	ddh	net/minecraft/world/level/levelgen/heightproviders/HeightProviderType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lddh;	a	register
	f	Lddh;	a	CONSTANT
	f	Lddh;	b	UNIFORM
	f	Lddh;	c	BIASED_TO_BOTTOM
	f	Lddh;	d	VERY_BIASED_TO_BOTTOM
	f	Lddh;	e	TRAPEZOID
	f	Lddh;	f	WEIGHTED_LIST
c	ddi	net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight
	m	()Lddh;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lcus;Lcus;)Lddi;	a	of
	m	(Lcus;Lcus;I)Lddi;	a	of
	m	(Lddi;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Ljava/util/Random;Lcuu;)I	a	sample
	m	(Lddi;)Lcus;	b	lambda$static$1
	m	(Lddi;)Lcus;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcus;	d	minInclusive
	f	Lcus;	e	maxInclusive
	f	I	f	plateau
c	ddj	net/minecraft/world/level/levelgen/heightproviders/UniformHeight
	m	()Lddh;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lcus;Lcus;)Lddj;	a	of
	m	(Lddj;)Lcus;	a	lambda$static$1
	m	(Ljava/util/Random;Lcuu;)I	a	sample
	m	(Lddj;)Lcus;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcus;	d	minInclusive
	f	Lcus;	e	maxInclusive
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	warnedFor
c	ddk	net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight
	m	()Lddh;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lcus;Lcus;I)Lddk;	a	of
	m	(Lddk;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Ljava/util/Random;Lcuu;)I	a	sample
	m	(Lddk;)Lcus;	b	lambda$static$1
	m	(Lddk;)Lcus;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcus;	d	minInclusive
	f	Lcus;	e	maxInclusive
	f	I	f	inner
c	ddl	net/minecraft/world/level/levelgen/heightproviders/WeightedListHeight
	m	()Lddh;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lddl;)Laus;	a	lambda$static$0
	m	(Ljava/util/Random;Lcuu;)I	a	sample
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laus;	b	distribution
c	ddm	net/minecraft/world/level/levelgen/heightproviders/package-info
c	ddn	net/minecraft/world/level/levelgen/material/MaterialRuleList
	m	()Ljava/util/List;	a	materialRuleList
	f	Ljava/util/List;	a	materialRuleList
c	ddo	net/minecraft/world/level/levelgen/material/WorldGenMaterialRule
	m	(Lcua;III)Lcov;	a	apply
c	ddp	net/minecraft/world/level/levelgen/material/package-info
c	ddq	net/minecraft/world/level/levelgen/package-info
c	ddr	net/minecraft/world/level/levelgen/placement/BiomeFilter
	m	()Lddr;	a	biome
	m	(Ldee;Ljava/util/Random;Lgj;)Z	a	shouldPlace
	m	()Ldeh;	b	type
	m	()Ljava/lang/IllegalStateException;	c	lambda$shouldPlace$1
	m	()Lddr;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lddr;	c	INSTANCE
c	dds	net/minecraft/world/level/levelgen/placement/BlockPredicateFilter
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcvd;)Ldds;	a	forPredicate
	m	(Ldds;)Lcvd;	a	lambda$static$0
	m	(Ldee;Ljava/util/Random;Lgj;)Z	a	shouldPlace
	m	()Ldeh;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcvd;	c	predicate
c	ddt	net/minecraft/world/level/levelgen/placement/CarvingMaskPlacement
	m	(Lcts$a;)Lddt;	a	forStep
	m	(Lddt;)Lcts$a;	a	lambda$static$0
	m	(Ldee;Ljava/util/Random;Lgj;)Ljava/util/stream/Stream;	a_	getPositions
	m	()Ldeh;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcts$a;	c	step
c	ddu	net/minecraft/world/level/levelgen/placement/CaveSurface
	m	()Lgo;	a	getDirection
	m	(Ljava/lang/String;)Lddu;	a	byName
	m	()I	b	getY
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lddu;	d	$values
	f	Lddu;	a	CEILING
	f	Lddu;	b	FLOOR
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lgo;	d	direction
	f	I	e	y
	f	Ljava/lang/String;	f	id
	f	[Lddu;	g	VALUES
	f	[Lddu;	h	$VALUES
c	ddv	net/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement
	m	(I)Lddv;	a	of
	m	(Lavo;)Lddv;	a	of
	m	(Lcov;)Z	a	isEmpty
	m	(Lddv;)Lavo;	a	lambda$static$0
	m	(Ldee;IIII)I	a	findOnGroundYPosition
	m	(Ldee;Ljava/util/Random;Lgj;)Ljava/util/stream/Stream;	a_	getPositions
	m	()Ldeh;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lavo;	c	count
c	ddw	net/minecraft/world/level/levelgen/placement/CountPlacement
	m	(I)Lddw;	a	of
	m	(Lavo;)Lddw;	a	of
	m	(Lddw;)Lavo;	a	lambda$static$0
	m	(Ljava/util/Random;Lgj;)I	a	count
	m	()Ldeh;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lavo;	c	count
c	ddx	net/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lddx;)Ljava/lang/Integer;	a	lambda$static$3
	m	(Lgo;Lcvd;I)Lddx;	a	scanningFor
	m	(Lgo;Lcvd;Lcvd;I)Lddx;	a	scanningFor
	m	(Ldee;Ljava/util/Random;Lgj;)Ljava/util/stream/Stream;	a_	getPositions
	m	()Ldeh;	b	type
	m	(Lddx;)Lcvd;	b	lambda$static$2
	m	(Lddx;)Lcvd;	c	lambda$static$1
	m	(Lddx;)Lgo;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgo;	c	directionOfSearch
	f	Lcvd;	d	targetCondition
	f	Lcvd;	e	allowedSearchCondition
	f	I	f	maxSteps
c	ddy	net/minecraft/world/level/levelgen/placement/HeightRangePlacement
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcus;Lcus;)Lddy;	a	uniform
	m	(Lddg;)Lddy;	a	of
	m	(Lddy;)Lddg;	a	lambda$static$0
	m	(Ldee;Ljava/util/Random;Lgj;)Ljava/util/stream/Stream;	a_	getPositions
	m	()Ldeh;	b	type
	m	(Lcus;Lcus;)Lddy;	b	triangle
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lddg;	c	height
c	ddz	net/minecraft/world/level/levelgen/placement/HeightmapPlacement
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lctw$a;)Lddz;	a	onHeightmap
	m	(Lddz;)Lctw$a;	a	lambda$static$0
	m	(Ldee;Ljava/util/Random;Lgj;)Ljava/util/stream/Stream;	a_	getPositions
	m	()Ldeh;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lctw$a;	c	heightmap
c	dea	net/minecraft/world/level/levelgen/placement/InSquarePlacement
	m	()Ldea;	a	spread
	m	(Ldee;Ljava/util/Random;Lgj;)Ljava/util/stream/Stream;	a_	getPositions
	m	()Ldeh;	b	type
	m	()Ldea;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldea;	c	INSTANCE
c	deb	net/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement
	m	(IDD)Ldeb;	a	of
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldeb;)Ljava/lang/Double;	a	lambda$static$2
	m	(Ljava/util/Random;Lgj;)I	a	count
	m	()Ldeh;	b	type
	m	(Ldeb;)Ljava/lang/Double;	b	lambda$static$1
	m	(Ldeb;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	noiseToCountRatio
	f	D	d	noiseFactor
	f	D	e	noiseOffset
c	dec	net/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement
	m	(DII)Ldec;	a	of
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldec;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Ljava/util/Random;Lgj;)I	a	count
	m	()Ldeh;	b	type
	m	(Ldec;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Ldec;)Ljava/lang/Double;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	c	noiseLevel
	f	I	d	belowNoise
	f	I	e	aboveNoise
c	ded	net/minecraft/world/level/levelgen/placement/PlacedFeature
	m	()Ljava/util/stream/Stream;	a	getFeatures
	m	(Lcbn;Lcqr;Ljava/util/Random;Lgj;)Z	a	place
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lcwq;Ldee;Ljava/util/Random;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lgj;)V	a	lambda$placeWithContext$4
	m	(Lded;)Ljava/util/List;	a	lambda$static$1
	m	(Ldee;Ljava/util/Random;Lgj;)Z	a	placeWithContext
	m	(Ldeg;Ldee;Ljava/util/Random;Lgj;)Ljava/util/stream/Stream;	a	lambda$placeWithContext$3
	m	()Lgs;	b	feature
	m	(Lcbn;Lcqr;Ljava/util/Random;Lgj;)Z	b	placeWithBiomeCheck
	m	(Lded;)Lgs;	b	lambda$static$0
	m	()Ljava/util/List;	c	placement
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Lcom/mojang/serialization/Codec;	d	LIST_OF_LISTS_CODEC
	f	Lgs;	e	feature
	f	Ljava/util/List;	f	placement
c	ded$a	net/minecraft/world/level/levelgen/placement/PlacedFeature$test
c	dee	net/minecraft/world/level/levelgen/placement/PlacementContext
	m	(Lcac;Lcts$a;)Lcqp;	a	getCarvingMask
	m	(Lctw$a;II)I	a	getHeight
	m	(Lgj;)Lcov;	a	getBlockState
	m	()I	c	getMinBuildHeight
	m	()Lcbn;	d	getLevel
	m	()Ljava/util/Optional;	e	topFeature
	m	()Lcqr;	f	generator
	f	Lcbn;	a	level
	f	Lcqr;	b	generator
	f	Ljava/util/Optional;	c	topFeature
c	def	net/minecraft/world/level/levelgen/placement/PlacementFilter
	m	(Ldee;Ljava/util/Random;Lgj;)Z	a	shouldPlace
	m	(Ldee;Ljava/util/Random;Lgj;)Ljava/util/stream/Stream;	a_	getPositions
c	deg	net/minecraft/world/level/levelgen/placement/PlacementModifier
	m	(Ldee;Ljava/util/Random;Lgj;)Ljava/util/stream/Stream;	a_	getPositions
	m	()Ldeh;	b	type
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	deh	net/minecraft/world/level/levelgen/placement/PlacementModifierType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldeh;	a	register
	f	Ldeh;	a	BLOCK_PREDICATE_FILTER
	f	Ldeh;	b	RARITY_FILTER
	f	Ldeh;	c	SURFACE_RELATIVE_THRESHOLD_FILTER
	f	Ldeh;	d	SURFACE_WATER_DEPTH_FILTER
	f	Ldeh;	e	BIOME_FILTER
	f	Ldeh;	f	COUNT
	f	Ldeh;	g	NOISE_BASED_COUNT
	f	Ldeh;	h	NOISE_THRESHOLD_COUNT
	f	Ldeh;	i	COUNT_ON_EVERY_LAYER
	f	Ldeh;	j	ENVIRONMENT_SCAN
	f	Ldeh;	k	HEIGHTMAP
	f	Ldeh;	l	HEIGHT_RANGE
	f	Ldeh;	m	IN_SQUARE
	f	Ldeh;	n	RANDOM_OFFSET
	f	Ldeh;	o	CARVING_MASK_PLACEMENT
c	dei	net/minecraft/world/level/levelgen/placement/RandomOffsetPlacement
	m	(Lavo;)Ldei;	a	vertical
	m	(Lavo;Lavo;)Ldei;	a	of
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldei;)Lavo;	a	lambda$static$1
	m	(Ldee;Ljava/util/Random;Lgj;)Ljava/util/stream/Stream;	a_	getPositions
	m	()Ldeh;	b	type
	m	(Lavo;)Ldei;	b	horizontal
	m	(Ldei;)Lavo;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lavo;	c	xzSpread
	f	Lavo;	d	ySpread
c	dej	net/minecraft/world/level/levelgen/placement/RarityFilter
	m	(I)Ldej;	a	onAverageOnceEvery
	m	(Ldee;Ljava/util/Random;Lgj;)Z	a	shouldPlace
	m	(Ldej;)Ljava/lang/Integer;	a	lambda$static$0
	m	()Ldeh;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	chance
c	dek	net/minecraft/world/level/levelgen/placement/RepeatingPlacement
	m	(Lgj;I)Lgj;	a	lambda$getPositions$0
	m	(Ljava/util/Random;Lgj;)I	a	count
	m	(Ldee;Ljava/util/Random;Lgj;)Ljava/util/stream/Stream;	a_	getPositions
c	del	net/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lctw$a;II)Ldel;	a	of
	m	(Ldee;Ljava/util/Random;Lgj;)Z	a	shouldPlace
	m	(Ldel;)Ljava/lang/Integer;	a	lambda$static$2
	m	()Ldeh;	b	type
	m	(Ldel;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Ldel;)Lctw$a;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lctw$a;	c	heightmap
	f	I	d	minInclusive
	f	I	e	maxInclusive
c	dem	net/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter
	m	(I)Ldem;	a	forMaxDepth
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldee;Ljava/util/Random;Lgj;)Z	a	shouldPlace
	m	(Ldem;)Ljava/lang/Integer;	a	lambda$static$0
	m	()Ldeh;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	maxWaterDepth
c	den	net/minecraft/world/level/levelgen/placement/package-info
c	deo	net/minecraft/world/level/levelgen/structure/BoundingBox
	m	()Ldeo;	a	infinite
	m	(I)Ldeo;	a	inflatedBy
	m	(III)Ldeo;	a	move
	m	(IIII)Z	a	intersects
	m	(IIIIIIIIILgo;)Ldeo;	a	orientBox
	m	(Ldeo;)Z	a	intersects
	m	(Lgj;)Ldeo;	a	encapsulate
	m	(Lhh;)Ldeo;	a	move
	m	(Lhh;Lhh;)Ldeo;	a	fromCorners
	m	(Ljava/lang/Iterable;)Ljava/util/Optional;	a	encapsulatingPositions
	m	(Ljava/util/function/Consumer;)V	a	forAllCorners
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	([I)Ldeo;	a	lambda$static$0
	m	()Lhh;	b	getLength
	m	(III)Ldeo;	b	moved
	m	(Ldeo;)Ldeo;	b	encapsulate
	m	(Lhh;)Z	b	isInside
	m	(Ljava/lang/Iterable;)Ljava/util/Optional;	b	encapsulatingBoxes
	m	()I	c	getXSpan
	m	(Ldeo;)Ljava/util/stream/IntStream;	c	lambda$static$2
	m	()I	d	getYSpan
	m	()I	e	getZSpan
	m	()Lgj;	f	getCenter
	m	()I	g	minX
	m	()I	h	minY
	m	()I	i	minZ
	m	()I	j	maxX
	m	()I	k	maxY
	m	()I	l	maxZ
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	minX
	f	I	d	minY
	f	I	e	minZ
	f	I	f	maxX
	f	I	g	maxY
	f	I	h	maxZ
c	deo$1	net/minecraft/world/level/levelgen/structure/BoundingBox$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dep	net/minecraft/world/level/levelgen/structure/BuiltinStructureSets
	m	(Ljava/lang/String;)Lys;	a	register
	f	Lys;	a	VILLAGES
	f	Lys;	b	DESERT_PYRAMIDS
	f	Lys;	c	IGLOOS
	f	Lys;	d	JUNGLE_TEMPLES
	f	Lys;	e	SWAMP_HUTS
	f	Lys;	f	PILLAGER_OUTPOSTS
	f	Lys;	g	OCEAN_MONUMENTS
	f	Lys;	h	WOODLAND_MANSIONS
	f	Lys;	i	BURIED_TREASURES
	f	Lys;	j	MINESHAFTS
	f	Lys;	k	RUINED_PORTALS
	f	Lys;	l	SHIPWRECKS
	f	Lys;	m	OCEAN_RUINS
	f	Lys;	n	NETHER_COMPLEXES
	f	Lys;	o	NETHER_FOSSILS
	f	Lys;	p	END_CITIES
	f	Lys;	q	STRONGHOLDS
c	deq	net/minecraft/world/level/levelgen/structure/BuiltinStructures
	m	(Ljava/lang/String;)Lys;	a	createKey
	f	Lys;	A	RUINED_PORTAL_JUNGLE
	f	Lys;	B	RUINED_PORTAL_SWAMP
	f	Lys;	C	RUINED_PORTAL_MOUNTAIN
	f	Lys;	D	RUINED_PORTAL_OCEAN
	f	Lys;	E	RUINED_PORTAL_NETHER
	f	Lys;	a	PILLAGER_OUTPOST
	f	Lys;	b	MINESHAFT
	f	Lys;	c	MINESHAFT_MESA
	f	Lys;	d	WOODLAND_MANSION
	f	Lys;	e	JUNGLE_TEMPLE
	f	Lys;	f	DESERT_PYRAMID
	f	Lys;	g	IGLOO
	f	Lys;	h	SHIPWRECK
	f	Lys;	i	SHIPWRECK_BEACHED
	f	Lys;	j	SWAMP_HUT
	f	Lys;	k	STRONGHOLD
	f	Lys;	l	OCEAN_MONUMENT
	f	Lys;	m	OCEAN_RUIN_COLD
	f	Lys;	n	OCEAN_RUIN_WARM
	f	Lys;	o	FORTRESS
	f	Lys;	p	NETHER_FOSSIL
	f	Lys;	q	END_CITY
	f	Lys;	r	BURIED_TREASURE
	f	Lys;	s	BASTION_REMNANT
	f	Lys;	t	VILLAGE_PLAINS
	f	Lys;	u	VILLAGE_DESERT
	f	Lys;	v	VILLAGE_SAVANNA
	f	Lys;	w	VILLAGE_SNOWY
	f	Lys;	x	VILLAGE_TAIGA
	f	Lys;	y	RUINED_PORTAL_STANDARD
	f	Lys;	z	RUINED_PORTAL_DESERT
c	der	net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces
c	der$a	net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces$BuriedTreasurePiece
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	(Lcov;)Z	b	isLiquid
c	des	net/minecraft/world/level/levelgen/structure/DesertPyramidPiece
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	f	I	a	WIDTH
	f	I	b	DEPTH
	f	[Z	g	hasPlacedChest
c	det	net/minecraft/world/level/levelgen/structure/EndCityPieces
	m	(Ldhr;Ldet$a;Lgj;Ljava/lang/String;Lcjm;Z)Ldet$a;	a	addPiece
	m	(Ldhr;Ldet$b;ILdet$a;Lgj;Ljava/util/List;Ljava/util/Random;)Z	a	recursiveChildren
	m	(Ldhr;Lgj;Lcjm;Ljava/util/List;Ljava/util/Random;)V	a	startHouseTower
	m	(Ljava/util/List;Ldet$a;)Ldet$a;	a	addHelper
	f	I	a	MAX_GEN_DEPTH
	f	Ldet$b;	b	HOUSE_TOWER_GENERATOR
	f	Ljava/util/List;	c	TOWER_BRIDGES
	f	Ldet$b;	d	TOWER_GENERATOR
	f	Ldet$b;	e	TOWER_BRIDGE_GENERATOR
	f	Ljava/util/List;	f	FAT_TOWER_BRIDGES
	f	Ldet$b;	g	FAT_TOWER_GENERATOR
c	det$1	net/minecraft/world/level/levelgen/structure/EndCityPieces$1
	m	()V	a	init
	m	(Ldhr;ILdet$a;Lgj;Ljava/util/List;Ljava/util/Random;)Z	a	generate
c	det$2	net/minecraft/world/level/levelgen/structure/EndCityPieces$2
	m	()V	a	init
	m	(Ldhr;ILdet$a;Lgj;Ljava/util/List;Ljava/util/Random;)Z	a	generate
c	det$3	net/minecraft/world/level/levelgen/structure/EndCityPieces$3
	m	()V	a	init
	m	(Ldhr;ILdet$a;Lgj;Ljava/util/List;Ljava/util/Random;)Z	a	generate
	f	Z	a	shipCreated
c	det$4	net/minecraft/world/level/levelgen/structure/EndCityPieces$4
	m	()V	a	init
	m	(Ldhr;ILdet$a;Lgj;Ljava/util/List;Ljava/util/Random;)Z	a	generate
c	det$a	net/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece
	m	()Lyt;	a	makeTemplateLocation
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	(Ljava/lang/String;)Lyt;	a	makeResourceLocation
	m	(Ljava/lang/String;Lgj;Lcbk;Ljava/util/Random;Ldeo;)V	a	handleDataMarker
	m	(Lok;Lyt;)Ldhs;	a	lambda$new$0
	m	(ZLcjm;)Ldhs;	a	makeSettings
c	det$b	net/minecraft/world/level/levelgen/structure/EndCityPieces$SectionGenerator
	m	()V	a	init
	m	(Ldhr;ILdet$a;Lgj;Ljava/util/List;Ljava/util/Random;)Z	a	generate
c	deu	net/minecraft/world/level/levelgen/structure/IglooPieces
	m	(Ldhr;Lgj;Lcjm;Ldfo;Ljava/util/Random;)V	a	addPieces
	f	I	a	GENERATION_HEIGHT
	f	Lyt;	b	STRUCTURE_LOCATION_IGLOO
	f	Lyt;	c	STRUCTURE_LOCATION_LADDER
	f	Lyt;	d	STRUCTURE_LOCATION_LABORATORY
	f	Ljava/util/Map;	e	PIVOTS
	f	Ljava/util/Map;	f	OFFSETS
c	deu$a	net/minecraft/world/level/levelgen/structure/IglooPieces$IglooPiece
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Lcjm;Lyt;)Ldhs;	a	makeSettings
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	(Ljava/lang/String;Lgj;Lcbk;Ljava/util/Random;Ldeo;)V	a	handleDataMarker
	m	(Lok;Lyt;)Ldhs;	a	lambda$new$0
	m	(Lyt;Lgj;I)Lgj;	a	makePosition
c	dev	net/minecraft/world/level/levelgen/structure/JunglePyramidPiece
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	f	I	a	WIDTH
	f	I	b	DEPTH
	f	Z	g	placedMainChest
	f	Z	h	placedHiddenChest
	f	Z	i	placedTrap1
	f	Z	j	placedTrap2
	f	Ldev$a;	k	STONE_SELECTOR
c	dev$a	net/minecraft/world/level/levelgen/structure/JunglePyramidPiece$MossStoneSelector
	m	(Ljava/util/Random;IIIZ)V	a	next
c	dew	net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler
	m	(II)Z	a	isUnhandledStructureStart
	m	(IILjava/lang/String;)Z	a	hasLegacyStart
	m	(J)V	a	removeIndex
	m	(Ldkl;)V	a	populateCaches
	m	(Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	a	lambda$populateCaches$2
	m	(Ljava/util/HashMap;)V	a	lambda$static$1
	m	(Lok;)Lok;	a	updateFromLegacy
	m	(Lok;Lcac;)Lok;	a	updateStructureStart
	m	(Lys;Ldkl;)Ldew;	a	getLegacyStructureHandler
	m	(Ljava/util/HashMap;)V	b	lambda$static$0
	f	Ljava/util/Map;	a	CURRENT_TO_LEGACY_MAP
	f	Ljava/util/Map;	b	LEGACY_TO_CURRENT_MAP
	f	Ljava/util/Set;	c	OLD_STRUCTURE_REGISTRY_KEYS
	f	Z	d	hasLegacyData
	f	Ljava/util/Map;	e	dataMap
	f	Ljava/util/Map;	f	indexMap
	f	Ljava/util/List;	g	legacyKeys
	f	Ljava/util/List;	h	currentKeys
c	dex	net/minecraft/world/level/levelgen/structure/MineShaftPieces
	m	(Ldfn;Ldfo;Ljava/util/Random;IIILgo;I)Ldex$c;	a	generateAndAddPiece
	m	(Ldfo;Ljava/util/Random;IIILgo;ILcyc$a;)Ldex$c;	a	createRandomShaftPiece
	f	I	a	MAGIC_START_Y
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	DEFAULT_SHAFT_WIDTH
	f	I	d	DEFAULT_SHAFT_HEIGHT
	f	I	e	DEFAULT_SHAFT_LENGTH
	f	I	f	MAX_PILLAR_HEIGHT
	f	I	g	MAX_CHAIN_HEIGHT
	f	I	h	MAX_DEPTH
c	dex$1	net/minecraft/world/level/levelgen/structure/MineShaftPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dex$a	net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCorridor
	m	(Lcay;Lgj;Lcov;)Z	a	canPlaceColumnOnTopOf
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Lcbn;Lcov;IIILdeo;)V	a	fillColumnDown
	m	(Lcbn;Lcov;Lgj$a;II)V	a	fillColumnBetween
	m	(Lcbn;Ldeo;III)V	a	placeDoubleLowerOrUpperSupport
	m	(Lcbn;Ldeo;IIII)Z	a	hasSturdyNeighbours
	m	(Lcbn;Ldeo;IIIIILjava/util/Random;)V	a	placeSupport
	m	(Lcbn;Ldeo;Ljava/util/Random;FIII)V	a	maybePlaceCobWeb
	m	(Lcbn;Ldeo;Ljava/util/Random;IIILyt;)Z	a	createChest
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;Ljava/util/Random;IIILgo;)Ldeo;	a	findCorridorSize
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	(Lcay;Lgj;Lcov;)Z	b	canHangChainBelow
	m	(Lcbn;Lcov;IIILdeo;)V	b	fillPillarDownOrChainUp
	f	Z	b	hasRails
	f	Z	c	spiderCorridor
	f	Z	d	hasPlacedSpider
	f	I	e	numSections
c	dex$b	net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCrossing
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Lcbn;Ldeo;IIII)V	a	placeSupportPillar
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;Ljava/util/Random;IIILgo;)Ldeo;	a	findCrossing
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	f	Lgo;	b	direction
	f	Z	c	isTwoFloored
c	dex$c	net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece
	m	(Lcab;Ldeo;)Z	a	edgesLiquid
	m	(Lcab;Ldeo;IIII)Z	a	isSupportingBox
	m	(Lcay;IIILdeo;)Z	a	canBeReplaced
	m	(Lcbn;Ldeo;Lcov;III)V	a	setPlanksBlock
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	f	Lcyc$a;	a	type
c	dex$d	net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftRoom
	m	(III)V	a	move
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	(Lok;Lpd;)V	a	lambda$addAdditionalSaveData$0
	f	Ljava/util/List;	b	childEntranceBoxes
c	dex$e	net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftStairs
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;Ljava/util/Random;IIILgo;)Ldeo;	a	findStairs
c	dey	net/minecraft/world/level/levelgen/structure/NetherBridgePieces
	m	(Ldey$n;Ldfo;Ljava/util/Random;IIILgo;I)Ldey$m;	a	findAndCreateBridgePieceFactory
	f	I	a	MAGIC_START_Y
	f	I	b	MAX_DEPTH
	f	I	c	LOWEST_Y_POSITION
	f	[Ldey$n;	d	BRIDGE_PIECE_WEIGHTS
	f	[Ldey$n;	e	CASTLE_PIECE_WEIGHTS
c	dey$1	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dey$a	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeCrossing
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;IIILgo;I)Ldey$a;	a	createPiece
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dey$b	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeEndFiller
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfo;Ljava/util/Random;IIILgo;I)Ldey$b;	a	createPiece
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	I	d	selfSeed
c	dey$c	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeStraight
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;Ljava/util/Random;IIILgo;I)Ldey$c;	a	createPiece
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dey$d	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorStairsPiece
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;IIILgo;I)Ldey$d;	a	createPiece
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dey$e	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorTBalconyPiece
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;IIILgo;I)Ldey$e;	a	createPiece
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dey$f	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleEntrance
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;Ljava/util/Random;IIILgo;I)Ldey$f;	a	createPiece
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dey$g	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorCrossingPiece
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;IIILgo;I)Ldey$g;	a	createPiece
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dey$h	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorLeftTurnPiece
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;Ljava/util/Random;IIILgo;I)Ldey$h;	a	createPiece
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isNeedingChest
c	dey$i	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorPiece
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;IIILgo;I)Ldey$i;	a	createPiece
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dey$j	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorRightTurnPiece
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;Ljava/util/Random;IIILgo;I)Ldey$j;	a	createPiece
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isNeedingChest
c	dey$k	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleStalkRoom
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;IIILgo;I)Ldey$k;	a	createPiece
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dey$l	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$MonsterThrone
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfo;IIIILgo;)Ldey$l;	a	createPiece
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedSpawner
c	dey$m	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece
	m	(Ldeo;)Z	a	isOkBox
	m	(Ldey$q;Ldfo;Ljava/util/Random;IIILgo;IZ)Ldfn;	a	generateAndAddPiece
	m	(Ldey$q;Ldfo;Ljava/util/Random;IIZ)Ldfn;	a	generateChildForward
	m	(Ldey$q;Ljava/util/List;Ldfo;Ljava/util/Random;IIILgo;I)Ldey$m;	a	generatePiece
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	(Ljava/util/List;)I	a	updatePieceWeight
	m	(Ldey$q;Ldfo;Ljava/util/Random;IIZ)Ldfn;	b	generateChildLeft
	m	(Ldey$q;Ldfo;Ljava/util/Random;IIZ)Ldfn;	c	generateChildRight
c	dey$n	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$PieceWeight
	m	()Z	a	isValid
	m	(I)Z	a	doPlace
	f	Ljava/lang/Class;	a	pieceClass
	f	I	b	weight
	f	I	c	placeCount
	f	I	d	maxPlaceCount
	f	Z	e	allowInRow
c	dey$o	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$RoomCrossing
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;IIILgo;I)Ldey$o;	a	createPiece
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dey$p	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StairsRoom
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;IIIILgo;)Ldey$p;	a	createPiece
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dey$q	net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece
	f	Ldey$n;	a	previousPiece
	f	Ljava/util/List;	b	availableBridgePieces
	f	Ljava/util/List;	c	availableCastlePieces
	f	Ljava/util/List;	d	pendingChildren
c	dez	net/minecraft/world/level/levelgen/structure/NetherFossilFeature
	m	(Ldfx$a;)Ljava/util/Optional;	a	pieceGeneratorSupplier
	m	(Ldfx$a;Lcuv;Lgj;Ldgb;Ldfw$a;)V	a	lambda$pieceGeneratorSupplier$0
c	dfa	net/minecraft/world/level/levelgen/structure/NetherFossilPieces
	m	(Ldhr;Ldfo;Ljava/util/Random;Lgj;)V	a	addPieces
	f	[Lyt;	a	FOSSILS
c	dfa$a	net/minecraft/world/level/levelgen/structure/NetherFossilPieces$NetherFossilPiece
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Lcjm;)Ldhs;	a	makeSettings
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	(Ljava/lang/String;Lgj;Lcbk;Ljava/util/Random;Ldeo;)V	a	handleDataMarker
	m	(Lok;Lyt;)Ldhs;	a	lambda$new$0
c	dfb	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces
c	dfb$1	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dfb$a	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXRoom
	m	(Ldfb$v;)Z	a	fits
	m	(Lgo;Ldfb$v;Ljava/util/Random;)Ldfb$r;	a	create
c	dfb$b	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXYRoom
	m	(Ldfb$v;)Z	a	fits
	m	(Lgo;Ldfb$v;Ljava/util/Random;)Ldfb$r;	a	create
c	dfb$c	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYRoom
	m	(Ldfb$v;)Z	a	fits
	m	(Lgo;Ldfb$v;Ljava/util/Random;)Ldfb$r;	a	create
c	dfb$d	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYZRoom
	m	(Ldfb$v;)Z	a	fits
	m	(Lgo;Ldfb$v;Ljava/util/Random;)Ldfb$r;	a	create
c	dfb$e	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleZRoom
	m	(Ldfb$v;)Z	a	fits
	m	(Lgo;Ldfb$v;Ljava/util/Random;)Ldfb$r;	a	create
c	dfb$f	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleRoom
	m	(Ldfb$v;)Z	a	fits
	m	(Lgo;Ldfb$v;Ljava/util/Random;)Ldfb$r;	a	create
c	dfb$g	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleTopRoom
	m	(Ldfb$v;)Z	a	fits
	m	(Lgo;Ldfb$v;Ljava/util/Random;)Ldfb$r;	a	create
c	dfb$h	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentBuilding
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Lcbn;Ljava/util/Random;Ldeo;)V	a	generateEntranceArchs
	m	(Ljava/util/Random;)Ljava/util/List;	a	generateRoomGraph
	m	(ZILcbn;Ljava/util/Random;Ldeo;)V	a	generateWing
	m	(Lcbn;Ljava/util/Random;Ldeo;)V	b	generateEntranceWall
	m	(Lcbn;Ljava/util/Random;Ldeo;)V	c	generateRoofPiece
	m	(Lcbn;Ljava/util/Random;Ldeo;)V	d	generateLowerWall
	m	(Lcbn;Ljava/util/Random;Ldeo;)V	e	generateMiddleWall
	m	(Lcbn;Ljava/util/Random;Ldeo;)V	f	generateUpperWall
	f	I	C	WIDTH
	f	I	D	HEIGHT
	f	I	E	DEPTH
	f	I	F	TOP_POSITION
	f	Ldfb$v;	G	sourceRoom
	f	Ldfb$v;	H	coreRoom
	f	Ljava/util/List;	I	childPieces
	f	I	a	BIOME_RANGE_CHECK
c	dfb$i	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentRoomFitter
	m	(Ldfb$v;)Z	a	fits
	m	(Lgo;Ldfb$v;Ljava/util/Random;)Ldfb$r;	a	create
c	dfb$j	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentCoreRoom
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
c	dfb$k	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXRoom
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
c	dfb$l	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXYRoom
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
c	dfb$m	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYRoom
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
c	dfb$n	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYZRoom
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
c	dfb$o	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleZRoom
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
c	dfb$p	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentEntryRoom
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
c	dfb$q	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPenthouse
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
c	dfb$r	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece
	m	(Lcbn;Ldeo;III)Z	a	spawnElder
	m	(Lcbn;Ldeo;IIIIII)V	a	generateWaterBox
	m	(Lcbn;Ldeo;IIIIIILcov;)V	a	generateBoxOnFillOnly
	m	(Lcbn;Ldeo;IIZ)V	a	generateDefaultFloor
	m	(Ldeo;IIII)Z	a	chunkIntersects
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	(Lgo;Ldfb$v;III)Ldeo;	a	makeBoundingBox
	m	(III)I	b	getRoomIndex
	f	Lcov;	b	BASE_GRAY
	f	Lcov;	c	BASE_LIGHT
	f	Lcov;	d	BASE_BLACK
	f	Lcov;	e	DOT_DECO_DATA
	f	Lcov;	f	LAMP_BLOCK
	f	Z	g	DO_FILL
	f	Lcov;	h	FILL_BLOCK
	f	Ljava/util/Set;	i	FILL_KEEP
	f	I	j	GRIDROOM_WIDTH
	f	I	k	GRIDROOM_DEPTH
	f	I	l	GRIDROOM_HEIGHT
	f	I	m	GRID_WIDTH
	f	I	n	GRID_DEPTH
	f	I	o	GRID_HEIGHT
	f	I	p	GRID_FLOOR_COUNT
	f	I	q	GRID_SIZE
	f	I	r	GRIDROOM_SOURCE_INDEX
	f	I	s	GRIDROOM_TOP_CONNECT_INDEX
	f	I	t	GRIDROOM_LEFTWING_CONNECT_INDEX
	f	I	u	GRIDROOM_RIGHTWING_CONNECT_INDEX
	f	I	v	LEFTWING_INDEX
	f	I	w	RIGHTWING_INDEX
	f	I	x	PENTHOUSE_INDEX
	f	Ldfb$v;	y	roomDefinition
c	dfb$s	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleRoom
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	f	I	a	mainDesign
c	dfb$t	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleTopRoom
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
c	dfb$u	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentWingRoom
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	f	I	a	mainDesign
c	dfb$v	net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition
	m	()V	a	updateOpenings
	m	(I)Z	a	findSource
	m	(Lgo;Ldfb$v;)V	a	setConnection
	m	()Z	b	isSpecial
	m	()I	c	countOpenings
	f	I	a	index
	f	[Ldfb$v;	b	connections
	f	[Z	c	hasOpening
	f	Z	d	claimed
	f	Z	e	isSource
	f	I	f	scanIndex
c	dfc	net/minecraft/world/level/levelgen/structure/OceanRuinFeature
	m	(Ldgb;Ldfw$a;)V	a	generatePieces
c	dfc$a	net/minecraft/world/level/levelgen/structure/OceanRuinFeature$Type
	m	()Ljava/lang/String;	a	getName
	m	(Ldfc$a;)Ldfc$a;	a	lambda$static$0
	m	(Ljava/lang/String;)Ldfc$a;	a	byName
	m	()[Ldfc$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldfc$a;	a	WARM
	f	Ldfc$a;	b	COLD
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/util/Map;	d	BY_NAME
	f	Ljava/lang/String;	e	name
	f	[Ldfc$a;	f	$VALUES
c	dfd	net/minecraft/world/level/levelgen/structure/OceanRuinPieces
	m	(Ldhr;Lgj;Lcjm;Ldfo;Ljava/util/Random;Ldaj;)V	a	addPieces
	m	(Ldhr;Lgj;Lcjm;Ldfo;Ljava/util/Random;Ldaj;ZF)V	a	addPiece
	m	(Ldhr;Ljava/util/Random;Lcjm;Lgj;Ldaj;Ldfo;)V	a	addClusterRuins
	m	(Ljava/util/Random;)Lyt;	a	getSmallWarmRuin
	m	(Ljava/util/Random;Lgj;)Ljava/util/List;	a	allPositions
	m	(Ljava/util/Random;)Lyt;	b	getBigWarmRuin
	f	[Lyt;	a	WARM_RUINS
	f	[Lyt;	b	RUINS_BRICK
	f	[Lyt;	c	RUINS_CRACKED
	f	[Lyt;	d	RUINS_MOSSY
	f	[Lyt;	e	BIG_RUINS_BRICK
	f	[Lyt;	f	BIG_RUINS_MOSSY
	f	[Lyt;	g	BIG_RUINS_CRACKED
	f	[Lyt;	h	BIG_WARM_RUINS
c	dfd$1	net/minecraft/world/level/levelgen/structure/OceanRuinPieces$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$OceanRuinFeature$Type
c	dfd$a	net/minecraft/world/level/levelgen/structure/OceanRuinPieces$OceanRuinPiece
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Lcjm;)Ldhs;	a	makeSettings
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	(Lgj;Lcab;Lgj;)I	a	getHeight
	m	(Ljava/lang/String;Lgj;Lcbk;Ljava/util/Random;Ldeo;)V	a	handleDataMarker
	m	(Lok;Lyt;)Ldhs;	a	lambda$new$0
	f	Ldfc$a;	e	biomeType
	f	F	f	integrity
	f	Z	g	isLarge
c	dfe	net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece
	m	(III)V	a	move
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lgj;Z)V	a	place
	m	(Lcom/mojang/serialization/DynamicOps;Lpd;)V	a	lambda$new$1
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	(Ldgl;)V	a	addJunction
	m	(Lok;Lpd;)V	a	lambda$addAdditionalSaveData$2
	m	()Lcjm;	ad_	getRotation
	m	()Ldgq;	b	getElement
	m	()Lgj;	c	getPosition
	m	()I	d	getGroundLevelDelta
	m	()Ljava/util/List;	e	getJunctions
	m	()Ljava/lang/IllegalStateException;	k	lambda$new$0
	f	Ldgq;	a	element
	f	Lgj;	b	position
	f	Lcjm;	c	rotation
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	groundLevelDelta
	f	Ljava/util/List;	f	junctions
	f	Ldhr;	g	structureManager
c	dff	net/minecraft/world/level/levelgen/structure/PostPlacementProcessor
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Ldfy;)V	a	lambda$static$0
	f	Ldff;	a	NONE
c	dfg	net/minecraft/world/level/levelgen/structure/RuinedPortalPiece
	m	(Lcaw;IILdfg$b;)I	a	getSurfaceY
	m	(Lcaw;Lgj;)Z	a	canBlockBeReplacedByNetherrackOrMagma
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Lcdq;FLcdq;)Ldhk;	a	getBlockReplaceRule
	m	(Lcdq;Lcdq;)Ldhk;	a	getBlockReplaceRule
	m	(Lchz;Lcjm;Ldfg$b;Lgj;Ldfg$a;)Ldhs;	a	makeSettings
	m	(Ldfg$b;)Lctw$a;	a	getHeightMapType
	m	(Ldfg$b;Ldfg$a;)Ldhk;	a	getLavaProcessorRule
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	(Ldhr;Lok;Lyt;)Ldhs;	a	makeSettings
	m	(Ljava/lang/String;Lgj;Lcbk;Ljava/util/Random;Ldeo;)V	a	handleDataMarker
	m	(Ljava/util/Random;Lcaw;)V	a	addNetherrackDripColumnsBelowPortal
	m	(Ljava/util/Random;Lcaw;Lgj;)V	a	maybeAddVines
	m	(Ljava/util/Random;Lcbn;Lgj;)V	a	lambda$postProcess$2
	m	(Lok;Lpd;)V	a	lambda$addAdditionalSaveData$1
	m	(Ldhr;Lok;Lyt;)Ldhs;	b	lambda$new$0
	m	(Ljava/util/Random;Lcaw;)V	b	spreadNetherrack
	m	(Ljava/util/Random;Lcaw;Lgj;)V	b	maybeAddLeavesAbove
	m	(Ljava/util/Random;Lcaw;Lgj;)V	c	addNetherrackDripColumn
	m	(Ljava/util/Random;Lcaw;Lgj;)V	d	placeNetherrackOrMagma
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	F	f	PROBABILITY_OF_GOLD_GONE
	f	F	g	PROBABILITY_OF_MAGMA_INSTEAD_OF_NETHERRACK
	f	F	h	PROBABILITY_OF_MAGMA_INSTEAD_OF_LAVA
	f	F	i	DEFAULT_MOSSINESS
	f	Ldfg$b;	j	verticalPlacement
	f	Ldfg$a;	k	properties
c	dfg$a	net/minecraft/world/level/levelgen/structure/RuinedPortalPiece$Properties
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Ldfg$a;)Ljava/lang/Boolean;	a	lambda$static$5
	m	(Ldfg$a;)Ljava/lang/Boolean;	b	lambda$static$4
	m	(Ldfg$a;)Ljava/lang/Boolean;	c	lambda$static$3
	m	(Ldfg$a;)Ljava/lang/Boolean;	d	lambda$static$2
	m	(Ldfg$a;)Ljava/lang/Float;	e	lambda$static$1
	m	(Ldfg$a;)Ljava/lang/Boolean;	f	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	cold
	f	F	c	mossiness
	f	Z	d	airPocket
	f	Z	e	overgrown
	f	Z	f	vines
	f	Z	g	replaceWithBlackstone
c	dfg$b	net/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement
	m	()Ljava/lang/String;	a	getName
	m	(Ldfg$b;)Ldfg$b;	a	lambda$static$0
	m	(Ljava/lang/String;)Ldfg$b;	a	byName
	m	()[Ldfg$b;	b	$values
	f	Ldfg$b;	a	ON_LAND_SURFACE
	f	Ldfg$b;	b	PARTLY_BURIED
	f	Ldfg$b;	c	ON_OCEAN_FLOOR
	f	Ldfg$b;	d	IN_MOUNTAIN
	f	Ldfg$b;	e	UNDERGROUND
	f	Ldfg$b;	f	IN_NETHER
	f	Ljava/util/Map;	g	BY_NAME
	f	Ljava/lang/String;	h	name
	f	[Ldfg$b;	i	$VALUES
c	dfh	net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece
	m	(Lcaw;I)Z	a	updateHeightPositionToLowestGroundHeight
	m	(Lcaw;Ldeo;I)Z	a	updateAverageGroundHeight
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	f	I	c	width
	f	I	d	height
	f	I	e	depth
	f	I	f	heightPosition
c	dfi	net/minecraft/world/level/levelgen/structure/ShipwreckPieces
	m	(Ldhr;Lgj;Lcjm;Ldfo;Ljava/util/Random;Ldav;)V	a	addPieces
	f	Lgj;	a	PIVOT
	f	[Lyt;	b	STRUCTURE_LOCATION_BEACHED
	f	[Lyt;	c	STRUCTURE_LOCATION_OCEAN
	f	Ljava/util/Map;	d	MARKERS_TO_LOOT
c	dfi$a	net/minecraft/world/level/levelgen/structure/ShipwreckPieces$ShipwreckPiece
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Lcjm;)Ldhs;	a	makeSettings
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	(Ljava/lang/String;Lgj;Lcbk;Ljava/util/Random;Ldeo;)V	a	handleDataMarker
	m	(Lok;Lyt;)Ldhs;	a	lambda$new$0
	f	Z	e	isBeached
c	dfj	net/minecraft/world/level/levelgen/structure/StrongholdPieces
	m	()V	a	resetPieces
	m	(Ldfj$m;Ldfo;Ljava/util/Random;IIILgo;I)Ldfj$p;	a	generatePieceFromSmallDoor
	m	(Ljava/lang/Class;Ldfo;Ljava/util/Random;IIILgo;I)Ldfj$p;	a	findAndCreatePieceFactory
	m	()Z	b	updatePieceWeight
	m	(Ldfj$m;Ldfo;Ljava/util/Random;IIILgo;I)Ldfn;	b	generateAndAddPiece
	f	I	a	MAGIC_START_Y
	f	I	b	SMALL_DOOR_WIDTH
	f	I	c	SMALL_DOOR_HEIGHT
	f	I	d	MAX_DEPTH
	f	I	e	LOWEST_Y_POSITION
	f	Z	f	CHECK_AIR
	f	[Ldfj$f;	g	STRONGHOLD_PIECE_WEIGHTS
	f	Ljava/util/List;	h	currentPieces
	f	Ljava/lang/Class;	i	imposedPiece
	f	I	j	totalWeight
	f	Ldfj$k;	k	SMOOTH_STONE_SELECTOR
c	dfj$1	net/minecraft/world/level/levelgen/structure/StrongholdPieces$1
	m	(I)Z	a	doPlace
c	dfj$2	net/minecraft/world/level/levelgen/structure/StrongholdPieces$2
	m	(I)Z	a	doPlace
c	dfj$3	net/minecraft/world/level/levelgen/structure/StrongholdPieces$3
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$StrongholdPieces$StrongholdPiece$SmallDoorType
	f	[I	b	$SwitchMap$net$minecraft$core$Direction
c	dfj$a	net/minecraft/world/level/levelgen/structure/StrongholdPieces$ChestCorridor
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;Ljava/util/Random;IIILgo;I)Ldfj$a;	a	createPiece
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	()Lcyh;	ae_	getNoiseEffect
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedChest
c	dfj$b	net/minecraft/world/level/levelgen/structure/StrongholdPieces$FillerCorridor
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfo;Ljava/util/Random;IIILgo;)Ldeo;	a	findPieceBox
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	()Lcyh;	ae_	getNoiseEffect
	f	I	a	steps
c	dfj$c	net/minecraft/world/level/levelgen/structure/StrongholdPieces$FiveCrossing
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;Ljava/util/Random;IIILgo;I)Ldfj$c;	a	createPiece
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	()Lcyh;	ae_	getNoiseEffect
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	leftLow
	f	Z	f	leftHigh
	f	Z	g	rightLow
	f	Z	h	rightHigh
c	dfj$d	net/minecraft/world/level/levelgen/structure/StrongholdPieces$LeftTurn
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;Ljava/util/Random;IIILgo;I)Ldfj$d;	a	createPiece
c	dfj$e	net/minecraft/world/level/levelgen/structure/StrongholdPieces$Library
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfo;Ljava/util/Random;IIILgo;I)Ldfj$e;	a	createPiece
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	()Lcyh;	ae_	getNoiseEffect
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	TALL_HEIGHT
	f	I	d	DEPTH
	f	Z	f	isTall
c	dfj$f	net/minecraft/world/level/levelgen/structure/StrongholdPieces$PieceWeight
	m	()Z	a	isValid
	m	(I)Z	a	doPlace
	f	Ljava/lang/Class;	a	pieceClass
	f	I	b	weight
	f	I	c	placeCount
	f	I	d	maxPlaceCount
c	dfj$g	net/minecraft/world/level/levelgen/structure/StrongholdPieces$PortalRoom
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;IIILgo;I)Ldfj$g;	a	createPiece
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	()Lcyh;	ae_	getNoiseEffect
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedSpawner
c	dfj$h	net/minecraft/world/level/levelgen/structure/StrongholdPieces$PrisonHall
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;Ljava/util/Random;IIILgo;I)Ldfj$h;	a	createPiece
	m	()Lcyh;	ae_	getNoiseEffect
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dfj$i	net/minecraft/world/level/levelgen/structure/StrongholdPieces$RightTurn
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;Ljava/util/Random;IIILgo;I)Ldfj$i;	a	createPiece
c	dfj$j	net/minecraft/world/level/levelgen/structure/StrongholdPieces$RoomCrossing
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;Ljava/util/Random;IIILgo;I)Ldfj$j;	a	createPiece
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	()Lcyh;	ae_	getNoiseEffect
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	I	d	type
c	dfj$k	net/minecraft/world/level/levelgen/structure/StrongholdPieces$SmoothStoneSelector
	m	(Ljava/util/Random;IIIZ)V	a	next
c	dfj$l	net/minecraft/world/level/levelgen/structure/StrongholdPieces$StairsDown
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;Ljava/util/Random;IIILgo;I)Ldfj$l;	a	createPiece
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	()Lcyh;	ae_	getNoiseEffect
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isSource
c	dfj$m	net/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece
	m	()Lgj;	af_	getLocatorPosition
	f	Ldfj$f;	a	previousPiece
	f	Ldfj$g;	b	portalRoomPiece
	f	Ljava/util/List;	c	pendingChildren
c	dfj$n	net/minecraft/world/level/levelgen/structure/StrongholdPieces$Straight
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;Ljava/util/Random;IIILgo;I)Ldfj$n;	a	createPiece
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	()Lcyh;	ae_	getNoiseEffect
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	leftChild
	f	Z	f	rightChild
c	dfj$o	net/minecraft/world/level/levelgen/structure/StrongholdPieces$StraightStairsDown
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfo;Ljava/util/Random;IIILgo;I)Ldfj$o;	a	createPiece
	m	()Lcyh;	ae_	getNoiseEffect
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dfj$p	net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece
	m	(Lcbn;Ljava/util/Random;Ldeo;Ldfj$p$a;III)V	a	generateSmallDoor
	m	(Ldeo;)Z	a	isOkBox
	m	(Ldfj$m;Ldfo;Ljava/util/Random;II)Ldfn;	a	generateSmallDoorChildForward
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	(Ljava/util/Random;)Ldfj$p$a;	a	randomSmallDoor
	m	()Lcyh;	ae_	getNoiseEffect
	m	(Ldfj$m;Ldfo;Ljava/util/Random;II)Ldfn;	b	generateSmallDoorChildLeft
	m	(Ldfj$m;Ldfo;Ljava/util/Random;II)Ldfn;	c	generateSmallDoorChildRight
	f	Ldfj$p$a;	e	entryDoor
c	dfj$p$a	net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType
	m	()[Ldfj$p$a;	a	$values
	f	Ldfj$p$a;	a	OPENING
	f	Ldfj$p$a;	b	WOOD_DOOR
	f	Ldfj$p$a;	c	GRATES
	f	Ldfj$p$a;	d	IRON_DOOR
	f	[Ldfj$p$a;	e	$VALUES
c	dfj$q	net/minecraft/world/level/levelgen/structure/StrongholdPieces$Turn
	m	()Lcyh;	ae_	getNoiseEffect
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dfk	net/minecraft/world/level/levelgen/structure/StructureCheck
	m	(JLit/unimi/dsi/fastutil/longs/Long2BooleanMap;)V	a	lambda$storeFullResults$3
	m	(JLit/unimi/dsi/fastutil/objects/Object2IntMap;)V	a	storeFullResults
	m	(Lcac;Lcwr;)V	a	incrementReference
	m	(Lcac;Lcwr;J)Z	a	lambda$checkStart$1
	m	(Lcac;Lcwr;Z)Ldfl;	a	checkStart
	m	(Lcac;Lcwr;ZJ)Ldfl;	a	tryLoadFromStorage
	m	(Lcac;Ljava/util/Map;)V	a	onStructureLoad
	m	(Lcwr;)Lit/unimi/dsi/fastutil/longs/Long2BooleanMap;	a	lambda$checkStart$0
	m	(Lcwr;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$incrementReference$4
	m	(Lcwr;Ljava/lang/Long;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	lambda$incrementReference$5
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	deduplicateEmptyMap
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lcwr;Ldfr;)V	a	lambda$onStructureLoad$2
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lcwr;Z)Ldfl;	a	checkStructureInfo
	m	(Lok;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	loadStructures
	m	(Lcac;Lcwr;)Z	b	canCreateStructure
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	NO_STRUCTURE
	f	Lcrm;	c	storageAccess
	f	Lhc;	d	registryAccess
	f	Lhb;	e	biomes
	f	Lhb;	f	structureConfigs
	f	Ldhr;	g	structureManager
	f	Lys;	h	dimension
	f	Lcqr;	i	chunkGenerator
	f	Lcax;	j	heightAccessor
	f	Lcbv;	k	biomeSource
	f	J	l	seed
	f	Lcom/mojang/datafixers/DataFixer;	m	fixerUpper
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	n	loadedChunks
	f	Ljava/util/Map;	o	featureChecks
c	dfl	net/minecraft/world/level/levelgen/structure/StructureCheckResult
	m	()[Ldfl;	a	$values
	f	Ldfl;	a	START_PRESENT
	f	Ldfl;	b	START_NOT_PRESENT
	f	Ldfl;	c	CHUNK_LOAD_NEEDED
	f	[Ldfl;	d	$VALUES
c	dfm	net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getAll
	m	(J)V	a	addIndex
	m	(Lok;)Lok;	a	save
	m	(J)Z	b	hasStartIndex
	m	(Lok;)Ldfm;	b	load
	m	(J)Z	c	hasUnhandledIndex
	m	(J)V	d	removeIndex
	f	Ljava/lang/String;	a	TAG_REMAINING_INDEXES
	f	Ljava/lang/String;	b	TAG_All_INDEXES
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	c	all
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	d	remaining
c	dfn	net/minecraft/world/level/levelgen/structure/StructurePiece
	m	(I)I	a	getWorldY
	m	(II)I	a	getWorldX
	m	(III)V	a	move
	m	(IIILgo;III)Ldeo;	a	makeBoundingBox
	m	(Lcab;IIILdeo;)Lcov;	a	getBlock
	m	(Lcab;Lgj;Lcov;)Lcov;	a	reorient
	m	(Lcac;I)Z	a	isCloseToChunk
	m	(Lcay;IIILdeo;)Z	a	canBeReplaced
	m	(Lcbk;Ldeo;Ljava/util/Random;Lgj;Lyt;Lcov;)Z	a	createChest
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Lcbn;Lcov;IIILdeo;)V	a	fillColumnDown
	m	(Lcbn;Ldeo;IIIIIILcov;Lcov;Z)V	a	generateBox
	m	(Lcbn;Ldeo;IIIIIILcov;Z)V	a	generateUpperHalfSphere
	m	(Lcbn;Ldeo;IIIIIIZLjava/util/Random;Ldfn$a;)V	a	generateBox
	m	(Lcbn;Ldeo;Ldeo;Lcov;Lcov;Z)V	a	generateBox
	m	(Lcbn;Ldeo;Ldeo;ZLjava/util/Random;Ldfn$a;)V	a	generateBox
	m	(Lcbn;Ldeo;Ljava/util/Random;FIIIIIILcov;Lcov;ZZ)V	a	generateMaybeBox
	m	(Lcbn;Ldeo;Ljava/util/Random;FIIILcov;)V	a	maybeGenerateBlock
	m	(Lcbn;Ldeo;Ljava/util/Random;IIILgo;Lyt;)Z	a	createDispenser
	m	(Lcbn;Ldeo;Ljava/util/Random;IIILyt;)Z	a	createChest
	m	(Lcov;)Z	a	isReplaceableByStructures
	m	(Ldfn;Ldfo;Ljava/util/Random;)V	a	addChildren
	m	(Ldfz;)Lok;	a	createTag
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	(Lgo;)V	a	setOrientation
	m	(Ljava/util/List;Ldeo;)Ldfn;	a	findCollisionPiece
	m	(Ljava/util/stream/Stream;)Ldeo;	a	createBoundingBox
	m	(Lok;Lpd;)V	a	lambda$createTag$1
	m	()Lcjm;	ad_	getRotation
	m	()Lcyh;	ae_	getNoiseEffect
	m	()Lgj;	af_	getLocatorPosition
	m	(II)I	b	getWorldZ
	m	(Lcay;IIILdeo;)Z	b	isInterior
	m	(Lcbn;Ldeo;IIIIII)V	b	generateAirBox
	m	(Ljava/util/Random;)Lgo;	b	getRandomHorizontalDirection
	m	(III)Lgj$a;	c	getWorldPos
	m	(Lcbn;Lcov;IIILdeo;)V	c	placeBlock
	m	()Ljava/lang/IllegalStateException;	d	lambda$createBoundingBox$2
	m	()Ljava/lang/IllegalArgumentException;	e	lambda$new$0
	m	()Ldeo;	f	getBoundingBox
	m	()I	g	getGenDepth
	m	()Lgo;	h	getOrientation
	m	()Lchz;	i	getMirror
	m	()Ldga;	j	getType
	f	Ldeo;	A	boundingBox
	f	I	B	genDepth
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lgo;	b	orientation
	f	Lchz;	c	mirror
	f	Lcjm;	d	rotation
	f	Ldga;	e	type
	f	Ljava/util/Set;	f	SHAPE_CHECK_BLOCKS
	f	Lcov;	z	CAVE_AIR
c	dfn$1	net/minecraft/world/level/levelgen/structure/StructurePiece$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dfn$a	net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector
	m	()Lcov;	a	getNext
	m	(Ljava/util/Random;IIIZ)V	a	next
	f	Lcov;	a	next
c	dfo	net/minecraft/world/level/levelgen/structure/StructurePieceAccessor
	m	(Ldeo;)Ldfn;	a	findCollisionPiece
	m	(Ldfn;)V	a	addPiece
c	dfp	net/minecraft/world/level/levelgen/structure/StructureSet
	m	()Ljava/util/List;	a	structures
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lgs;)Ldfp$a;	a	entry
	m	(Lgs;I)Ldfp$a;	a	entry
	m	()Ldgg;	b	placement
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/List;	c	structures
	f	Ldgg;	d	placement
c	dfp$a	net/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry
	m	()Lgs;	a	structure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ljava/util/function/Predicate;)Z	a	generatesInMatchingBiome
	m	()I	b	weight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgs;	b	structure
	f	I	c	weight
c	dfq	net/minecraft/world/level/levelgen/structure/StructureSpawnOverride
	m	()Ldfq$a;	a	boundingBox
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Lauw;	b	spawns
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldfq$a;	b	boundingBox
	f	Lauw;	c	spawns
c	dfq$a	net/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType
	m	()[Ldfq$a;	a	lambda$static$0
	m	(Ljava/lang/String;)Ldfq$a;	a	byName
	m	()[Ldfq$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldfq$a;	a	PIECE
	f	Ldfq$a;	b	STRUCTURE
	f	[Ldfq$a;	c	VALUES
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	id
	f	[Ldfq$a;	f	$VALUES
c	dfr	net/minecraft/world/level/levelgen/structure/StructureStart
	m	()Ldeo;	a	getBoundingBox
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;)V	a	placeInChunk
	m	(Ldfz;Lcac;)Lok;	a	createTag
	m	()Z	b	isValid
	m	()Lcac;	c	getChunkPos
	m	()Z	d	canBeReferenced
	m	()V	e	addReference
	m	()I	f	getReferences
	m	()I	g	getMaxReferences
	m	()Lcwr;	h	getFeature
	m	()Ljava/util/List;	i	getPieces
	f	Ljava/lang/String;	a	INVALID_START_ID
	f	Ldfr;	b	INVALID_START
	f	Lcwr;	c	feature
	f	Ldfy;	d	pieceContainer
	f	Lcac;	e	chunkPos
	f	I	f	references
	f	Ldeo;	g	cachedBoundingBox
c	dfs	net/minecraft/world/level/levelgen/structure/SwamplandHutPiece
	m	(Lcbk;Ldeo;)V	a	spawnCat
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	f	Z	a	spawnedWitch
	f	Z	b	spawnedCat
c	dft	net/minecraft/world/level/levelgen/structure/TemplateStructurePiece
	m	()Lyt;	a	makeTemplateLocation
	m	(III)V	a	move
	m	(Lcbn;Lcbm;Lcqr;Ljava/util/Random;Ldeo;Lcac;Lgj;)V	a	postProcess
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	(Ljava/lang/String;Lgj;Lcbk;Ljava/util/Random;Ldeo;)V	a	handleDataMarker
	m	()Lcjm;	ad_	getRotation
	f	Ljava/lang/String;	a	templateName
	f	Ldhw;	b	template
	f	Ldhs;	c	placeSettings
	f	Lgj;	d	templatePosition
	f	Lorg/slf4j/Logger;	e	LOGGER
c	dfu	net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces
	m	(Ldhr;Lgj;Lcjm;Ljava/util/List;Ljava/util/Random;)V	a	generateMansion
	m	([Ljava/lang/String;)V	a	main
c	dfu$a	net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FirstFloorRoomCollection
	m	(Ljava/util/Random;)Ljava/lang/String;	a	get1x1
	m	(Ljava/util/Random;Z)Ljava/lang/String;	a	get1x2SideEntrance
	m	(Ljava/util/Random;)Ljava/lang/String;	b	get1x1Secret
	m	(Ljava/util/Random;Z)Ljava/lang/String;	b	get1x2FrontEntrance
	m	(Ljava/util/Random;)Ljava/lang/String;	c	get1x2Secret
	m	(Ljava/util/Random;)Ljava/lang/String;	d	get2x2
	m	(Ljava/util/Random;)Ljava/lang/String;	e	get2x2Secret
c	dfu$b	net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection
	m	(Ljava/util/Random;)Ljava/lang/String;	a	get1x1
	m	(Ljava/util/Random;Z)Ljava/lang/String;	a	get1x2SideEntrance
	m	(Ljava/util/Random;)Ljava/lang/String;	b	get1x1Secret
	m	(Ljava/util/Random;Z)Ljava/lang/String;	b	get1x2FrontEntrance
	m	(Ljava/util/Random;)Ljava/lang/String;	c	get1x2Secret
	m	(Ljava/util/Random;)Ljava/lang/String;	d	get2x2
	m	(Ljava/util/Random;)Ljava/lang/String;	e	get2x2Secret
c	dfu$c	net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionGrid
	m	()V	a	print
	m	(Ldfu$g;)Z	a	cleanEdges
	m	(Ldfu$g;II)Z	a	isHouse
	m	(Ldfu$g;IIII)Z	a	isRoomId
	m	(Ldfu$g;IILgo;I)V	a	recursiveCorridor
	m	(Ldfu$g;Ldfu$g;)V	a	identifyRooms
	m	()V	b	setupThirdFloor
	m	(Ldfu$g;IIII)Lgo;	b	get1x2RoomDirection
	f	I	a	DEFAULT_SIZE
	f	I	b	CLEAR
	f	I	c	CORRIDOR
	f	I	d	ROOM
	f	I	e	START_ROOM
	f	I	f	TEST_ROOM
	f	I	g	BLOCKED
	f	I	h	ROOM_1x1
	f	I	i	ROOM_1x2
	f	I	j	ROOM_2x2
	f	I	k	ROOM_ORIGIN_FLAG
	f	I	l	ROOM_DOOR_FLAG
	f	I	m	ROOM_STAIRS_FLAG
	f	I	n	ROOM_CORRIDOR_FLAG
	f	I	o	ROOM_TYPE_MASK
	f	I	p	ROOM_ID_MASK
	f	Ljava/util/Random;	q	random
	f	Ldfu$g;	r	baseGrid
	f	Ldfu$g;	s	thirdFloorGrid
	f	[Ldfu$g;	t	floorRooms
	f	I	u	entranceX
	f	I	v	entranceY
c	dfu$d	net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionPiecePlacer
	m	(Lgj;Lcjm;Ljava/util/List;Ldfu$c;)V	a	createMansion
	m	(Ljava/util/List;Ldfu$e;)V	a	entrance
	m	(Ljava/util/List;Ldfu$e;Ldfu$g;Lgo;IIII)V	a	traverseOuterWalls
	m	(Ljava/util/List;Lgj;Lcjm;Ldfu$b;)V	a	addRoom2x2Secret
	m	(Ljava/util/List;Lgj;Lcjm;Ldfu$g;Ldfu$g;)V	a	createRoof
	m	(Ljava/util/List;Lgj;Lcjm;Lgo;Ldfu$b;)V	a	addRoom1x1
	m	(Ljava/util/List;Lgj;Lcjm;Lgo;Lgo;Ldfu$b;)V	a	addRoom2x2
	m	(Ljava/util/List;Lgj;Lcjm;Lgo;Lgo;Ldfu$b;Z)V	a	addRoom1x2
	m	(Ljava/util/List;Ldfu$e;)V	b	traverseWallPiece
	m	(Ljava/util/List;Ldfu$e;)V	c	traverseTurn
	m	(Ljava/util/List;Ldfu$e;)V	d	traverseInnerTurn
	f	Ldhr;	a	structureManager
	f	Ljava/util/Random;	b	random
	f	I	c	startX
	f	I	d	startY
c	dfu$e	net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData
	f	Lcjm;	a	rotation
	f	Lgj;	b	position
	f	Ljava/lang/String;	c	wallType
c	dfu$f	net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SecondFloorRoomCollection
	m	(Ljava/util/Random;)Ljava/lang/String;	a	get1x1
	m	(Ljava/util/Random;Z)Ljava/lang/String;	a	get1x2SideEntrance
	m	(Ljava/util/Random;)Ljava/lang/String;	b	get1x1Secret
	m	(Ljava/util/Random;Z)Ljava/lang/String;	b	get1x2FrontEntrance
	m	(Ljava/util/Random;)Ljava/lang/String;	c	get1x2Secret
	m	(Ljava/util/Random;)Ljava/lang/String;	d	get2x2
	m	(Ljava/util/Random;)Ljava/lang/String;	e	get2x2Secret
c	dfu$g	net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid
	m	(II)I	a	get
	m	(III)V	a	set
	m	(IIII)V	a	setif
	m	(IIIII)V	a	set
	m	(III)Z	b	edgesTo
	f	[[I	a	grid
	f	I	b	width
	f	I	c	height
	f	I	d	valueIfOutside
c	dfu$h	net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$ThirdFloorRoomCollection
c	dfu$i	net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$WoodlandMansionPiece
	m	()Lyt;	a	makeTemplateLocation
	m	(Lchz;Lcjm;)Ldhs;	a	makeSettings
	m	(Ldfz;Lok;)V	a	addAdditionalSaveData
	m	(Ljava/lang/String;)Lyt;	a	makeLocation
	m	(Ljava/lang/String;Lgj;Lcbk;Ljava/util/Random;Ldeo;)V	a	handleDataMarker
	m	(Lok;Lyt;)Ldhs;	a	lambda$new$0
c	dfv	net/minecraft/world/level/levelgen/structure/package-info
c	dfw	net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator
c	dfw$a	net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context
	m	()Lczz;	a	config
	m	()Lcqr;	b	chunkGenerator
	m	()Ldhr;	c	structureManager
	m	()Lcac;	d	chunkPos
	m	()Lcax;	e	heightAccessor
	m	()Lcuv;	f	random
	m	()J	g	seed
	f	Lczz;	a	config
	f	Lcqr;	b	chunkGenerator
	f	Ldhr;	c	structureManager
	f	Lcac;	d	chunkPos
	f	Lcax;	e	heightAccessor
	f	Lcuv;	f	random
	f	J	g	seed
c	dfx	net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier
	m	(Lctw$a;Ldfx$a;)Z	a	lambda$checkForBiomeOnTop$1
	m	(Ljava/util/function/Predicate;Ljava/util/Optional;Ldfx$a;)Ljava/util/Optional;	a	lambda$simple$0
c	dfx$a	net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context
	m	()Lcqr;	a	chunkGenerator
	m	(II)I	a	getLowestY
	m	(IIII)[I	a	getCornerHeights
	m	(Lctw$a;)Z	a	validBiomeOnTop
	m	()Lcbv;	b	biomeSource
	m	()J	c	seed
	m	()Lcac;	d	chunkPos
	m	()Lczz;	e	config
	m	()Lcax;	f	heightAccessor
	m	()Ljava/util/function/Predicate;	g	validBiome
	m	()Ldhr;	h	structureManager
	m	()Lhc;	i	registryAccess
	f	Lcqr;	a	chunkGenerator
	f	Lcbv;	b	biomeSource
	f	J	c	seed
	f	Lcac;	d	chunkPos
	f	Lczz;	e	config
	f	Lcax;	f	heightAccessor
	f	Ljava/util/function/Predicate;	g	validBiome
	f	Ldhr;	h	structureManager
	f	Lhc;	i	registryAccess
c	dfy	net/minecraft/world/level/levelgen/structure/pieces/PiecesContainer
	m	()Z	a	isEmpty
	m	(Ldfz;)Lpd;	a	save
	m	(Lgj;)Z	a	isInsidePiece
	m	(Loq;Ldfz;)Ldfy;	a	load
	m	()Ldeo;	b	calculateBoundingBox
	m	()Ljava/util/List;	c	pieces
	f	Ljava/util/List;	a	pieces
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lyt;	c	JIGSAW_RENAME
	f	Ljava/util/Map;	d	RENAMES
c	dfz	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext
	m	()Laga;	a	resourceManager
	m	(Ladw;)Ldfz;	a	fromLevel
	m	()Lhc;	b	registryAccess
	m	()Ldhr;	c	structureManager
	f	Laga;	a	resourceManager
	f	Lhc;	b	registryAccess
	f	Ldhr;	c	structureManager
c	dga	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType
	m	(Ldga$a;Ljava/lang/String;)Ldga;	a	setPieceId
	m	(Ldga$b;Ljava/lang/String;)Ldga;	a	setTemplatePieceId
	m	(Ldga;Ljava/lang/String;)Ldga;	a	setFullContextPieceId
	f	Ldga;	A	STRONGHOLD_RIGHT_TURN
	f	Ldga;	B	STRONGHOLD_ROOM_CROSSING
	f	Ldga;	C	STRONGHOLD_STAIRS_DOWN
	f	Ldga;	D	STRONGHOLD_START
	f	Ldga;	E	STRONGHOLD_STRAIGHT
	f	Ldga;	F	STRONGHOLD_STRAIGHT_STAIRS_DOWN
	f	Ldga;	G	JUNGLE_PYRAMID_PIECE
	f	Ldga;	H	OCEAN_RUIN
	f	Ldga;	I	IGLOO
	f	Ldga;	J	RUINED_PORTAL
	f	Ldga;	K	SWAMPLAND_HUT
	f	Ldga;	L	DESERT_PYRAMID_PIECE
	f	Ldga;	M	OCEAN_MONUMENT_BUILDING
	f	Ldga;	N	OCEAN_MONUMENT_CORE_ROOM
	f	Ldga;	O	OCEAN_MONUMENT_DOUBLE_X_ROOM
	f	Ldga;	P	OCEAN_MONUMENT_DOUBLE_XY_ROOM
	f	Ldga;	Q	OCEAN_MONUMENT_DOUBLE_Y_ROOM
	f	Ldga;	R	OCEAN_MONUMENT_DOUBLE_YZ_ROOM
	f	Ldga;	S	OCEAN_MONUMENT_DOUBLE_Z_ROOM
	f	Ldga;	T	OCEAN_MONUMENT_ENTRY_ROOM
	f	Ldga;	U	OCEAN_MONUMENT_PENTHOUSE
	f	Ldga;	V	OCEAN_MONUMENT_SIMPLE_ROOM
	f	Ldga;	W	OCEAN_MONUMENT_SIMPLE_TOP_ROOM
	f	Ldga;	X	OCEAN_MONUMENT_WING_ROOM
	f	Ldga;	Y	END_CITY_PIECE
	f	Ldga;	Z	WOODLAND_MANSION_PIECE
	f	Ldga;	a	MINE_SHAFT_CORRIDOR
	f	Ldga;	aa	BURIED_TREASURE_PIECE
	f	Ldga;	ab	SHIPWRECK_PIECE
	f	Ldga;	ac	NETHER_FOSSIL
	f	Ldga;	ad	JIGSAW
	f	Ldga;	b	MINE_SHAFT_CROSSING
	f	Ldga;	c	MINE_SHAFT_ROOM
	f	Ldga;	d	MINE_SHAFT_STAIRS
	f	Ldga;	e	NETHER_FORTRESS_BRIDGE_CROSSING
	f	Ldga;	f	NETHER_FORTRESS_BRIDGE_END_FILLER
	f	Ldga;	g	NETHER_FORTRESS_BRIDGE_STRAIGHT
	f	Ldga;	h	NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS
	f	Ldga;	i	NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY
	f	Ldga;	j	NETHER_FORTRESS_CASTLE_ENTRANCE
	f	Ldga;	k	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING
	f	Ldga;	l	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN
	f	Ldga;	m	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR
	f	Ldga;	n	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN
	f	Ldga;	o	NETHER_FORTRESS_CASTLE_STALK_ROOM
	f	Ldga;	p	NETHER_FORTRESS_MONSTER_THRONE
	f	Ldga;	q	NETHER_FORTRESS_ROOM_CROSSING
	f	Ldga;	r	NETHER_FORTRESS_STAIRS_ROOM
	f	Ldga;	s	NETHER_FORTRESS_START
	f	Ldga;	t	STRONGHOLD_CHEST_CORRIDOR
	f	Ldga;	u	STRONGHOLD_FILLER_CORRIDOR
	f	Ldga;	v	STRONGHOLD_FIVE_CROSSING
	f	Ldga;	w	STRONGHOLD_LEFT_TURN
	f	Ldga;	x	STRONGHOLD_LIBRARY
	f	Ldga;	y	STRONGHOLD_PORTAL_ROOM
	f	Ldga;	z	STRONGHOLD_PRISON_HALL
c	dga$a	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$ContextlessType
c	dga$b	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$StructureTemplateType
c	dgb	net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder
	m	()Ldfy;	a	build
	m	(I)V	a	offsetPiecesVertically
	m	(IILjava/util/Random;I)V	a	moveBelowSeaLevel
	m	(Ldeo;)Ldfn;	a	findCollisionPiece
	m	(Ldfn;)V	a	addPiece
	m	(Ljava/util/Random;II)V	a	moveInsideHeights
	m	()V	b	clear
	m	()Z	c	isEmpty
	m	()Ldeo;	d	getBoundingBox
	f	Ljava/util/List;	a	pieces
c	dgc	net/minecraft/world/level/levelgen/structure/pieces/package-info
c	dgd	net/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement
	m	()Ldgh;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lcqr;JII)Z	a	isFeatureChunk
	m	()I	b	distance
	m	()I	c	spread
	m	()I	d	count
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	distance
	f	I	d	spread
	f	I	e	count
c	dge	net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement
	m	()Ldgh;	a	type
	m	(JII)Lcac;	a	getPotentialFeatureChunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lcqr;JII)Z	a	isFeatureChunk
	m	(Ldge;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	()I	b	spacing
	m	()I	c	separation
	m	()Ldgf;	d	spreadType
	m	()I	e	salt
	m	()Lhh;	f	locateOffset
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	spacing
	f	I	d	separation
	f	Ldgf;	e	spreadType
	f	I	f	salt
	f	Lhh;	g	locateOffset
c	dgf	net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType
	m	()[Ldgf;	a	lambda$static$0
	m	(Lcun;I)I	a	evaluate
	m	(Ljava/lang/String;)Ldgf;	a	byName
	m	()[Ldgf;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgf;	a	LINEAR
	f	Ldgf;	b	TRIANGULAR
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	[Ldgf;	d	VALUES
	f	Ljava/lang/String;	e	id
	f	[Ldgf;	f	$VALUES
c	dgf$1	net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$placement$RandomSpreadType
c	dgg	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement
	m	()Ldgh;	a	type
	m	(Lcqr;JII)Z	a	isFeatureChunk
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dgh	net/minecraft/world/level/levelgen/structure/placement/StructurePlacementType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldgh;	a	register
	f	Ldgh;	a	RANDOM_SPREAD
	f	Ldgh;	b	CONCENTRIC_RINGS
c	dgi	net/minecraft/world/level/levelgen/structure/placement/package-info
c	dgj	net/minecraft/world/level/levelgen/structure/pools/EmptyPoolElement
	m	()Ldgr;	a	getType
	m	(Ldhr;Lcbn;Lcbm;Lcqr;Lgj;Lgj;Lcjm;Ldeo;Ljava/util/Random;Z)Z	a	place
	m	(Ldhr;Lcjm;)Lhh;	a	getSize
	m	(Ldhr;Lgj;Lcjm;)Ldeo;	a	getBoundingBox
	m	(Ldhr;Lgj;Lcjm;Ljava/util/Random;)Ljava/util/List;	a	getShuffledJigsawBlocks
	m	()Ldgj;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgj;	b	INSTANCE
c	dgk	net/minecraft/world/level/levelgen/structure/pools/FeaturePoolElement
	m	()Ldgr;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldgk;)Lgs;	a	lambda$static$0
	m	(Ldhr;Lcbn;Lcbm;Lcqr;Lgj;Lgj;Lcjm;Ldeo;Ljava/util/Random;Z)Z	a	place
	m	(Ldhr;Lcjm;)Lhh;	a	getSize
	m	(Ldhr;Lgj;Lcjm;)Ldeo;	a	getBoundingBox
	m	(Ldhr;Lgj;Lcjm;Ljava/util/Random;)Ljava/util/List;	a	getShuffledJigsawBlocks
	m	()Lok;	b	fillDefaultJigsawNBT
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgs;	b	feature
	f	Lok;	c	defaultJigsawNBT
c	dgl	net/minecraft/world/level/levelgen/structure/pools/JigsawJunction
	m	()I	a	getSourceX
	m	(Lcom/mojang/serialization/Dynamic;)Ldgl;	a	deserialize
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	serialize
	m	()I	b	getSourceGroundY
	m	()I	c	getSourceZ
	m	()I	d	getDeltaY
	m	()Ldgs$a;	e	getDestProjection
	f	I	a	sourceX
	f	I	b	sourceGroundY
	f	I	c	sourceZ
	f	I	d	deltaY
	f	Ldgs$a;	e	destProjection
c	dgm	net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement
	m	(Ldfe;Ldad;IIILhb;Ldgm$a;Lcqr;Ldhr;Lcuv;Ldeo;ZLcax;Ldgb;Ldfw$a;)V	a	lambda$addPieces$0
	m	(Ldfx$a;Ldgm$a;Lgj;ZZ)Ljava/util/Optional;	a	addPieces
	m	(Lhc;Ldfe;ILdgm$a;Lcqr;Ldhr;Ljava/util/List;Ljava/util/Random;Lcax;)V	a	addPieces
	f	Lorg/slf4j/Logger;	a	LOGGER
c	dgm$a	net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$PieceFactory
c	dgm$b	net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$PieceState
	f	Ldfe;	a	piece
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	b	free
	f	I	c	depth
c	dgm$c	net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$Placer
	m	(Ldeo;Ldhw$c;)I	a	lambda$tryPlacingChildren$3
	m	(Ldfe;Lorg/apache/commons/lang3/mutable/MutableObject;IZLcax;)V	a	tryPlacingChildren
	m	(Ldgs;)Ljava/lang/Integer;	a	lambda$tryPlacingChildren$2
	m	(Ldgs;)Ljava/lang/Integer;	b	lambda$tryPlacingChildren$1
	m	(Ldgs;)Ljava/util/Optional;	c	lambda$tryPlacingChildren$0
	f	Lhb;	a	pools
	f	I	b	maxDepth
	f	Ldgm$a;	c	factory
	f	Lcqr;	d	chunkGenerator
	f	Ldhr;	e	structureManager
	f	Ljava/util/List;	f	pieces
	f	Ljava/util/Random;	g	random
	f	Ljava/util/Deque;	h	placing
c	dgn	net/minecraft/world/level/levelgen/structure/pools/LegacySinglePoolElement
	m	()Ldgr;	a	getType
	m	(Lcjm;Ldeo;Z)Ldhs;	a	getSettings
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dgo	net/minecraft/world/level/levelgen/structure/pools/ListPoolElement
	m	()Ldgr;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldgo;)Ljava/util/List;	a	lambda$static$0
	m	(Ldgq;)Z	a	lambda$getBoundingBox$2
	m	(Ldgs$a;)Ldgq;	a	setProjection
	m	(Ldgs$a;Ldgq;)V	a	lambda$setProjectionOnEachElement$5
	m	(Ldhr;Lcbn;Lcbm;Lcqr;Lgj;Lgj;Lcjm;Ldeo;Ljava/util/Random;Z)Z	a	place
	m	(Ldhr;Lcjm;)Lhh;	a	getSize
	m	(Ldhr;Lgj;Lcjm;)Ldeo;	a	getBoundingBox
	m	(Ldhr;Lgj;Lcjm;Ldgq;)Ldeo;	a	lambda$getBoundingBox$3
	m	(Ldhr;Lgj;Lcjm;Ljava/util/Random;)Ljava/util/List;	a	getShuffledJigsawBlocks
	m	()Ljava/lang/IllegalStateException;	b	lambda$getBoundingBox$4
	m	(Ldgs$a;)V	b	setProjectionOnEachElement
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	elements
c	dgp	net/minecraft/world/level/levelgen/structure/pools/SinglePoolElement
	m	()Ldgr;	a	getType
	m	(Lcjm;Ldeo;Z)Ldhs;	a	getSettings
	m	(Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encodeTemplate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldgp;)Lcom/mojang/datafixers/util/Either;	a	lambda$templateCodec$2
	m	(Ldhr;)Ldhw;	a	getTemplate
	m	(Ldhr;Lcbn;Lcbm;Lcqr;Lgj;Lgj;Lcjm;Ldeo;Ljava/util/Random;Z)Z	a	place
	m	(Ldhr;Lcjm;)Lhh;	a	getSize
	m	(Ldhr;Lgj;Lcjm;)Ldeo;	a	getBoundingBox
	m	(Ldhr;Lgj;Lcjm;Ljava/util/Random;)Ljava/util/List;	a	getShuffledJigsawBlocks
	m	(Ldhr;Lgj;Lcjm;Z)Ljava/util/List;	a	getDataMarkers
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	b	processorsCodec
	m	(Ldgp;)Lgs;	b	lambda$processorsCodec$1
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	c	templateCodec
	f	Lcom/mojang/serialization/Codec;	a	TEMPLATE_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/datafixers/util/Either;	c	template
	f	Lgs;	d	processors
c	dgq	net/minecraft/world/level/levelgen/structure/pools/StructurePoolElement
	m	()Ldgr;	a	getType
	m	(Lcaw;Ldhw$c;Lgj;Lcjm;Ljava/util/Random;Ldeo;)V	a	handleDataMarker
	m	(Ldgs$a;)Ldgq;	a	setProjection
	m	(Ldgs$a;Ljava/util/function/Function;)Ldgq;	a	lambda$list$6
	m	(Ldhr;Lcbn;Lcbm;Lcqr;Lgj;Lgj;Lcjm;Ldeo;Ljava/util/Random;Z)Z	a	place
	m	(Ldhr;Lcjm;)Lhh;	a	getSize
	m	(Ldhr;Lgj;Lcjm;)Ldeo;	a	getBoundingBox
	m	(Ldhr;Lgj;Lcjm;Ljava/util/Random;)Ljava/util/List;	a	getShuffledJigsawBlocks
	m	(Lgs;)Ljava/util/function/Function;	a	feature
	m	(Lgs;Ldgs$a;)Ldgk;	a	lambda$feature$5
	m	(Ljava/lang/String;)Ljava/util/function/Function;	a	legacy
	m	(Ljava/lang/String;Ldgs$a;)Ldgp;	a	lambda$single$3
	m	(Ljava/lang/String;Lgs;)Ljava/util/function/Function;	a	legacy
	m	(Ljava/lang/String;Lgs;Ldgs$a;)Ldgp;	a	lambda$single$4
	m	(Ljava/util/List;)Ljava/util/function/Function;	a	list
	m	(Ljava/util/List;Ldgs$a;)Ldgo;	a	lambda$list$7
	m	(Ldgs$a;)Ldgj;	b	lambda$empty$0
	m	(Ljava/lang/String;)Ljava/util/function/Function;	b	single
	m	(Ljava/lang/String;Ldgs$a;)Ldgn;	b	lambda$legacy$1
	m	(Ljava/lang/String;Lgs;)Ljava/util/function/Function;	b	single
	m	(Ljava/lang/String;Lgs;Ldgs$a;)Ldgn;	b	lambda$legacy$2
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	d	projectionCodec
	m	()Ldgs$a;	e	getProjection
	m	()I	f	getGroundLevelDelta
	m	()Ljava/util/function/Function;	g	empty
	f	Ldgs$a;	a	projection
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	dgr	net/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldgr;	a	register
	f	Ldgr;	a	SINGLE
	f	Ldgr;	b	LIST
	f	Ldgr;	c	FEATURE
	f	Ldgr;	d	EMPTY
	f	Ldgr;	e	LEGACY
c	dgs	net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool
	m	()Lyt;	a	getFallback
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldgq;)Z	a	lambda$getMaxSize$2
	m	(Ldgs;)Ljava/util/List;	a	lambda$static$0
	m	(Ldhr;)I	a	getMaxSize
	m	(Ldhr;Ldgq;)I	a	lambda$getMaxSize$3
	m	(Ljava/util/Random;)Ldgq;	a	getRandomTemplate
	m	()Lyt;	b	getName
	m	(Ljava/util/Random;)Ljava/util/List;	b	getShuffledTemplates
	m	()I	c	size
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	SIZE_UNSET
	f	Lyt;	e	name
	f	Ljava/util/List;	f	rawTemplates
	f	Ljava/util/List;	g	templates
	f	Lyt;	h	fallback
	f	I	i	maxSize
c	dgs$a	net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection
	m	()Ljava/lang/String;	a	getName
	m	(Ldgs$a;)Ldgs$a;	a	lambda$static$0
	m	(Ljava/lang/String;)Ldgs$a;	a	byName
	m	()Lcom/google/common/collect/ImmutableList;	b	getProcessors
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldgs$a;	d	$values
	f	Ldgs$a;	a	TERRAIN_MATCHING
	f	Ldgs$a;	b	RIGID
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/util/Map;	d	BY_NAME
	f	Ljava/lang/String;	e	name
	f	Lcom/google/common/collect/ImmutableList;	f	processors
	f	[Ldgs$a;	g	$VALUES
c	dgt	net/minecraft/world/level/levelgen/structure/pools/package-info
c	dgu	net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest
	m	()Ldhq;	a	getType
	m	(Lcov;Ljava/util/Random;)Z	a	test
	m	()Ldgu;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgu;	b	INSTANCE
c	dgv	net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest
	m	()Ldhj;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Ldgv;)Lgo$a;	a	lambda$static$4
	m	(Lgj;Lgj;Lgj;Ljava/util/Random;)Z	a	test
	m	(Ldgv;)Ljava/lang/Integer;	b	lambda$static$3
	m	(Ldgv;)Ljava/lang/Integer;	c	lambda$static$2
	m	(Ldgv;)Ljava/lang/Float;	d	lambda$static$1
	m	(Ldgv;)Ljava/lang/Float;	e	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	minChance
	f	F	d	maxChance
	f	I	e	minDist
	f	I	f	maxDist
	f	Lgo$a;	g	axis
c	dgw	net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor
	m	()Ldhv;	a	getType
	m	(Lcay;Lgj;Lgj;Ldhw$c;Ldhw$c;Ldhs;)Ldhw$c;	a	processBlock
	m	(Ljava/util/HashMap;)V	a	lambda$new$1
	m	()Ldgw;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgw;	b	INSTANCE
	f	Ljava/util/Map;	c	replacements
c	dgx	net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor
	m	()Ldhv;	a	getType
	m	(Lcay;Lgj;Lgj;Ldhw$c;Ldhw$c;Ldhs;)Ldhw$c;	a	processBlock
	m	(Ldgx;)Ljava/lang/Float;	a	lambda$static$0
	m	(Ljava/util/Random;)Lcov;	a	maybeReplaceFullStoneBlock
	m	(Ljava/util/Random;Lcdq;)Lcov;	a	getRandomFacingStairs
	m	(Ljava/util/Random;Lcov;)Lcov;	a	maybeReplaceStairs
	m	(Ljava/util/Random;[Lcov;)Lcov;	a	getRandomBlock
	m	(Ljava/util/Random;[Lcov;[Lcov;)Lcov;	a	getRandomBlock
	m	(Ljava/util/Random;)Lcov;	b	maybeReplaceSlab
	m	(Ljava/util/Random;)Lcov;	c	maybeReplaceWall
	m	(Ljava/util/Random;)Lcov;	d	maybeReplaceObsidian
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	PROBABILITY_OF_REPLACING_FULL_BLOCK
	f	F	c	PROBABILITY_OF_REPLACING_STAIRS
	f	F	d	PROBABILITY_OF_REPLACING_OBSIDIAN
	f	[Lcov;	e	NON_MOSSY_REPLACEMENTS
	f	F	f	mossiness
c	dgy	net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor
	m	()Ldhv;	a	getType
	m	(Lcay;Lgj;Lgj;Ldhw$c;Ldhw$c;Ldhs;)Ldhw$c;	a	processBlock
	m	(Ldgy;)Ljava/util/List;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgy;	b	STRUCTURE_BLOCK
	f	Ldgy;	c	AIR
	f	Ldgy;	d	STRUCTURE_AND_AIR
	f	Lcom/google/common/collect/ImmutableList;	e	toIgnore
c	dgz	net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest
	m	()Ldhq;	a	getType
	m	(Lcov;Ljava/util/Random;)Z	a	test
	m	(Ldgz;)Lcdq;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcdq;	b	block
c	dha	net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor
	m	()Ldhv;	a	getType
	m	(Lcay;Lgj;Lgj;Ldhw$c;Ldhw$c;Ldhs;)Ldhw$c;	a	processBlock
	m	(Ldha;)Ljava/lang/Float;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	integrity
c	dhb	net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest
	m	()Ldhq;	a	getType
	m	(Lcov;Ljava/util/Random;)Z	a	test
	m	(Ldhb;)Lcov;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcov;	b	blockState
c	dhc	net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor
	m	()Ldhv;	a	getType
	m	(Lcay;Lgj;Lgj;Ldhw$c;Ldhw$c;Ldhs;)Ldhw$c;	a	processBlock
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldhc;)Ljava/lang/Integer;	a	lambda$static$1
	m	(Ldhc;)Lctw$a;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lctw$a;	b	heightmap
	f	I	c	offset
c	dhd	net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor
	m	()Ldhv;	a	getType
	m	(Lcay;Lgj;Lgj;Ldhw$c;Ldhw$c;Ldhs;)Ldhw$c;	a	processBlock
	m	()Ldhd;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldhd;	b	INSTANCE
c	dhe	net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor
	m	()Ldhv;	a	getType
	m	(Lcay;Lgj;Lgj;Ldhw$c;Ldhw$c;Ldhs;)Ldhw$c;	a	processBlock
	m	()Ldhe;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldhe;	b	INSTANCE
c	dhf	net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest
	m	()Ldhj;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Ldhf;)Ljava/lang/Integer;	a	lambda$static$3
	m	(Lgj;Lgj;Lgj;Ljava/util/Random;)Z	a	test
	m	(Ldhf;)Ljava/lang/Integer;	b	lambda$static$2
	m	(Ldhf;)Ljava/lang/Float;	c	lambda$static$1
	m	(Ldhf;)Ljava/lang/Float;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	minChance
	f	F	d	maxChance
	f	I	e	minDist
	f	I	f	maxDist
c	dhg	net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor
	m	()Ldhv;	a	getType
	m	(Lcay;Lgj;Lgj;Ldhw$c;Ldhw$c;Ldhs;)Ldhw$c;	a	processBlock
	m	()Ldhg;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldhg;	b	INSTANCE
c	dhh	net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest
	m	()Ldhj;	a	getType
	m	(Lgj;Lgj;Lgj;Ljava/util/Random;)Z	a	test
	m	()Ldhh;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldhh;	b	INSTANCE
c	dhi	net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest
	m	()Ldhj;	a	getType
	m	(Lgj;Lgj;Lgj;Ljava/util/Random;)Z	a	test
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dhj	net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldhj;	a	register
	f	Ldhj;	a	ALWAYS_TRUE_TEST
	f	Ldhj;	b	LINEAR_POS_TEST
	f	Ldhj;	c	AXIS_ALIGNED_LINEAR_POS_TEST
c	dhk	net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule
	m	()Lcov;	a	getOutputState
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Lcov;Lcov;Lgj;Lgj;Lgj;Ljava/util/Random;)Z	a	test
	m	(Ldhk;)Ljava/util/Optional;	a	lambda$static$4
	m	()Lok;	b	getOutputTag
	m	(Ldhk;)Lcov;	b	lambda$static$3
	m	(Ldhk;)Ldhi;	c	lambda$static$2
	m	(Ldhk;)Ldhp;	d	lambda$static$1
	m	(Ldhk;)Ldhp;	e	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldhp;	b	inputPredicate
	f	Ldhp;	c	locPredicate
	f	Ldhi;	d	posPredicate
	f	Lcov;	e	outputState
	f	Lok;	f	outputTag
c	dhl	net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor
	m	()Ldhv;	a	getType
	m	(Lcay;Lgj;Lgj;Ldhw$c;Ldhw$c;Ldhs;)Ldhw$c;	a	processBlock
	m	(Ldhl;)Laif;	a	lambda$static$0
	f	Laif;	a	cannotReplace
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dhm	net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest
	m	()Ldhq;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lcov;Ljava/util/Random;)Z	a	test
	m	(Ldhm;)Ljava/lang/Float;	a	lambda$static$1
	m	(Ldhm;)Lcdq;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcdq;	b	block
	f	F	d	probability
c	dhn	net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest
	m	()Ldhq;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lcov;Ljava/util/Random;)Z	a	test
	m	(Ldhn;)Ljava/lang/Float;	a	lambda$static$1
	m	(Ldhn;)Lcov;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcov;	b	blockState
	f	F	d	probability
c	dho	net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor
	m	()Ldhv;	a	getType
	m	(Lcay;Lgj;Lgj;Ldhw$c;Ldhw$c;Ldhs;)Ldhw$c;	a	processBlock
	m	(Ldho;)Ljava/util/List;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/google/common/collect/ImmutableList;	b	rules
c	dhp	net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest
	m	()Ldhq;	a	getType
	m	(Lcov;Ljava/util/Random;)Z	a	test
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dhq	net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldhq;	a	register
	f	Ldhq;	a	ALWAYS_TRUE_TEST
	f	Ldhq;	b	BLOCK_TEST
	f	Ldhq;	c	BLOCKSTATE_TEST
	f	Ldhq;	d	TAG_TEST
	f	Ldhq;	e	RANDOM_BLOCK_TEST
	f	Ldhq;	f	RANDOM_BLOCKSTATE_TEST
c	dhr	net/minecraft/world/level/levelgen/structure/templatesystem/StructureManager
	m	(Laga;)V	a	onResourceManagerReload
	m	(Ljava/io/InputStream;)Ldhw;	a	readStructure
	m	(Lok;)Ldhw;	a	readStructure
	m	(Lyt;)Ldhw;	a	getOrCreate
	m	(Lyt;Ljava/lang/String;)Ljava/nio/file/Path;	a	createPathToStructure
	m	(Lyt;)Ljava/util/Optional;	b	get
	m	(Lyt;Ljava/lang/String;)Ljava/nio/file/Path;	b	createAndValidatePathToStructure
	m	(Lyt;)Z	c	save
	m	(Lyt;)V	d	remove
	m	(Lyt;)Ljava/util/Optional;	e	loadFromResource
	m	(Lyt;)Ljava/util/Optional;	f	loadFromGenerated
	m	(Lyt;)Ljava/util/Optional;	g	lambda$get$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	STRUCTURE_DIRECTORY_NAME
	f	Ljava/lang/String;	c	STRUCTURE_FILE_EXTENSION
	f	Ljava/lang/String;	d	STRUCTURE_TEXT_FILE_EXTENSION
	f	Ljava/util/Map;	e	structureRepository
	f	Lcom/mojang/datafixers/DataFixer;	f	fixerUpper
	f	Laga;	g	resourceManager
	f	Ljava/nio/file/Path;	h	generatedDir
c	dhs	net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings
	m	()Ldhs;	a	copy
	m	(Lchz;)Ldhs;	a	setMirror
	m	(Lcjm;)Ldhs;	a	setRotation
	m	(Ldeo;)Ldhs;	a	setBoundingBox
	m	(Ldht;)Ldhs;	a	addProcessor
	m	(Lgj;)Ldhs;	a	setRotationPivot
	m	(Ljava/util/List;Lgj;)Ldhw$a;	a	getRandomPalette
	m	(Ljava/util/Random;)Ldhs;	a	setRandom
	m	(Z)Ldhs;	a	setIgnoreEntities
	m	()Ldhs;	b	clearProcessors
	m	(Ldht;)Ldhs;	b	popProcessor
	m	(Lgj;)Ljava/util/Random;	b	getRandom
	m	(Z)Ldhs;	b	setKeepLiquids
	m	()Lchz;	c	getMirror
	m	(Z)Ldhs;	c	setKnownShape
	m	()Lcjm;	d	getRotation
	m	(Z)Ldhs;	d	setFinalizeEntities
	m	()Lgj;	e	getRotationPivot
	m	()Z	f	isIgnoreEntities
	m	()Ldeo;	g	getBoundingBox
	m	()Z	h	getKnownShape
	m	()Ljava/util/List;	i	getProcessors
	m	()Z	j	shouldKeepLiquids
	m	()Z	k	shouldFinalizeEntities
	f	Lchz;	a	mirror
	f	Lcjm;	b	rotation
	f	Lgj;	c	rotationPivot
	f	Z	d	ignoreEntities
	f	Ldeo;	e	boundingBox
	f	Z	f	keepLiquids
	f	Ljava/util/Random;	g	random
	f	I	h	palette
	f	Ljava/util/List;	i	processors
	f	Z	j	knownShape
	f	Z	k	finalizeEntities
c	dht	net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor
	m	()Ldhv;	a	getType
	m	(Lcay;Lgj;Lgj;Ldhw$c;Ldhw$c;Ldhs;)Ldhw$c;	a	processBlock
c	dhu	net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList
	m	()Ljava/util/List;	a	list
	f	Ljava/util/List;	a	list
c	dhv	net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType
	m	(Lcom/mojang/datafixers/util/Either;)Ldhu;	a	lambda$static$2
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$3
	m	(Ldhu;)Ldhu;	a	lambda$static$1
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldhv;	a	register
	m	(Ldhu;)Ldhu;	b	lambda$static$0
	f	Ldhv;	a	BLOCK_IGNORE
	f	Ldhv;	b	BLOCK_ROT
	f	Ldhv;	c	GRAVITY
	f	Ldhv;	d	JIGSAW_REPLACEMENT
	f	Ldhv;	e	RULE
	f	Ldhv;	f	NOP
	f	Ldhv;	g	BLOCK_AGE
	f	Ldhv;	h	BLACKSTONE_REPLACE
	f	Ldhv;	i	LAVA_SUBMERGED_BLOCK
	f	Ldhv;	j	PROTECTED_BLOCKS
	f	Lcom/mojang/serialization/Codec;	k	SINGLE_CODEC
	f	Lcom/mojang/serialization/Codec;	l	LIST_OBJECT_CODEC
	f	Lcom/mojang/serialization/Codec;	m	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	n	LIST_CODEC
c	dhw	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate
	m	()Lhh;	a	getSize
	m	(IIILcaw;ILgo;III)V	a	lambda$updateShapeAtEdge$4
	m	(Laxk;)Z	a	lambda$fillEntityList$3
	m	(Lcav;Lgj;Lgj;)V	a	fillEntityList
	m	(Lcav;Lgj;Lhh;ZLcdq;)V	a	fillFromWorld
	m	(Lcaw;ILdpx;III)V	a	updateShapeAtEdge
	m	(Lcaw;Lgj;Lgj;Ldhs;Ljava/util/List;)Ljava/util/List;	a	processBlockInfos
	m	(Lcbk;Lgj;Lchz;Lcjm;Lgj;Ldeo;Z)V	a	placeEntities
	m	(Lcbk;Lgj;Lgj;Ldhs;Ljava/util/Random;I)Z	a	placeInWorld
	m	(Lcbk;Lok;)Ljava/util/Optional;	a	createEntityIgnoreException
	m	(Lcjm;)Lhh;	a	getSize
	m	(Lcjm;Lchz;Ldpo;ZLcbk;Lok;Laxk;)V	a	lambda$placeEntities$5
	m	(Ldhs;Lgj;)Lgj;	a	calculateRelativePosition
	m	(Ldhs;Lgj;Ldhs;Lgj;)Lgj;	a	calculateConnectedPosition
	m	(Ldhw$c;)I	a	lambda$buildInfoList$2
	m	(Ldhw$c;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V	a	addToLists
	m	(Ldpo;Lchz;Lcjm;Lgj;)Ldpo;	a	transform
	m	(Lgj;Lchz;Lcjm;)Lgj;	a	getZeroPositionWithTransform
	m	(Lgj;Lchz;Lcjm;II)Lgj;	a	getZeroPositionWithTransform
	m	(Lgj;Lchz;Lcjm;Lgj;)Lgj;	a	transform
	m	(Lgj;Lcjm;Lgj;Lchz;)Ldeo;	a	getBoundingBox
	m	(Lgj;Lcjm;Lgj;Lchz;Lhh;)Ldeo;	a	getBoundingBox
	m	(Lgj;Ldhs;Lcdq;)Ljava/util/List;	a	filterBlocks
	m	(Lgj;Ldhs;Lcdq;Z)Ljava/util/List;	a	filterBlocks
	m	(Ljava/lang/String;)V	a	setAuthor
	m	(Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	buildInfoList
	m	(Lok;)Lok;	a	save
	m	(Loq;Loq;)V	a	loadPalette
	m	([D)Loq;	a	newDoubleList
	m	([I)Loq;	a	newIntegerList
	m	()Ljava/lang/String;	b	getAuthor
	m	(Ldhs;Lgj;)Ldeo;	b	getBoundingBox
	m	(Ldhw$c;)I	b	lambda$buildInfoList$1
	m	(Lok;)V	b	load
	m	(Ldhw$c;)I	c	lambda$buildInfoList$0
	f	Ljava/lang/String;	a	PALETTE_TAG
	f	Ljava/lang/String;	b	PALETTE_LIST_TAG
	f	Ljava/lang/String;	c	ENTITIES_TAG
	f	Ljava/lang/String;	d	BLOCKS_TAG
	f	Ljava/lang/String;	e	BLOCK_TAG_POS
	f	Ljava/lang/String;	f	BLOCK_TAG_STATE
	f	Ljava/lang/String;	g	BLOCK_TAG_NBT
	f	Ljava/lang/String;	h	ENTITY_TAG_POS
	f	Ljava/lang/String;	i	ENTITY_TAG_BLOCKPOS
	f	Ljava/lang/String;	j	ENTITY_TAG_NBT
	f	Ljava/lang/String;	k	SIZE_TAG
	f	I	l	CHUNK_SIZE
	f	Ljava/util/List;	m	palettes
	f	Ljava/util/List;	n	entityInfoList
	f	Lhh;	o	size
	f	Ljava/lang/String;	p	author
c	dhw$1	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	dhw$a	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette
	m	()Ljava/util/List;	a	blocks
	m	(Lcdq;)Ljava/util/List;	a	blocks
	m	(Lcdq;Ldhw$c;)Z	a	lambda$blocks$0
	m	(Lcdq;)Ljava/util/List;	b	lambda$blocks$1
	f	Ljava/util/List;	a	blocks
	f	Ljava/util/Map;	b	cache
c	dhw$b	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette
	m	(I)Lcov;	a	stateFor
	m	(Lcov;)I	a	idFor
	m	(Lcov;I)V	a	addMapping
	f	Lcov;	a	DEFAULT_BLOCK_STATE
	f	Lgv;	b	ids
	f	I	c	lastId
c	dhw$c	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo
	f	Lgj;	a	pos
	f	Lcov;	b	state
	f	Lok;	c	nbt
c	dhw$d	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo
	f	Ldpo;	a	pos
	f	Lgj;	b	blockPos
	f	Lok;	c	nbt
c	dhx	net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest
	m	()Ldhq;	a	getType
	m	(Lcov;Ljava/util/Random;)Z	a	test
	m	(Ldhx;)Laif;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laif;	b	tag
c	dhy	net/minecraft/world/level/levelgen/structure/templatesystem/package-info
c	dhz	net/minecraft/world/level/levelgen/synth/BlendedNoise
	m	()D	a	minValue
	m	(Lctp$b;)D	a	compute
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
	m	()D	b	maxValue
	m	()Lcom/mojang/serialization/Codec;	c	codec
	f	Ldhz;	a	UNSEEDED
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ldid;	f	minLimitNoise
	f	Ldid;	g	maxLimitNoise
	f	Ldid;	h	mainNoise
	f	D	i	xzScale
	f	D	j	yScale
	f	D	k	xzMainScale
	f	D	l	yMainScale
	f	I	m	cellWidth
	f	I	n	cellHeight
	f	D	o	maxValue
c	dia	net/minecraft/world/level/levelgen/synth/ImprovedNoise
	m	(DDD)D	a	noise
	m	(DDDDD)D	a	noise
	m	(DDD[D)D	a	noiseWithDerivative
	m	(I)I	a	p
	m	(IDDD)D	a	gradDot
	m	(IIIDDDD)D	a	sampleAndLerp
	m	(IIIDDD[D)D	a	sampleWithDerivative
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
	f	D	a	xo
	f	D	b	yo
	f	D	c	zo
	f	F	d	SHIFT_UP_EPSILON
	f	[B	e	p
c	dib	net/minecraft/world/level/levelgen/synth/NoiseUtils
	m	(DD)D	a	biasTowardsExtreme
	m	(Ljava/lang/StringBuilder;DDD[B)V	a	parityNoiseOctaveConfigString
	m	(Ljava/lang/StringBuilder;DDD[I)V	a	parityNoiseOctaveConfigString
c	dic	net/minecraft/world/level/levelgen/synth/NormalNoise
	m	()D	a	maxValue
	m	(DDD)D	a	getValue
	m	(I)D	a	expectedDeviation
	m	(Lcun;I[D)Ldic;	a	create
	m	(Lcun;Ldic$a;)Ldic;	a	createLegacyNetherBiome
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
	m	()Ldic$a;	b	parameters
	m	(Lcun;Ldic$a;)Ldic;	b	create
	f	D	a	INPUT_FACTOR
	f	D	b	TARGET_DEVIATION
	f	D	c	valueFactor
	f	Ldid;	d	first
	f	Ldid;	e	second
	f	D	f	maxValue
	f	Ldic$a;	g	parameters
c	dic$a	net/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters
	m	()I	a	firstOctave
	m	(DLit/unimi/dsi/fastutil/doubles/DoubleArrayList;)V	a	lambda$new$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	amplitudes
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	c	firstOctave
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	amplitudes
c	did	net/minecraft/world/level/levelgen/synth/PerlinNoise
	m	()D	a	maxValue
	m	(D)D	a	maxBrokenValue
	m	(DDD)D	a	getValue
	m	(DDDDDZ)D	a	getValue
	m	(I)Ldia;	a	getOctaveNoise
	m	(Lcun;)V	a	skipOctave
	m	(Lcun;ID[D)Ldid;	a	create
	m	(Lcun;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Ldid;	a	createLegacyForLegacyNetherBiome
	m	(Lcun;Ljava/util/List;)Ldid;	a	create
	m	(Lcun;Ljava/util/stream/IntStream;)Ldid;	a	createLegacyForBlendedNoise
	m	(Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair;	a	makeAmplitudes
	m	(Ljava/lang/Double;)Ljava/lang/String;	a	lambda$parityConfigString$1
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
	m	()I	b	firstOctave
	m	(D)D	b	wrap
	m	(Lcun;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Ldid;	b	create
	m	(Lcun;Ljava/util/stream/IntStream;)Ldid;	b	create
	m	(Ljava/lang/Double;)Z	b	lambda$new$0
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	c	amplitudes
	m	(D)D	c	edgeValue
	f	I	a	ROUND_OFF
	f	[Ldia;	b	noiseLevels
	f	I	c	firstOctave
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	amplitudes
	f	D	e	lowestFreqValueFactor
	f	D	f	lowestFreqInputFactor
	f	D	g	maxValue
c	die	net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise
	m	(DDZ)D	a	getValue
	f	[Ldif;	a	noiseLevels
	f	D	b	highestFreqValueFactor
	f	D	c	highestFreqInputFactor
c	dif	net/minecraft/world/level/levelgen/synth/SimplexNoise
	m	(DD)D	a	getValue
	m	(DDD)D	a	getValue
	m	(I)I	a	p
	m	(IDDDD)D	a	getCornerNoise3D
	m	([IDDD)D	a	dot
	f	[[I	a	GRADIENT
	f	D	b	xo
	f	D	c	yo
	f	D	d	zo
	f	D	e	SQRT_3
	f	D	f	F2
	f	D	g	G2
	f	[I	h	p
c	dig	net/minecraft/world/level/levelgen/synth/package-info
c	dih	net/minecraft/world/level/lighting/BlockLightEngine
	m	(JIZ)V	a	checkNeighborsAfterUpdate
	m	(JJI)I	a	getComputedLevel
	m	(Lgj;I)V	a	onBlockEmissionIncrease
	m	(JJI)I	b	computeLevelFromNeighbor
	m	(J)I	d	getLightEmission
	f	[Lgo;	f	DIRECTIONS
	f	Lgj$a;	g	pos
c	dii	net/minecraft/world/level/lighting/BlockLightSectionStorage
	m	(J)I	d	getLightValue
c	dii$a	net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap
	m	()Ldii$a;	a	copy
	m	()Ldij;	b	copy
c	dij	net/minecraft/world/level/lighting/DataLayerStorageMap
	m	(J)V	a	copyDataLayer
	m	(JLcqu;)V	a	setLayer
	m	()Ldij;	b	copy
	m	(J)Z	b	hasLayer
	m	()V	c	clearCache
	m	(J)Lcqu;	c	getLayer
	m	()V	d	disableCache
	m	(J)Lcqu;	d	removeLayer
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	a	map
	f	I	b	CACHE_SIZE
	f	[J	c	lastSectionKeys
	f	[Lcqu;	d	lastSections
	f	Z	e	cacheEnabled
c	dik	net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint
	m	(I)V	a	checkFirstQueuedLevel
	m	(II)I	a	getKey
	m	(J)Z	a	isSource
	m	(JI)V	a	setLevel
	m	(JII)V	a	enqueue
	m	(JIIZ)V	a	dequeue
	m	(JIZ)V	a	checkNeighborsAfterUpdate
	m	(JJI)I	a	getComputedLevel
	m	(JJIIIZ)V	a	checkEdge
	m	(JJIZ)V	a	checkEdge
	m	(Ljava/util/function/LongPredicate;)V	a	removeIf
	m	(Ljava/util/function/LongPredicate;Lit/unimi/dsi/fastutil/longs/LongList;J)V	a	lambda$removeIf$0
	m	()Z	b	hasWork
	m	(I)I	b	runUpdates
	m	(JJI)I	b	computeLevelFromNeighbor
	m	(JJIZ)V	b	checkNeighbor
	m	()I	c	getQueueSize
	m	(J)I	c	getLevel
	m	(J)V	e	removeFromQueue
	m	(J)V	f	checkNode
	f	I	a	NO_COMPUTED_LEVEL
	f	I	b	levelCount
	f	[Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;	c	queues
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	d	computedLevels
	f	I	e	firstQueuedLevel
	f	Z	f	hasWork
c	dik$1	net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint$1
	f	I	a	val$minQueueSize
	f	Ldik;	b	this$0
c	dik$2	net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint$2
	f	I	a	val$minMapSize
	f	Ldik;	b	this$0
c	dil	net/minecraft/world/level/lighting/LayerLightEngine
	m	()Z	A_	hasLightWork
	m	(II)Lcab;	a	getChunk
	m	(IZZ)I	a	runUpdates
	m	(J)Z	a	isSource
	m	(JI)V	a	setLevel
	m	(JJI)I	a	getComputedLevel
	m	(JLcqu;Z)V	a	queueSectionData
	m	(JLorg/apache/commons/lang3/mutable/MutableInt;)Lcov;	a	getStateAndOpacity
	m	(Lcab;Lcov;Lgj;Lcov;Lgj;Lgo;I)I	a	getLightBlockInto
	m	(Lcac;Z)V	a	enableLightSources
	m	(Lcov;JLgo;)Ldqh;	a	getShape
	m	(Lcqu;J)I	a	getLevel
	m	(Lgj;)V	a	checkBlock
	m	(Lgj;I)V	a	onBlockEmissionIncrease
	m	(Lhf;)Lcqu;	a	getDataLayerData
	m	(Lhf;Z)V	a	updateSectionStatus
	m	(J)Ljava/lang/String;	b	getDebugData
	m	(JJI)I	b	computeLevelFromNeighbor
	m	(Lcac;Z)V	b	retainData
	m	(Lgj;)I	b	getLightValue
	m	(J)I	c	getLevel
	m	()V	d	clearCache
	m	(J)V	f	checkNode
	f	J	a	SELF_SOURCE
	f	Lcrc;	b	chunkSource
	f	Lcbe;	c	layer
	f	Ldin;	d	storage
	f	Lgj$a;	e	pos
	f	[Lgo;	f	DIRECTIONS
	f	Z	g	runningLightUpdates
	f	I	h	CACHE_SIZE
	f	[J	i	lastChunkPos
	f	[Lcab;	j	lastChunk
c	dim	net/minecraft/world/level/lighting/LayerLightEventListener
	m	(Lhf;)Lcqu;	a	getDataLayerData
	m	(Lgj;)I	b	getLightValue
c	dim$a	net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener
	m	()Z	A_	hasLightWork
	m	(IZZ)I	a	runUpdates
	m	(Lcac;Z)V	a	enableLightSources
	m	(Lgj;)V	a	checkBlock
	m	(Lgj;I)V	a	onBlockEmissionIncrease
	m	(Lhf;)Lcqu;	a	getDataLayerData
	m	(Lhf;Z)V	a	updateSectionStatus
	m	()[Ldim$a;	b	$values
	m	(Lgj;)I	b	getLightValue
	f	Ldim$a;	a	INSTANCE
	f	[Ldim$a;	b	$VALUES
c	din	net/minecraft/world/level/lighting/LayerLightSectionStorage
	m	()Z	a	hasInconsistencies
	m	(JI)V	a	setLevel
	m	(JJ)Z	a	lambda$clearQueuedSectionBlocks$0
	m	(JLcqu;Z)V	a	queueSectionData
	m	(JZ)Lcqu;	a	getDataLayer
	m	(Ldij;J)Lcqu;	a	getDataLayer
	m	(Ldil;J)V	a	clearQueuedSectionBlocks
	m	(Ldil;ZZ)V	a	markNewInconsistencies
	m	(J)I	b	getLevelFromSource
	m	(JI)V	b	setStoredLevel
	m	(JZ)V	b	enableLightSources
	m	(Ldil;J)V	b	checkEdgesForSection
	m	(J)I	c	getLevel
	m	(JZ)V	c	retainData
	m	()V	d	runAllUpdates
	m	(J)I	d	getLightValue
	m	(JZ)V	d	updateSectionStatus
	m	()V	e	swapSectionMap
	m	(J)Z	g	storingLightForSection
	m	(J)Lcqu;	h	getDataLayerData
	m	(J)I	i	getStoredLevel
	m	(J)Lcqu;	j	createDataLayer
	m	(J)V	k	onNodeAdded
	m	(J)V	l	onNodeRemoved
	f	I	a	LIGHT_AND_DATA
	f	I	b	LIGHT_ONLY
	f	I	c	EMPTY
	f	Lcqu;	d	EMPTY_DATA
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	dataSectionSet
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	toMarkNoData
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	g	toMarkData
	f	Ldij;	h	visibleSectionData
	f	Ldij;	i	updatingSectionData
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	j	changedSections
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	k	sectionsAffectedByLightUpdates
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	l	queuedSections
	f	Z	m	hasToRemove
	f	[Lgo;	n	DIRECTIONS
	f	Lcbe;	o	layer
	f	Lcrc;	p	chunkSource
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	q	untrustedSections
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	r	columnsToRetainQueuedDataFor
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	s	toRemove
c	din$1	net/minecraft/world/level/lighting/LayerLightSectionStorage$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dio	net/minecraft/world/level/lighting/LevelLightEngine
	m	()Z	A_	hasLightWork
	m	(IZZ)I	a	runUpdates
	m	(Lcac;Z)V	a	enableLightSources
	m	(Lcbe;)Ldim;	a	getLayerListener
	m	(Lcbe;Lhf;)Ljava/lang/String;	a	getDebugData
	m	(Lcbe;Lhf;Lcqu;Z)V	a	queueSectionData
	m	(Lgj;)V	a	checkBlock
	m	(Lgj;I)V	a	onBlockEmissionIncrease
	m	(Lhf;Z)V	a	updateSectionStatus
	m	()I	b	getLightSectionCount
	m	(Lcac;Z)V	b	retainData
	m	(Lgj;I)I	b	getRawBrightness
	m	()I	c	getMinLightSection
	m	()I	d	getMaxLightSection
	f	I	a	MAX_SOURCE_LEVEL
	f	I	b	LIGHT_SECTION_PADDING
	f	Lcax;	c	levelHeightAccessor
	f	Ldil;	d	blockEngine
	f	Ldil;	e	skyEngine
c	dip	net/minecraft/world/level/lighting/LightEventListener
	m	()Z	A_	hasLightWork
	m	(IZZ)I	a	runUpdates
	m	(Lcac;Z)V	a	enableLightSources
	m	(Lgj;)V	a	checkBlock
	m	(Lgj;I)V	a	onBlockEmissionIncrease
	m	(Lgj;Z)V	a	updateSectionStatus
	m	(Lhf;Z)V	a	updateSectionStatus
c	diq	net/minecraft/world/level/lighting/SkyLightEngine
	m	(JIZ)V	a	checkNeighborsAfterUpdate
	m	(JJI)I	a	getComputedLevel
	m	(J)Ljava/lang/String;	b	getDebugData
	m	(JJI)I	b	computeLevelFromNeighbor
	m	(J)V	f	checkNode
	f	[Lgo;	f	DIRECTIONS
	f	[Lgo;	g	HORIZONTALS
c	dir	net/minecraft/world/level/lighting/SkyLightSectionStorage
	m	()Z	a	hasInconsistencies
	m	(I)Z	a	hasSectionsBelow
	m	(Lcqu;)Lcqu;	a	repeatFirstLayer
	m	(Ldil;ZZ)V	a	markNewInconsistencies
	m	(JZ)V	b	enableLightSources
	m	(J)I	d	getLightValue
	m	(JZ)I	e	getLightValue
	m	()V	f	recheckInconsistencyFlag
	m	(J)Lcqu;	j	createDataLayer
	m	(J)V	k	onNodeAdded
	m	(J)V	l	onNodeRemoved
	m	(J)Z	m	isAboveData
	m	(J)Z	n	lightOnInSection
	m	(J)V	o	queueRemoveSource
	m	(J)V	p	queueAddSource
	f	[Lgo;	n	HORIZONTALS
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	o	sectionsWithSources
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	p	sectionsToAddSourcesTo
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	q	sectionsToRemoveSourcesFrom
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	r	columnsWithSkySources
	f	Z	s	hasSourceInconsistencies
c	dir$1	net/minecraft/world/level/lighting/SkyLightSectionStorage$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dir$a	net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap
	m	()Ldir$a;	a	copy
	m	()Ldij;	b	copy
	f	I	b	currentLowestY
	f	Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;	c	topSections
c	dis	net/minecraft/world/level/lighting/SpatialLongSet
	f	Ldis$a;	a	map
c	dis$a	net/minecraft/world/level/lighting/SpatialLongSet$InternalMap
	m	()J	a	removeFirstBit
	m	(IJ)Z	a	replaceBit
	m	(J)J	a	getOuterKey
	m	(JI)J	a	getFullKey
	m	(IJ)Z	b	removeFromEntry
	m	(J)I	b	getInnerKey
	m	(J)Z	c	addBit
	m	(J)Z	d	removeBit
	m	(J)Z	e	removeFromNullEntry
	f	I	a	X_BITS
	f	I	b	Z_BITS
	f	I	c	Y_BITS
	f	I	d	Y_OFFSET
	f	I	e	Z_OFFSET
	f	I	g	X_OFFSET
	f	J	h	OUTER_MASK
	f	I	i	lastPos
	f	J	j	lastOuterKey
	f	I	k	minSize
c	dit	net/minecraft/world/level/lighting/package-info
c	diu	net/minecraft/world/level/material/EmptyFluid
	m	()Lbus;	a	getBucket
	m	(Lcab;Lgj;Ldix;)Ldpo;	a	getFlow
	m	(Lcay;)I	a	getTickDelay
	m	(Ldix;)F	a	getOwnHeight
	m	(Ldix;Lcab;Lgj;)F	a	getHeight
	m	(Ldix;Lcab;Lgj;Ldiw;Lgo;)Z	a	canBeReplacedWith
	m	()Z	b	isEmpty
	m	(Ldix;)Lcov;	b	createLegacyBlock
	m	(Ldix;Lcab;Lgj;)Ldqh;	b	getShape
	m	()F	c	getExplosionResistance
	m	(Ldix;)Z	c	isSource
	m	(Ldix;)I	d	getAmount
c	div	net/minecraft/world/level/material/FlowingFluid
	m	(IZ)Ldix;	a	getFlowing
	m	(Lcab;Ldiw;Lgj;Lcov;Lgj;Lcov;)Z	a	isWaterHole
	m	(Lcab;Ldiw;Lgj;Lcov;Lgo;Lgj;Lcov;Ldix;)Z	a	canPassThrough
	m	(Lcab;Lgj;Lcov;Ldiw;)Z	a	canHoldFluid
	m	(Lcab;Lgj;Lcov;Lgo;Lgj;Lcov;Ldix;Ldiw;)Z	a	canSpreadTo
	m	(Lcab;Lgj;Ldix;)Ldpo;	a	getFlow
	m	(Lcab;Lgj;Lgo;)Z	a	isSolidFace
	m	(Lcav;Lgj;Ldix;)V	a	tick
	m	(Lcav;Lgj;Ldix;Ldix;)I	a	getSpreadDelay
	m	(Lcaw;Lgj;Lcov;)V	a	beforeDestroyingBlock
	m	(Lcaw;Lgj;Lcov;Lgo;Ldix;)V	a	spreadTo
	m	(Lcaw;Lgj;Ldix;)V	a	spread
	m	(Lcaw;Lgj;Ldix;Lcov;)V	a	spreadToSides
	m	(Lcay;Lgj;)I	a	sourceNeighborCount
	m	(Lcay;Lgj;ILgo;Lcov;Lgj;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I	a	getSlopeDistance
	m	(Lcay;Lgj;Lcov;)Ldix;	a	getNewLiquid
	m	(Lcay;Lgj;Lgj;Lcov;S)Z	a	lambda$getSpread$4
	m	(Lcay;Lgj;S)Lcom/mojang/datafixers/util/Pair;	a	lambda$getSpread$3
	m	(Lcow$a;)V	a	createFluidStateDefinition
	m	(Ldix;)F	a	getOwnHeight
	m	(Ldix;Lcab;Lgj;)F	a	getHeight
	m	(Lgj;Lcay;Lcov;S)Z	a	lambda$getSlopeDistance$2
	m	(Lgj;Lgj;)S	a	getCacheKey
	m	(Lgo;Lcab;Lgj;Lcov;Lgj;Lcov;)Z	a	canPassThroughWall
	m	(Z)Ldix;	a	getSource
	m	(Lcab;Lgj;Ldix;)Ldqh;	b	lambda$getShape$5
	m	(Lcay;)I	b	getSlopeFindDistance
	m	(Lcay;Lgj;Lcov;)Ljava/util/Map;	b	getSpread
	m	(Lcay;Lgj;S)Lcom/mojang/datafixers/util/Pair;	b	lambda$getSlopeDistance$1
	m	(Ldix;Lcab;Lgj;)Ldqh;	b	getShape
	m	(Lcay;)I	c	getDropOff
	m	(Ldix;Lcab;Lgj;)Z	c	hasSameAbove
	m	()Ldiw;	d	getFlowing
	m	(Ldix;)I	d	getAmount
	m	()Ldiw;	e	getSource
	m	(Ldix;)I	e	getLegacyLevel
	m	()Z	f	canConvertToSource
	m	(Ldix;)Z	g	affectsFlow
	m	(Ldix;)Z	h	isSourceBlockOfThisType
	m	()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap;	m	lambda$static$0
	f	Lcpm;	a	FALLING
	f	Lcpv;	b	LEVEL
	f	I	e	CACHE_SIZE
	f	Ljava/lang/ThreadLocal;	f	OCCLUSION_CACHE
	f	Ljava/util/Map;	g	shapes
c	div$1	net/minecraft/world/level/material/FlowingFluid$1
c	diw	net/minecraft/world/level/material/Fluid
	m	()Lbus;	a	getBucket
	m	(Laif;)Z	a	is
	m	(Lcab;Lgj;Ldix;)Ldpo;	a	getFlow
	m	(Lcav;Lgj;Ldix;)V	a	tick
	m	(Lcav;Lgj;Ldix;Ljava/util/Random;)V	a	animateTick
	m	(Lcay;)I	a	getTickDelay
	m	(Lcow$a;)V	a	createFluidStateDefinition
	m	(Ldiw;)Z	a	isSame
	m	(Ldix;)F	a	getOwnHeight
	m	(Ldix;Lcab;Lgj;)F	a	getHeight
	m	(Ldix;Lcab;Lgj;Ldiw;Lgo;)Z	a	canBeReplacedWith
	m	()Z	b	isEmpty
	m	(Lcav;Lgj;Ldix;Ljava/util/Random;)V	b	randomTick
	m	(Ldix;)Lcov;	b	createLegacyBlock
	m	(Ldix;Lcab;Lgj;)Ldqh;	b	getShape
	m	()F	c	getExplosionResistance
	m	(Ldix;)Z	c	isSource
	m	(Ldix;)I	d	getAmount
	m	(Ldix;)V	f	registerDefaultState
	m	()Lcow;	g	getStateDefinition
	m	()Ldix;	h	defaultFluidState
	m	()Lia;	i	getDripParticle
	m	()Z	j	isRandomlyTicking
	m	()Ljava/util/Optional;	k	getPickupSound
	m	()Lgs$c;	l	builtInRegistryHolder
	f	Ldix;	a	defaultFluidState
	f	Lgs$c;	b	builtInRegistryHolder
	f	Lgv;	c	FLUID_STATE_REGISTRY
	f	Lcow;	d	stateDefinition
c	dix	net/minecraft/world/level/material/FluidState
	m	()Ldiw;	a	getType
	m	(Laif;)Z	a	is
	m	(Lcab;Lgj;)F	a	getHeight
	m	(Lcab;Lgj;Ldiw;Lgo;)Z	a	canBeReplacedWith
	m	(Lcav;Lgj;)V	a	tick
	m	(Lcav;Lgj;Ljava/util/Random;)V	a	animateTick
	m	(Ldiw;)Z	a	isSourceOfType
	m	(Lgt;)Z	a	is
	m	()Z	b	isSource
	m	(Lcab;Lgj;)Z	b	shouldRenderBackwardUpFace
	m	(Lcav;Lgj;Ljava/util/Random;)V	b	randomTick
	m	(Ldiw;)Z	b	is
	m	()Z	c	isEmpty
	m	(Lcab;Lgj;)Ldpo;	c	getFlow
	m	()F	d	getOwnHeight
	m	(Lcab;Lgj;)Ldqh;	d	getShape
	m	()I	e	getAmount
	m	()Z	f	isRandomlyTicking
	m	()Lcov;	g	createLegacyBlock
	m	()Lia;	h	getDripParticle
	m	()F	i	getExplosionResistance
	m	()Lgs;	j	holder
	m	()Ljava/util/stream/Stream;	k	getTags
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	AMOUNT_MAX
	f	I	g	AMOUNT_FULL
c	diy	net/minecraft/world/level/material/Fluids
	m	(Ljava/lang/String;Ldiw;)Ldiw;	a	register
	f	Ldiw;	a	EMPTY
	f	Ldiv;	b	FLOWING_WATER
	f	Ldiv;	c	WATER
	f	Ldiv;	d	FLOWING_LAVA
	f	Ldiv;	e	LAVA
c	diz	net/minecraft/world/level/material/FogType
	m	()[Ldiz;	a	$values
	f	Ldiz;	a	LAVA
	f	Ldiz;	b	WATER
	f	Ldiz;	c	POWDER_SNOW
	f	Ldiz;	d	NONE
	f	[Ldiz;	e	$VALUES
c	dja	net/minecraft/world/level/material/LavaFluid
	m	()Lbus;	a	getBucket
	m	(Lcav;Lgj;Ldix;Ldix;)I	a	getSpreadDelay
	m	(Lcav;Lgj;Ldix;Ljava/util/Random;)V	a	animateTick
	m	(Lcaw;Lgj;)V	a	fizz
	m	(Lcaw;Lgj;Lcov;)V	a	beforeDestroyingBlock
	m	(Lcaw;Lgj;Lcov;Lgo;Ldix;)V	a	spreadTo
	m	(Lcay;)I	a	getTickDelay
	m	(Lcay;Lgj;)Z	a	hasFlammableNeighbours
	m	(Ldiw;)Z	a	isSame
	m	(Ldix;Lcab;Lgj;Ldiw;Lgo;)Z	a	canBeReplacedWith
	m	(Lcav;Lgj;Ldix;Ljava/util/Random;)V	b	randomTick
	m	(Lcay;)I	b	getSlopeFindDistance
	m	(Lcay;Lgj;)Z	b	isFlammable
	m	(Ldix;)Lcov;	b	createLegacyBlock
	m	()F	c	getExplosionResistance
	m	(Lcay;)I	c	getDropOff
	m	()Ldiw;	d	getFlowing
	m	()Ldiw;	e	getSource
	m	()Z	f	canConvertToSource
	m	()Lia;	i	getDripParticle
	m	()Z	j	isRandomlyTicking
	m	()Ljava/util/Optional;	k	getPickupSound
	f	F	e	MIN_LEVEL_CUTOFF
c	dja$a	net/minecraft/world/level/material/LavaFluid$Flowing
	m	(Lcow$a;)V	a	createFluidStateDefinition
	m	(Ldix;)Z	c	isSource
	m	(Ldix;)I	d	getAmount
c	dja$b	net/minecraft/world/level/material/LavaFluid$Source
	m	(Ldix;)Z	c	isSource
	m	(Ldix;)I	d	getAmount
c	djb	net/minecraft/world/level/material/Material
	m	()Z	a	isLiquid
	m	()Z	b	isSolid
	m	()Z	c	blocksMotion
	m	()Z	d	isFlammable
	m	()Z	e	isReplaceable
	m	()Z	f	isSolidBlocking
	m	()Ldjd;	g	getPushReaction
	m	()Ldjc;	h	getColor
	f	Ldjb;	A	NETHER_WOOD
	f	Ldjb;	B	BAMBOO_SAPLING
	f	Ldjb;	C	BAMBOO
	f	Ldjb;	D	WOOL
	f	Ldjb;	E	EXPLOSIVE
	f	Ldjb;	F	LEAVES
	f	Ldjb;	G	GLASS
	f	Ldjb;	H	ICE
	f	Ldjb;	I	CACTUS
	f	Ldjb;	J	STONE
	f	Ldjb;	K	METAL
	f	Ldjb;	L	SNOW
	f	Ldjb;	M	HEAVY_METAL
	f	Ldjb;	N	BARRIER
	f	Ldjb;	O	PISTON
	f	Ldjb;	P	MOSS
	f	Ldjb;	Q	VEGETABLE
	f	Ldjb;	R	EGG
	f	Ldjb;	S	CAKE
	f	Ldjb;	T	AMETHYST
	f	Ldjb;	U	POWDER_SNOW
	f	Ldjc;	V	color
	f	Ldjd;	W	pushReaction
	f	Z	X	blocksMotion
	f	Z	Y	flammable
	f	Z	Z	liquid
	f	Ldjb;	a	AIR
	f	Z	aa	solidBlocking
	f	Z	ab	replaceable
	f	Z	ac	solid
	f	Ldjb;	b	STRUCTURAL_AIR
	f	Ldjb;	c	PORTAL
	f	Ldjb;	d	CLOTH_DECORATION
	f	Ldjb;	e	PLANT
	f	Ldjb;	f	WATER_PLANT
	f	Ldjb;	g	REPLACEABLE_PLANT
	f	Ldjb;	h	REPLACEABLE_FIREPROOF_PLANT
	f	Ldjb;	i	REPLACEABLE_WATER_PLANT
	f	Ldjb;	j	WATER
	f	Ldjb;	k	BUBBLE_COLUMN
	f	Ldjb;	l	LAVA
	f	Ldjb;	m	TOP_SNOW
	f	Ldjb;	n	FIRE
	f	Ldjb;	o	DECORATION
	f	Ldjb;	p	WEB
	f	Ldjb;	q	SCULK
	f	Ldjb;	r	BUILDABLE_GLASS
	f	Ldjb;	s	CLAY
	f	Ldjb;	t	DIRT
	f	Ldjb;	u	GRASS
	f	Ldjb;	v	ICE_SOLID
	f	Ldjb;	w	SAND
	f	Ldjb;	x	SPONGE
	f	Ldjb;	y	SHULKER_SHELL
	f	Ldjb;	z	WOOD
c	djb$a	net/minecraft/world/level/material/Material$Builder
	m	()Ldjb$a;	a	liquid
	m	()Ldjb$a;	b	nonSolid
	m	()Ldjb$a;	c	noCollider
	m	()Ldjb$a;	d	flammable
	m	()Ldjb$a;	e	replaceable
	m	()Ldjb$a;	f	destroyOnPush
	m	()Ldjb$a;	g	notPushable
	m	()Ldjb;	h	build
	m	()Ldjb$a;	i	notSolidBlocking
	f	Ldjd;	a	pushReaction
	f	Z	b	blocksMotion
	f	Z	c	flammable
	f	Z	d	liquid
	f	Z	e	replaceable
	f	Z	f	solid
	f	Ldjc;	g	color
	f	Z	h	solidBlocking
c	djc	net/minecraft/world/level/material/MaterialColor
	m	(I)Ldjc;	a	byId
	m	(Ldjc$a;)I	a	calculateRGBColor
	m	(I)I	b	getColorFromPackedId
	m	(Ldjc$a;)B	b	getPackedId
	m	(I)Ldjc;	c	byIdUnsafe
	f	Ldjc;	A	COLOR_BROWN
	f	Ldjc;	B	COLOR_GREEN
	f	Ldjc;	C	COLOR_RED
	f	Ldjc;	D	COLOR_BLACK
	f	Ldjc;	E	GOLD
	f	Ldjc;	F	DIAMOND
	f	Ldjc;	G	LAPIS
	f	Ldjc;	H	EMERALD
	f	Ldjc;	I	PODZOL
	f	Ldjc;	J	NETHER
	f	Ldjc;	K	TERRACOTTA_WHITE
	f	Ldjc;	L	TERRACOTTA_ORANGE
	f	Ldjc;	M	TERRACOTTA_MAGENTA
	f	Ldjc;	N	TERRACOTTA_LIGHT_BLUE
	f	Ldjc;	O	TERRACOTTA_YELLOW
	f	Ldjc;	P	TERRACOTTA_LIGHT_GREEN
	f	Ldjc;	Q	TERRACOTTA_PINK
	f	Ldjc;	R	TERRACOTTA_GRAY
	f	Ldjc;	S	TERRACOTTA_LIGHT_GRAY
	f	Ldjc;	T	TERRACOTTA_CYAN
	f	Ldjc;	U	TERRACOTTA_PURPLE
	f	Ldjc;	V	TERRACOTTA_BLUE
	f	Ldjc;	W	TERRACOTTA_BROWN
	f	Ldjc;	X	TERRACOTTA_GREEN
	f	Ldjc;	Y	TERRACOTTA_RED
	f	Ldjc;	Z	TERRACOTTA_BLACK
	f	Ldjc;	a	NONE
	f	Ldjc;	aa	CRIMSON_NYLIUM
	f	Ldjc;	ab	CRIMSON_STEM
	f	Ldjc;	ac	CRIMSON_HYPHAE
	f	Ldjc;	ad	WARPED_NYLIUM
	f	Ldjc;	ae	WARPED_STEM
	f	Ldjc;	af	WARPED_HYPHAE
	f	Ldjc;	ag	WARPED_WART_BLOCK
	f	Ldjc;	ah	DEEPSLATE
	f	Ldjc;	ai	RAW_IRON
	f	Ldjc;	aj	GLOW_LICHEN
	f	I	ak	col
	f	I	al	id
	f	[Ldjc;	am	MATERIAL_COLORS
	f	Ldjc;	b	GRASS
	f	Ldjc;	c	SAND
	f	Ldjc;	d	WOOL
	f	Ldjc;	e	FIRE
	f	Ldjc;	f	ICE
	f	Ldjc;	g	METAL
	f	Ldjc;	h	PLANT
	f	Ldjc;	i	SNOW
	f	Ldjc;	j	CLAY
	f	Ldjc;	k	DIRT
	f	Ldjc;	l	STONE
	f	Ldjc;	m	WATER
	f	Ldjc;	n	WOOD
	f	Ldjc;	o	QUARTZ
	f	Ldjc;	p	COLOR_ORANGE
	f	Ldjc;	q	COLOR_MAGENTA
	f	Ldjc;	r	COLOR_LIGHT_BLUE
	f	Ldjc;	s	COLOR_YELLOW
	f	Ldjc;	t	COLOR_LIGHT_GREEN
	f	Ldjc;	u	COLOR_PINK
	f	Ldjc;	v	COLOR_GRAY
	f	Ldjc;	w	COLOR_LIGHT_GRAY
	f	Ldjc;	x	COLOR_CYAN
	f	Ldjc;	y	COLOR_PURPLE
	f	Ldjc;	z	COLOR_BLUE
c	djc$a	net/minecraft/world/level/material/MaterialColor$Brightness
	m	()[Ldjc$a;	a	$values
	m	(I)Ldjc$a;	a	byId
	m	(I)Ldjc$a;	b	byIdUnsafe
	f	Ldjc$a;	a	LOW
	f	Ldjc$a;	b	NORMAL
	f	Ldjc$a;	c	HIGH
	f	Ldjc$a;	d	LOWEST
	f	I	e	id
	f	I	f	modifier
	f	[Ldjc$a;	g	VALUES
	f	[Ldjc$a;	h	$VALUES
c	djd	net/minecraft/world/level/material/PushReaction
	m	()[Ldjd;	a	$values
	f	Ldjd;	a	NORMAL
	f	Ldjd;	b	DESTROY
	f	Ldjd;	c	BLOCK
	f	Ldjd;	d	IGNORE
	f	Ldjd;	e	PUSH_ONLY
	f	[Ldjd;	f	$VALUES
c	dje	net/minecraft/world/level/material/WaterFluid
	m	()Lbus;	a	getBucket
	m	(Lcav;Lgj;Ldix;Ljava/util/Random;)V	a	animateTick
	m	(Lcaw;Lgj;Lcov;)V	a	beforeDestroyingBlock
	m	(Lcay;)I	a	getTickDelay
	m	(Ldiw;)Z	a	isSame
	m	(Ldix;Lcab;Lgj;Ldiw;Lgo;)Z	a	canBeReplacedWith
	m	(Lcay;)I	b	getSlopeFindDistance
	m	(Ldix;)Lcov;	b	createLegacyBlock
	m	()F	c	getExplosionResistance
	m	(Lcay;)I	c	getDropOff
	m	()Ldiw;	d	getFlowing
	m	()Ldiw;	e	getSource
	m	()Z	f	canConvertToSource
	m	()Lia;	i	getDripParticle
	m	()Ljava/util/Optional;	k	getPickupSound
c	dje$a	net/minecraft/world/level/material/WaterFluid$Flowing
	m	(Lcow$a;)V	a	createFluidStateDefinition
	m	(Ldix;)Z	c	isSource
	m	(Ldix;)I	d	getAmount
c	dje$b	net/minecraft/world/level/material/WaterFluid$Source
	m	(Ldix;)Z	c	isSource
	m	(Ldix;)I	d	getAmount
c	djf	net/minecraft/world/level/material/package-info
c	djg	net/minecraft/world/level/package-info
c	djh	net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator
	m	()V	a	done
	m	(DDD)Ldjr;	a	getGoal
	m	(Lcab;III)Ldjj;	a	getBlockPathType
	m	(Lcbi;Laya;)V	a	prepare
	m	(Lgj;)D	a	getFloorLevel
	m	([Ldjl;Ldjl;)I	a	getNeighbors
	m	()Ldjl;	b	getStart
	m	()Z	c	isAmphibious
	f	Z	l	prefersShallowSwimming
	f	F	m	oldWalkableCost
	f	F	n	oldWaterBorderCost
c	dji	net/minecraft/world/level/pathfinder/BinaryHeap
	m	()V	a	clear
	m	(I)V	a	upHeap
	m	(Ldjl;)Ldjl;	a	insert
	m	(Ldjl;F)V	a	changeCost
	m	()Ldjl;	b	peek
	m	(I)V	b	downHeap
	m	(Ldjl;)V	b	remove
	m	()Ldjl;	c	pop
	m	()I	d	size
	m	()Z	e	isEmpty
	m	()[Ldjl;	f	getHeap
	f	[Ldjl;	a	heap
	f	I	b	size
c	djj	net/minecraft/world/level/pathfinder/BlockPathTypes
	m	()F	a	getMalus
	m	()[Ldjj;	b	$values
	f	F	A	malus
	f	[Ldjj;	B	$VALUES
	f	Ldjj;	a	BLOCKED
	f	Ldjj;	b	OPEN
	f	Ldjj;	c	WALKABLE
	f	Ldjj;	d	WALKABLE_DOOR
	f	Ldjj;	e	TRAPDOOR
	f	Ldjj;	f	POWDER_SNOW
	f	Ldjj;	g	DANGER_POWDER_SNOW
	f	Ldjj;	h	FENCE
	f	Ldjj;	i	LAVA
	f	Ldjj;	j	WATER
	f	Ldjj;	k	WATER_BORDER
	f	Ldjj;	l	RAIL
	f	Ldjj;	m	UNPASSABLE_RAIL
	f	Ldjj;	n	DANGER_FIRE
	f	Ldjj;	o	DAMAGE_FIRE
	f	Ldjj;	p	DANGER_CACTUS
	f	Ldjj;	q	DAMAGE_CACTUS
	f	Ldjj;	r	DANGER_OTHER
	f	Ldjj;	s	DAMAGE_OTHER
	f	Ldjj;	t	DOOR_OPEN
	f	Ldjj;	u	DOOR_WOOD_CLOSED
	f	Ldjj;	v	DOOR_IRON_CLOSED
	f	Ldjj;	w	BREACH
	f	Ldjj;	x	LEAVES
	f	Ldjj;	y	STICKY_HONEY
	f	Ldjj;	z	COCOA
c	djk	net/minecraft/world/level/pathfinder/FlyNodeEvaluator
	m	()V	a	done
	m	(DDD)Ldjr;	a	getGoal
	m	(III)Ldjl;	a	getNode
	m	(IIIJ)Ldjj;	a	lambda$getCachedBlockPathType$0
	m	(Lcab;III)Ldjj;	a	getBlockPathType
	m	(Lcab;IIILaya;IIIZZ)Ldjj;	a	getBlockPathType
	m	(Lcbi;Laya;)V	a	prepare
	m	(Ldjl;)Z	a	hasMalus
	m	([Ldjl;Ldjl;)I	a	getNeighbors
	m	()Ldjl;	b	getStart
	m	(III)Ldjj;	b	getCachedBlockPathType
	m	(Ldjl;)Z	b	isOpen
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	l	pathTypeByPosCache
c	djl	net/minecraft/world/level/pathfinder/Node
	m	()Lgj;	a	asBlockPos
	m	(III)Ldjl;	a	cloneAndMove
	m	(Ldjl;)F	a	distanceTo
	m	(Lgj;)F	a	distanceTo
	m	(Lpy;)V	a	writeToStream
	m	()Ldpo;	b	asVec3
	m	(III)I	b	createHash
	m	(Ldjl;)F	b	distanceToSqr
	m	(Lgj;)F	b	distanceToSqr
	m	(Lpy;)Ldjl;	b	createFromStream
	m	()Z	c	inOpenSet
	m	(Ldjl;)F	c	distanceManhattan
	m	(Lgj;)F	c	distanceManhattan
	f	I	a	x
	f	I	b	y
	f	I	c	z
	f	I	d	heapIdx
	f	F	e	g
	f	F	f	h
	f	F	g	f
	f	Ldjl;	h	cameFrom
	f	Z	i	closed
	f	F	j	walkedDistance
	f	F	k	costMalus
	f	Ldjj;	l	type
	f	I	m	hash
c	djm	net/minecraft/world/level/pathfinder/NodeEvaluator
	m	()V	a	done
	m	(DDD)Ldjr;	a	getGoal
	m	(III)Ldjl;	a	getNode
	m	(IIII)Ldjl;	a	lambda$getNode$0
	m	(Lcab;III)Ldjj;	a	getBlockPathType
	m	(Lcab;IIILaya;IIIZZ)Ldjj;	a	getBlockPathType
	m	(Lcbi;Laya;)V	a	prepare
	m	(Z)V	a	setCanPassDoors
	m	([Ldjl;Ldjl;)I	a	getNeighbors
	m	()Ldjl;	b	getStart
	m	(Lgj;)Ldjl;	b	getNode
	m	(Z)V	b	setCanOpenDoors
	m	(Z)V	c	setCanFloat
	m	()Z	d	canPassDoors
	m	()Z	e	canOpenDoors
	m	()Z	f	canFloat
	f	Lcbi;	a	level
	f	Laya;	b	mob
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	c	nodes
	f	I	d	entityWidth
	f	I	e	entityHeight
	f	I	f	entityDepth
	f	Z	g	canPassDoors
	f	Z	h	canOpenDoors
	f	Z	i	canFloat
c	djn	net/minecraft/world/level/pathfinder/Path
	m	()V	a	advance
	m	(I)Ldjl;	a	getNode
	m	(ILdjl;)V	a	replaceNode
	m	(Laxk;)Ldpo;	a	getNextEntityPos
	m	(Laxk;I)Ldpo;	a	getEntityPosAtNode
	m	(Ldjn;)Z	a	sameAs
	m	(Lpy;)V	a	writeToStream
	m	(Lpy;Ldjr;)V	a	lambda$writeToStream$0
	m	([Ldjl;[Ldjl;Ljava/util/Set;)V	a	setDebug
	m	()Z	b	notStarted
	m	(I)V	b	truncateNodes
	m	(Lpy;)Ldjn;	b	createFromStream
	m	()Z	c	isDone
	m	(I)V	c	setNextNodeIndex
	m	()Ldjl;	d	getEndNode
	m	(I)Lgj;	d	getNodePos
	m	()I	e	getNodeCount
	m	()I	f	getNextNodeIndex
	m	()Lgj;	g	getNextNodePos
	m	()Ldjl;	h	getNextNode
	m	()Ldjl;	i	getPreviousNode
	m	()Z	j	canReach
	m	()[Ldjl;	k	getOpenSet
	m	()[Ldjl;	l	getClosedSet
	m	()Lgj;	m	getTarget
	m	()F	n	getDistToTarget
	f	Ljava/util/List;	a	nodes
	f	[Ldjl;	b	openSet
	f	[Ldjl;	c	closedSet
	f	Ljava/util/Set;	d	targetNodes
	f	I	e	nextNodeIndex
	f	Lgj;	f	target
	f	F	g	distToTarget
	f	Z	h	reached
c	djo	net/minecraft/world/level/pathfinder/PathComputationType
	m	()[Ldjo;	a	$values
	f	Ldjo;	a	LAND
	f	Ldjo;	b	WATER
	f	Ldjo;	c	AIR
	f	[Ldjo;	d	$VALUES
c	djp	net/minecraft/world/level/pathfinder/PathFinder
	m	(Lasy;Ldjl;Ljava/util/Map;FIF)Ldjn;	a	findPath
	m	(Lcbi;Laya;Ljava/util/Set;FIF)Ldjn;	a	findPath
	m	(Ldjl;Lgj;Z)Ldjn;	a	reconstructPath
	m	(Ldjl;Ljava/util/Set;)F	a	getBestH
	m	(Lgj;)Ldjr;	a	lambda$findPath$0
	m	(Ljava/util/Map;Ldjr;)Ldjn;	a	lambda$findPath$2
	m	(Ljava/util/Map;Ldjr;)Ldjn;	b	lambda$findPath$1
	f	F	a	FUDGING
	f	[Ldjl;	b	neighbors
	f	I	c	maxVisitedNodes
	f	Ldjm;	d	nodeEvaluator
	f	Z	e	DEBUG
	f	Ldji;	f	openSet
c	djq	net/minecraft/world/level/pathfinder/SwimNodeEvaluator
	m	()V	a	done
	m	(DDD)Ldjr;	a	getGoal
	m	(III)Ldjl;	a	getNode
	m	(IIIJ)Ldjj;	a	lambda$getCachedBlockType$0
	m	(Lcab;III)Ldjj;	a	getBlockPathType
	m	(Lcab;IIILaya;IIIZZ)Ldjj;	a	getBlockPathType
	m	(Lcbi;Laya;)V	a	prepare
	m	(Ldjl;)Z	a	isNodeValid
	m	(Ldjl;Ldjl;Ldjl;)Z	a	isDiagonalNodeValid
	m	([Ldjl;Ldjl;)I	a	getNeighbors
	m	()Ldjl;	b	getStart
	m	(III)Ldjj;	b	getCachedBlockType
	f	Z	j	allowBreaching
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	k	pathTypesByPosCache
c	djr	net/minecraft/world/level/pathfinder/Target
	m	(FLdjl;)V	a	updateBest
	m	(Lpy;)Ldjr;	c	createFromStream
	m	()Ldjl;	d	getBestNode
	m	()V	e	setReached
	m	()Z	f	isReached
	f	F	m	bestHeuristic
	f	Ldjl;	n	bestNode
	f	Z	o	reached
c	djs	net/minecraft/world/level/pathfinder/WalkNodeEvaluator
	m	()V	a	done
	m	(DDD)Ldjr;	a	getGoal
	m	(IIIIDLgo;Ldjj;)Ldjl;	a	findAcceptedNode
	m	(IIILaya;J)Ldjj;	a	lambda$getCachedBlockType$1
	m	(Laya;III)Ldjj;	a	getCachedBlockType
	m	(Laya;Lgj;)Ldjj;	a	getBlockPathType
	m	(Lcab;III)Ldjj;	a	getBlockPathType
	m	(Lcab;IIIIIIZZLjava/util/EnumSet;Ldjj;Lgj;)Ldjj;	a	getBlockPathTypes
	m	(Lcab;IIILaya;IIIZZ)Ldjj;	a	getBlockPathType
	m	(Lcab;Lgj$a;)Ldjj;	a	getBlockPathTypeStatic
	m	(Lcab;Lgj$a;Ldjj;)Ldjj;	a	checkNeighbourBlocks
	m	(Lcab;Lgj;)D	a	getFloorLevel
	m	(Lcab;ZZLgj;Ldjj;)Ldjj;	a	evaluateBlockPathType
	m	(Lcbi;Laya;)V	a	prepare
	m	(Lcov;)Z	a	isBurningBlock
	m	(Ldjl;)Z	a	canReachWithoutCollision
	m	(Ldjl;Ldjl;)Z	a	isNeighborValid
	m	(Ldjl;Ldjl;Ldjl;Ldjl;)Z	a	isDiagonalValid
	m	(Ldpj;)Z	a	hasCollisions
	m	(Ldpj;Ljava/lang/Object;)Z	a	lambda$hasCollisions$0
	m	(Lgj;)D	a	getFloorLevel
	m	([Ldjl;Ldjl;)I	a	getNeighbors
	m	()Ldjl;	b	getStart
	m	(Lcab;Lgj;)Ldjj;	b	getBlockPathTypeRaw
	m	()Z	c	isAmphibious
	m	(Lgj;)Z	c	hasPositiveMalus
	f	D	j	SPACE_BETWEEN_WALL_POSTS
	f	F	k	oldWaterCost
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	l	pathTypesByPosCache
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	m	collisionCache
c	djt	net/minecraft/world/level/pathfinder/package-info
c	dju	net/minecraft/world/level/portal/PortalForcer
	m	(Lbht;)Ln$a;	a	lambda$findPortalAround$6
	m	(Lbhv;)Z	a	lambda$findPortalAround$0
	m	(Lcov;Lgj;)Z	a	lambda$findPortalAround$5
	m	(Lcql;Lbht;)Z	a	lambda$findPortalAround$1
	m	(Lgj;Lbht;)D	a	lambda$findPortalAround$2
	m	(Lgj;Lgj$a;Lgo;I)Z	a	canHostFrame
	m	(Lgj;Lgo$a;)Ljava/util/Optional;	a	createPortal
	m	(Lgj;ZLcql;)Ljava/util/Optional;	a	findPortalAround
	m	(Lbht;)Z	b	lambda$findPortalAround$4
	m	(Lbht;)I	c	lambda$findPortalAround$3
	f	I	a	TICKET_RADIUS
	f	I	b	SEARCH_RADIUS
	f	I	c	CREATE_RADIUS
	f	I	d	FRAME_HEIGHT
	f	I	e	FRAME_WIDTH
	f	I	f	FRAME_BOX
	f	I	g	FRAME_HEIGHT_START
	f	I	h	FRAME_HEIGHT_END
	f	I	i	FRAME_WIDTH_START
	f	I	j	FRAME_WIDTH_END
	f	I	k	FRAME_BOX_START
	f	I	l	FRAME_BOX_END
	f	I	m	NOTHING_FOUND
	f	Ladw;	n	level
c	djv	net/minecraft/world/level/portal/PortalInfo
	f	Ldpo;	a	pos
	f	Ldpo;	b	speed
	f	F	c	yRot
	f	F	d	xRot
c	djw	net/minecraft/world/level/portal/PortalShape
	m	()Z	a	isValid
	m	(Ladw;Ln$a;Lgo$a;Ldpo;Laxl;Ldpo;FF)Ldjv;	a	createPortalInfo
	m	(Lcaw;Lgj;Lgo$a;)Ljava/util/Optional;	a	findEmptyPortalShape
	m	(Lcaw;Lgj;Ljava/util/function/Predicate;Lgo$a;)Ljava/util/Optional;	a	findPortalShape
	m	(Lcov;)Z	a	isEmpty
	m	(Lcov;Lcab;Lgj;)Z	a	lambda$static$0
	m	(Lcov;Lgj;)V	a	lambda$createPortalBlocks$2
	m	(Ldjw;)Z	a	lambda$findEmptyPortalShape$1
	m	(Lgj$a;)I	a	getDistanceUntilTop
	m	(Lgj$a;I)Z	a	hasTopFrame
	m	(Lgj;)Lgj;	a	calculateBottomLeft
	m	(Lgj;Lgo;)I	a	getDistanceUntilEdgeAboveFrame
	m	(Ln$a;Lgo$a;Ldpo;Laxl;)Ldpo;	a	getRelativePosition
	m	()V	b	createPortalBlocks
	m	()Z	c	isComplete
	m	()I	d	calculateWidth
	m	()I	e	calculateHeight
	f	I	a	MAX_WIDTH
	f	I	b	MAX_HEIGHT
	f	I	c	MIN_WIDTH
	f	I	d	MIN_HEIGHT
	f	Lcou$e;	e	FRAME
	f	Lcaw;	f	level
	f	Lgo$a;	g	axis
	f	Lgo;	h	rightDir
	f	I	i	numPortalBlocks
	f	Lgj;	j	bottomLeft
	f	I	k	height
	f	I	l	width
c	djx	net/minecraft/world/level/portal/package-info
c	djy	net/minecraft/world/level/redstone/Redstone
	f	I	a	SIGNAL_MIN
	f	I	b	SIGNAL_MAX
	f	I	c	SIGNAL_NONE
c	djz	net/minecraft/world/level/redstone/package-info
c	dka	net/minecraft/world/level/saveddata/SavedData
	m	(Ljava/io/File;)V	a	save
	m	(Lok;)Lok;	a	save
	m	(Z)V	a	setDirty
	m	()V	b	setDirty
	m	()Z	c	isDirty
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Z	b	dirty
c	dkb	net/minecraft/world/level/saveddata/maps/MapBanner
	m	()Lgj;	a	getPos
	m	(Lcab;Lgj;)Ldkb;	a	fromWorld
	m	(Lok;)Ldkb;	a	load
	m	()Lbts;	b	getColor
	m	()Ldkc$a;	c	getDecoration
	m	()Lqk;	d	getName
	m	()Lok;	e	save
	m	()Ljava/lang/String;	f	getId
	f	Lgj;	a	pos
	f	Lbts;	b	color
	f	Lqk;	c	name
c	dkb$1	net/minecraft/world/level/saveddata/maps/MapBanner$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
c	dkc	net/minecraft/world/level/saveddata/maps/MapDecoration
	m	()B	a	getImage
	m	()Ldkc$a;	b	getType
	m	()B	c	getX
	m	()B	d	getY
	m	()B	e	getRot
	m	()Z	f	renderOnFrame
	m	()Lqk;	g	getName
	f	Ldkc$a;	a	type
	f	B	b	x
	f	B	c	y
	f	B	d	rot
	f	Lqk;	e	name
c	dkc$a	net/minecraft/world/level/saveddata/maps/MapDecoration$Type
	m	()B	a	getIcon
	m	(B)Ldkc$a;	a	byIcon
	m	()Z	b	isRenderedOnFrame
	m	()Z	c	hasMapColor
	m	()I	d	getMapColor
	m	()Z	e	shouldTrackCount
	m	()[Ldkc$a;	f	$values
	f	Ldkc$a;	A	RED_X
	f	B	B	icon
	f	Z	C	renderedOnFrame
	f	I	D	mapColor
	f	Z	E	trackCount
	f	[Ldkc$a;	F	$VALUES
	f	Ldkc$a;	a	PLAYER
	f	Ldkc$a;	b	FRAME
	f	Ldkc$a;	c	RED_MARKER
	f	Ldkc$a;	d	BLUE_MARKER
	f	Ldkc$a;	e	TARGET_X
	f	Ldkc$a;	f	TARGET_POINT
	f	Ldkc$a;	g	PLAYER_OFF_MAP
	f	Ldkc$a;	h	PLAYER_OFF_LIMITS
	f	Ldkc$a;	i	MANSION
	f	Ldkc$a;	j	MONUMENT
	f	Ldkc$a;	k	BANNER_WHITE
	f	Ldkc$a;	l	BANNER_ORANGE
	f	Ldkc$a;	m	BANNER_MAGENTA
	f	Ldkc$a;	n	BANNER_LIGHT_BLUE
	f	Ldkc$a;	o	BANNER_YELLOW
	f	Ldkc$a;	p	BANNER_LIME
	f	Ldkc$a;	q	BANNER_PINK
	f	Ldkc$a;	r	BANNER_GRAY
	f	Ldkc$a;	s	BANNER_LIGHT_GRAY
	f	Ldkc$a;	t	BANNER_CYAN
	f	Ldkc$a;	u	BANNER_PURPLE
	f	Ldkc$a;	v	BANNER_BLUE
	f	Ldkc$a;	w	BANNER_BROWN
	f	Ldkc$a;	x	BANNER_GREEN
	f	Ldkc$a;	y	BANNER_RED
	f	Ldkc$a;	z	BANNER_BLACK
c	dkd	net/minecraft/world/level/saveddata/maps/MapFrame
	m	()Lok;	a	save
	m	(Lgj;)Ljava/lang/String;	a	frameId
	m	(Lok;)Ldkd;	a	load
	m	()Lgj;	b	getPos
	m	()I	c	getRotation
	m	()I	d	getEntityId
	m	()Ljava/lang/String;	e	getId
	f	Lgj;	a	pos
	f	I	b	rotation
	f	I	c	entityId
c	dke	net/minecraft/world/level/saveddata/maps/MapIndex
	m	()I	a	getFreeAuxValueForMap
	m	(Lok;)Lok;	a	save
	m	(Lok;)Ldke;	b	load
	f	Ljava/lang/String;	a	FILE_NAME
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	usedAuxIds
c	dkf	net/minecraft/world/level/saveddata/maps/MapItemSavedData
	m	()Ldkf;	a	locked
	m	(BZLys;)Ldkf;	a	createForClient
	m	(DDBZZLys;)Ldkf;	a	createFresh
	m	(I)Ldkf;	a	scaled
	m	(II)V	a	setColorsDirty
	m	(IIB)Z	a	updateColor
	m	(ILboj;)Lrc;	a	getUpdatePacket
	m	(Lboj;)Ldkf$a;	a	getHoldingPlayer
	m	(Lboj;Lbuw;)V	a	tickCarriedBy
	m	(Lbuw;Lgj;Ljava/lang/String;Ldkc$a;)V	a	addTargetDecoration
	m	(Lcab;II)V	a	checkBanners
	m	(Lcaw;Lgj;)Z	a	toggleBanner
	m	(Ldkc$a;Lcaw;Ljava/lang/String;DDDLqk;)V	a	addDecoration
	m	(Lgj;I)V	a	removedFromFrame
	m	(Ljava/lang/String;)V	a	removeDecoration
	m	(Ljava/util/List;)V	a	addClientSideDecorations
	m	(Lok;)Lok;	a	save
	m	(Lok;Lpd;)V	a	lambda$save$1
	m	(I)Z	b	isTrackedCountOverLimit
	m	(IIB)V	b	setColor
	m	(Lok;)Ldkf;	b	load
	m	(Lok;)Ljava/lang/IllegalArgumentException;	c	lambda$load$0
	m	()Ljava/util/Collection;	d	getBanners
	m	()Z	e	isExplorationMap
	m	()Ljava/lang/Iterable;	f	getDecorations
	m	()V	g	setDecorationsDirty
	f	I	a	MAX_SCALE
	f	I	b	TRACKED_DECORATION_LIMIT
	f	I	c	x
	f	I	d	z
	f	Lys;	e	dimension
	f	B	f	scale
	f	[B	g	colors
	f	Z	h	locked
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	I	j	MAP_SIZE
	f	I	k	HALF_MAP_SIZE
	f	Z	l	trackingPosition
	f	Z	m	unlimitedTracking
	f	Ljava/util/List;	n	carriedBy
	f	Ljava/util/Map;	o	carriedByPlayers
	f	Ljava/util/Map;	p	bannerMarkers
	f	Ljava/util/Map;	q	decorations
	f	Ljava/util/Map;	r	frameMarkers
	f	I	s	trackedDecorationCount
c	dkf$a	net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer
	m	()Ldkf$b;	a	createPatch
	m	(I)Lrc;	a	nextUpdatePacket
	m	(II)V	a	markColorsDirty
	m	()V	b	markDecorationsDirty
	f	Lboj;	a	player
	f	I	b	step
	f	Ldkf;	c	this$0
	f	Z	d	dirtyData
	f	I	e	minDirtyX
	f	I	f	minDirtyY
	f	I	g	maxDirtyX
	f	I	h	maxDirtyY
	f	Z	i	dirtyDecorations
	f	I	j	tick
c	dkf$b	net/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch
	m	(Ldkf;)V	a	applyToMap
	f	I	a	startX
	f	I	b	startY
	f	I	c	width
	f	I	d	height
	f	[B	e	mapColors
c	dkg	net/minecraft/world/level/saveddata/maps/package-info
c	dkh	net/minecraft/world/level/saveddata/package-info
c	dki	net/minecraft/world/level/storage/CommandStorage
	m	()Ljava/util/stream/Stream;	a	keys
	m	(Ljava/lang/String;)Ldki$a;	a	newStorage
	m	(Ljava/lang/String;Lok;)Ldki$a;	a	lambda$set$1
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$keys$3
	m	(Lyt;)Lok;	a	get
	m	(Lyt;Lok;)V	a	set
	m	(Ljava/lang/String;)Ljava/lang/String;	b	createId
	m	(Ljava/lang/String;Lok;)Ldki$a;	b	lambda$get$0
	m	(Ljava/lang/String;)Ldki$a;	c	lambda$set$2
	f	Ljava/lang/String;	a	ID_PREFIX
	f	Ljava/util/Map;	b	namespaces
	f	Ldkl;	c	storage
c	dki$a	net/minecraft/world/level/storage/CommandStorage$Container
	m	(Ljava/lang/String;)Lok;	a	get
	m	(Ljava/lang/String;Ljava/lang/String;)Lyt;	a	lambda$getKeys$1
	m	(Ljava/lang/String;Lok;)V	a	put
	m	(Lok;)Lok;	a	save
	m	(Lok;Ljava/lang/String;Lok;)V	a	lambda$save$0
	m	(Ljava/lang/String;)Ljava/util/stream/Stream;	b	getKeys
	m	(Lok;)Ldki$a;	b	load
	f	Ljava/lang/String;	a	TAG_CONTENTS
	f	Ljava/util/Map;	b	storage
c	dkj	net/minecraft/world/level/storage/DataVersion
	m	()Z	a	isSideSeries
	m	(Ldkj;)Z	a	isCompatible
	m	()Ljava/lang/String;	b	getSeries
	m	()I	c	getVersion
	f	Ljava/lang/String;	a	MAIN_SERIES
	f	I	b	version
	f	Ljava/lang/String;	c	series
c	dkk	net/minecraft/world/level/storage/DerivedLevelData
	m	()I	a	getXSpawn
	m	(F)V	a	setSpawnAngle
	m	(I)V	a	setClearWeatherTime
	m	(J)V	a	setGameTime
	m	(Lcas;)V	a	setGameType
	m	(Lcql$c;)V	a	setWorldBorder
	m	(Lgj;F)V	a	setSpawn
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
	m	(Lr;Lcax;)V	a	fillCrashReportCategory
	m	(Z)V	a	setThundering
	m	()I	b	getYSpawn
	m	(I)V	b	setXSpawn
	m	(J)V	b	setDayTime
	m	(Z)V	b	setRaining
	m	()I	c	getZSpawn
	m	(I)V	c	setYSpawn
	m	(Z)V	c	setInitialized
	m	()F	d	getSpawnAngle
	m	(I)V	d	setZSpawn
	m	()J	e	getGameTime
	m	(I)V	e	setThunderTime
	m	()J	f	getDayTime
	m	(I)V	f	setRainTime
	m	()Ljava/lang/String;	g	getLevelName
	m	(I)V	g	setWanderingTraderSpawnDelay
	m	()I	h	getClearWeatherTime
	m	(I)V	h	setWanderingTraderSpawnChance
	m	()Z	i	isThundering
	m	()I	j	getThunderTime
	m	()Z	k	isRaining
	m	()I	l	getRainTime
	m	()Lcas;	m	getGameType
	m	()Z	n	isHardcore
	m	()Z	o	getAllowCommands
	m	()Z	p	isInitialized
	m	()Lcar;	q	getGameRules
	m	()Lcql$c;	r	getWorldBorder
	m	()Lawe;	s	getDifficulty
	m	()Z	t	isDifficultyLocked
	m	()Ldpg;	u	getScheduledEvents
	m	()I	v	getWanderingTraderSpawnDelay
	m	()I	w	getWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	x	getWanderingTraderId
	f	Ldkv;	a	worldData
	f	Ldku;	b	wrapped
c	dkl	net/minecraft/world/level/storage/DimensionDataStorage
	m	()V	a	save
	m	(Ljava/io/PushbackInputStream;)Z	a	isGzip
	m	(Ljava/lang/String;)Ljava/io/File;	a	getDataFile
	m	(Ljava/lang/String;I)Lok;	a	readTagFromDisk
	m	(Ljava/lang/String;Ldka;)V	a	set
	m	(Ljava/util/function/Function;Ljava/lang/String;)Ldka;	a	get
	m	(Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/lang/String;)Ldka;	a	computeIfAbsent
	m	(Ljava/lang/String;Ldka;)V	b	lambda$save$0
	m	(Ljava/util/function/Function;Ljava/lang/String;)Ldka;	b	readSavedData
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	cache
	f	Lcom/mojang/datafixers/DataFixer;	c	fixerUpper
	f	Ljava/io/File;	d	dataFolder
c	dkm	net/minecraft/world/level/storage/LevelData
	m	()I	a	getXSpawn
	m	(Lcax;)Ljava/lang/String;	a	lambda$fillCrashReportCategory$0
	m	(Lr;Lcax;)V	a	fillCrashReportCategory
	m	()I	b	getYSpawn
	m	(Z)V	b	setRaining
	m	()I	c	getZSpawn
	m	()F	d	getSpawnAngle
	m	()J	e	getGameTime
	m	()J	f	getDayTime
	m	()Ljava/lang/String;	g	lambda$fillCrashReportCategory$1
	m	()Z	i	isThundering
	m	()Z	k	isRaining
	m	()Z	n	isHardcore
	m	()Lcar;	q	getGameRules
	m	()Lawe;	s	getDifficulty
	m	()Z	t	isDifficultyLocked
c	dkn	net/minecraft/world/level/storage/LevelResource
	m	()Ljava/lang/String;	a	getId
	f	Ldkn;	a	PLAYER_ADVANCEMENTS_DIR
	f	Ldkn;	b	PLAYER_STATS_DIR
	f	Ldkn;	c	PLAYER_DATA_DIR
	f	Ldkn;	d	PLAYER_OLD_DATA_DIR
	f	Ldkn;	e	LEVEL_DATA_FILE
	f	Ldkn;	f	GENERATED_DIR
	f	Ldkn;	g	DATAPACK_DIR
	f	Ldkn;	h	MAP_RESOURCE_FILE
	f	Ldkn;	i	ROOT
	f	Ljava/lang/String;	j	id
c	dko	net/minecraft/world/level/storage/LevelStorageException
c	dkp	net/minecraft/world/level/storage/LevelStorageSource
	m	()Ljava/lang/String;	a	getName
	m	(Lcom/mojang/serialization/Dynamic;)Lcaj;	a	readDataPackConfig
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/datafixers/util/Pair;	a	readWorldGenSettings
	m	(Lcom/mojang/serialization/DynamicOps;Lcaj;Lcom/mojang/serialization/Lifecycle;)Ljava/util/function/BiFunction;	a	getLevelData
	m	(Lcom/mojang/serialization/DynamicOps;Lcaj;Lcom/mojang/serialization/Lifecycle;Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Ldkt;	a	lambda$getLevelData$1
	m	(Ljava/io/File;)Lpd;	a	readLightweightData
	m	(Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lcaj;	a	getDataPacks
	m	(Ljava/io/File;Ljava/util/function/BiFunction;)Ljava/lang/Object;	a	readLevelData
	m	(Ljava/io/File;Z)Ljava/util/function/BiFunction;	a	levelSummaryReader
	m	(Ljava/io/File;ZLjava/io/File;Lcom/mojang/datafixers/DataFixer;)Ldkq;	a	lambda$levelSummaryReader$2
	m	(Ljava/lang/String;)Z	a	isNewLevelIdAcceptable
	m	(Ljava/nio/file/Path;)Ldkp;	a	createDefault
	m	()Ljava/util/List;	b	getLevelList
	m	(Lcom/mojang/serialization/Dynamic;)Lcut;	b	lambda$readWorldGenSettings$0
	m	(Ljava/lang/String;)Z	b	levelExists
	m	()Ljava/nio/file/Path;	c	getBaseDir
	m	(Ljava/lang/String;)Ldkp$a;	c	createAccess
	m	()Ljava/nio/file/Path;	d	getBackupPath
	m	()I	e	getStorageVersion
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/time/format/DateTimeFormatter;	b	FORMATTER
	f	Ljava/lang/String;	c	ICON_FILENAME
	f	Lcom/google/common/collect/ImmutableList;	d	OLD_SETTINGS_KEYS
	f	Ljava/lang/String;	e	TAG_DATA
	f	Ljava/nio/file/Path;	f	baseDir
	f	Ljava/nio/file/Path;	g	backupDir
	f	Lcom/mojang/datafixers/DataFixer;	h	fixerUpper
c	dkp$a	net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess
	m	()Ljava/lang/String;	a	getLevelId
	m	(Lcom/mojang/serialization/DynamicOps;Lcaj;Lcom/mojang/serialization/Lifecycle;)Ldkv;	a	getDataTag
	m	(Ldkn;)Ljava/nio/file/Path;	a	getLevelPath
	m	(Lhc;Ldkv;)V	a	saveDataTag
	m	(Lhc;Ldkv;Lok;)V	a	saveDataTag
	m	(Ljava/lang/String;)V	a	renameLevel
	m	(Lys;)Ljava/nio/file/Path;	a	getDimensionPath
	m	()Ldks;	b	createPlayerStorage
	m	(Ldkn;)Ljava/nio/file/Path;	b	lambda$getLevelPath$0
	m	()Ldkq;	c	getSummary
	m	()Lcaj;	d	getDataPacks
	m	()Ljava/util/Optional;	e	getIconFile
	m	()V	f	deleteLevel
	m	()J	g	makeWorldBackup
	m	()V	h	checkLock
	f	Ldkp;	a	this$0
	f	Lait;	b	lock
	f	Ljava/nio/file/Path;	c	levelPath
	f	Ljava/lang/String;	d	levelId
	f	Ljava/util/Map;	e	resources
c	dkp$a$1	net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess$1
	m	(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;	a	postVisitDirectory
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	f	Ljava/nio/file/Path;	a	val$lockPath
	f	Ldkp$a;	b	this$1
c	dkp$a$2	net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess$2
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	f	Ljava/nio/file/Path;	a	val$rootPath
	f	Ljava/util/zip/ZipOutputStream;	b	val$stream
	f	Ldkp$a;	c	this$1
c	dkq	net/minecraft/world/level/storage/LevelSummary
	m	()Ljava/lang/String;	a	getLevelId
	m	(Ldkq;)I	a	compareTo
	m	()Ljava/lang/String;	b	getLevelName
	m	()Ljava/io/File;	c	getIcon
	m	()Z	d	requiresManualConversion
	m	()J	e	getLastPlayed
	m	()Lcaz;	f	getSettings
	m	()Lcas;	g	getGameMode
	m	()Z	h	isHardcore
	m	()Z	i	hasCheats
	m	()Lqq;	j	getWorldVersionName
	m	()Ldkr;	k	levelVersion
	m	()Z	l	markVersionInList
	m	()Z	m	askToOpenWorld
	m	()Ldkq$a;	n	backupStatus
	m	()Z	o	isLocked
	m	()Z	p	isDisabled
	m	()Z	q	isCompatible
	m	()Lqk;	r	getInfo
	m	()Lqk;	s	createInfo
	f	Lcaz;	a	settings
	f	Ldkr;	b	levelVersion
	f	Ljava/lang/String;	c	levelId
	f	Z	d	requiresManualConversion
	f	Z	e	locked
	f	Ljava/io/File;	f	icon
	f	Lqk;	g	info
c	dkq$a	net/minecraft/world/level/storage/LevelSummary$BackupStatus
	m	()Z	a	shouldBackup
	m	()Z	b	isSevere
	m	()Ljava/lang/String;	c	getTranslationKey
	m	()[Ldkq$a;	d	$values
	f	Ldkq$a;	a	NONE
	f	Ldkq$a;	b	DOWNGRADE
	f	Ldkq$a;	c	UPGRADE_TO_SNAPSHOT
	f	Z	d	shouldBackup
	f	Z	e	severe
	f	Ljava/lang/String;	f	translationKey
	f	[Ldkq$a;	g	$VALUES
c	dkr	net/minecraft/world/level/storage/LevelVersion
	m	()I	a	levelDataVersion
	m	(Lcom/mojang/serialization/Dynamic;)Ldkr;	a	parse
	m	()J	b	lastPlayed
	m	()Ljava/lang/String;	c	minecraftVersionName
	m	()Ldkj;	d	minecraftVersion
	m	()Z	e	snapshot
	f	I	a	levelDataVersion
	f	J	b	lastPlayed
	f	Ljava/lang/String;	c	minecraftVersionName
	f	Ldkj;	d	minecraftVersion
	f	Z	e	snapshot
c	dks	net/minecraft/world/level/storage/PlayerDataStorage
	m	()[Ljava/lang/String;	a	getSeenPlayers
	m	(Lboj;)V	a	save
	m	(Lboj;)Lok;	b	load
	f	Lcom/mojang/datafixers/DataFixer;	a	fixerUpper
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/io/File;	c	playerDir
c	dkt	net/minecraft/world/level/storage/PrimaryLevelData
	m	()Lcut;	A	worldGenSettings
	m	()Lcom/mojang/serialization/Lifecycle;	B	worldGenSettingsLifecycle
	m	()Lok;	C	endDragonFightData
	m	()Lcaj;	D	getDataPackConfig
	m	()Lok;	E	getCustomBossEvents
	m	()Z	F	wasModded
	m	()Ljava/util/Set;	G	getKnownServerBrands
	m	()Ldku;	H	overworldData
	m	()Lcaz;	I	getLevelSettings
	m	()V	J	updatePlayerTag
	m	()I	a	getXSpawn
	m	(F)V	a	setSpawnAngle
	m	(I)V	a	setClearWeatherTime
	m	(J)V	a	setGameTime
	m	(Lawe;)V	a	setDifficulty
	m	(Lcaj;)V	a	setDataPackConfig
	m	(Lcas;)V	a	setGameType
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream;	a	lambda$parse$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILok;Lcaz;Ldkr;Lcut;Lcom/mojang/serialization/Lifecycle;)Ldkt;	a	parse
	m	(Lcql$c;)V	a	setWorldBorder
	m	(Lgj;F)V	a	setSpawn
	m	(Lhc;Lok;)Lok;	a	createTag
	m	(Lhc;Lok;Lok;)V	a	setTagData
	m	(Ljava/lang/String;Z)V	a	setModdedInfo
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
	m	(Lok;)V	a	setEndDragonFightData
	m	(Lok;Lpd;)V	a	lambda$setTagData$3
	m	(Lr;Lcax;)V	a	fillCrashReportCategory
	m	(Z)V	a	setThundering
	m	()I	b	getYSpawn
	m	(I)V	b	setXSpawn
	m	(J)V	b	setDayTime
	m	(Lcom/mojang/serialization/Dynamic;)Lpd;	b	lambda$parse$0
	m	(Lok;)V	b	setCustomBossEvents
	m	(Lok;Lpd;)V	b	lambda$setTagData$2
	m	(Z)V	b	setRaining
	m	()I	c	getZSpawn
	m	(I)V	c	setYSpawn
	m	(Z)V	c	setInitialized
	m	()F	d	getSpawnAngle
	m	(I)V	d	setZSpawn
	m	(Z)V	d	setDifficultyLocked
	m	()J	e	getGameTime
	m	(I)V	e	setThunderTime
	m	()J	f	getDayTime
	m	(I)V	f	setRainTime
	m	()Ljava/lang/String;	g	getLevelName
	m	(I)V	g	setWanderingTraderSpawnDelay
	m	()I	h	getClearWeatherTime
	m	(I)V	h	setWanderingTraderSpawnChance
	m	()Z	i	isThundering
	m	()I	j	getThunderTime
	m	()Z	k	isRaining
	m	()I	l	getRainTime
	m	()Lcas;	m	getGameType
	m	()Z	n	isHardcore
	m	()Z	o	getAllowCommands
	m	()Z	p	isInitialized
	m	()Lcar;	q	getGameRules
	m	()Lcql$c;	r	getWorldBorder
	m	()Lawe;	s	getDifficulty
	m	()Z	t	isDifficultyLocked
	m	()Ldpg;	u	getScheduledEvents
	m	()I	v	getWanderingTraderSpawnDelay
	m	()I	w	getWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	x	getWanderingTraderId
	m	()Lok;	y	getLoadedPlayerTag
	m	()I	z	getVersion
	f	Lcql$c;	A	worldBorder
	f	Lok;	B	endDragonFightData
	f	Lok;	C	customBossEvents
	f	I	D	wanderingTraderSpawnDelay
	f	I	E	wanderingTraderSpawnChance
	f	Ljava/util/UUID;	F	wanderingTraderId
	f	Ljava/util/Set;	G	knownServerBrands
	f	Z	H	wasModded
	f	Ldpg;	I	scheduledEvents
	f	Ljava/lang/String;	a	PLAYER
	f	Ljava/lang/String;	b	WORLD_GEN_SETTINGS
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Lcaz;	f	settings
	f	Lcut;	g	worldGenSettings
	f	Lcom/mojang/serialization/Lifecycle;	h	worldGenSettingsLifecycle
	f	I	i	xSpawn
	f	I	j	ySpawn
	f	I	k	zSpawn
	f	F	l	spawnAngle
	f	J	m	gameTime
	f	J	n	dayTime
	f	Lcom/mojang/datafixers/DataFixer;	o	fixerUpper
	f	I	p	playerDataVersion
	f	Z	q	upgradedPlayerTag
	f	Lok;	r	loadedPlayerTag
	f	I	s	version
	f	I	t	clearWeatherTime
	f	Z	u	raining
	f	I	v	rainTime
	f	Z	w	thundering
	f	I	x	thunderTime
	f	Z	y	initialized
	f	Z	z	difficultyLocked
c	dku	net/minecraft/world/level/storage/ServerLevelData
	m	(I)V	a	setClearWeatherTime
	m	(J)V	a	setGameTime
	m	(Lcas;)V	a	setGameType
	m	(Lcql$c;)V	a	setWorldBorder
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
	m	(Lr;Lcax;)V	a	fillCrashReportCategory
	m	(Z)V	a	setThundering
	m	(J)V	b	setDayTime
	m	(Z)V	c	setInitialized
	m	(I)V	e	setThunderTime
	m	(I)V	f	setRainTime
	m	()Ljava/lang/String;	g	getLevelName
	m	(I)V	g	setWanderingTraderSpawnDelay
	m	()I	h	getClearWeatherTime
	m	(I)V	h	setWanderingTraderSpawnChance
	m	()I	j	getThunderTime
	m	()I	l	getRainTime
	m	()Lcas;	m	getGameType
	m	()Z	o	getAllowCommands
	m	()Z	p	isInitialized
	m	()Lcql$c;	r	getWorldBorder
	m	()Ldpg;	u	getScheduledEvents
	m	()I	v	getWanderingTraderSpawnDelay
	m	()I	w	getWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	x	getWanderingTraderId
	m	()Ljava/lang/String;	y	lambda$fillCrashReportCategory$1
	m	()Ljava/lang/String;	z	lambda$fillCrashReportCategory$0
c	dkv	net/minecraft/world/level/storage/WorldData
	m	()Lcut;	A	worldGenSettings
	m	()Lcom/mojang/serialization/Lifecycle;	B	worldGenSettingsLifecycle
	m	()Lok;	C	endDragonFightData
	m	()Lcaj;	D	getDataPackConfig
	m	()Lok;	E	getCustomBossEvents
	m	()Z	F	wasModded
	m	()Ljava/util/Set;	G	getKnownServerBrands
	m	()Ldku;	H	overworldData
	m	()Lcaz;	I	getLevelSettings
	m	()Ljava/lang/String;	a	lambda$fillCrashReportCategory$2
	m	(Lawe;)V	a	setDifficulty
	m	(Lcaj;)V	a	setDataPackConfig
	m	(Lcas;)V	a	setGameType
	m	(Lhc;Lok;)Lok;	a	createTag
	m	(Ljava/lang/String;Z)V	a	setModdedInfo
	m	(Lok;)V	a	setEndDragonFightData
	m	(Lr;)V	a	fillCrashReportCategory
	m	()Ljava/lang/String;	b	lambda$fillCrashReportCategory$1
	m	(Lok;)V	b	setCustomBossEvents
	m	()Ljava/lang/String;	c	lambda$fillCrashReportCategory$0
	m	(Z)V	d	setDifficultyLocked
	m	()Ljava/lang/String;	g	getLevelName
	m	(I)Ljava/lang/String;	i	getStorageVersionName
	m	()Lcas;	m	getGameType
	m	()Z	n	isHardcore
	m	()Z	o	getAllowCommands
	m	()Lcar;	q	getGameRules
	m	()Lawe;	s	getDifficulty
	m	()Z	t	isDifficultyLocked
	m	()Lok;	y	getLoadedPlayerTag
	m	()I	z	getVersion
	f	I	c	ANVIL_VERSION_ID
	f	I	d	MCREGION_VERSION_ID
c	dkw	net/minecraft/world/level/storage/WritableLevelData
	m	(F)V	a	setSpawnAngle
	m	(Lgj;F)V	a	setSpawn
	m	(I)V	b	setXSpawn
	m	(I)V	c	setYSpawn
	m	(I)V	d	setZSpawn
c	dkx	net/minecraft/world/level/storage/loot/BuiltInLootTables
	m	()Ljava/util/Set;	a	all
	m	(Ljava/lang/String;)Lyt;	a	register
	m	(Lyt;)Lyt;	a	register
	f	Lyt;	A	JUNGLE_TEMPLE
	f	Lyt;	B	JUNGLE_TEMPLE_DISPENSER
	f	Lyt;	C	IGLOO_CHEST
	f	Lyt;	D	WOODLAND_MANSION
	f	Lyt;	E	UNDERWATER_RUIN_SMALL
	f	Lyt;	F	UNDERWATER_RUIN_BIG
	f	Lyt;	G	BURIED_TREASURE
	f	Lyt;	H	SHIPWRECK_MAP
	f	Lyt;	I	SHIPWRECK_SUPPLY
	f	Lyt;	J	SHIPWRECK_TREASURE
	f	Lyt;	K	PILLAGER_OUTPOST
	f	Lyt;	L	BASTION_TREASURE
	f	Lyt;	M	BASTION_OTHER
	f	Lyt;	N	BASTION_BRIDGE
	f	Lyt;	O	BASTION_HOGLIN_STABLE
	f	Lyt;	P	RUINED_PORTAL
	f	Lyt;	Q	SHEEP_WHITE
	f	Lyt;	R	SHEEP_ORANGE
	f	Lyt;	S	SHEEP_MAGENTA
	f	Lyt;	T	SHEEP_LIGHT_BLUE
	f	Lyt;	U	SHEEP_YELLOW
	f	Lyt;	V	SHEEP_LIME
	f	Lyt;	W	SHEEP_PINK
	f	Lyt;	X	SHEEP_GRAY
	f	Lyt;	Y	SHEEP_LIGHT_GRAY
	f	Lyt;	Z	SHEEP_CYAN
	f	Ljava/util/Set;	aA	IMMUTABLE_LOCATIONS
	f	Lyt;	a	EMPTY
	f	Lyt;	aa	SHEEP_PURPLE
	f	Lyt;	ab	SHEEP_BLUE
	f	Lyt;	ac	SHEEP_BROWN
	f	Lyt;	ad	SHEEP_GREEN
	f	Lyt;	ae	SHEEP_RED
	f	Lyt;	af	SHEEP_BLACK
	f	Lyt;	ag	FISHING
	f	Lyt;	ah	FISHING_JUNK
	f	Lyt;	ai	FISHING_TREASURE
	f	Lyt;	aj	FISHING_FISH
	f	Lyt;	ak	CAT_MORNING_GIFT
	f	Lyt;	al	ARMORER_GIFT
	f	Lyt;	am	BUTCHER_GIFT
	f	Lyt;	an	CARTOGRAPHER_GIFT
	f	Lyt;	ao	CLERIC_GIFT
	f	Lyt;	ap	FARMER_GIFT
	f	Lyt;	aq	FISHERMAN_GIFT
	f	Lyt;	ar	FLETCHER_GIFT
	f	Lyt;	as	LEATHERWORKER_GIFT
	f	Lyt;	at	LIBRARIAN_GIFT
	f	Lyt;	au	MASON_GIFT
	f	Lyt;	av	SHEPHERD_GIFT
	f	Lyt;	aw	TOOLSMITH_GIFT
	f	Lyt;	ax	WEAPONSMITH_GIFT
	f	Lyt;	ay	PIGLIN_BARTERING
	f	Ljava/util/Set;	az	LOCATIONS
	f	Lyt;	b	SPAWN_BONUS_CHEST
	f	Lyt;	c	END_CITY_TREASURE
	f	Lyt;	d	SIMPLE_DUNGEON
	f	Lyt;	e	VILLAGE_WEAPONSMITH
	f	Lyt;	f	VILLAGE_TOOLSMITH
	f	Lyt;	g	VILLAGE_ARMORER
	f	Lyt;	h	VILLAGE_CARTOGRAPHER
	f	Lyt;	i	VILLAGE_MASON
	f	Lyt;	j	VILLAGE_SHEPHERD
	f	Lyt;	k	VILLAGE_BUTCHER
	f	Lyt;	l	VILLAGE_FLETCHER
	f	Lyt;	m	VILLAGE_FISHER
	f	Lyt;	n	VILLAGE_TANNERY
	f	Lyt;	o	VILLAGE_TEMPLE
	f	Lyt;	p	VILLAGE_DESERT_HOUSE
	f	Lyt;	q	VILLAGE_PLAINS_HOUSE
	f	Lyt;	r	VILLAGE_TAIGA_HOUSE
	f	Lyt;	s	VILLAGE_SNOWY_HOUSE
	f	Lyt;	t	VILLAGE_SAVANNA_HOUSE
	f	Lyt;	u	ABANDONED_MINESHAFT
	f	Lyt;	v	NETHER_BRIDGE
	f	Lyt;	w	STRONGHOLD_LIBRARY
	f	Lyt;	x	STRONGHOLD_CROSSING
	f	Lyt;	y	STRONGHOLD_CORRIDOR
	f	Lyt;	z	DESERT_PYRAMID
c	dky	net/minecraft/world/level/storage/loot/Deserializers
	m	()Lcom/google/gson/GsonBuilder;	a	createConditionSerializer
	m	()Lcom/google/gson/GsonBuilder;	b	createFunctionSerializer
	m	()Lcom/google/gson/GsonBuilder;	c	createLootTableSerializer
c	dkz	net/minecraft/world/level/storage/loot/GsonAdapterFactory
	m	(Lhb;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Ldkz$a;	a	builder
c	dkz$a	net/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder
	m	()Ljava/lang/Object;	a	build
	m	(Ldlj;)Ldkz$a;	a	withDefaultType
	m	(Ldlj;Ldkz$b;)Ldkz$a;	a	withInlineSerializer
	f	Lhb;	a	registry
	f	Ljava/lang/String;	b	elementName
	f	Ljava/lang/String;	c	typeKey
	f	Ljava/util/function/Function;	d	typeGetter
	f	Lcom/mojang/datafixers/util/Pair;	e	inlineType
	f	Ldlj;	f	defaultType
c	dkz$b	net/minecraft/world/level/storage/loot/GsonAdapterFactory$InlineSerializer
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	dkz$c	net/minecraft/world/level/storage/loot/GsonAdapterFactory$JsonAdapter
	f	Lhb;	a	registry
	f	Ljava/lang/String;	b	elementName
	f	Ljava/lang/String;	c	typeKey
	f	Ljava/util/function/Function;	d	typeGetter
	f	Ldlj;	e	defaultType
	f	Lcom/mojang/datafixers/util/Pair;	f	inlineType
c	dla	net/minecraft/world/level/storage/loot/IntRange
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(I)Ldla;	a	exact
	m	(II)Ldla;	a	range
	m	(Ldlc;I)I	a	clamp
	m	(Ldoq;Ldlc;I)Z	a	lambda$new$5
	m	(Ldoq;Ldoq;Ldlc;I)Z	a	lambda$new$7
	m	(I)Ldla;	b	lowerBound
	m	(Ldlc;I)Z	b	test
	m	(Ldoq;Ldlc;I)I	b	lambda$new$4
	m	(Ldoq;Ldoq;Ldlc;I)I	b	lambda$new$6
	m	(I)Ldla;	c	upperBound
	m	(Ldlc;I)Z	c	lambda$new$1
	m	(Ldoq;Ldlc;I)Z	c	lambda$new$3
	m	(Ldlc;I)I	d	lambda$new$0
	m	(Ldoq;Ldlc;I)I	d	lambda$new$2
	f	Ldoq;	a	min
	f	Ldoq;	b	max
	f	Ldla$b;	c	limiter
	f	Ldla$a;	d	predicate
c	dla$a	net/minecraft/world/level/storage/loot/IntRange$IntChecker
c	dla$b	net/minecraft/world/level/storage/loot/IntRange$IntLimiter
c	dla$c	net/minecraft/world/level/storage/loot/IntRange$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldla;	a	deserialize
	m	(Ldla;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	dlb	net/minecraft/world/level/storage/loot/ItemModifierManager
	m	()Ljava/util/Set;	a	getKeys
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lyt;Lcom/google/gson/JsonElement;)V	a	lambda$apply$0
	m	(Ldlk;Lyt;Ldmn;)V	a	lambda$apply$1
	m	(Ljava/lang/Object;Laga;Lasy;)V	a	apply
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	lambda$apply$2
	m	(Ljava/util/Map;Laga;Lasy;)V	a	apply
	m	(Lyt;)Ldmn;	a	get
	m	(Lyt;Ldmn;)Ldmn;	a	get
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ldlh;	c	predicateManager
	f	Ldlg;	d	lootTables
	f	Ljava/util/Map;	e	functions
c	dlb$a	net/minecraft/world/level/storage/loot/ItemModifierManager$FunctionSequence
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	apply
	f	[Ldmn;	a	functions
	f	Ljava/util/function/BiFunction;	b	compositeFunction
c	dlc	net/minecraft/world/level/storage/loot/LootContext
	m	()Ljava/util/Random;	a	getRandom
	m	(Ldlf;)Z	a	addVisitedTable
	m	(Ldng;)Z	a	hasParam
	m	(Ldnv;)Z	a	addVisitedCondition
	m	(Lyt;)Ldlf;	a	getLootTable
	m	(Lyt;Ljava/util/function/Consumer;)V	a	addDynamicDrops
	m	()F	b	getLuck
	m	(Ldlf;)V	b	removeVisitedTable
	m	(Ldng;)Ljava/lang/Object;	b	getParam
	m	(Ldnv;)V	b	removeVisitedCondition
	m	(Lyt;)Ldnv;	b	getCondition
	m	()Ladw;	c	getLevel
	m	(Ldng;)Ljava/lang/Object;	c	getParamOrNull
	f	Ljava/util/Random;	a	random
	f	F	b	luck
	f	Ladw;	c	level
	f	Ljava/util/function/Function;	d	lootTables
	f	Ljava/util/Set;	e	visitedTables
	f	Ljava/util/function/Function;	f	conditions
	f	Ljava/util/Set;	g	visitedConditions
	f	Ljava/util/Map;	h	params
	f	Ljava/util/Map;	i	dynamicDrops
c	dlc$a	net/minecraft/world/level/storage/loot/LootContext$Builder
	m	()Ladw;	a	getLevel
	m	(F)Ldlc$a;	a	withLuck
	m	(J)Ldlc$a;	a	withOptionalRandomSeed
	m	(JLjava/util/Random;)Ldlc$a;	a	withOptionalRandomSeed
	m	(Ldng;)Ljava/lang/Object;	a	getParameter
	m	(Ldng;Ljava/lang/Object;)Ldlc$a;	a	withParameter
	m	(Ldnh;)Ldlc;	a	create
	m	(Ljava/util/Random;)Ldlc$a;	a	withRandom
	m	(Lyt;Ldlc$b;)Ldlc$a;	a	withDynamicDrop
	m	(Ldng;)Ljava/lang/Object;	b	getOptionalParameter
	m	(Ldng;Ljava/lang/Object;)Ldlc$a;	b	withOptionalParameter
	f	Ladw;	a	level
	f	Ljava/util/Map;	b	params
	f	Ljava/util/Map;	c	dynamicDrops
	f	Ljava/util/Random;	d	random
	f	F	e	luck
c	dlc$b	net/minecraft/world/level/storage/loot/LootContext$DynamicDrop
c	dlc$c	net/minecraft/world/level/storage/loot/LootContext$EntityTarget
	m	()Ldng;	a	getParam
	m	(Ljava/lang/String;)Ldlc$c;	a	getByName
	m	()[Ldlc$c;	b	$values
	f	Ldlc$c;	a	THIS
	f	Ldlc$c;	b	KILLER
	f	Ldlc$c;	c	DIRECT_KILLER
	f	Ldlc$c;	d	KILLER_PLAYER
	f	Ljava/lang/String;	e	name
	f	Ldng;	f	param
	f	[Ldlc$c;	g	$VALUES
c	dlc$c$a	net/minecraft/world/level/storage/loot/LootContext$EntityTarget$Serializer
	m	(Lcom/google/gson/stream/JsonReader;)Ldlc$c;	a	read
	m	(Lcom/google/gson/stream/JsonWriter;Ldlc$c;)V	a	write
c	dld	net/minecraft/world/level/storage/loot/LootContextUser
	m	(Ldlk;)V	a	validate
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	dle	net/minecraft/world/level/storage/loot/LootPool
	m	()Ldle$a;	a	lootPool
	m	(Ldlc;Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableInt;Ldlt;)V	a	lambda$addRandomItem$0
	m	(Ldlk;)V	a	validate
	m	(Ljava/util/function/Consumer;Ldlc;)V	a	addRandomItems
	m	(Ljava/util/function/Consumer;Ldlc;)V	b	addRandomItem
	f	[Ldlu;	a	entries
	f	[Ldnv;	b	conditions
	f	Ljava/util/function/Predicate;	c	compositeCondition
	f	[Ldmn;	d	functions
	f	Ljava/util/function/BiFunction;	e	compositeFunction
	f	Ldoq;	f	rolls
	f	Ldoq;	g	bonusRolls
c	dle$a	net/minecraft/world/level/storage/loot/LootPool$Builder
	m	()Ldle$a;	a	unwrap
	m	(Ldlu$a;)Ldle$a;	a	add
	m	(Ldmn$a;)Ldle$a;	a	apply
	m	(Ldnv$a;)Ldle$a;	a	when
	m	(Ldoq;)Ldle$a;	a	setRolls
	m	()Ldle;	b	build
	m	(Ldmn$a;)Ljava/lang/Object;	b	apply
	m	(Ldnv$a;)Ljava/lang/Object;	b	when
	m	(Ldoq;)Ldle$a;	b	setBonusRolls
	m	()Ljava/lang/Object;	c	unwrap
	f	Ljava/util/List;	a	entries
	f	Ljava/util/List;	b	conditions
	f	Ljava/util/List;	c	functions
	f	Ldoq;	d	rolls
	f	Ldoq;	e	bonusRolls
c	dle$b	net/minecraft/world/level/storage/loot/LootPool$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldle;	a	deserialize
	m	(Ldle;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	dlf	net/minecraft/world/level/storage/loot/LootTable
	m	()Ldnh;	a	getParamSet
	m	(Lawa;Ldlc;)V	a	fill
	m	(Lawa;Ljava/util/Random;)Ljava/util/List;	a	getAvailableSlots
	m	(Ldlc;)Ljava/util/List;	a	getRandomItems
	m	(Ldlc;Ljava/util/function/Consumer;)V	a	getRandomItemsRaw
	m	(Ldlk;)V	a	validate
	m	(Ljava/util/List;ILjava/util/Random;)V	a	shuffleAndSplitItems
	m	(Ljava/util/function/Consumer;)Ljava/util/function/Consumer;	a	createStackSplitter
	m	(Ljava/util/function/Consumer;Lbuw;)V	a	lambda$createStackSplitter$0
	m	()Ldlf$a;	b	lootTable
	m	(Ldlc;Ljava/util/function/Consumer;)V	b	getRandomItems
	f	Ldlf;	a	EMPTY
	f	Ldnh;	b	DEFAULT_PARAM_SET
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ldnh;	d	paramSet
	f	[Ldle;	e	pools
	f	[Ldmn;	f	functions
	f	Ljava/util/function/BiFunction;	g	compositeFunction
c	dlf$a	net/minecraft/world/level/storage/loot/LootTable$Builder
	m	()Ldlf$a;	a	unwrap
	m	(Ldle$a;)Ldlf$a;	a	withPool
	m	(Ldmn$a;)Ldlf$a;	a	apply
	m	(Ldnh;)Ldlf$a;	a	setParamSet
	m	()Ldlf;	b	build
	m	(Ldmn$a;)Ljava/lang/Object;	b	apply
	m	()Ljava/lang/Object;	c	unwrap
	f	Ljava/util/List;	a	pools
	f	Ljava/util/List;	b	functions
	f	Ldnh;	c	paramSet
c	dlf$b	net/minecraft/world/level/storage/loot/LootTable$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldlf;	a	deserialize
	m	(Ldlf;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	dlg	net/minecraft/world/level/storage/loot/LootTables
	m	()Ljava/util/Set;	a	getIds
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lyt;Lcom/google/gson/JsonElement;)V	a	lambda$apply$0
	m	(Ldlf;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Ldlk;Lyt;Ldlf;)V	a	validate
	m	(Ljava/lang/Object;Laga;Lasy;)V	a	apply
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	lambda$apply$2
	m	(Ljava/util/Map;Laga;Lasy;)V	a	apply
	m	(Lyt;)Ldlf;	a	get
	m	(Ldlk;Lyt;Ldlf;)V	b	lambda$apply$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/util/Map;	c	tables
	f	Ldlh;	d	predicateManager
c	dlh	net/minecraft/world/level/storage/loot/PredicateManager
	m	()Ljava/util/Set;	a	getKeys
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lyt;Lcom/google/gson/JsonElement;)V	a	lambda$apply$0
	m	(Ldlk;Lyt;Ldnv;)V	a	lambda$apply$2
	m	(Ljava/lang/Object;Laga;Lasy;)V	a	apply
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	lambda$apply$3
	m	(Ljava/util/Map;Laga;Lasy;)V	a	apply
	m	(Lyt;)Ldnv;	a	get
	m	(Lyt;)Ldlf;	b	lambda$apply$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/util/Map;	c	conditions
c	dlh$a	net/minecraft/world/level/storage/loot/PredicateManager$CompositePredicate
	m	()Ldnw;	a	getType
	m	(Ldlc;)Z	a	test
	m	(Ldlk;)V	a	validate
	f	[Ldnv;	a	terms
	f	Ljava/util/function/Predicate;	b	composedPredicate
c	dli	net/minecraft/world/level/storage/loot/Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
c	dlj	net/minecraft/world/level/storage/loot/SerializerType
	m	()Ldli;	a	getSerializer
	f	Ldli;	a	serializer
c	dlk	net/minecraft/world/level/storage/loot/ValidationContext
	m	()Lcom/google/common/collect/Multimap;	a	getProblems
	m	(Ldld;)V	a	validateUser
	m	(Ldnh;)Ldlk;	a	setParams
	m	(Ljava/lang/String;)V	a	reportProblem
	m	(Ljava/lang/String;Lyt;)Ldlk;	a	enterTable
	m	(Lyt;)Z	a	hasVisitedTable
	m	()Ljava/lang/String;	b	getContext
	m	(Ljava/lang/String;)Ldlk;	b	forChild
	m	(Ljava/lang/String;Lyt;)Ldlk;	b	enterCondition
	m	(Lyt;)Z	b	hasVisitedCondition
	m	()Ljava/lang/String;	c	lambda$new$0
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$enterCondition$3
	m	(Lyt;)Ldlf;	c	resolveLootTable
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$enterTable$2
	m	(Lyt;)Ldnv;	d	resolveCondition
	m	(Ljava/lang/String;)Ljava/lang/String;	e	lambda$forChild$1
	f	Lcom/google/common/collect/Multimap;	a	problems
	f	Ljava/util/function/Supplier;	b	context
	f	Ldnh;	c	params
	f	Ljava/util/function/Function;	d	conditionResolver
	f	Ljava/util/Set;	e	visitedConditions
	f	Ljava/util/function/Function;	f	tableResolver
	f	Ljava/util/Set;	g	visitedTables
	f	Ljava/lang/String;	h	contextCache
c	dll	net/minecraft/world/level/storage/loot/entries/AlternativesEntry
	m	()Ldlv;	a	getType
	m	(Ldlk;)V	a	validate
	m	([Ldlm;)Ldlm;	a	compose
	m	([Ldlm;Ldlc;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
	m	([Ldlu$a;)Ldll$a;	a	alternatives
c	dll$a	net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder
	m	()Ldll$a;	a	getThis
	m	(Ldlu$a;)Ldll$a;	a	otherwise
	m	()Ldlu;	b	build
	m	()Ldlu$a;	d	getThis
	f	Ljava/util/List;	a	entries
c	dlm	net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer
	m	(Ldlc;Ljava/util/function/Consumer;)Z	a	lambda$static$1
	m	(Ldlm;Ldlc;Ljava/util/function/Consumer;)Z	a	lambda$or$3
	m	(Ldlc;Ljava/util/function/Consumer;)Z	b	lambda$static$0
	m	(Ldlm;Ldlc;Ljava/util/function/Consumer;)Z	b	lambda$and$2
	f	Ldlm;	a	ALWAYS_FALSE
	f	Ldlm;	b	ALWAYS_TRUE
c	dln	net/minecraft/world/level/storage/loot/entries/CompositeEntryBase
	m	(Ldlk;)V	a	validate
	m	(Ldln$a;)Ldlu$b;	a	createSerializer
	m	([Ldlm;)Ldlm;	a	compose
	f	[Ldlu;	c	children
	f	Ldlm;	e	composedChildren
c	dln$1	net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$1
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldln;	a	deserializeCustom
	m	(Lcom/google/gson/JsonObject;Ldln;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Ldlu;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldlu;	b	deserializeCustom
	f	Ldln$a;	a	val$constructor
c	dln$a	net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor
c	dlo	net/minecraft/world/level/storage/loot/entries/DynamicLoot
	m	()Ldlv;	a	getType
	m	(Ljava/util/function/Consumer;Ldlc;)V	a	createItemStack
	m	(Lyt;)Ldlw$a;	a	dynamicEntry
	m	(Lyt;II[Ldnv;[Ldmn;)Ldlw;	a	lambda$dynamicEntry$0
	f	Lyt;	i	name
c	dlo$a	net/minecraft/world/level/storage/loot/entries/DynamicLoot$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldnv;[Ldmn;)Ldlo;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldlo;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Ldlu;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Ldlw;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldnv;[Ldmn;)Ldlw;	b	deserialize
c	dlp	net/minecraft/world/level/storage/loot/entries/EmptyLootItem
	m	()Ldlv;	a	getType
	m	(Ljava/util/function/Consumer;Ldlc;)V	a	createItemStack
	m	()Ldlw$a;	b	emptyItem
c	dlp$a	net/minecraft/world/level/storage/loot/entries/EmptyLootItem$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldnv;[Ldmn;)Ldlp;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldnv;[Ldmn;)Ldlw;	b	deserialize
c	dlq	net/minecraft/world/level/storage/loot/entries/EntryGroup
	m	()Ldlv;	a	getType
	m	(Ldlm;Ldlm;Ldlc;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
	m	([Ldlm;)Ldlm;	a	compose
	m	([Ldlm;Ldlc;Ljava/util/function/Consumer;)Z	a	lambda$compose$1
	m	([Ldlu$a;)Ldlq$a;	a	list
c	dlq$a	net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder
	m	()Ldlq$a;	a	getThis
	m	()Ldlu;	b	build
	m	(Ldlu$a;)Ldlq$a;	b	append
	m	()Ldlu$a;	d	getThis
	f	Ljava/util/List;	a	entries
c	dlr	net/minecraft/world/level/storage/loot/entries/LootItem
	m	()Ldlv;	a	getType
	m	(Lcau;)Ldlw$a;	a	lootTableItem
	m	(Lcau;II[Ldnv;[Ldmn;)Ldlw;	a	lambda$lootTableItem$0
	m	(Ljava/util/function/Consumer;Ldlc;)V	a	createItemStack
	f	Lbus;	i	item
c	dlr$a	net/minecraft/world/level/storage/loot/entries/LootItem$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldnv;[Ldmn;)Ldlr;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldlr;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Ldlu;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Ldlw;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldnv;[Ldmn;)Ldlw;	b	deserialize
c	dls	net/minecraft/world/level/storage/loot/entries/LootPoolEntries
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Ljava/lang/String;Ldli;)Ldlv;	a	register
	f	Ldlv;	a	EMPTY
	f	Ldlv;	b	ITEM
	f	Ldlv;	c	REFERENCE
	f	Ldlv;	d	DYNAMIC
	f	Ldlv;	e	TAG
	f	Ldlv;	f	ALTERNATIVES
	f	Ldlv;	g	SEQUENCE
	f	Ldlv;	h	GROUP
c	dlt	net/minecraft/world/level/storage/loot/entries/LootPoolEntry
	m	(F)I	a	getWeight
	m	(Ljava/util/function/Consumer;Ldlc;)V	a	createItemStack
c	dlu	net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer
	m	()Ldlv;	a	getType
	m	(Ldlc;)Z	a	canRun
	m	(Ldlk;)V	a	validate
	f	Ljava/util/function/Predicate;	c	compositeCondition
	f	[Ldnv;	d	conditions
c	dlu$a	net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder
	m	(Ldlu$a;)Ldll$a;	a	otherwise
	m	(Ldnv$a;)Ldlu$a;	a	when
	m	()Ldlu;	b	build
	m	(Ldlu$a;)Ldlq$a;	b	append
	m	(Ldnv$a;)Ljava/lang/Object;	b	when
	m	()Ljava/lang/Object;	c	unwrap
	m	(Ldlu$a;)Ldly$a;	c	then
	m	()Ldlu$a;	d	getThis
	m	()Ldlu$a;	e	unwrap
	m	()[Ldnv;	f	getConditions
	f	Ljava/util/List;	a	conditions
c	dlu$b	net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldlu;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldlu;	b	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldlu;	b	deserializeCustom
	m	(Lcom/google/gson/JsonObject;Ldlu;Lcom/google/gson/JsonSerializationContext;)V	b	serialize
c	dlv	net/minecraft/world/level/storage/loot/entries/LootPoolEntryType
c	dlw	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer
	m	(Ldlk;)V	a	validate
	m	(Ldlw$d;)Ldlw$a;	a	simpleBuilder
	m	(Ljava/util/function/Consumer;Ldlc;)V	a	createItemStack
	f	I	c	DEFAULT_WEIGHT
	f	I	e	DEFAULT_QUALITY
	f	I	f	weight
	f	I	g	quality
	f	[Ldmn;	h	functions
	f	Ljava/util/function/BiFunction;	i	compositeFunction
	f	Ldlt;	j	entry
c	dlw$1	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$1
	m	(Ljava/util/function/Consumer;Ldlc;)V	a	createItemStack
	f	Ldlw;	a	this$0
c	dlw$a	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder
	m	()[Ldmn;	a	getFunctions
	m	(I)Ldlw$a;	a	setWeight
	m	(Ldmn$a;)Ldlw$a;	a	apply
	m	(I)Ldlw$a;	b	setQuality
	m	(Ldmn$a;)Ljava/lang/Object;	b	apply
	f	I	a	weight
	f	I	b	quality
	f	Ljava/util/List;	c	functions
c	dlw$b	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder
	m	()Ldlu;	b	build
	m	()Ldlu$a;	d	getThis
	m	()Ldlw$b;	g	getThis
	f	Ldlw$d;	c	constructor
c	dlw$c	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase
	m	(F)I	a	getWeight
	f	Ldlw;	b	this$0
c	dlw$d	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor
c	dlw$e	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldlw;	a	deserializeCustom
	m	(Lcom/google/gson/JsonObject;Ldlu;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Ldlw;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldnv;[Ldmn;)Ldlw;	b	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldlu;	b	deserializeCustom
c	dlx	net/minecraft/world/level/storage/loot/entries/LootTableReference
	m	()Ldlv;	a	getType
	m	(Ldlk;)V	a	validate
	m	(Ljava/util/function/Consumer;Ldlc;)V	a	createItemStack
	m	(Lyt;)Ldlw$a;	a	lootTableReference
	m	(Lyt;II[Ldnv;[Ldmn;)Ldlw;	a	lambda$lootTableReference$0
	f	Lyt;	i	name
c	dlx$a	net/minecraft/world/level/storage/loot/entries/LootTableReference$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldnv;[Ldmn;)Ldlx;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldlu;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Ldlw;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Ldlx;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldnv;[Ldmn;)Ldlw;	b	deserialize
c	dly	net/minecraft/world/level/storage/loot/entries/SequentialEntry
	m	()Ldlv;	a	getType
	m	([Ldlm;)Ldlm;	a	compose
	m	([Ldlm;Ldlc;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
	m	([Ldlu$a;)Ldly$a;	a	sequential
c	dly$a	net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder
	m	()Ldly$a;	a	getThis
	m	()Ldlu;	b	build
	m	(Ldlu$a;)Ldly$a;	c	then
	m	()Ldlu$a;	d	getThis
	f	Ljava/util/List;	a	entries
c	dlz	net/minecraft/world/level/storage/loot/entries/TagEntry
	m	()Ldlv;	a	getType
	m	(Laif;)Ldlw$a;	a	tagContents
	m	(Laif;II[Ldnv;[Ldmn;)Ldlw;	a	lambda$expandTag$2
	m	(Ldlc;Ljava/util/function/Consumer;)Z	a	expandTag
	m	(Ljava/util/function/Consumer;Ldlc;)V	a	createItemStack
	m	(Ljava/util/function/Consumer;Lgs;)V	a	lambda$createItemStack$0
	m	(Laif;)Ldlw$a;	b	expandTag
	m	(Laif;II[Ldnv;[Ldmn;)Ldlw;	b	lambda$tagContents$1
	f	Laif;	i	tag
	f	Z	j	expand
c	dlz$1	net/minecraft/world/level/storage/loot/entries/TagEntry$1
	m	(Ljava/util/function/Consumer;Ldlc;)V	a	createItemStack
	f	Lgs;	a	val$item
	f	Ldlz;	c	this$0
c	dlz$a	net/minecraft/world/level/storage/loot/entries/TagEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldnv;[Ldmn;)Ldlz;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldlu;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Ldlw;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Ldlz;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldnv;[Ldmn;)Ldlw;	b	deserialize
c	dma	net/minecraft/world/level/storage/loot/entries/package-info
c	dmb	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Lbyq;)Ldmm$a;	a	addOreBonusCount
	m	(Lbyq;FI)Ldmm$a;	a	addBonusBinomialDistributionCount
	m	(Lbyq;I)Ldmm$a;	a	addUniformBonusCount
	m	(Lbyq;IF[Ldnv;)Ldmn;	a	lambda$addBonusBinomialDistributionCount$0
	m	(Lbyq;I[Ldnv;)Ldmn;	a	lambda$addUniformBonusCount$3
	m	(Lbyq;[Ldnv;)Ldmn;	a	lambda$addUniformBonusCount$2
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lbyq;)Ldmm$a;	b	addUniformBonusCount
	m	(Lbyq;[Ldnv;)Ldmn;	b	lambda$addOreBonusCount$1
	f	Ljava/util/Map;	a	FORMULAS
	f	Lbyq;	b	enchantment
	f	Ldmb$b;	c	formula
c	dmb$a	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount
	m	()Lyt;	a	getType
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldmb$b;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	serializeParams
	m	(Ljava/util/Random;II)I	a	calculateNewCount
	f	Lyt;	a	TYPE
	f	I	b	extraRounds
	f	F	c	probability
c	dmb$b	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula
	m	()Lyt;	a	getType
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	serializeParams
	m	(Ljava/util/Random;II)I	a	calculateNewCount
c	dmb$c	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaDeserializer
c	dmb$d	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops
	m	()Lyt;	a	getType
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldmb$b;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	serializeParams
	m	(Ljava/util/Random;II)I	a	calculateNewCount
	f	Lyt;	a	TYPE
c	dmb$e	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmb;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmb;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lyt;)Lcom/google/gson/JsonParseException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmb$f	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount
	m	()Lyt;	a	getType
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldmb$b;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	serializeParams
	m	(Ljava/util/Random;II)I	a	calculateNewCount
	f	Lyt;	a	TYPE
	f	I	b	bonusMultiplier
c	dmc	net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	()Ldmm$a;	c	explosionDecay
c	dmc$a	net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmc;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmd	net/minecraft/world/level/storage/loot/functions/CopyBlockState
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Lcdq;)Ldmd$a;	a	copyState
	m	(Lcov;Lcpy;)Ljava/lang/String;	a	serialize
	m	(Lok;Lcov;Lcpy;)V	a	lambda$run$0
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lcdq;	a	block
	f	Ljava/util/Set;	b	properties
c	dmd$a	net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder
	m	()Ldmd$a;	a	getThis
	m	(Lcpy;)Ldmd$a;	a	copy
	m	()Ldmn;	b	build
	m	()Ldmm$a;	d	getThis
	f	Lcdq;	a	block
	f	Ljava/util/Set;	b	properties
c	dmd$b	net/minecraft/world/level/storage/loot/functions/CopyBlockState$Serializer
	m	(Lcom/google/gson/JsonArray;Lcpy;)V	a	lambda$serialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmd;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmd;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Ljava/util/Set;Lcow;Lcom/google/gson/JsonElement;)V	a	lambda$deserialize$2
	m	(Lyt;)Ljava/lang/IllegalArgumentException;	a	lambda$deserialize$1
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dme	net/minecraft/world/level/storage/loot/functions/CopyNameFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Ldme$a;)Ldmm$a;	a	copyName
	m	(Ldme$a;[Ldnv;)Ldmn;	a	lambda$copyName$0
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldme$a;	a	source
c	dme$a	net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource
	m	()[Ldme$a;	a	$values
	m	(Ljava/lang/String;)Ldme$a;	a	getByName
	f	Ldme$a;	a	THIS
	f	Ldme$a;	b	KILLER
	f	Ldme$a;	c	KILLER_PLAYER
	f	Ldme$a;	d	BLOCK_ENTITY
	f	Ljava/lang/String;	e	name
	f	Ldng;	f	param
	f	[Ldme$a;	g	$VALUES
c	dme$b	net/minecraft/world/level/storage/loot/functions/CopyNameFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldme;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldme;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmf	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Lbuw;Lpd;Ldmf$b;)V	a	lambda$run$0
	m	(Ldlc$c;)Ldmf$a;	a	copyData
	m	(Ldoj;)Ldmf$a;	a	copyData
	m	(Ljava/lang/String;)Lec$g;	a	compileNbtPath
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldoj;	a	source
	f	Ljava/util/List;	b	operations
c	dmf$a	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder
	m	()Ldmf$a;	a	getThis
	m	(Ljava/lang/String;Ljava/lang/String;)Ldmf$a;	a	copy
	m	(Ljava/lang/String;Ljava/lang/String;Ldmf$c;)Ldmf$a;	a	copy
	m	()Ldmn;	b	build
	m	()Ldmm$a;	d	getThis
	f	Ldoj;	a	source
	f	Ljava/util/List;	b	ops
c	dmf$b	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation
	m	()Lcom/google/gson/JsonObject;	a	toJson
	m	(Lcom/google/gson/JsonObject;)Ldmf$b;	a	fromJson
	m	(Ljava/util/function/Supplier;Lpd;)V	a	apply
	f	Ljava/lang/String;	a	sourcePathText
	f	Lec$g;	b	sourcePath
	f	Ljava/lang/String;	c	targetPathText
	f	Lec$g;	d	targetPath
	f	Ldmf$c;	e	op
c	dmf$c	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy
	m	()[Ldmf$c;	a	$values
	m	(Ljava/lang/String;)Ldmf$c;	a	getByName
	m	(Lpd;Lec$g;Ljava/util/List;)V	a	merge
	f	Ldmf$c;	a	REPLACE
	f	Ldmf$c;	b	APPEND
	f	Ldmf$c;	c	MERGE
	f	Ljava/lang/String;	d	name
	f	[Ldmf$c;	e	$VALUES
c	dmf$c$1	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$1
	m	(Lpd;Lec$g;Ljava/util/List;)V	a	merge
c	dmf$c$2	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$2
	m	(Ljava/util/List;Lpd;)V	a	lambda$merge$1
	m	(Lpd;Lec$g;Ljava/util/List;)V	a	merge
	m	(Lpd;Lpd;)V	a	lambda$merge$0
c	dmf$c$3	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$3
	m	(Ljava/util/List;Lpd;)V	a	lambda$merge$1
	m	(Lpd;Lec$g;Ljava/util/List;)V	a	merge
	m	(Lpd;Lpd;)V	a	lambda$merge$0
c	dmf$d	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmf;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmf;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmg	net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Lbyq;Ljava/util/Random;)Lbuw;	a	enchantItem
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(ZLbuw;Lbyq;)Z	a	lambda$run$0
	m	([Ldnv;)Ldmn;	a	lambda$randomApplicableEnchantment$1
	m	()Ldmg$a;	c	randomEnchantment
	m	()Ldmm$a;	d	randomApplicableEnchantment
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/List;	b	enchantments
c	dmg$a	net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder
	m	()Ldmg$a;	a	getThis
	m	(Lbyq;)Ldmg$a;	a	withEnchantment
	m	()Ldmn;	b	build
	m	()Ldmm$a;	d	getThis
	f	Ljava/util/Set;	a	enchantments
c	dmg$b	net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmg;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmg;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmh	net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Ldoq;)Ldmh$a;	a	enchantWithLevels
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldoq;	a	levels
	f	Z	b	treasure
c	dmh$a	net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder
	m	()Ldmh$a;	a	getThis
	m	()Ldmn;	b	build
	m	()Ldmm$a;	d	getThis
	m	()Ldmh$a;	e	allowTreasure
	f	Ldoq;	a	levels
	f	Z	b	treasure
c	dmh$b	net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmh;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmh;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmi	net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ldmi$a;	c	makeExplorationMap
	f	Laif;	a	DEFAULT_FEATURE
	f	Ljava/lang/String;	b	DEFAULT_DECORATION_NAME
	f	Ldkc$a;	c	DEFAULT_DECORATION
	f	B	d	DEFAULT_ZOOM
	f	I	e	DEFAULT_SEARCH_RADIUS
	f	Z	f	DEFAULT_SKIP_EXISTING
	f	Lorg/slf4j/Logger;	h	LOGGER
	f	Laif;	i	destination
	f	Ldkc$a;	j	mapDecoration
	f	B	k	zoom
	f	I	l	searchRadius
	f	Z	m	skipKnownStructures
c	dmi$a	net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder
	m	()Ldmi$a;	a	getThis
	m	(B)Ldmi$a;	a	setZoom
	m	(I)Ldmi$a;	a	setSearchRadius
	m	(Laif;)Ldmi$a;	a	setDestination
	m	(Ldkc$a;)Ldmi$a;	a	setMapDecoration
	m	(Z)Ldmi$a;	a	setSkipKnownStructures
	m	()Ldmn;	b	build
	m	()Ldmm$a;	d	getThis
	f	Laif;	a	destination
	f	Ldkc$a;	b	mapDecoration
	f	B	c	zoom
	f	I	d	searchRadius
	f	Z	e	skipKnownStructures
c	dmi$b	net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Serializer
	m	(Lcom/google/gson/JsonObject;)Laif;	a	readStructure
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmi;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmi;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmj	net/minecraft/world/level/storage/loot/functions/FillPlayerHead
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Ldlc$c;)Ldmm$a;	a	fillPlayerHead
	m	(Ldlc$c;[Ldnv;)Ldmn;	a	lambda$fillPlayerHead$0
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldlc$c;	a	entityTarget
c	dmj$a	net/minecraft/world/level/storage/loot/functions/FillPlayerHead$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmj;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmj;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmk	net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder
	m	(Ldmn$a;)Ljava/lang/Object;	b	apply
	m	()Ljava/lang/Object;	c	unwrap
c	dml	net/minecraft/world/level/storage/loot/functions/LimitCount
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Ldla;)Ldmm$a;	a	limitCount
	m	(Ldla;[Ldnv;)Ldmn;	a	lambda$limitCount$0
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldla;	a	limiter
c	dml$a	net/minecraft/world/level/storage/loot/functions/LimitCount$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldml;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldml;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmm	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Ldlk;)V	a	validate
	m	(Ljava/util/function/Function;)Ldmm$a;	a	simpleBuilder
	m	(Lbuw;Ldlc;)Lbuw;	b	apply
	f	Ljava/util/function/Predicate;	a	compositePredicates
	f	[Ldnv;	g	predicates
c	dmm$a	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder
	m	(Ldnv$a;)Ldmm$a;	a	when
	m	(Ldnv$a;)Ljava/lang/Object;	b	when
	m	()Ljava/lang/Object;	c	unwrap
	m	()Ldmm$a;	d	getThis
	m	()Ldmm$a;	f	unwrap
	m	()[Ldnv;	g	getConditions
	f	Ljava/util/List;	a	conditions
c	dmm$b	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder
	m	()Ldmm$b;	a	getThis
	m	()Ldmn;	b	build
	m	()Ldmm$a;	d	getThis
	f	Ljava/util/function/Function;	a	constructor
c	dmm$c	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldmm;	b	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmn	net/minecraft/world/level/storage/loot/functions/LootItemFunction
	m	()Ldmo;	a	getType
	m	(Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Ldlc;)Ljava/util/function/Consumer;	a	decorate
	m	(Ljava/util/function/Consumer;Ljava/util/function/BiFunction;Ldlc;Lbuw;)V	a	lambda$decorate$0
c	dmn$a	net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder
	m	()Ldmn;	b	build
c	dmo	net/minecraft/world/level/storage/loot/functions/LootItemFunctionType
c	dmp	net/minecraft/world/level/storage/loot/functions/LootItemFunctions
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Lbuw;Ldlc;)Lbuw;	a	lambda$static$0
	m	(Ljava/lang/String;Ldli;)Ldmo;	a	register
	m	(Ljava/util/function/BiFunction;Ljava/util/function/BiFunction;Lbuw;Ldlc;)Lbuw;	a	lambda$compose$1
	m	([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;	a	compose
	m	([Ljava/util/function/BiFunction;Lbuw;Ldlc;)Lbuw;	a	lambda$compose$2
	f	Ljava/util/function/BiFunction;	a	IDENTITY
	f	Ldmo;	b	SET_COUNT
	f	Ldmo;	c	ENCHANT_WITH_LEVELS
	f	Ldmo;	d	ENCHANT_RANDOMLY
	f	Ldmo;	e	SET_ENCHANTMENTS
	f	Ldmo;	f	SET_NBT
	f	Ldmo;	g	FURNACE_SMELT
	f	Ldmo;	h	LOOTING_ENCHANT
	f	Ldmo;	i	SET_DAMAGE
	f	Ldmo;	j	SET_ATTRIBUTES
	f	Ldmo;	k	SET_NAME
	f	Ldmo;	l	EXPLORATION_MAP
	f	Ldmo;	m	SET_STEW_EFFECT
	f	Ldmo;	n	COPY_NAME
	f	Ldmo;	o	SET_CONTENTS
	f	Ldmo;	p	LIMIT_COUNT
	f	Ldmo;	q	APPLY_BONUS
	f	Ldmo;	r	SET_LOOT_TABLE
	f	Ldmo;	s	EXPLOSION_DECAY
	f	Ldmo;	t	SET_LORE
	f	Ldmo;	u	FILL_PLAYER_HEAD
	f	Ldmo;	v	COPY_NBT
	f	Ldmo;	w	COPY_STATE
	f	Ldmo;	x	SET_BANNER_PATTERN
	f	Ldmo;	y	SET_POTION
c	dmq	net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Ldoq;)Ldmq$a;	a	lootingMultiplier
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Z	c	hasLimit
	f	I	a	NO_LIMIT
	f	Ldoq;	b	value
	f	I	c	limit
c	dmq$a	net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder
	m	()Ldmq$a;	a	getThis
	m	(I)Ldmq$a;	a	setLimit
	m	()Ldmn;	b	build
	m	()Ldmm$a;	d	getThis
	f	Ldoq;	a	count
	f	I	b	limit
c	dmq$b	net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmq;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmr	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Ldmr$b;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$0
	m	(Ljava/lang/String;Layu;Layx$a;Ldoq;)Ldmr$c;	a	modifier
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ldmr$a;	c	setAttributes
	f	Ljava/util/List;	a	modifiers
c	dmr$1	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$ai$attributes$AttributeModifier$Operation
c	dmr$a	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder
	m	()Ldmr$a;	a	getThis
	m	(Ldmr$c;)Ldmr$a;	a	withModifier
	m	()Ldmn;	b	build
	m	()Ldmm$a;	d	getThis
	f	Ljava/util/List;	a	modifiers
c	dmr$b	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier
	m	(Layx$a;)Ljava/lang/String;	a	operationToString
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldmr$b;	a	deserialize
	m	(Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject;	a	serialize
	m	(Ljava/lang/String;)Layx$a;	a	operationFromString
	f	Ljava/lang/String;	a	name
	f	Layu;	b	attribute
	f	Layx$a;	c	operation
	f	Ldoq;	d	amount
	f	Ljava/util/UUID;	e	id
	f	[Laxp;	f	slots
c	dmr$c	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder
	m	()Ldmr$b;	a	build
	m	(Laxp;)Ldmr$c;	a	forSlot
	m	(Ljava/util/UUID;)Ldmr$c;	a	withUuid
	f	Ljava/lang/String;	a	name
	f	Layu;	b	attribute
	f	Layx$a;	c	operation
	f	Ldoq;	d	amount
	f	Ljava/util/UUID;	e	id
	f	Ljava/util/Set;	f	slots
c	dmr$d	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmr;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmr;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dms	net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Z)Ldms$a;	a	setBannerPattern
	f	Ljava/util/List;	a	patterns
	f	Z	b	append
c	dms$a	net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder
	m	()Ldms$a;	a	getThis
	m	(Lcmj;Lbts;)Ldms$a;	a	addPattern
	m	()Ldmn;	b	build
	m	()Ldmm$a;	d	getThis
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	patterns
	f	Z	b	append
c	dms$b	net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Serializer
	m	(Lcom/google/gson/JsonArray;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$serialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldms;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldms;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmt	net/minecraft/world/level/storage/loot/functions/SetContainerContents
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Lcmt;)Ldmt$a;	a	setContents
	m	(Ldlc;Lgx;Ldlu;)V	a	lambda$run$1
	m	(Ldlk;)V	a	validate
	m	(Lgx;Ldlc;Ldlt;)V	a	lambda$run$0
	f	Ljava/util/List;	a	entries
	f	Lcmt;	b	type
c	dmt$a	net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder
	m	()Ldmt$a;	a	getThis
	m	(Ldlu$a;)Ldmt$a;	a	withEntry
	m	()Ldmn;	b	build
	m	()Ldmm$a;	d	getThis
	f	Ljava/util/List;	a	entries
	f	Lcmt;	b	type
c	dmt$b	net/minecraft/world/level/storage/loot/functions/SetContainerContents$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmt;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmt;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lyt;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmu	net/minecraft/world/level/storage/loot/functions/SetContainerLootTable
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Lcmt;Lyt;)Ldmm$a;	a	withLootTable
	m	(Lcmt;Lyt;J)Ldmm$a;	a	withLootTable
	m	(Ldlk;)V	a	validate
	m	(Lyt;JLcmt;[Ldnv;)Ldmn;	a	lambda$withLootTable$1
	m	(Lyt;Lcmt;[Ldnv;)Ldmn;	a	lambda$withLootTable$0
	f	Lyt;	a	name
	f	J	b	seed
	f	Lcmt;	c	type
c	dmu$a	net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmu;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmu;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lyt;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmv	net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Lbyq;Ljava/lang/Integer;)V	a	lambda$run$2
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Ldoq;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$0
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Ldlc;Lbyq;Ldoq;)V	a	lambda$run$1
	m	(Ljava/util/Map;Lbyq;I)V	a	updateEnchantment
	m	(Ljava/util/Map;Lbyq;Ljava/lang/Integer;)V	a	lambda$run$4
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ljava/util/Map;Lbyq;Ljava/lang/Integer;)V	b	lambda$run$3
	f	Ljava/util/Map;	a	enchantments
	f	Z	b	add
c	dmv$a	net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder
	m	()Ldmv$a;	a	getThis
	m	(Lbyq;Ldoq;)Ldmv$a;	a	withEnchantment
	m	()Ldmn;	b	build
	m	()Ldmm$a;	d	getThis
	f	Ljava/util/Map;	a	enchantments
	f	Z	b	add
c	dmv$b	net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmv;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;Lbyq;Ldoq;)V	a	lambda$serialize$0
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmv;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$1
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmw	net/minecraft/world/level/storage/loot/functions/SetItemCountFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Ldoq;)Ldmm$a;	a	setCount
	m	(Ldoq;Z)Ldmm$a;	a	setCount
	m	(Ldoq;Z[Ldnv;)Ldmn;	a	lambda$setCount$1
	m	(Ldoq;[Ldnv;)Ldmn;	a	lambda$setCount$0
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldoq;	a	value
	f	Z	b	add
c	dmw$a	net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmw;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmw;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmx	net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Ldoq;)Ldmm$a;	a	setDamage
	m	(Ldoq;Z)Ldmm$a;	a	setDamage
	m	(Ldoq;Z[Ldnv;)Ldmn;	a	lambda$setDamage$1
	m	(Ldoq;[Ldnv;)Ldmn;	a	lambda$setDamage$0
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ldoq;	b	damage
	f	Z	c	add
c	dmx$a	net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmx;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmx;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmy	net/minecraft/world/level/storage/loot/functions/SetLoreFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Lbuw;Z)Loq;	a	getLoreTag
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ldmy$a;	c	setLore
	f	Z	a	replace
	f	Ljava/util/List;	b	lore
	f	Ldlc$c;	c	resolutionContext
c	dmy$a	net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder
	m	()Ldmy$a;	a	getThis
	m	(Ldlc$c;)Ldmy$a;	a	setResolutionContext
	m	(Lqk;)Ldmy$a;	a	addLine
	m	(Z)Ldmy$a;	a	setReplace
	m	()Ldmn;	b	build
	m	()Ldmm$a;	d	getThis
	f	Z	a	replace
	f	Ldlc$c;	b	resolutionContext
	f	Ljava/util/List;	c	lore
c	dmy$b	net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmy;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmy;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dmz	net/minecraft/world/level/storage/loot/functions/SetNameFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Ldlc;Ldlc$c;)Ljava/util/function/UnaryOperator;	a	createResolver
	m	(Ldm;Laxk;Lqk;)Lqk;	a	lambda$createResolver$0
	m	(Lqk;)Ldmm$a;	a	setName
	m	(Lqk;Ldlc$c;)Ldmm$a;	a	setName
	m	(Lqk;Ldlc$c;[Ldnv;)Ldmn;	a	lambda$setName$3
	m	(Lqk;[Ldnv;)Ldmn;	a	lambda$setName$2
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lqk;)Lqk;	b	lambda$createResolver$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lqk;	b	name
	f	Ldlc$c;	c	resolutionContext
c	dmz$a	net/minecraft/world/level/storage/loot/functions/SetNameFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmz;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldmz;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dna	net/minecraft/world/level/storage/loot/functions/SetNbtFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Lok;)Ldmm$a;	a	setTag
	m	(Lok;[Ldnv;)Ldmn;	a	lambda$setTag$0
	f	Lok;	a	tag
c	dna$a	net/minecraft/world/level/storage/loot/functions/SetNbtFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldna;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldna;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dnb	net/minecraft/world/level/storage/loot/functions/SetPotionFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Lbwr;)Ldmm$a;	a	setPotion
	m	(Lbwr;[Ldnv;)Ldmn;	a	lambda$setPotion$0
	f	Lbwr;	a	potion
c	dnb$a	net/minecraft/world/level/storage/loot/functions/SetPotionFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldnb;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldnb;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dnc	net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	(Ldoq;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$0
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ldnc$a;	c	stewEffect
	f	Ljava/util/Map;	a	effectDurationMap
c	dnc$a	net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder
	m	()Ldnc$a;	a	getThis
	m	(Laxc;Ldoq;)Ldnc$a;	a	withEffect
	m	()Ldmn;	b	build
	m	()Ldmm$a;	d	getThis
	f	Ljava/util/Map;	a	effectDurationMap
c	dnc$b	net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldnc;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldmm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ldnc;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dnd	net/minecraft/world/level/storage/loot/functions/SmeltItemFunction
	m	()Ldmo;	a	getType
	m	(Lbuw;Ldlc;)Lbuw;	a	run
	m	()Ldmm$a;	c	smelted
	f	Lorg/slf4j/Logger;	a	LOGGER
c	dnd$a	net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldnd;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldnv;)Ldmm;	b	deserialize
c	dne	net/minecraft/world/level/storage/loot/functions/package-info
c	dnf	net/minecraft/world/level/storage/loot/package-info
c	dng	net/minecraft/world/level/storage/loot/parameters/LootContextParam
	m	()Lyt;	a	getName
	f	Lyt;	a	name
c	dnh	net/minecraft/world/level/storage/loot/parameters/LootContextParamSet
	m	()Ljava/util/Set;	a	getRequired
	m	(Ldlk;Ldld;)V	a	validateUser
	m	(Ldng;)Z	a	isAllowed
	m	()Ljava/util/Set;	b	getAllowed
	m	(Ldng;)Ljava/lang/String;	b	lambda$toString$0
	m	()Ldnh$a;	c	builder
	f	Ljava/util/Set;	a	required
	f	Ljava/util/Set;	b	all
c	dnh$a	net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder
	m	()Ldnh;	a	build
	m	(Ldng;)Ldnh$a;	a	required
	m	(Ldng;)Ldnh$a;	b	optional
	f	Ljava/util/Set;	a	required
	f	Ljava/util/Set;	b	optional
c	dni	net/minecraft/world/level/storage/loot/parameters/LootContextParamSets
	m	(Ldnh$a;)V	a	lambda$static$11
	m	(Ldnh;)Lyt;	a	getKey
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Ldnh;	a	register
	m	(Lyt;)Ldnh;	a	get
	m	(Ldnh$a;)V	b	lambda$static$10
	m	(Ldnh$a;)V	c	lambda$static$9
	m	(Ldnh$a;)V	d	lambda$static$8
	m	(Ldnh$a;)V	e	lambda$static$7
	m	(Ldnh$a;)V	f	lambda$static$6
	m	(Ldnh$a;)V	g	lambda$static$5
	m	(Ldnh$a;)V	h	lambda$static$4
	m	(Ldnh$a;)V	i	lambda$static$3
	m	(Ldnh$a;)V	j	lambda$static$2
	m	(Ldnh$a;)V	k	lambda$static$1
	m	(Ldnh$a;)V	l	lambda$static$0
	f	Ldnh;	a	EMPTY
	f	Ldnh;	b	CHEST
	f	Ldnh;	c	COMMAND
	f	Ldnh;	d	SELECTOR
	f	Ldnh;	e	FISHING
	f	Ldnh;	f	ENTITY
	f	Ldnh;	g	GIFT
	f	Ldnh;	h	PIGLIN_BARTER
	f	Ldnh;	i	ADVANCEMENT_REWARD
	f	Ldnh;	j	ADVANCEMENT_ENTITY
	f	Ldnh;	k	ALL_PARAMS
	f	Ldnh;	l	BLOCK
	f	Lcom/google/common/collect/BiMap;	m	REGISTRY
c	dnj	net/minecraft/world/level/storage/loot/parameters/LootContextParams
	m	(Ljava/lang/String;)Ldng;	a	create
	f	Ldng;	a	THIS_ENTITY
	f	Ldng;	b	LAST_DAMAGE_PLAYER
	f	Ldng;	c	DAMAGE_SOURCE
	f	Ldng;	d	KILLER_ENTITY
	f	Ldng;	e	DIRECT_KILLER_ENTITY
	f	Ldng;	f	ORIGIN
	f	Ldng;	g	BLOCK_STATE
	f	Ldng;	h	BLOCK_ENTITY
	f	Ldng;	i	TOOL
	f	Ldng;	j	EXPLOSION_RADIUS
c	dnk	net/minecraft/world/level/storage/loot/parameters/package-info
c	dnl	net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition
	m	()Ldnw;	a	getType
	m	(Ldlc;)Z	a	test
	m	(Ldlk;)V	a	validate
	m	([Ldnv$a;)Ldnl$a;	a	alternative
	f	[Ldnv;	a	terms
	f	Ljava/util/function/Predicate;	b	composedPredicate
c	dnl$a	net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder
	f	Ljava/util/List;	a	terms
c	dnl$b	net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldnl;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldnl;	b	deserialize
c	dnm	net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition
	m	()Ldnw;	a	getType
	m	(Lbyq;[F)Ldnv$a;	a	bonusLevelFlatChance
	m	(Ldlc;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lbyq;[F)Ldnv;	b	lambda$bonusLevelFlatChance$0
	f	Lbyq;	a	enchantment
	f	[F	b	values
c	dnm$a	net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldnm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lyt;)Lcom/google/gson/JsonParseException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldnm;	b	deserialize
c	dnn	net/minecraft/world/level/storage/loot/predicates/ConditionReference
	m	()Ldnw;	a	getType
	m	(Ldlc;)Z	a	test
	m	(Ldlk;)V	a	validate
	m	(Lyt;)Ldnv$a;	a	conditionReference
	m	(Lyt;)Ldnv;	b	lambda$conditionReference$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lyt;	b	name
c	dnn$a	net/minecraft/world/level/storage/loot/predicates/ConditionReference$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldnn;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldnn;	b	deserialize
c	dno	net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder
	m	(Ldnv$a;)Ljava/lang/Object;	b	when
	m	()Ljava/lang/Object;	c	unwrap
c	dnp	net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition
	m	()Ldnw;	a	getType
	m	(Lbd$a;)Ldnv$a;	a	hasDamageSource
	m	(Ldlc;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lbd$a;)Ldnv;	b	lambda$hasDamageSource$0
	f	Lbd;	a	predicate
c	dnp$a	net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldnp;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldnp;	b	deserialize
c	dnq	net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition
	m	()Ldnw;	a	getType
	m	(Ldla;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$0
	m	(Ldlc$c;)Ldnq$a;	a	hasScores
	m	(Ldlc;)Z	a	test
	m	(Ldlc;Laxk;Ldqm;Ljava/lang/String;Ldla;)Z	a	hasScore
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ljava/util/Map;	a	scores
	f	Ldlc$c;	b	entityTarget
c	dnq$a	net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder
	m	(Ljava/lang/String;Ldla;)Ldnq$a;	a	withScore
	f	Ljava/util/Map;	a	scores
	f	Ldlc$c;	b	entityTarget
c	dnq$b	net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldnq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldnq;	b	deserialize
c	dnr	net/minecraft/world/level/storage/loot/predicates/ExplosionCondition
	m	()Ldnw;	a	getType
	m	(Ldlc;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ldnv$a;	c	survivesExplosion
	m	()Ldnv;	d	lambda$survivesExplosion$0
	f	Ldnr;	a	INSTANCE
c	dnr$a	net/minecraft/world/level/storage/loot/predicates/ExplosionCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldnr;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldnr;	b	deserialize
c	dns	net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition
	m	()Ldnw;	a	getType
	m	(Ldlc;)Z	a	test
	m	(Ldlk;)V	a	validate
	m	(Ldns;)Ldnv;	a	lambda$invert$0
	m	(Ldnv$a;)Ldnv$a;	a	invert
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldnv;	a	term
c	dns$a	net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldns;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldns;	b	deserialize
c	dnt	net/minecraft/world/level/storage/loot/predicates/LocationCheck
	m	()Ldnw;	a	getType
	m	(Lcg$a;)Ldnv$a;	a	checkLocation
	m	(Lcg$a;Lgj;)Ldnv$a;	a	checkLocation
	m	(Ldlc;)Z	a	test
	m	(Lcg$a;)Ldnv;	b	lambda$checkLocation$0
	m	(Lcg$a;Lgj;)Ldnv;	b	lambda$checkLocation$1
	f	Lcg;	a	predicate
	f	Lgj;	b	offset
c	dnt$a	net/minecraft/world/level/storage/loot/predicates/LocationCheck$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldnt;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldnt;	b	deserialize
c	dnu	net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition
	m	()Ldnw;	a	getType
	m	(Lcdq;)Ldnu$a;	a	hasBlockStateProperties
	m	(Ldlc;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lcdq;	a	block
	f	Lcw;	b	properties
c	dnu$a	net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder
	m	(Lcw$a;)Ldnu$a;	a	setProperties
	f	Lcdq;	a	block
	f	Lcw;	b	properties
c	dnu$b	net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Serializer
	m	(Lcdq;Ljava/lang/String;)V	a	lambda$deserialize$1
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldnu;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lyt;)Ljava/lang/IllegalArgumentException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldnu;	b	deserialize
c	dnv	net/minecraft/world/level/storage/loot/predicates/LootItemCondition
	m	()Ldnw;	a	getType
c	dnv$a	net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder
c	dnw	net/minecraft/world/level/storage/loot/predicates/LootItemConditionType
c	dnx	net/minecraft/world/level/storage/loot/predicates/LootItemConditions
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Ljava/lang/Object;)Z	a	lambda$orConditions$2
	m	(Ljava/lang/String;Ldli;)Ldnw;	a	register
	m	([Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	andConditions
	m	([Ljava/util/function/Predicate;Ljava/lang/Object;)Z	a	lambda$orConditions$3
	m	(Ljava/lang/Object;)Z	b	lambda$andConditions$0
	m	([Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	b	orConditions
	m	([Ljava/util/function/Predicate;Ljava/lang/Object;)Z	b	lambda$andConditions$1
	f	Ldnw;	a	INVERTED
	f	Ldnw;	b	ALTERNATIVE
	f	Ldnw;	c	RANDOM_CHANCE
	f	Ldnw;	d	RANDOM_CHANCE_WITH_LOOTING
	f	Ldnw;	e	ENTITY_PROPERTIES
	f	Ldnw;	f	KILLED_BY_PLAYER
	f	Ldnw;	g	ENTITY_SCORES
	f	Ldnw;	h	BLOCK_STATE_PROPERTY
	f	Ldnw;	i	MATCH_TOOL
	f	Ldnw;	j	TABLE_BONUS
	f	Ldnw;	k	SURVIVES_EXPLOSION
	f	Ldnw;	l	DAMAGE_SOURCE_PROPERTIES
	f	Ldnw;	m	LOCATION_CHECK
	f	Ldnw;	n	WEATHER_CHECK
	f	Ldnw;	o	REFERENCE
	f	Ldnw;	p	TIME_CHECK
	f	Ldnw;	q	VALUE_CHECK
c	dny	net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition
	m	()Ldnw;	a	getType
	m	(Lbo$a;Ldlc$c;)Ldnv;	a	lambda$hasProperties$0
	m	(Lbo;Ldlc$c;)Ldnv;	a	lambda$hasProperties$1
	m	(Ldlc$c;)Ldnv$a;	a	entityPresent
	m	(Ldlc$c;Lbo$a;)Ldnv$a;	a	hasProperties
	m	(Ldlc$c;Lbo;)Ldnv$a;	a	hasProperties
	m	(Ldlc;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lbo;	a	predicate
	f	Ldlc$c;	b	entityTarget
c	dny$a	net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldny;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldny;	b	deserialize
c	dnz	net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition
	m	()Ldnw;	a	getType
	m	(Ldlc;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ldnv$a;	c	killedByPlayer
	m	()Ldnv;	d	lambda$killedByPlayer$0
	f	Ldnz;	a	INSTANCE
c	dnz$a	net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldnz;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldnz;	b	deserialize
c	doa	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition
	m	()Ldnw;	a	getType
	m	(F)Ldnv$a;	a	randomChance
	m	(Ldlc;)Z	a	test
	m	(F)Ldnv;	b	lambda$randomChance$0
	f	F	a	probability
c	doa$a	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldoa;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldoa;	b	deserialize
c	dob	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition
	m	()Ldnw;	a	getType
	m	(FF)Ldnv$a;	a	randomChanceAndLootingBoost
	m	(Ldlc;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(FF)Ldnv;	b	lambda$randomChanceAndLootingBoost$0
	f	F	a	percent
	f	F	b	lootingMultiplier
c	dob$a	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldob;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldob;	b	deserialize
c	doc	net/minecraft/world/level/storage/loot/predicates/MatchTool
	m	()Ldnw;	a	getType
	m	(Lby$a;)Ldnv$a;	a	toolMatches
	m	(Ldlc;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lby$a;)Ldnv;	b	lambda$toolMatches$0
	f	Lby;	a	predicate
c	doc$a	net/minecraft/world/level/storage/loot/predicates/MatchTool$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldoc;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldoc;	b	deserialize
c	dod	net/minecraft/world/level/storage/loot/predicates/TimeCheck
	m	()Ldnw;	a	getType
	m	(Ldla;)Ldod$a;	a	time
	m	(Ldlc;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ljava/lang/Long;	a	period
	f	Ldla;	b	value
c	dod$a	net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder
	m	()Ldod;	a	build
	m	(J)Ldod$a;	a	setPeriod
	f	Ljava/lang/Long;	a	period
	f	Ldla;	b	value
c	dod$b	net/minecraft/world/level/storage/loot/predicates/TimeCheck$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldod;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldod;	b	deserialize
c	doe	net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition
	m	()Ldnw;	a	getType
	m	(Ldlc;)Z	a	test
	m	(Ldoq;Ldla;)Ldnv$a;	a	hasValue
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ldoq;Ldla;)Ldnv;	b	lambda$hasValue$0
	f	Ldoq;	a	provider
	f	Ldla;	b	range
c	doe$a	net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldoe;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldoe;	b	deserialize
c	dof	net/minecraft/world/level/storage/loot/predicates/WeatherCheck
	m	()Ldnw;	a	getType
	m	(Ldlc;)Z	a	test
	m	()Ldof$a;	c	weather
	f	Ljava/lang/Boolean;	a	isRaining
	f	Ljava/lang/Boolean;	b	isThundering
c	dof$a	net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder
	m	()Ldof;	a	build
	m	(Ljava/lang/Boolean;)Ldof$a;	a	setRaining
	m	(Ljava/lang/Boolean;)Ldof$a;	b	setThundering
	f	Ljava/lang/Boolean;	a	isRaining
	f	Ljava/lang/Boolean;	b	isThundering
c	dof$b	net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldof;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldof;	b	deserialize
c	dog	net/minecraft/world/level/storage/loot/predicates/package-info
c	doh	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider
	m	()Ldoi;	a	getType
	m	(Ldlc$c;)Ldoj;	a	forContextEntity
	m	(Ldlc;)Lpd;	a	get
	m	(Ljava/lang/String;)Ldoh;	a	createFromContext
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ldlc$c;)Ldoh$a;	b	forEntity
	f	Ldoh;	a	BLOCK_ENTITY
	f	Ljava/lang/String;	b	BLOCK_ENTITY_ID
	f	Ldoh$a;	c	BLOCK_ENTITY_PROVIDER
	f	Ldoh$a;	d	getter
c	doh$1	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$1
	m	()Ljava/lang/String;	a	getId
	m	(Ldlc;)Lpd;	a	get
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	doh$2	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$2
	m	()Ljava/lang/String;	a	getId
	m	(Ldlc;)Lpd;	a	get
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldlc$c;	a	val$target
c	doh$a	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter
	m	()Ljava/lang/String;	a	getId
	m	(Ldlc;)Lpd;	a	get
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	doh$b	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$InlineSerializer
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Ldoh;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ldoh;	b	deserialize
c	doh$c	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldoh;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldoh;	b	deserialize
c	doi	net/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType
c	doj	net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider
	m	()Ldoi;	a	getType
	m	(Ldlc;)Lpd;	a	get
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	dok	net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Ljava/lang/String;Ldli;)Ldoi;	a	register
	f	Ldoi;	a	STORAGE
	f	Ldoi;	b	CONTEXT
c	dol	net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider
	m	()Ldoi;	a	getType
	m	(Ldlc;)Lpd;	a	get
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lyt;	a	id
c	dol$a	net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldol;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldol;	b	deserialize
c	dom	net/minecraft/world/level/storage/loot/providers/nbt/package-info
c	don	net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator
	m	()Ldop;	a	getType
	m	(IF)Ldon;	a	binomial
	m	(Ldlc;)I	a	getInt
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ldlc;)F	b	getFloat
	f	Ldoq;	a	n
	f	Ldoq;	b	p
c	don$a	net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldon;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldon;	b	deserialize
c	doo	net/minecraft/world/level/storage/loot/providers/number/ConstantValue
	m	()Ldop;	a	getType
	m	(F)Ldoo;	a	exactly
	m	(Ldlc;)F	b	getFloat
	f	F	a	value
c	doo$a	net/minecraft/world/level/storage/loot/providers/number/ConstantValue$InlineSerializer
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Ldoo;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ldoo;	b	deserialize
c	doo$b	net/minecraft/world/level/storage/loot/providers/number/ConstantValue$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldoo;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldoo;	b	deserialize
c	dop	net/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType
c	doq	net/minecraft/world/level/storage/loot/providers/number/NumberProvider
	m	()Ldop;	a	getType
	m	(Ldlc;)I	a	getInt
	m	(Ldlc;)F	b	getFloat
c	dor	net/minecraft/world/level/storage/loot/providers/number/NumberProviders
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Ljava/lang/String;Ldli;)Ldop;	a	register
	f	Ldop;	a	CONSTANT
	f	Ldop;	b	UNIFORM
	f	Ldop;	c	BINOMIAL
	f	Ldop;	d	SCORE
c	dos	net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue
	m	()Ldop;	a	getType
	m	(Ldlc$c;Ljava/lang/String;)Ldos;	a	fromScoreboard
	m	(Ldlc$c;Ljava/lang/String;F)Ldos;	a	fromScoreboard
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ldlc;)F	b	getFloat
	f	Ldoy;	a	target
	f	Ljava/lang/String;	b	score
	f	F	c	scale
c	dos$a	net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldos;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldos;	b	deserialize
c	dot	net/minecraft/world/level/storage/loot/providers/number/UniformGenerator
	m	()Ldop;	a	getType
	m	(FF)Ldot;	a	between
	m	(Ldlc;)I	a	getInt
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ldlc;)F	b	getFloat
	f	Ldoq;	a	min
	f	Ldoq;	b	max
c	dot$a	net/minecraft/world/level/storage/loot/providers/number/UniformGenerator$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldot;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldot;	b	deserialize
c	dou	net/minecraft/world/level/storage/loot/providers/number/package-info
c	dov	net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider
	m	()Ldox;	a	getType
	m	(Ldlc$c;)Ldoy;	a	forTarget
	m	(Ldlc;)Ljava/lang/String;	a	getScoreboardName
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldlc$c;	a	target
c	dov$a	net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$InlineSerializer
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Ldov;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ldov;	b	deserialize
c	dov$b	net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldov;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldov;	b	deserialize
c	dow	net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider
	m	()Ldox;	a	getType
	m	(Ldlc;)Ljava/lang/String;	a	getScoreboardName
	m	(Ljava/lang/String;)Ldoy;	a	forName
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ljava/lang/String;	c	getName
	f	Ljava/lang/String;	a	name
c	dow$a	net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldow;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldow;	b	deserialize
c	dox	net/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType
c	doy	net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider
	m	()Ldox;	a	getType
	m	(Ldlc;)Ljava/lang/String;	a	getScoreboardName
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	doz	net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Ljava/lang/String;Ldli;)Ldox;	a	register
	f	Ldox;	a	FIXED
	f	Ldox;	b	CONTEXT
c	dpa	net/minecraft/world/level/storage/loot/providers/score/package-info
c	dpb	net/minecraft/world/level/storage/package-info
c	dpc	net/minecraft/world/level/timers/FunctionCallback
	m	(Lnet/minecraft/server/MinecraftServer;Ldpg;J)V	a	handle
	m	(Lzg;Ldj;)V	a	lambda$handle$0
	f	Lyt;	a	functionId
c	dpc$a	net/minecraft/world/level/timers/FunctionCallback$Serializer
	m	(Lok;)Ldpc;	a	deserialize
	m	(Lok;Ldpc;)V	a	serialize
	m	(Lok;Ldpe;)V	a	serialize
	m	(Lok;)Ldpe;	b	deserialize
c	dpd	net/minecraft/world/level/timers/FunctionTagCallback
	m	(Lnet/minecraft/server/MinecraftServer;Ldpg;J)V	a	handle
	f	Lyt;	a	tagId
c	dpd$a	net/minecraft/world/level/timers/FunctionTagCallback$Serializer
	m	(Lok;)Ldpd;	a	deserialize
	m	(Lok;Ldpd;)V	a	serialize
	m	(Lok;Ldpe;)V	a	serialize
	m	(Lok;)Ldpe;	b	deserialize
c	dpe	net/minecraft/world/level/timers/TimerCallback
c	dpe$a	net/minecraft/world/level/timers/TimerCallback$Serializer
	m	()Lyt;	a	getId
	m	(Lok;Ldpe;)V	a	serialize
	m	()Ljava/lang/Class;	b	getCls
	m	(Lok;)Ldpe;	b	deserialize
	f	Lyt;	a	id
	f	Ljava/lang/Class;	b	cls
c	dpf	net/minecraft/world/level/timers/TimerCallbacks
	m	(Ldpe$a;)Ldpf;	a	register
	m	(Ldpe;)Lok;	a	serialize
	m	(Ljava/lang/Class;)Ldpe$a;	a	getSerializer
	m	(Lok;)Ldpe;	a	deserialize
	f	Ldpf;	a	SERVER_CALLBACKS
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	idToSerializer
	f	Ljava/util/Map;	d	classToSerializer
c	dpg	net/minecraft/world/level/timers/TimerQueue
	m	()Ljava/util/Set;	a	getEventsIds
	m	(Lcom/mojang/serialization/Dynamic;)V	a	lambda$new$2
	m	(Ldpg$a;)Lok;	a	storeEvent
	m	(Ljava/lang/Object;J)V	a	tick
	m	(Ljava/lang/String;)I	a	remove
	m	(Ljava/lang/String;JLdpe;)V	a	schedule
	m	(Lok;)V	a	loadEvent
	m	()Loq;	b	store
	m	(Ldpg$a;)Lcom/google/common/primitives/UnsignedLong;	b	lambda$createComparator$1
	m	()Ljava/util/Comparator;	c	createComparator
	m	(Ldpg$a;)J	c	lambda$createComparator$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	CALLBACK_DATA_TAG
	f	Ljava/lang/String;	c	TIMER_NAME_TAG
	f	Ljava/lang/String;	d	TIMER_TRIGGER_TIME_TAG
	f	Ldpf;	e	callbacksRegistry
	f	Ljava/util/Queue;	f	queue
	f	Lcom/google/common/primitives/UnsignedLong;	g	sequentialId
	f	Lcom/google/common/collect/Table;	h	events
c	dpg$a	net/minecraft/world/level/timers/TimerQueue$Event
	f	J	a	triggerTime
	f	Lcom/google/common/primitives/UnsignedLong;	b	sequentialId
	f	Ljava/lang/String;	c	id
	f	Ldpe;	d	callback
c	dph	net/minecraft/world/level/timers/package-info
c	dpi	net/minecraft/world/package-info
c	dpj	net/minecraft/world/phys/AABB
	m	()D	a	getSize
	m	(D)Ldpj;	a	setMinX
	m	(DDD)Ldpj;	a	contract
	m	(DDDDDD)Z	a	intersects
	m	(Ldeo;)Ldpj;	a	of
	m	(Ldpj;)Ldpj;	a	intersect
	m	(Ldpj;Ldpo;[DLgo;DDD)Lgo;	a	getDirection
	m	(Ldpo;)Ldpj;	a	unitCubeFromLowerCorner
	m	(Ldpo;DDD)Ldpj;	a	ofSize
	m	(Ldpo;Ldpo;)Z	a	intersects
	m	(Lgj;)Ldpj;	a	move
	m	(Lgo$a;)D	a	min
	m	(Ljava/lang/Iterable;Ldpo;Ldpo;Lgj;)Ldpk;	a	clip
	m	([DLgo;DDDDDDDDLgo;DDD)Lgo;	a	clipPoint
	m	()D	b	getXsize
	m	(D)Ldpj;	b	setMinY
	m	(DDD)Ldpj;	b	expandTowards
	m	(Ldpj;)Ldpj;	b	minmax
	m	(Ldpo;)Ldpj;	b	expandTowards
	m	(Ldpo;Ldpo;)Ljava/util/Optional;	b	clip
	m	(Lgo$a;)D	b	max
	m	()D	c	getYsize
	m	(D)Ldpj;	c	setMinZ
	m	(DDD)Ldpj;	c	inflate
	m	(Ldpj;)Z	c	intersects
	m	(Ldpo;)Ldpj;	c	move
	m	()D	d	getZsize
	m	(D)Ldpj;	d	setMaxX
	m	(DDD)Ldpj;	d	move
	m	(Ldpo;)Z	d	contains
	m	()Z	e	hasNaN
	m	(D)Ldpj;	e	setMaxY
	m	(DDD)Z	e	contains
	m	()Ldpo;	f	getCenter
	m	(D)Ldpj;	f	setMaxZ
	m	(DDD)Ldpj;	f	deflate
	m	(D)Ldpj;	g	inflate
	m	(D)Ldpj;	h	deflate
	f	D	a	minX
	f	D	b	minY
	f	D	c	minZ
	f	D	d	maxX
	f	D	e	maxY
	f	D	f	maxZ
	f	D	g	EPSILON
c	dpk	net/minecraft/world/phys/BlockHitResult
	m	()Lgj;	a	getBlockPos
	m	(Ldpo;Lgo;Lgj;)Ldpk;	a	miss
	m	(Lgj;)Ldpk;	a	withPosition
	m	(Lgo;)Ldpk;	a	withDirection
	m	()Lgo;	b	getDirection
	m	()Ldpm$a;	c	getType
	m	()Z	d	isInside
	f	Lgo;	b	direction
	f	Lgj;	c	blockPos
	f	Z	d	miss
	f	Z	e	inside
c	dpl	net/minecraft/world/phys/EntityHitResult
	m	()Laxk;	a	getEntity
	m	()Ldpm$a;	c	getType
	f	Laxk;	b	entity
c	dpm	net/minecraft/world/phys/HitResult
	m	(Laxk;)D	a	distanceTo
	m	()Ldpm$a;	c	getType
	m	()Ldpo;	e	getLocation
	f	Ldpo;	a	location
c	dpm$a	net/minecraft/world/phys/HitResult$Type
	m	()[Ldpm$a;	a	$values
	f	Ldpm$a;	a	MISS
	f	Ldpm$a;	b	BLOCK
	f	Ldpm$a;	c	ENTITY
	f	[Ldpm$a;	d	$VALUES
c	dpn	net/minecraft/world/phys/Vec2
	m	()Ldpn;	a	normalized
	m	(F)Ldpn;	a	scale
	m	(Ldpn;)F	a	dot
	m	()F	b	length
	m	(F)Ldpn;	b	add
	m	(Ldpn;)Ldpn;	b	add
	m	()F	c	lengthSquared
	m	(Ldpn;)Z	c	equals
	m	()Ldpn;	d	negated
	m	(Ldpn;)F	d	distanceToSqr
	f	Ldpn;	a	ZERO
	f	Ldpn;	b	ONE
	f	Ldpn;	c	UNIT_X
	f	Ldpn;	d	NEG_UNIT_X
	f	Ldpn;	e	UNIT_Y
	f	Ldpn;	f	NEG_UNIT_Y
	f	Ldpn;	g	MAX
	f	Ldpn;	h	MIN
	f	F	i	x
	f	F	j	y
c	dpo	net/minecraft/world/phys/Vec3
	m	()D	a	x
	m	(D)Ldpo;	a	scale
	m	(DDD)Ldpo;	a	subtract
	m	(F)Ldpo;	a	xRot
	m	(FF)Ldpo;	a	directionFromRotation
	m	(I)Ldpo;	a	fromRGB24
	m	(Ldpn;)Ldpo;	a	directionFromRotation
	m	(Ldpo;)Ldpo;	a	vectorTo
	m	(Ldpo;D)Ldpo;	a	lerp
	m	(Lgo$a;)D	a	get
	m	(Lgo$a;D)Ldpo;	a	with
	m	(Lgy;D)Z	a	closerThan
	m	(Lhh;)Ldpo;	a	atCenterOf
	m	(Lhh;D)Ldpo;	a	upFromBottomCenterOf
	m	(Ljava/util/EnumSet;)Ldpo;	a	align
	m	()D	b	y
	m	(DDD)Ldpo;	b	add
	m	(F)Ldpo;	b	yRot
	m	(Ldpo;)D	b	dot
	m	(Lhh;)Ldpo;	b	atLowerCornerOf
	m	()D	c	z
	m	(DDD)D	c	distanceToSqr
	m	(F)Ldpo;	c	zRot
	m	(Ldpo;)Ldpo;	c	cross
	m	(Lhh;)Ldpo;	c	atBottomCenterOf
	m	()Ldpo;	d	normalize
	m	(DDD)Ldpo;	d	multiply
	m	(Ldpo;)Ldpo;	d	subtract
	m	()Ldpo;	e	reverse
	m	(Ldpo;)Ldpo;	e	add
	m	()D	f	length
	m	(Ldpo;)D	f	distanceTo
	m	()D	g	lengthSqr
	m	(Ldpo;)D	g	distanceToSqr
	m	()D	h	horizontalDistance
	m	(Ldpo;)Ldpo;	h	multiply
	m	()D	i	horizontalDistanceSqr
	f	Ldpo;	a	ZERO
	f	D	b	x
	f	D	c	y
	f	D	d	z
c	dpp	net/minecraft/world/phys/package-info
c	dpq	net/minecraft/world/phys/shapes/ArrayVoxelShape
	m	(Lgo$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	xs
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	c	ys
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	zs
c	dpq$1	net/minecraft/world/phys/shapes/ArrayVoxelShape$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	dpr	net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape
	m	()Z	a	isEmpty
	m	(III)I	a	getIndex
	m	(IIII)Z	a	isZStripFull
	m	(IIIII)Z	a	isXZRectangleFull
	m	(IIIIIIIII)Ldpr;	a	withFilledBounds
	m	(IIIZ)V	a	fillUpdateBounds
	m	(Ldps;Ldpx;IILdpx;IILdpr;II[I[ZIII)Z	a	lambda$join$0
	m	(Ldpx;Ldpx$b;Z)V	a	forAllBoxes
	m	(Ldpx;Ldpx;Ldqa;Ldqa;Ldqa;Ldps;)Ldpr;	a	join
	m	(Ldqa;Ldps;Ldpx;ILdpx;ILdpr;I[I[ZIII)Z	a	lambda$join$1
	m	(Ldqa;Ldqa;Ldps;Ldpx;Ldpx;Ldpr;[IIII)Z	a	lambda$join$2
	m	(Lgo$a;)I	a	firstFull
	m	(III)Z	b	isFull
	m	(IIII)V	b	clearZStrip
	m	(Lgo$a;)I	b	lastFull
	m	(III)V	c	fill
	f	Ljava/util/BitSet;	d	storage
	f	I	e	xMin
	f	I	f	yMin
	f	I	g	zMin
	f	I	h	xMax
	f	I	i	yMax
	f	I	j	zMax
c	dps	net/minecraft/world/phys/shapes/BooleanOp
	m	(ZZ)Z	a	lambda$static$15
	m	(ZZ)Z	b	lambda$static$14
	m	(ZZ)Z	c	lambda$static$13
	m	(ZZ)Z	d	lambda$static$12
	m	(ZZ)Z	e	lambda$static$11
	m	(ZZ)Z	f	lambda$static$10
	m	(ZZ)Z	g	lambda$static$9
	m	(ZZ)Z	h	lambda$static$8
	m	(ZZ)Z	i	lambda$static$7
	m	(ZZ)Z	j	lambda$static$6
	m	(ZZ)Z	k	lambda$static$5
	m	(ZZ)Z	l	lambda$static$4
	m	(ZZ)Z	m	lambda$static$3
	m	(ZZ)Z	n	lambda$static$2
	m	(ZZ)Z	o	lambda$static$1
	m	(ZZ)Z	p	lambda$static$0
	f	Ldps;	a	FALSE
	f	Ldps;	b	NOT_OR
	f	Ldps;	c	ONLY_SECOND
	f	Ldps;	d	NOT_FIRST
	f	Ldps;	e	ONLY_FIRST
	f	Ldps;	f	NOT_SECOND
	f	Ldps;	g	NOT_SAME
	f	Ldps;	h	NOT_AND
	f	Ldps;	i	AND
	f	Ldps;	j	SAME
	f	Ldps;	k	SECOND
	f	Ldps;	l	CAUSES
	f	Ldps;	m	FIRST
	f	Ldps;	n	CAUSED_BY
	f	Ldps;	o	OR
	f	Ldps;	p	TRUE
c	dpt	net/minecraft/world/phys/shapes/CollisionContext
	m	()Ldpt;	a	empty
	m	(Laxk;)Ldpt;	a	of
	m	(Lbus;)Z	a	isHoldingItem
	m	(Ldix;Ldix;)Z	a	canStandOnFluid
	m	(Ldqh;Lgj;Z)Z	a	isAbove
	m	()Z	b	isDescending
c	dpu	net/minecraft/world/phys/shapes/CubePointRange
	f	I	a	parts
c	dpv	net/minecraft/world/phys/shapes/CubeVoxelShape
	m	(Lgo$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
	m	(Lgo$a;D)I	a	findIndex
c	dpw	net/minecraft/world/phys/shapes/DiscreteCubeMerger
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Ldqa$a;)Z	a	forMergedIndexes
	f	Ldpu;	a	result
	f	I	b	firstDiv
	f	I	c	secondDiv
c	dpx	net/minecraft/world/phys/shapes/DiscreteVoxelShape
	m	()Z	a	isEmpty
	m	(Ldpx$a;)V	a	forAllFaces
	m	(Ldpx$a;Lgh;)V	a	forAllAxisFaces
	m	(Ldpx$b;Lgh;Z)V	a	forAllAxisEdges
	m	(Ldpx$b;Z)V	a	forAllEdges
	m	(Lgh;III)Z	a	isFullWide
	m	(Lgo$a;)I	a	firstFull
	m	(Lgo$a;II)I	a	firstFull
	m	()I	b	getXSize
	m	(III)Z	b	isFull
	m	(Ldpx$b;Z)V	b	forAllBoxes
	m	(Lgh;III)Z	b	isFull
	m	(Lgo$a;)I	b	lastFull
	m	(Lgo$a;II)I	b	lastFull
	m	()I	c	getYSize
	m	(III)V	c	fill
	m	(Lgo$a;)I	c	getSize
	m	()I	d	getZSize
	m	(III)Z	d	isFullWide
	f	I	a	xSize
	f	I	b	ySize
	f	I	c	zSize
	f	[Lgo$a;	d	AXIS_VALUES
c	dpx$a	net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer
c	dpx$b	net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer
c	dpy	net/minecraft/world/phys/shapes/EntityCollisionContext
	m	(Lbus;)Z	a	isHoldingItem
	m	(Ldix;)Z	a	lambda$new$1
	m	(Ldix;Ldix;)Z	a	canStandOnFluid
	m	(Ldqh;Lgj;Z)Z	a	isAbove
	m	()Z	b	isDescending
	m	(Ldix;)Z	b	lambda$static$0
	m	()Laxk;	c	getEntity
	f	Ldpt;	a	EMPTY
	f	Z	b	descending
	f	D	c	entityBottom
	f	Lbuw;	d	heldItem
	f	Ljava/util/function/Predicate;	e	canStandOnFluid
	f	Laxk;	f	entity
c	dpy$1	net/minecraft/world/phys/shapes/EntityCollisionContext$1
	m	(Ldqh;Lgj;Z)Z	a	isAbove
c	dpz	net/minecraft/world/phys/shapes/IdenticalMerger
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Ldqa$a;)Z	a	forMergedIndexes
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	coords
c	dqa	net/minecraft/world/phys/shapes/IndexMerger
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Ldqa$a;)Z	a	forMergedIndexes
c	dqa$a	net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer
c	dqb	net/minecraft/world/phys/shapes/IndirectMerger
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Ldqa$a;)Z	a	forMergedIndexes
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	EMPTY
	f	[D	b	result
	f	[I	c	firstIndices
	f	[I	d	secondIndices
	f	I	e	resultLength
c	dqc	net/minecraft/world/phys/shapes/NonOverlappingMerger
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Ldqa$a;)Z	a	forMergedIndexes
	m	(Ldqa$a;III)Z	a	lambda$forMergedIndexes$0
	m	(Ldqa$a;)Z	b	forNonSwappedIndexes
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	lower
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	upper
	f	Z	c	swap
c	dqd	net/minecraft/world/phys/shapes/OffsetDoubleList
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	delegate
	f	D	b	offset
c	dqe	net/minecraft/world/phys/shapes/Shapes
	m	()Ldqh;	a	empty
	m	(DD)I	a	findBits
	m	(DDDDDD)Ldqh;	a	box
	m	(II)J	a	lcm
	m	(ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Ldqa;	a	createIndexMerger
	m	(Ldpj;)Ldqh;	a	create
	m	(Ldps;Ldpx;IILdpx;IIIII)Z	a	lambda$joinIsNotEmpty$1
	m	(Ldqa;Ldps;Ldpx;ILdpx;IIII)Z	a	lambda$joinIsNotEmpty$2
	m	(Ldqa;Ldqa;Ldps;Ldpx;Ldpx;III)Z	a	lambda$joinIsNotEmpty$3
	m	(Ldqa;Ldqa;Ldqa;Ldpx;Ldpx;Ldps;)Z	a	joinIsNotEmpty
	m	(Ldqh;Ldqh;)Ldqh;	a	or
	m	(Ldqh;Ldqh;Ldps;)Ldqh;	a	join
	m	(Ldqh;Ldqh;Lgo;)Z	a	blockOccudes
	m	(Ldqh;Lgo;)Ldqh;	a	getFaceShape
	m	(Ldqh;[Ldqh;)Ldqh;	a	or
	m	(Lgo$a;Ldpj;Ljava/lang/Iterable;D)D	a	collide
	m	()Ldqh;	b	block
	m	(DDDDDD)Ldqh;	b	create
	m	(Ldqh;Ldqh;)Z	b	faceShapeOccludes
	m	(Ldqh;Ldqh;Ldps;)Ldqh;	b	joinUnoptimized
	m	(Ldqh;Ldqh;Lgo;)Z	b	mergedFaceOccludes
	m	()Ldpv;	c	lambda$static$0
	m	(Ldqh;Ldqh;Ldps;)Z	c	joinIsNotEmpty
	f	D	a	EPSILON
	f	D	b	BIG_EPSILON
	f	Ldqh;	c	INFINITY
	f	Ldqh;	d	BLOCK
	f	Ldqh;	e	EMPTY
c	dqe$a	net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer
c	dqf	net/minecraft/world/phys/shapes/SliceShape
	m	(Ldpx;Lgo$a;I)Ldpx;	a	makeSlice
	m	(Lgo$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
	f	Ldqh;	b	delegate
	f	Lgo$a;	c	axis
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	SLICE_COORDS
c	dqg	net/minecraft/world/phys/shapes/SubShape
	m	(Lgo$a;)I	a	firstFull
	m	(Lgo$a;I)I	a	clampToShape
	m	(III)Z	b	isFull
	m	(Lgo$a;)I	b	lastFull
	m	(III)V	c	fill
	f	Ldpx;	d	parent
	f	I	e	startX
	f	I	f	startY
	f	I	g	startZ
	f	I	h	endX
	f	I	i	endY
	f	I	j	endZ
c	dqh	net/minecraft/world/phys/shapes/VoxelShape
	m	()Ldpj;	a	bounds
	m	(DDD)Ldqh;	a	move
	m	(DLgo$a;I)Z	a	lambda$findIndex$4
	m	(Ldpo;)Ljava/util/Optional;	a	closestPointTo
	m	(Ldpo;Ldpo;Lgj;)Ldpk;	a	clip
	m	(Ldpo;[Ldpo;DDDDDD)V	a	lambda$closestPointTo$5
	m	(Ldqe$a;)V	a	forAllEdges
	m	(Ldqe$a;IIIIII)V	a	lambda$forAllEdges$1
	m	(Ldqe$a;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;IIIIII)V	a	lambda$forAllBoxes$2
	m	(Lgh;Ldpj;D)D	a	collideX
	m	(Lgo$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
	m	(Lgo$a;D)I	a	findIndex
	m	(Lgo$a;DD)D	a	min
	m	(Lgo$a;I)D	a	get
	m	(Lgo$a;Ldpj;D)D	a	collide
	m	(Lgo;)Ldqh;	a	getFaceShape
	m	(Ljava/util/List;DDDDDD)V	a	lambda$toAabbs$3
	m	([Ldqh;DDDDDD)V	a	lambda$optimize$0
	m	()Z	b	isEmpty
	m	(Ldqe$a;)V	b	forAllBoxes
	m	(Lgo$a;)D	b	min
	m	(Lgo$a;DD)D	b	max
	m	(Lgo;)Ldqh;	b	calculateFace
	m	()Ldqh;	c	optimize
	m	(Lgo$a;)D	c	max
	m	()Ljava/util/List;	d	toAabbs
	f	Ldpx;	a	shape
	f	[Ldqh;	b	faces
c	dqi	net/minecraft/world/phys/shapes/package-info
c	dqj	net/minecraft/world/scores/Objective
	m	()Ldqm;	a	getScoreboard
	m	(Ldqp$a;)V	a	setRenderType
	m	(Lqk;)V	a	setDisplayName
	m	(Lqu;)Lqu;	a	lambda$createFormattedDisplayName$0
	m	()Ljava/lang/String;	b	getName
	m	()Ldqp;	c	getCriteria
	m	()Lqk;	d	getDisplayName
	m	()Lqk;	e	getFormattedDisplayName
	m	()Ldqp$a;	f	getRenderType
	m	()Lqk;	g	createFormattedDisplayName
	f	Ldqm;	a	scoreboard
	f	Ljava/lang/String;	b	name
	f	Ldqp;	c	criteria
	f	Lqk;	d	displayName
	f	Lqk;	e	formattedDisplayName
	f	Ldqp$a;	f	renderType
c	dqk	net/minecraft/world/scores/PlayerTeam
	m	()Ldqm;	a	getScoreboard
	m	(I)V	a	unpackOptions
	m	(Ldqo$a;)V	a	setCollisionRule
	m	(Ldqo$b;)V	a	setNameTagVisibility
	m	(Ldqo;Lqk;)Lqq;	a	formatNameForTeam
	m	(Lp;)V	a	setColor
	m	(Lqk;)V	a	setDisplayName
	m	(Z)V	a	setAllowFriendlyFire
	m	()Ljava/lang/String;	b	getName
	m	(Ldqo$b;)V	b	setDeathMessageVisibility
	m	(Lqk;)V	b	setPlayerPrefix
	m	(Z)V	b	setSeeFriendlyInvisibles
	m	()Lqk;	c	getDisplayName
	m	(Lqk;)V	c	setPlayerSuffix
	m	()Lqq;	d	getFormattedDisplayName
	m	(Lqk;)Lqq;	d	getFormattedName
	m	()Lqk;	e	getPlayerPrefix
	m	()Lqk;	f	getPlayerSuffix
	m	()Ljava/util/Collection;	g	getPlayers
	m	()Z	h	isAllowFriendlyFire
	m	()Z	i	canSeeFriendlyInvisibles
	m	()Ldqo$b;	j	getNameTagVisibility
	m	()Ldqo$b;	k	getDeathMessageVisibility
	m	()Ldqo$a;	l	getCollisionRule
	m	()I	m	packOptions
	m	()Lp;	n	getColor
	f	I	a	BIT_FRIENDLY_FIRE
	f	I	b	BIT_SEE_INVISIBLES
	f	Ldqm;	c	scoreboard
	f	Ljava/lang/String;	d	name
	f	Ljava/util/Set;	e	players
	f	Lqk;	f	displayName
	f	Lqk;	g	playerPrefix
	f	Lqk;	h	playerSuffix
	f	Z	i	allowFriendlyFire
	f	Z	j	seeFriendlyInvisibles
	f	Ldqo$b;	k	nameTagVisibility
	f	Ldqo$b;	l	deathMessageVisibility
	f	Lp;	m	color
	f	Ldqo$a;	n	collisionRule
	f	Lqu;	o	displayNameStyle
c	dql	net/minecraft/world/scores/Score
	m	()V	a	increment
	m	(I)V	a	add
	m	(Ldql;Ldql;)I	a	lambda$static$0
	m	(Z)V	a	setLocked
	m	()I	b	getScore
	m	(I)V	b	setScore
	m	()V	c	reset
	m	()Ldqj;	d	getObjective
	m	()Ljava/lang/String;	e	getOwner
	m	()Ldqm;	f	getScoreboard
	m	()Z	g	isLocked
	f	Ljava/util/Comparator;	a	SCORE_COMPARATOR
	f	Ldqm;	b	scoreboard
	f	Ldqj;	c	objective
	f	Ljava/lang/String;	d	owner
	f	I	e	count
	f	Z	f	locked
	f	Z	g	forceUpdate
c	dqm	net/minecraft/world/scores/Scoreboard
	m	(I)Ldqj;	a	getDisplayObjective
	m	(ILdqj;)V	a	setDisplayObjective
	m	(Laxk;)V	a	entityRemoved
	m	(Ldqj;)V	a	onObjectiveAdded
	m	(Ldqk;)V	a	onTeamAdded
	m	(Ldql;)V	a	onScoreChanged
	m	(Ldqp;)Ljava/util/List;	a	lambda$addObjective$0
	m	(Ldqp;Ljava/lang/String;Ljava/util/function/Consumer;)V	a	forAllObjectives
	m	(Ljava/lang/String;)V	a	onPlayerRemoved
	m	(Ljava/lang/String;Ldqj;)V	a	onPlayerScoreRemoved
	m	(Ljava/lang/String;Ldqk;)Z	a	addPlayerToTeam
	m	(Ljava/lang/String;Ldqp;Lqk;Ldqp$a;)Ldqj;	a	addObjective
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Ldqj;)V	a	lambda$forAllObjectives$1
	m	(Loq;)V	a	loadPlayerScores
	m	(Loq;Ldql;)V	a	lambda$savePlayerScores$5
	m	(Loq;Ljava/util/Collection;)V	a	lambda$savePlayerScores$6
	m	(I)Ljava/lang/String;	b	getDisplaySlotName
	m	(Ldqj;)V	b	onObjectiveChanged
	m	(Ldqk;)V	b	onTeamChanged
	m	(Ldql;)Z	b	lambda$savePlayerScores$4
	m	(Ljava/lang/String;)Z	b	hasObjective
	m	(Ljava/lang/String;Ldqj;)Z	b	hasPlayerScore
	m	(Ljava/lang/String;Ldqk;)V	b	removePlayerFromTeam
	m	()Ljava/util/Collection;	c	getObjectives
	m	(Ldqj;)V	c	onObjectiveRemoved
	m	(Ldqk;)V	c	onTeamRemoved
	m	(Ljava/lang/String;)Ldqj;	c	getOrCreateObjective
	m	(Ljava/lang/String;Ldqj;)Ldql;	c	getOrCreatePlayerScore
	m	()Ljava/util/Collection;	d	getObjectiveNames
	m	(Ldqk;)V	d	removePlayerTeam
	m	(Ljava/lang/String;)Ldqj;	d	getObjective
	m	(Ljava/lang/String;Ldqj;)V	d	resetPlayerScore
	m	()Ljava/util/Collection;	e	getTrackedPlayers
	m	(Ljava/lang/String;)Ljava/util/Map;	e	getPlayerScores
	m	(Ljava/lang/String;Ldqj;)Ldql;	e	lambda$getOrCreatePlayerScore$3
	m	()Ljava/util/Collection;	f	getTeamNames
	m	(Ljava/lang/String;)Ldqk;	f	getPlayerTeam
	m	()Ljava/util/Collection;	g	getPlayerTeams
	m	(Ljava/lang/String;)Ldqk;	g	addPlayerTeam
	m	()[Ljava/lang/String;	h	getDisplaySlotNames
	m	(Ljava/lang/String;)Z	h	removePlayerFromTeam
	m	()Loq;	i	savePlayerScores
	m	(Ldqj;)Ljava/util/Collection;	i	getPlayerScores
	m	(Ljava/lang/String;)Ldqk;	i	getPlayersTeam
	m	(Ldqj;)V	j	removeObjective
	m	(Ljava/lang/String;)I	j	getDisplaySlotByName
	m	(Ljava/lang/String;)Ljava/util/Map;	k	lambda$getOrCreatePlayerScore$2
	f	I	a	DISPLAY_SLOT_LIST
	f	I	b	DISPLAY_SLOT_SIDEBAR
	f	I	c	DISPLAY_SLOT_BELOW_NAME
	f	I	d	DISPLAY_SLOT_TEAMS_SIDEBAR_START
	f	I	e	DISPLAY_SLOT_TEAMS_SIDEBAR_END
	f	I	f	DISPLAY_SLOTS
	f	Lorg/slf4j/Logger;	g	LOGGER
	f	Ljava/util/Map;	h	objectivesByName
	f	Ljava/util/Map;	i	objectivesByCriteria
	f	Ljava/util/Map;	j	playerScores
	f	[Ldqj;	k	displayObjectives
	f	Ljava/util/Map;	l	teamsByName
	f	Ljava/util/Map;	m	teamsByPlayer
	f	[Ljava/lang/String;	n	displaySlotNames
c	dqn	net/minecraft/world/scores/ScoreboardSaveData
	m	()Loq;	a	saveTeams
	m	(Ldqk;Loq;)V	a	loadTeamPlayers
	m	(Lok;)Lok;	a	save
	m	(Lok;Ldqp;)V	a	lambda$loadObjectives$0
	m	(Loq;)V	a	loadTeams
	m	(Lok;)Ldqn;	b	load
	m	(Loq;)V	b	loadObjectives
	m	(Lok;)V	c	loadDisplaySlots
	m	()Loq;	d	saveObjectives
	m	(Lok;)V	d	saveDisplaySlots
	f	Ljava/lang/String;	a	FILE_ID
	f	Ldqm;	b	scoreboard
c	dqo	net/minecraft/world/scores/Team
	m	(Ldqo;)Z	a	isAlliedTo
	m	()Ljava/lang/String;	b	getName
	m	(Lqk;)Lqq;	d	getFormattedName
	m	()Ljava/util/Collection;	g	getPlayers
	m	()Z	h	isAllowFriendlyFire
	m	()Z	i	canSeeFriendlyInvisibles
	m	()Ldqo$b;	j	getNameTagVisibility
	m	()Ldqo$b;	k	getDeathMessageVisibility
	m	()Ldqo$a;	l	getCollisionRule
	m	()Lp;	n	getColor
c	dqo$a	net/minecraft/world/scores/Team$CollisionRule
	m	()Lqk;	a	getDisplayName
	m	(Ldqo$a;)Ldqo$a;	a	lambda$static$1
	m	(Ljava/lang/String;)Ldqo$a;	a	byName
	m	()[Ldqo$a;	b	$values
	m	(Ldqo$a;)Ljava/lang/String;	b	lambda$static$0
	f	Ldqo$a;	a	ALWAYS
	f	Ldqo$a;	b	NEVER
	f	Ldqo$a;	c	PUSH_OTHER_TEAMS
	f	Ldqo$a;	d	PUSH_OWN_TEAM
	f	Ljava/lang/String;	e	name
	f	I	f	id
	f	Ljava/util/Map;	g	BY_NAME
	f	[Ldqo$a;	h	$VALUES
c	dqo$b	net/minecraft/world/scores/Team$Visibility
	m	()[Ljava/lang/String;	a	getAllNames
	m	(Ldqo$b;)Ldqo$b;	a	lambda$static$1
	m	(Ljava/lang/String;)Ldqo$b;	a	byName
	m	()Lqk;	b	getDisplayName
	m	(Ldqo$b;)Ljava/lang/String;	b	lambda$static$0
	m	()[Ldqo$b;	c	$values
	f	Ldqo$b;	a	ALWAYS
	f	Ldqo$b;	b	NEVER
	f	Ldqo$b;	c	HIDE_FOR_OTHER_TEAMS
	f	Ldqo$b;	d	HIDE_FOR_OWN_TEAM
	f	Ljava/lang/String;	e	name
	f	I	f	id
	f	Ljava/util/Map;	g	BY_NAME
	f	[Ldqo$b;	h	$VALUES
c	dqp	net/minecraft/world/scores/criteria/ObjectiveCriteria
	m	(Laht;Lyt;)Ljava/util/Optional;	a	getStat
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byName
	m	(Ljava/lang/String;ILaht;)Ljava/util/Optional;	a	lambda$byName$0
	m	(Ljava/lang/String;ZLdqp$a;)Ldqp;	a	registerCustom
	m	(Ljava/lang/String;)Ldqp;	b	registerCustom
	m	()Ljava/util/Set;	c	getCustomCriteriaNames
	m	()Ljava/lang/String;	d	getName
	m	()Z	e	isReadOnly
	m	()Ldqp$a;	f	getDefaultRenderType
	f	Ldqp;	a	DUMMY
	f	Ldqp;	b	TRIGGER
	f	Ldqp;	c	DEATH_COUNT
	f	Ldqp;	d	KILL_COUNT_PLAYERS
	f	Ldqp;	e	KILL_COUNT_ALL
	f	Ldqp;	f	HEALTH
	f	Ldqp;	g	FOOD
	f	Ldqp;	h	AIR
	f	Ldqp;	i	ARMOR
	f	Ldqp;	j	EXPERIENCE
	f	Ldqp;	k	LEVEL
	f	[Ldqp;	l	TEAM_KILL
	f	[Ldqp;	m	KILLED_BY_TEAM
	f	Ljava/util/Map;	n	CUSTOM_CRITERIA
	f	Ljava/util/Map;	o	CRITERIA_CACHE
	f	Ljava/lang/String;	p	name
	f	Z	q	readOnly
	f	Ldqp$a;	r	renderType
c	dqp$a	net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType
	m	()Ljava/lang/String;	a	getId
	m	(Ljava/lang/String;)Ldqp$a;	a	byId
	m	()[Ldqp$a;	b	$values
	f	Ldqp$a;	a	INTEGER
	f	Ldqp$a;	b	HEARTS
	f	Ljava/lang/String;	c	id
	f	Ljava/util/Map;	d	BY_ID
	f	[Ldqp$a;	e	$VALUES
c	dqq	net/minecraft/world/scores/criteria/package-info
c	dqr	net/minecraft/world/scores/package-info
c	dqs	net/minecraft/world/ticks/BlackholeTickAccess
	m	()Ldrb;	a	emptyContainer
	m	()Ldqu;	b	emptyLevelList
	f	Ldrb;	a	CONTAINER_BLACKHOLE
	f	Ldqu;	b	LEVEL_BLACKHOLE
c	dqs$1	net/minecraft/world/ticks/BlackholeTickAccess$1
	m	()I	a	count
	m	(Ldqy;)V	a	schedule
	m	(Lgj;Ljava/lang/Object;)Z	a	hasScheduledTick
c	dqs$2	net/minecraft/world/ticks/BlackholeTickAccess$2
	m	()I	a	count
	m	(Ldqy;)V	a	schedule
	m	(Lgj;Ljava/lang/Object;)Z	a	hasScheduledTick
	m	(Lgj;Ljava/lang/Object;)Z	b	willTickThisTick
c	dqt	net/minecraft/world/ticks/LevelChunkTicks
	m	()I	a	count
	m	(J)V	a	unpack
	m	(JLjava/util/function/Function;)Loq;	a	save
	m	(Ldqy;)V	a	schedule
	m	(Lgj;Ljava/lang/Object;)Z	a	hasScheduledTick
	m	(Ljava/util/function/BiConsumer;)V	a	setOnTickAdded
	m	(Ljava/util/function/Predicate;)V	a	removeIf
	m	(Loq;Ljava/util/function/Function;Lcac;)Ldqt;	a	load
	m	()Ldqy;	b	peek
	m	(JLjava/util/function/Function;)Lpd;	b	save
	m	(Ldqy;)V	b	scheduleUnchecked
	m	()Ldqy;	c	poll
	m	()Ljava/util/stream/Stream;	d	getAll
	f	Ljava/util/Queue;	a	tickQueue
	f	Ljava/util/List;	b	pendingTicks
	f	Ljava/util/Set;	c	ticksPerPosition
	f	Ljava/util/function/BiConsumer;	d	onTickAdded
c	dqu	net/minecraft/world/ticks/LevelTickAccess
	m	(Lgj;Ljava/lang/Object;)Z	b	willTickThisTick
c	dqv	net/minecraft/world/ticks/LevelTicks
	m	()I	a	count
	m	(I)Z	a	canScheduleMoreTicks
	m	(J)V	a	sortContainersToTick
	m	(JI)V	a	drainContainers
	m	(JILasy;)V	a	collectTicks
	m	(JILjava/util/function/BiConsumer;)V	a	tick
	m	(Lcac;)V	a	removeContainer
	m	(Lcac;Ldqt;)V	a	addContainer
	m	(Ldeo;)V	a	clearArea
	m	(Ldeo;Ldqv$a;)V	a	forContainersInArea
	m	(Ldeo;Ldqy;)Z	a	lambda$copyArea$5
	m	(Ldeo;Lhh;)V	a	copyArea
	m	(Ldqt;Ldqt;)I	a	lambda$static$0
	m	(Ldqt;Ldqy;)V	a	lambda$new$2
	m	(Ldqy;)V	a	schedule
	m	(Lgj;Ljava/lang/Object;)Z	a	hasScheduledTick
	m	(Lhh;JJLdqy;)V	a	lambda$copyArea$7
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongOpenHashMap;)V	a	lambda$new$1
	m	(Ljava/util/Queue;Ldqt;JI)V	a	drainFromCurrentContainer
	m	(Ljava/util/function/BiConsumer;)V	a	runCollectedTicks
	m	(Ljava/util/function/Predicate;JLdqt;)V	a	lambda$clearArea$4
	m	(Ljava/util/function/Predicate;Ljava/util/List;JLdqt;)V	a	lambda$copyArea$6
	m	()V	b	rescheduleLeftoverContainers
	m	(Ldeo;Ldqy;)Z	b	lambda$clearArea$3
	m	(Ldqy;)V	b	updateContainerScheduling
	m	(Lgj;Ljava/lang/Object;)Z	b	willTickThisTick
	m	()V	c	cleanupAfterTick
	m	(Ldqy;)V	c	scheduleForThisTick
	m	()V	d	calculateTickSetIfNeeded
	f	Ljava/util/Comparator;	a	CONTAINER_DRAIN_ORDER
	f	Ljava/util/function/LongPredicate;	b	tickCheck
	f	Ljava/util/function/Supplier;	c	profiler
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	d	allContainers
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	e	nextTickForContainer
	f	Ljava/util/Queue;	f	containersToTick
	f	Ljava/util/Queue;	g	toRunThisTick
	f	Ljava/util/List;	h	alreadyRunThisTick
	f	Ljava/util/Set;	i	toRunThisTickSet
	f	Ljava/util/function/BiConsumer;	j	chunkScheduleUpdater
c	dqv$a	net/minecraft/world/ticks/LevelTicks$PosAndContainerConsumer
c	dqw	net/minecraft/world/ticks/ProtoChunkTicks
	m	()I	a	count
	m	(Ldqx;)V	a	schedule
	m	(Ldqy;)V	a	schedule
	m	(Lgj;Ljava/lang/Object;)Z	a	hasScheduledTick
	m	(Loq;Ljava/util/function/Function;Lcac;)Ldqw;	a	load
	m	()Ljava/util/List;	b	scheduledTicks
	m	(JLjava/util/function/Function;)Lpd;	b	save
	f	Ljava/util/List;	a	ticks
	f	Ljava/util/Set;	b	ticksPerPosition
c	dqx	net/minecraft/world/ticks/SavedTick
	m	()Ljava/lang/Object;	a	type
	m	(JJ)Ldqy;	a	unpack
	m	(JLjava/util/function/Consumer;Ldqx;)V	a	lambda$loadTickList$0
	m	(Ldqy;Ljava/util/function/Function;J)Lok;	a	saveTick
	m	(Ljava/lang/Object;Lgj;)Ldqx;	a	probe
	m	(Ljava/lang/String;Lgj;ILdrc;)Lok;	a	saveTick
	m	(Ljava/util/function/Function;)Lok;	a	save
	m	(Lok;Ljava/lang/Object;)Ldqx;	a	lambda$loadTick$1
	m	(Lok;Ljava/util/function/Function;)Ljava/util/Optional;	a	loadTick
	m	(Loq;Ljava/util/function/Function;Lcac;Ljava/util/function/Consumer;)V	a	loadTickList
	m	()Lgj;	b	pos
	m	()I	c	delay
	m	()Ldrc;	d	priority
	f	Lit/unimi/dsi/fastutil/Hash$Strategy;	a	UNIQUE_TICK_HASH
	f	Ljava/lang/Object;	b	type
	f	Lgj;	c	pos
	f	I	d	delay
	f	Ldrc;	e	priority
	f	Ljava/lang/String;	f	TAG_ID
	f	Ljava/lang/String;	g	TAG_X
	f	Ljava/lang/String;	h	TAG_Y
	f	Ljava/lang/String;	i	TAG_Z
	f	Ljava/lang/String;	j	TAG_DELAY
	f	Ljava/lang/String;	k	TAG_PRIORITY
c	dqx$1	net/minecraft/world/ticks/SavedTick$1
	m	(Ldqx;)I	a	hashCode
	m	(Ldqx;Ldqx;)Z	a	equals
c	dqy	net/minecraft/world/ticks/ScheduledTick
	m	()Ljava/lang/Object;	a	type
	m	(Ldqy;Ldqy;)I	a	lambda$static$1
	m	(Ljava/lang/Object;Lgj;)Ldqy;	a	probe
	m	()Lgj;	b	pos
	m	(Ldqy;Ldqy;)I	b	lambda$static$0
	m	()J	c	triggerTick
	m	()Ldrc;	d	priority
	m	()J	e	subTickOrder
	f	Ljava/util/Comparator;	a	DRAIN_ORDER
	f	Ljava/util/Comparator;	b	INTRA_TICK_DRAIN_ORDER
	f	Lit/unimi/dsi/fastutil/Hash$Strategy;	c	UNIQUE_TICK_HASH
	f	Ljava/lang/Object;	d	type
	f	Lgj;	e	pos
	f	J	f	triggerTick
	f	Ldrc;	g	priority
	f	J	h	subTickOrder
c	dqy$1	net/minecraft/world/ticks/ScheduledTick$1
	m	(Ldqy;)I	a	hashCode
	m	(Ldqy;Ldqy;)Z	a	equals
c	dqz	net/minecraft/world/ticks/SerializableTickContainer
	m	(JLjava/util/function/Function;)Lpd;	b	save
c	dra	net/minecraft/world/ticks/TickAccess
	m	()I	a	count
	m	(Ldqy;)V	a	schedule
	m	(Lgj;Ljava/lang/Object;)Z	a	hasScheduledTick
c	drb	net/minecraft/world/ticks/TickContainerAccess
c	drc	net/minecraft/world/ticks/TickPriority
	m	()I	a	getValue
	m	(I)Ldrc;	a	byValue
	m	()[Ldrc;	b	$values
	f	Ldrc;	a	EXTREMELY_HIGH
	f	Ldrc;	b	VERY_HIGH
	f	Ldrc;	c	HIGH
	f	Ldrc;	d	NORMAL
	f	Ldrc;	e	LOW
	f	Ldrc;	f	VERY_LOW
	f	Ldrc;	g	EXTREMELY_LOW
	f	I	h	value
	f	[Ldrc;	i	$VALUES
c	drd	net/minecraft/world/ticks/WorldGenTickAccess
	m	()I	a	count
	m	(Ldqy;)V	a	schedule
	m	(Lgj;Ljava/lang/Object;)Z	a	hasScheduledTick
	m	(Lgj;Ljava/lang/Object;)Z	b	willTickThisTick
	f	Ljava/util/function/Function;	a	containerGetter
c	dre	net/minecraft/world/ticks/package-info
c	net/minecraft/data/Main	net/minecraft/data/Main
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	a	lambda$main$0
	m	(Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZ)Lik;	a	createStandardGenerator
c	net/minecraft/server/Main	net/minecraft/server/Main
	m	()Z	a	lambda$main$2
	m	(Ldkp$a;)Lcaj;	a	lambda$main$0
	m	(Ldkp$a;Lafn;Lzk;Lacz;Lcom/mojang/authlib/minecraft/MinecraftSessionService;Lcom/mojang/authlib/GameProfileRepository;Lagj;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljava/lang/Thread;)Lacx;	a	lambda$main$3
	m	(Ldkp$a;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lcut;)V	a	forceUpgrade
	m	(Ldkp$a;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Lacz;Ljoptsimple/OptionSpec;Laga;Lcaj;)Lcom/mojang/datafixers/util/Pair;	a	lambda$main$1
	f	Lorg/slf4j/Logger;	a	LOGGER
c	net/minecraft/server/Main$1	net/minecraft/server/Main$1
	f	Lacx;	a	val$dedicatedServer
c	net/minecraft/server/MinecraftServer	net/minecraft/server/MinecraftServer
	m	()Ljava/io/File;	A	getServerDirectory
	m	()Z	B	isNetherEnabled
	m	()Z	C	isShutdown
	m	()Ladw;	D	overworld
	m	()Ljava/util/Set;	E	levelKeys
	m	()Ljava/lang/Iterable;	F	getAllLevels
	m	()Ljava/lang/String;	G	getServerVersion
	m	()Z	G_	shouldInformAdmins
	m	()I	H	getPlayerCount
	m	()I	I	getMaxPlayers
	m	()[Ljava/lang/String;	J	getPlayerNames
	m	()Lajk;	K	getModdedStatus
	m	()Ljava/security/KeyPair;	L	getKeyPair
	m	()I	M	getPort
	m	()Ljava/lang/String;	N	getSingleplayerName
	m	()Z	O	isSingleplayer
	m	()V	P	initializeKeyPair
	m	()Z	Q	isSpawningMonsters
	m	()Z	R	isDemo
	m	()Ljava/lang/String;	S	getResourcePack
	m	()Ljava/lang/String;	T	getResourcePackHash
	m	()Z	U	usesAuthentication
	m	()Z	V	getPreventProxyConnections
	m	()Z	W	isSpawningAnimals
	m	()Z	X	areNpcsEnabled
	m	()Z	Y	isPvpAllowed
	m	()Z	Z	isFlightAllowed
	m	(I)V	a	setPort
	m	(Lac;)Lac;	a	fillServerSystemReport
	m	(Ladw;)I	a	getSpawnRadius
	m	(Ladw;Ldku;ZZ)V	a	setInitialSpawn
	m	(Ladw;Lgj;Lboj;)Z	a	isUnderSpawnProtection
	m	(Ladx;)Laet;	a	createTextFilterForPlayer
	m	(Laef;)V	a	createLevels
	m	(Lafn;)Lcaj;	a	getSelectedPacks
	m	(Lafn;Lcaj;Z)Lcaj;	a	configurePackRepository
	m	(Lafs;Lzc;)Lnet/minecraft/server/MinecraftServer$a;	a	lambda$reloadResources$16
	m	(Lafs;Lzc;Ljava/lang/Throwable;)V	a	lambda$reloadResources$15
	m	(Lagn;)V	a	setPlayerList
	m	(Lajm$a;)Ljava/lang/String;	a	lambda$dumpNativeModules$20
	m	(Lasx;)V	a	lambda$new$0
	m	(Lawe;Z)V	a	setDifficulty
	m	(Lcas;)V	a	setDefaultGameType
	m	(Lcas;ZI)Z	a	publishServer
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
	m	(Ldkl;)V	a	readScoreboard
	m	(Ldkn;)Ljava/nio/file/Path;	a	getWorldPath
	m	(Ldkv;)V	a	setupDebugLevel
	m	(Ldm;)V	a	kickUnlistedPlayers
	m	(Lhc$a;Lcom/google/common/collect/ImmutableList;)Ljava/util/concurrent/CompletionStage;	a	lambda$reloadResources$17
	m	(Ljava/lang/Runnable;)Lzj;	a	wrapRunnable
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	setResourcePack
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$spin$3
	m	(Ljava/lang/Throwable;)Lq;	a	constructOrExtractCrashReport
	m	(Ljava/nio/file/Path;)V	a	dumpServerProperties
	m	(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;	a	reloadResources
	m	(Ljava/util/Collection;Ljava/lang/String;)Z	a	lambda$getSelectedPacks$19
	m	(Ljava/util/Collection;Lnet/minecraft/server/MinecraftServer$a;)V	a	lambda$reloadResources$18
	m	(Ljava/util/concurrent/atomic/AtomicReference;)V	a	lambda$spin$2
	m	(Ljava/util/function/BooleanSupplier;)V	a	tickServer
	m	(Ljava/util/function/Consumer;Lasx;)V	a	lambda$startRecordingMetrics$23
	m	(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	a	startRecordingMetrics
	m	(Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer;	a	spin
	m	(Lq;)V	a	onServerCrash
	m	(Lqk;Ljava/util/UUID;)V	a	sendMessage
	m	(Lxw;)V	a	updateStatusIcon
	m	(Lxw;Ljava/io/File;)V	a	lambda$updateStatusIcon$7
	m	(Lys;)Ladw;	a	getLevel
	m	(Lzj;)Z	a	shouldRun
	m	(Z)V	a	halt
	m	(ZZZ)Z	a	saveAllChunks
	m	()Ldn;	aA	getCommands
	m	()Ldm;	aB	createCommandSourceStack
	m	()Lbxp;	aC	getRecipeManager
	m	()Lzi;	aD	getScoreboard
	m	()Ldki;	aE	getCommandStorage
	m	()Ldlg;	aF	getLootTables
	m	()Ldlh;	aG	getPredicateManager
	m	()Ldlb;	aH	getItemModifierManager
	m	()Lcar;	aI	getGameRules
	m	()Lzm;	aJ	getCustomBossEvents
	m	()Z	aK	isEnforceWhitelist
	m	()F	aL	getAverageTickTime
	m	()Lajb;	aM	getFrameTimer
	m	()Lasy;	aN	getProfiler
	m	()Z	aO	isRecordingMetrics
	m	()V	aP	stopRecordingMetrics
	m	()V	aQ	finishRecordingMetrics
	m	()Z	aR	forceSynchronousWrites
	m	()Ldhr;	aS	getStructureManager
	m	()Ldkv;	aT	getWorldData
	m	()Lhc$a;	aU	registryAccess
	m	()Z	aV	isResourcePackRequired
	m	()Lcas;	aW	getForcedGameType
	m	()Laga;	aX	getResourceManager
	m	()Lqk;	aY	getResourcePackPrompt
	m	()Z	aZ	isCurrentlySaving
	m	(Ljava/lang/String;)V	a_	setLocalIp
	m	()Ljava/lang/String;	aa	getMotd
	m	()Z	ab	isStopped
	m	()Lagn;	ac	getPlayerList
	m	()Laen;	ad	getConnection
	m	()Z	ae	isReady
	m	()Z	af	hasGui
	m	()I	ag	getTickCount
	m	()I	ah	getSpawnProtectionRadius
	m	()Z	ai	repliesToStatus
	m	()Z	aj	hidesOnlinePlayers
	m	()Ljava/net/Proxy;	ak	getProxy
	m	()I	al	getPlayerIdleTimeout
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	am	getSessionService
	m	()Lcom/mojang/authlib/GameProfileRepository;	an	getProfileRepository
	m	()Lagj;	ao	getProfileCache
	m	()Lxw;	ap	getStatus
	m	()V	aq	invalidateStatus
	m	()I	ar	getAbsoluteMaxWorldSize
	m	()Z	as	scheduleExecutables
	m	()Ljava/lang/Thread;	at	getRunningThread
	m	()I	au	getCompressionThreshold
	m	()J	av	getNextTickTime
	m	()Lcom/mojang/datafixers/DataFixer;	aw	getFixerUpper
	m	()Lze;	ax	getAdvancements
	m	()Lzg;	ay	getFunctions
	m	()Lafn;	az	getPackRepository
	m	(I)I	b	getScaledTrackingDistance
	m	(Lac;)Lac;	b	fillSystemReport
	m	(Ladw;)Ljava/lang/String;	b	lambda$tickChildren$8
	m	(Ladx;)Lady;	b	createGameModeForPlayer
	m	(Laef;)V	b	prepareLevels
	m	(Lcom/mojang/authlib/GameProfile;)I	b	getProfilePermissions
	m	(Ljava/lang/Runnable;)V	b	addTickable
	m	(Ljava/lang/String;)V	b	setId
	m	(Ljava/nio/file/Path;)V	b	saveDebugReport
	m	(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;	b	lambda$reloadResources$14
	m	(Ljava/util/function/BooleanSupplier;)V	b	tickChildren
	m	(Lzj;)V	b	doRunTask
	m	(Z)V	b	setDifficultyLocked
	m	(ZZZ)Z	b	saveEverything
	m	()Z	ba	isTimeProfilerRunning
	m	()V	bb	startTimeProfiler
	m	()Lasx;	bc	stopTimeProfiler
	m	()Z	bd	haveTime
	m	()Z	be	pollTaskInternal
	m	()V	bf	updateMobSpawningFlags
	m	()V	bg	startMetricsRecordingTick
	m	()V	bh	endMetricsRecordingTick
	m	()Ljava/lang/String;	bi	lambda$fillSystemReport$13
	m	()Ljava/lang/String;	br	lambda$fillSystemReport$12
	m	()Ljava/lang/String;	bs	lambda$fillSystemReport$11
	m	()Ljava/lang/String;	bt	lambda$fillSystemReport$10
	m	()Ljava/lang/String;	bu	lambda$fillSystemReport$9
	m	()Z	bv	lambda$waitUntilNextTick$6
	m	()Z	bw	lambda$stopServer$5
	m	(I)V	c	setPlayerIdleTimeout
	m	(Ladw;)Z	c	lambda$stopServer$4
	m	(Ladx;)V	c	sendDifficultyUpdate
	m	(Ljava/lang/Runnable;)V	c	executeIfPossible
	m	(Ljava/lang/String;)Ljava/io/File;	c	getFile
	m	(Ljava/nio/file/Path;)V	c	dumpMiscStats
	m	(Z)V	c	setDemo
	m	(Ljava/lang/Runnable;)V	d	doRunTask
	m	(Ljava/lang/String;)V	d	setSingleplayerName
	m	(Ljava/nio/file/Path;)V	d	dumpGameRules
	m	(Z)V	d	setUsesAuthentication
	m	()Z	e	initServer
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
	m	(Ljava/lang/String;)V	e	setMotd
	m	(Ljava/nio/file/Path;)V	e	dumpClasspath
	m	(Z)V	e	setPreventProxyConnections
	m	()V	f	onServerExit
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
	m	(Ljava/nio/file/Path;)V	f	dumpThreads
	m	(Z)V	f	setPvpAllowed
	m	()V	f_	loadLevel
	m	()Z	g	isHardcore
	m	(Ljava/nio/file/Path;)V	g	dumpNativeModules
	m	(Z)V	g	setFlightAllowed
	m	()V	g_	detectBundledResources
	m	()I	h	getOperatorUserPermissionLevel
	m	(Ljava/nio/file/Path;)V	h	lambda$startMetricsRecordingTick$22
	m	(Z)V	h	setEnforceWhitelist
	m	()Lcas;	h_	getDefaultGameType
	m	()I	i	getFunctionCompilationLevel
	m	(Ljava/nio/file/Path;)V	i	lambda$startMetricsRecordingTick$21
	m	()Z	i_	acceptsSuccess
	m	()Z	j	shouldRconBroadcast
	m	(Ljava/nio/file/Path;)V	j	lambda$new$1
	m	()Z	j_	acceptsFailure
	m	()Z	k	isDedicatedServer
	m	()I	l	getRateLimitPacketsPerSecond
	m	()Z	m	isEpollEnabled
	m	()Z	n	isCommandBlockEnabled
	m	()Z	o	isPublished
	m	()V	q	forceDifficulty
	m	()V	t	stopServer
	m	()Ljava/lang/String;	u	getLocalIp
	m	()Z	v	isRunning
	m	()V	w	runServer
	m	()V	x	waitUntilNextTick
	m	()Z	y	pollTask
	m	()Ljava/util/Optional;	z	getWorldScreenshotFile
	f	J	A	DELAYED_TASKS_TICK_EXTENSION
	f	Ljava/util/List;	B	tickables
	f	Lauk;	C	metricsRecorder
	f	Lasy;	D	profiler
	f	Ljava/util/function/Consumer;	E	onMetricsRecordingStopped
	f	Ljava/util/function/Consumer;	F	onMetricsRecordingFinished
	f	Z	G	willStartRecordingMetrics
	f	Lnet/minecraft/server/MinecraftServer$b;	H	debugCommandProfiler
	f	Z	I	debugCommandProfilerDelayStart
	f	Laen;	J	connection
	f	Laeg;	K	progressListenerFactory
	f	Lxw;	L	status
	f	Ljava/util/Random;	M	random
	f	Lcom/mojang/datafixers/DataFixer;	N	fixerUpper
	f	Ljava/lang/String;	O	localIp
	f	I	P	port
	f	Lhc$a;	Q	registryHolder
	f	Ljava/util/Map;	R	levels
	f	Lagn;	S	playerList
	f	Z	T	running
	f	Z	U	stopped
	f	I	V	tickCount
	f	Z	W	onlineMode
	f	Z	X	preventProxyConnections
	f	Z	Y	pvp
	f	Z	Z	allowFlight
	f	Ljava/lang/String;	aA	serverId
	f	Lnet/minecraft/server/MinecraftServer$a;	aB	resources
	f	Ldhr;	aC	structureManager
	f	Z	aD	isSaving
	f	Ljava/lang/String;	aa	motd
	f	I	ab	playerIdleTimeout
	f	Ljava/security/KeyPair;	ac	keyPair
	f	Ljava/lang/String;	ad	singleplayerName
	f	Z	ae	isDemo
	f	Ljava/lang/String;	af	resourcePack
	f	Ljava/lang/String;	ag	resourcePackHash
	f	Z	ah	isReady
	f	J	ai	lastOverloadWarning
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	aj	sessionService
	f	Lcom/mojang/authlib/GameProfileRepository;	ak	profileRepository
	f	Lagj;	al	profileCache
	f	J	am	lastServerStatus
	f	Ljava/lang/Thread;	an	serverThread
	f	J	ao	nextTickTime
	f	J	ap	delayedTasksMaxNextTickTime
	f	Z	aq	mayHaveDelayedTasks
	f	Lafn;	ar	packRepository
	f	Lzi;	as	scoreboard
	f	Ldki;	at	commandStorage
	f	Lzm;	au	customBossEvents
	f	Lzg;	av	functionManager
	f	Lajb;	aw	frameTimer
	f	Z	ax	enforceWhitelist
	f	F	ay	averageTickTime
	f	Ljava/util/concurrent/Executor;	az	executor
	f	Ljava/lang/String;	b	VANILLA_BRAND
	f	I	c	MS_PER_TICK
	f	Ljava/lang/String;	d	LEVEL_STORAGE_PROTOCOL
	f	Ljava/lang/String;	e	LEVEL_STORAGE_SCHEMA
	f	Ljava/lang/String;	f	MAP_RESOURCE_FILE
	f	Ljava/io/File;	g	USERID_CACHE_FILE
	f	I	h	START_CHUNK_RADIUS
	f	I	i	ABSOLUTE_MAX_WORLD_SIZE
	f	Lcaz;	j	DEMO_SETTINGS
	f	Lcom/mojang/authlib/GameProfile;	k	ANONYMOUS_PLAYER_PROFILE
	f	Ldkp$a;	l	storageSource
	f	Ldks;	m	playerDataStorage
	f	Ljava/net/Proxy;	n	proxy
	f	[J	o	tickTimes
	f	Ldkv;	p	worldData
	f	Lorg/slf4j/Logger;	q	LOGGER
	f	F	r	AVERAGE_TICK_TIME_SMOOTHING
	f	I	s	TICK_STATS_SPAN
	f	I	t	OVERLOADED_THRESHOLD
	f	I	u	OVERLOADED_WARNING_INTERVAL
	f	J	v	STATUS_EXPIRE_TIME_NS
	f	I	w	MAX_STATUS_PLAYER_SAMPLE
	f	I	x	START_TICKING_CHUNK_COUNT
	f	I	y	AUTOSAVE_INTERVAL
	f	I	z	MAX_TICK_LATENCY
c	net/minecraft/server/MinecraftServer$1	net/minecraft/server/MinecraftServer$1
	m	(Lcar$e;Lcar$f;)V	a	visit
	f	Ljava/util/List;	a	val$entries
	f	Lcar;	b	val$gameRules
	f	Lnet/minecraft/server/MinecraftServer;	c	this$0
c	net/minecraft/server/MinecraftServer$a	net/minecraft/server/MinecraftServer$ReloadableResources
	m	()Lafs;	a	resourceManager
	m	()Lzc;	b	managers
	f	Lafs;	a	resourceManager
	f	Lzc;	b	managers
c	net/minecraft/server/MinecraftServer$b	net/minecraft/server/MinecraftServer$TimeProfiler
	m	(JI)Lasx;	a	stop
	f	J	a	startNanos
	f	I	b	startTick
c	net/minecraft/server/MinecraftServer$b$1	net/minecraft/server/MinecraftServer$TimeProfiler$1
	m	()J	a	getStartTimeNano
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
	m	(Ljava/nio/file/Path;)Z	a	saveResults
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
	f	J	a	val$stopNanos
	f	I	b	val$stopTick
	f	Lnet/minecraft/server/MinecraftServer$b;	c	this$0
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$a	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$Fields
	f	Ljava/lang/String;	a	REMOTE_ADDRESS
	f	Ljava/lang/String;	b	SENT_BYTES
	f	Ljava/lang/String;	c	RECEIVED_BYTES
	f	Ljava/lang/String;	d	SENT_PACKETS
	f	Ljava/lang/String;	e	RECEIVED_PACKETS
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$SumAggregation
	m	()V	a	commitEvent
	m	(I)V	a	trackSentPacket
	m	(I)V	b	trackReceivedPacket
	f	Ljava/util/concurrent/atomic/AtomicLong;	a	sentBytes
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	sentPackets
	f	Ljava/util/concurrent/atomic/AtomicLong;	c	receivedBytes
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	receivedPackets
	f	Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent;	e	event
c	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent
c	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$a	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$Fields
	f	Ljava/lang/String;	a	AVERAGE_TICK_DURATION
c	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent
c	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$a	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$Fields
	f	Ljava/lang/String;	a	WORLD_POS_X
	f	Ljava/lang/String;	b	WORLD_POS_Z
	f	Ljava/lang/String;	c	CHUNK_POS_X
	f	Ljava/lang/String;	d	CHUNK_POS_Z
	f	Ljava/lang/String;	e	STATUS
	f	Ljava/lang/String;	f	LEVEL
